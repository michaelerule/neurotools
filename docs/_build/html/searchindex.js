Search.setIndex({"docnames": ["dependencies", "index", "modules", "neurotools", "neurotools.graphics", "neurotools.graphics.color", "neurotools.graphics.colormaps", "neurotools.graphics.dendron", "neurotools.graphics.fabio_maps", "neurotools.graphics.image", "neurotools.graphics.matplotlib", "neurotools.graphics.plot", "neurotools.graphics.pygame", "neurotools.graphics.ztransform_plot_helpers", "neurotools.jobs", "neurotools.jobs.cache", "neurotools.jobs.closure", "neurotools.jobs.filenames", "neurotools.jobs.initialize_system_cache", "neurotools.jobs.ndecorator", "neurotools.jobs.parallel", "neurotools.linalg", "neurotools.linalg.arguments", "neurotools.linalg.matrix", "neurotools.linalg.operators", "neurotools.nlab", "neurotools.obsolete", "neurotools.obsolete.encoding", "neurotools.obsolete.encoding.Huffman", "neurotools.obsolete.encoding.NaryHuffman", "neurotools.obsolete.gpu", "neurotools.obsolete.gpu.cl", "neurotools.obsolete.gpu.cl.device", "neurotools.obsolete.gpu.cl.function", "neurotools.obsolete.gpu.cl.matrix", "neurotools.obsolete.gpu.cpu", "neurotools.obsolete.gpu.cpu.util", "neurotools.obsolete.gpu.cu", "neurotools.obsolete.gpu.cu.convolution", "neurotools.obsolete.gpu.cu.device", "neurotools.obsolete.gpu.cu.function", "neurotools.obsolete.gpu.cu.gpufun", "neurotools.obsolete.gpu.cu.graph", "neurotools.obsolete.gpu.cu.logic", "neurotools.obsolete.gpu.cu.matrix", "neurotools.obsolete.gpu.cu.plot", "neurotools.obsolete.gpu.cu.sequence", "neurotools.obsolete.gpu.cu.statistics", "neurotools.obsolete.models", "neurotools.obsolete.models.izh", "neurotools.obsolete.models.lif", "neurotools.obsolete.opto", "neurotools.obsolete.rbm", "neurotools.obsolete.rbm.rbm", "neurotools.obsolete.rbm.rbm_helper", "neurotools.obsolete.rbm.rbm_sample", "neurotools.obsolete.rbm.rbm_utils", "neurotools.obsolete.rbm.rbm_utils.rbm", "neurotools.obsolete.rbm.rbm_utils.stutils", "neurotools.signal", "neurotools.signal.coherence", "neurotools.signal.conv", "neurotools.signal.morlet", "neurotools.signal.multitaper", "neurotools.signal.ppc", "neurotools.signal.savitskygolay", "neurotools.signal.sde", "neurotools.spatial", "neurotools.spatial.array", "neurotools.spatial.dct", "neurotools.spatial.distance", "neurotools.spatial.fftzeros", "neurotools.spatial.geometry", "neurotools.spatial.kernels", "neurotools.spatial.masking", "neurotools.spatial.phase", "neurotools.spatial.points", "neurotools.spatial.spiking", "neurotools.spatial.triangulation", "neurotools.spikes", "neurotools.spikes.spikes", "neurotools.spikes.waveform", "neurotools.stats", "neurotools.stats.convolutional", "neurotools.stats.density", "neurotools.stats.distributions", "neurotools.stats.fast_kde", "neurotools.stats.gaussian", "neurotools.stats.glm", "neurotools.stats.grid_search", "neurotools.stats.hmm", "neurotools.stats.information", "neurotools.stats.mcint", "neurotools.stats.minimize", "neurotools.stats.mixtures", "neurotools.stats.modefind", "neurotools.stats.pvalues", "neurotools.stats.regressions", "neurotools.util", "neurotools.util.dependencies", "neurotools.util.functions", "neurotools.util.getfftw", "neurotools.util.hdfmat", "neurotools.util.string", "neurotools.util.system", "neurotools.util.time", "neurotools.util.tools", "obsolete/functions", "obsolete/getfftw", "obsolete/gpu", "obsolete/gpu.cl", "obsolete/gpu.cl.device", "obsolete/gpu.cl.function", "obsolete/gpu.cl.matrix", "obsolete/gpu.cpu", "obsolete/gpu.cpu.util", "obsolete/gpu.cu", "obsolete/gpu.cu.convolution", "obsolete/gpu.cu.device", "obsolete/gpu.cu.function", "obsolete/gpu.cu.gpufun", "obsolete/gpu.cu.graph", "obsolete/gpu.cu.logic", "obsolete/gpu.cu.matrix", "obsolete/gpu.cu.plot", "obsolete/gpu.cu.sequence", "obsolete/gpu.cu.statistics", "obsolete/graphics", "obsolete/graphics.color", "obsolete/graphics.image", "obsolete/graphics.matplotlib", "obsolete/graphics.plot", "obsolete/graphics.pygame", "obsolete/jobs", "obsolete/jobs.cache", "obsolete/jobs.closure", "obsolete/jobs.decorator", "obsolete/jobs.filenames", "obsolete/jobs.initialize_system_cache", "obsolete/jobs.parallel", "obsolete/linalg", "obsolete/linalg.arguments", "obsolete/linalg.matrix", "obsolete/linalg.operators", "obsolete/models", "obsolete/models.izh", "obsolete/models.lif", "obsolete/models.rbm", "obsolete/models.rbm.rbm", "obsolete/models.rbm.rbm_helper", "obsolete/models.rbm.rbm_sample", "obsolete/models.rbm.rbm_utils", "obsolete/models.rbm.rbm_utils.rbm", "obsolete/models.rbm.rbm_utils.stutils", "obsolete/modules", "obsolete/neurotools", "obsolete/neurotools.dependencies", "obsolete/neurotools.encoding", "obsolete/neurotools.encoding.Huffman", "obsolete/neurotools.encoding.NaryHuffman", "obsolete/neurotools.functions", "obsolete/neurotools.getfftw", "obsolete/neurotools.gpu", "obsolete/neurotools.gpu.cl", "obsolete/neurotools.gpu.cl.device", "obsolete/neurotools.gpu.cl.function", "obsolete/neurotools.gpu.cl.matrix", "obsolete/neurotools.gpu.cpu", "obsolete/neurotools.gpu.cpu.util", "obsolete/neurotools.gpu.cu", "obsolete/neurotools.gpu.cu.convolution", "obsolete/neurotools.gpu.cu.device", "obsolete/neurotools.gpu.cu.function", "obsolete/neurotools.gpu.cu.gpufun", "obsolete/neurotools.gpu.cu.graph", "obsolete/neurotools.gpu.cu.logic", "obsolete/neurotools.gpu.cu.matrix", "obsolete/neurotools.gpu.cu.plot", "obsolete/neurotools.gpu.cu.sequence", "obsolete/neurotools.gpu.cu.statistics", "obsolete/neurotools.graphics", "obsolete/neurotools.graphics.color", "obsolete/neurotools.graphics.colormaps", "obsolete/neurotools.graphics.dendron", "obsolete/neurotools.graphics.fabio_maps", "obsolete/neurotools.graphics.image", "obsolete/neurotools.graphics.matplotlib", "obsolete/neurotools.graphics.plot", "obsolete/neurotools.graphics.pygame", "obsolete/neurotools.graphics.ztransform_plot_helpers", "obsolete/neurotools.hdfmat", "obsolete/neurotools.jobs", "obsolete/neurotools.jobs.cache", "obsolete/neurotools.jobs.closure", "obsolete/neurotools.jobs.filenames", "obsolete/neurotools.jobs.initialize_system_cache", "obsolete/neurotools.jobs.ndecorator", "obsolete/neurotools.jobs.parallel", "obsolete/neurotools.linalg", "obsolete/neurotools.linalg.arguments", "obsolete/neurotools.linalg.matrix", "obsolete/neurotools.linalg.operators", "obsolete/neurotools.models", "obsolete/neurotools.models.izh", "obsolete/neurotools.models.lif", "obsolete/neurotools.models.rbm", "obsolete/neurotools.models.rbm.rbm", "obsolete/neurotools.models.rbm.rbm_helper", "obsolete/neurotools.models.rbm.rbm_sample", "obsolete/neurotools.models.rbm.rbm_utils", "obsolete/neurotools.models.rbm.rbm_utils.rbm", "obsolete/neurotools.models.rbm.rbm_utils.stutils", "obsolete/neurotools.nlab", "obsolete/neurotools.obsolete", "obsolete/neurotools.obsolete.encoding", "obsolete/neurotools.obsolete.encoding.Huffman", "obsolete/neurotools.obsolete.encoding.NaryHuffman", "obsolete/neurotools.obsolete.gpu", "obsolete/neurotools.obsolete.gpu.cl", "obsolete/neurotools.obsolete.gpu.cl.device", "obsolete/neurotools.obsolete.gpu.cl.function", "obsolete/neurotools.obsolete.gpu.cl.matrix", "obsolete/neurotools.obsolete.gpu.cpu", "obsolete/neurotools.obsolete.gpu.cpu.util", "obsolete/neurotools.obsolete.gpu.cu", "obsolete/neurotools.obsolete.gpu.cu.convolution", "obsolete/neurotools.obsolete.gpu.cu.device", "obsolete/neurotools.obsolete.gpu.cu.function", "obsolete/neurotools.obsolete.gpu.cu.gpufun", "obsolete/neurotools.obsolete.gpu.cu.graph", "obsolete/neurotools.obsolete.gpu.cu.logic", "obsolete/neurotools.obsolete.gpu.cu.matrix", "obsolete/neurotools.obsolete.gpu.cu.plot", "obsolete/neurotools.obsolete.gpu.cu.sequence", "obsolete/neurotools.obsolete.gpu.cu.statistics", "obsolete/neurotools.obsolete.models", "obsolete/neurotools.obsolete.models.izh", "obsolete/neurotools.obsolete.models.lif", "obsolete/neurotools.obsolete.opto", "obsolete/neurotools.obsolete.rbm", "obsolete/neurotools.obsolete.rbm.rbm", "obsolete/neurotools.obsolete.rbm.rbm_helper", "obsolete/neurotools.obsolete.rbm.rbm_sample", "obsolete/neurotools.obsolete.rbm.rbm_utils", "obsolete/neurotools.obsolete.rbm.rbm_utils.rbm", "obsolete/neurotools.obsolete.rbm.rbm_utils.stutils", "obsolete/neurotools.opto", "obsolete/neurotools.signal", "obsolete/neurotools.signal.coherence", "obsolete/neurotools.signal.conv", "obsolete/neurotools.signal.linenoise", "obsolete/neurotools.signal.morlet", "obsolete/neurotools.signal.morlet_coherence", "obsolete/neurotools.signal.multitaper", "obsolete/neurotools.signal.ppc", "obsolete/neurotools.signal.resonator", "obsolete/neurotools.signal.savitskygolay", "obsolete/neurotools.signal.sde", "obsolete/neurotools.signal.signal", "obsolete/neurotools.spatial", "obsolete/neurotools.spatial.array", "obsolete/neurotools.spatial.dct", "obsolete/neurotools.spatial.distance", "obsolete/neurotools.spatial.fftzeros", "obsolete/neurotools.spatial.geometry", "obsolete/neurotools.spatial.kernels", "obsolete/neurotools.spatial.masking", "obsolete/neurotools.spatial.phase", "obsolete/neurotools.spatial.points", "obsolete/neurotools.spatial.spatialPSD", "obsolete/neurotools.spatial.spiking", "obsolete/neurotools.spatial.triangulation", "obsolete/neurotools.spatial.wave_parametric_models", "obsolete/neurotools.spikes", "obsolete/neurotools.spikes.spikes", "obsolete/neurotools.spikes.waveform", "obsolete/neurotools.stats", "obsolete/neurotools.stats.GLMFit", "obsolete/neurotools.stats.Gaussian", "obsolete/neurotools.stats.circular", "obsolete/neurotools.stats.convolutional", "obsolete/neurotools.stats.density", "obsolete/neurotools.stats.distributions", "obsolete/neurotools.stats.entropy", "obsolete/neurotools.stats.fast_kde", "obsolete/neurotools.stats.gaussian (Case Conflict 1)", "obsolete/neurotools.stats.gaussian (Case Conflict 2)", "obsolete/neurotools.stats.gaussian (Case Conflict 3)", "obsolete/neurotools.stats.gaussian (Case Conflict 4)", "obsolete/neurotools.stats.gaussian (Case Conflict 5)", "obsolete/neurotools.stats.gaussian (Case Conflict 6)", "obsolete/neurotools.stats.gaussian (Case Conflict 7)", "obsolete/neurotools.stats.gaussian (Case Conflict 8)", "obsolete/neurotools.stats.gaussian (Case Conflict)", "obsolete/neurotools.stats.glm", "obsolete/neurotools.stats.gmm", "obsolete/neurotools.stats.grid_search", "obsolete/neurotools.stats.history_basis", "obsolete/neurotools.stats.hmm", "obsolete/neurotools.stats.information", "obsolete/neurotools.stats.kent_reimann", "obsolete/neurotools.stats.lessons", "obsolete/neurotools.stats.matzner_bar-gad_PLoS_2015", "obsolete/neurotools.stats.mcint", "obsolete/neurotools.stats.minimize", "obsolete/neurotools.stats.mixtures", "obsolete/neurotools.stats.modefind", "obsolete/neurotools.stats.mvg", "obsolete/neurotools.stats.pvalues", "obsolete/neurotools.stats.regressions", "obsolete/neurotools.stats.sde", "obsolete/neurotools.stats.spatiotemporal_glm_utils", "obsolete/neurotools.stats.stats", "obsolete/neurotools.system", "obsolete/neurotools.text", "obsolete/neurotools.tools", "obsolete/neurotools.util", "obsolete/neurotools.util.dependencies", "obsolete/neurotools.util.functions", "obsolete/neurotools.util.getfftw", "obsolete/neurotools.util.hdfmat", "obsolete/neurotools.util.string", "obsolete/neurotools.util.system", "obsolete/neurotools.util.time", "obsolete/neurotools.util.tools", "obsolete/nlab", "obsolete/opto", "obsolete/signal", "obsolete/signal.coherence", "obsolete/signal.conv", "obsolete/signal.linenoise", "obsolete/signal.morlet", "obsolete/signal.morlet_coherence", "obsolete/signal.multitaper", "obsolete/signal.ppc", "obsolete/signal.resonator", "obsolete/signal.savitskygolay", "obsolete/signal.signal", "obsolete/spatial", "obsolete/spatial.array", "obsolete/spatial.dct", "obsolete/spatial.distance", "obsolete/spatial.fftzeros", "obsolete/spatial.kernels", "obsolete/spatial.phase", "obsolete/spatial.spatialPSD", "obsolete/spatial.spiking", "obsolete/spatial.triangulation", "obsolete/spatial.wave_parametric_models", "obsolete/spikes.spikes", "obsolete/spikes.waveform", "obsolete/stats.GLMFit", "obsolete/stats.Gaussian", "obsolete/stats.circular", "obsolete/stats.convolutional", "obsolete/stats.density", "obsolete/stats.distributions", "obsolete/stats.entropy", "obsolete/stats.fast_kde", "obsolete/stats.glm", "obsolete/stats.gmm", "obsolete/stats.history_basis", "obsolete/stats.hmm", "obsolete/stats.information", "obsolete/stats.kent_reimann", "obsolete/stats.lessons", "obsolete/stats.matzner_bar-gad_PLoS_2015", "obsolete/stats.mcint", "obsolete/stats.minimize", "obsolete/stats.mixtures", "obsolete/stats.modefind", "obsolete/stats.mvg", "obsolete/stats.pvalues", "obsolete/stats.regressions", "obsolete/stats.sde", "obsolete/stats.spatiotemporal_glm_utils", "obsolete/stats.stats"], "filenames": ["dependencies.rst", "index.rst", "modules.rst", "neurotools.rst", "neurotools.graphics.rst", "neurotools.graphics.color.rst", "neurotools.graphics.colormaps.rst", "neurotools.graphics.dendron.rst", "neurotools.graphics.fabio_maps.rst", "neurotools.graphics.image.rst", "neurotools.graphics.matplotlib.rst", "neurotools.graphics.plot.rst", "neurotools.graphics.pygame.rst", "neurotools.graphics.ztransform_plot_helpers.rst", "neurotools.jobs.rst", "neurotools.jobs.cache.rst", "neurotools.jobs.closure.rst", "neurotools.jobs.filenames.rst", "neurotools.jobs.initialize_system_cache.rst", "neurotools.jobs.ndecorator.rst", "neurotools.jobs.parallel.rst", "neurotools.linalg.rst", "neurotools.linalg.arguments.rst", "neurotools.linalg.matrix.rst", "neurotools.linalg.operators.rst", "neurotools.nlab.rst", "neurotools.obsolete.rst", "neurotools.obsolete.encoding.rst", "neurotools.obsolete.encoding.Huffman.rst", "neurotools.obsolete.encoding.NaryHuffman.rst", "neurotools.obsolete.gpu.rst", "neurotools.obsolete.gpu.cl.rst", "neurotools.obsolete.gpu.cl.device.rst", "neurotools.obsolete.gpu.cl.function.rst", "neurotools.obsolete.gpu.cl.matrix.rst", "neurotools.obsolete.gpu.cpu.rst", "neurotools.obsolete.gpu.cpu.util.rst", "neurotools.obsolete.gpu.cu.rst", "neurotools.obsolete.gpu.cu.convolution.rst", "neurotools.obsolete.gpu.cu.device.rst", "neurotools.obsolete.gpu.cu.function.rst", "neurotools.obsolete.gpu.cu.gpufun.rst", "neurotools.obsolete.gpu.cu.graph.rst", "neurotools.obsolete.gpu.cu.logic.rst", "neurotools.obsolete.gpu.cu.matrix.rst", "neurotools.obsolete.gpu.cu.plot.rst", "neurotools.obsolete.gpu.cu.sequence.rst", "neurotools.obsolete.gpu.cu.statistics.rst", "neurotools.obsolete.models.rst", "neurotools.obsolete.models.izh.rst", "neurotools.obsolete.models.lif.rst", "neurotools.obsolete.opto.rst", "neurotools.obsolete.rbm.rst", "neurotools.obsolete.rbm.rbm.rst", "neurotools.obsolete.rbm.rbm_helper.rst", "neurotools.obsolete.rbm.rbm_sample.rst", "neurotools.obsolete.rbm.rbm_utils.rst", "neurotools.obsolete.rbm.rbm_utils.rbm.rst", "neurotools.obsolete.rbm.rbm_utils.stutils.rst", "neurotools.signal.rst", "neurotools.signal.coherence.rst", "neurotools.signal.conv.rst", "neurotools.signal.morlet.rst", "neurotools.signal.multitaper.rst", "neurotools.signal.ppc.rst", "neurotools.signal.savitskygolay.rst", "neurotools.signal.sde.rst", "neurotools.spatial.rst", "neurotools.spatial.array.rst", "neurotools.spatial.dct.rst", "neurotools.spatial.distance.rst", "neurotools.spatial.fftzeros.rst", "neurotools.spatial.geometry.rst", "neurotools.spatial.kernels.rst", "neurotools.spatial.masking.rst", "neurotools.spatial.phase.rst", "neurotools.spatial.points.rst", "neurotools.spatial.spiking.rst", "neurotools.spatial.triangulation.rst", "neurotools.spikes.rst", "neurotools.spikes.spikes.rst", "neurotools.spikes.waveform.rst", "neurotools.stats.rst", "neurotools.stats.convolutional.rst", "neurotools.stats.density.rst", "neurotools.stats.distributions.rst", "neurotools.stats.fast_kde.rst", "neurotools.stats.gaussian.rst", "neurotools.stats.glm.rst", "neurotools.stats.grid_search.rst", "neurotools.stats.hmm.rst", "neurotools.stats.information.rst", "neurotools.stats.mcint.rst", "neurotools.stats.minimize.rst", "neurotools.stats.mixtures.rst", "neurotools.stats.modefind.rst", "neurotools.stats.pvalues.rst", "neurotools.stats.regressions.rst", "neurotools.util.rst", "neurotools.util.dependencies.rst", "neurotools.util.functions.rst", "neurotools.util.getfftw.rst", "neurotools.util.hdfmat.rst", "neurotools.util.string.rst", "neurotools.util.system.rst", "neurotools.util.time.rst", "neurotools.util.tools.rst", "obsolete/functions.rst", "obsolete/getfftw.rst", "obsolete/gpu.rst", "obsolete/gpu.cl.rst", "obsolete/gpu.cl.device.rst", "obsolete/gpu.cl.function.rst", "obsolete/gpu.cl.matrix.rst", "obsolete/gpu.cpu.rst", "obsolete/gpu.cpu.util.rst", "obsolete/gpu.cu.rst", "obsolete/gpu.cu.convolution.rst", "obsolete/gpu.cu.device.rst", "obsolete/gpu.cu.function.rst", "obsolete/gpu.cu.gpufun.rst", "obsolete/gpu.cu.graph.rst", "obsolete/gpu.cu.logic.rst", "obsolete/gpu.cu.matrix.rst", "obsolete/gpu.cu.plot.rst", "obsolete/gpu.cu.sequence.rst", "obsolete/gpu.cu.statistics.rst", "obsolete/graphics.rst", "obsolete/graphics.color.rst", "obsolete/graphics.image.rst", "obsolete/graphics.matplotlib.rst", "obsolete/graphics.plot.rst", "obsolete/graphics.pygame.rst", "obsolete/jobs.rst", "obsolete/jobs.cache.rst", "obsolete/jobs.closure.rst", "obsolete/jobs.decorator.rst", "obsolete/jobs.filenames.rst", "obsolete/jobs.initialize_system_cache.rst", "obsolete/jobs.parallel.rst", "obsolete/linalg.rst", "obsolete/linalg.arguments.rst", "obsolete/linalg.matrix.rst", "obsolete/linalg.operators.rst", "obsolete/models.rst", "obsolete/models.izh.rst", "obsolete/models.lif.rst", "obsolete/models.rbm.rst", "obsolete/models.rbm.rbm.rst", "obsolete/models.rbm.rbm_helper.rst", "obsolete/models.rbm.rbm_sample.rst", "obsolete/models.rbm.rbm_utils.rst", "obsolete/models.rbm.rbm_utils.rbm.rst", "obsolete/models.rbm.rbm_utils.stutils.rst", "obsolete/modules.rst", "obsolete/neurotools.rst", "obsolete/neurotools.dependencies.rst", "obsolete/neurotools.encoding.rst", "obsolete/neurotools.encoding.Huffman.rst", "obsolete/neurotools.encoding.NaryHuffman.rst", "obsolete/neurotools.functions.rst", "obsolete/neurotools.getfftw.rst", "obsolete/neurotools.gpu.rst", "obsolete/neurotools.gpu.cl.rst", "obsolete/neurotools.gpu.cl.device.rst", "obsolete/neurotools.gpu.cl.function.rst", "obsolete/neurotools.gpu.cl.matrix.rst", "obsolete/neurotools.gpu.cpu.rst", "obsolete/neurotools.gpu.cpu.util.rst", "obsolete/neurotools.gpu.cu.rst", "obsolete/neurotools.gpu.cu.convolution.rst", "obsolete/neurotools.gpu.cu.device.rst", "obsolete/neurotools.gpu.cu.function.rst", "obsolete/neurotools.gpu.cu.gpufun.rst", "obsolete/neurotools.gpu.cu.graph.rst", "obsolete/neurotools.gpu.cu.logic.rst", "obsolete/neurotools.gpu.cu.matrix.rst", "obsolete/neurotools.gpu.cu.plot.rst", "obsolete/neurotools.gpu.cu.sequence.rst", "obsolete/neurotools.gpu.cu.statistics.rst", "obsolete/neurotools.graphics.rst", "obsolete/neurotools.graphics.color.rst", "obsolete/neurotools.graphics.colormaps.rst", "obsolete/neurotools.graphics.dendron.rst", "obsolete/neurotools.graphics.fabio_maps.rst", "obsolete/neurotools.graphics.image.rst", "obsolete/neurotools.graphics.matplotlib.rst", "obsolete/neurotools.graphics.plot.rst", "obsolete/neurotools.graphics.pygame.rst", "obsolete/neurotools.graphics.ztransform_plot_helpers.rst", "obsolete/neurotools.hdfmat.rst", "obsolete/neurotools.jobs.rst", "obsolete/neurotools.jobs.cache.rst", "obsolete/neurotools.jobs.closure.rst", "obsolete/neurotools.jobs.filenames.rst", "obsolete/neurotools.jobs.initialize_system_cache.rst", "obsolete/neurotools.jobs.ndecorator.rst", "obsolete/neurotools.jobs.parallel.rst", "obsolete/neurotools.linalg.rst", "obsolete/neurotools.linalg.arguments.rst", "obsolete/neurotools.linalg.matrix.rst", "obsolete/neurotools.linalg.operators.rst", "obsolete/neurotools.models.rst", "obsolete/neurotools.models.izh.rst", "obsolete/neurotools.models.lif.rst", "obsolete/neurotools.models.rbm.rst", "obsolete/neurotools.models.rbm.rbm.rst", "obsolete/neurotools.models.rbm.rbm_helper.rst", "obsolete/neurotools.models.rbm.rbm_sample.rst", "obsolete/neurotools.models.rbm.rbm_utils.rst", "obsolete/neurotools.models.rbm.rbm_utils.rbm.rst", "obsolete/neurotools.models.rbm.rbm_utils.stutils.rst", "obsolete/neurotools.nlab.rst", "obsolete/neurotools.obsolete.rst", "obsolete/neurotools.obsolete.encoding.rst", "obsolete/neurotools.obsolete.encoding.Huffman.rst", "obsolete/neurotools.obsolete.encoding.NaryHuffman.rst", "obsolete/neurotools.obsolete.gpu.rst", "obsolete/neurotools.obsolete.gpu.cl.rst", "obsolete/neurotools.obsolete.gpu.cl.device.rst", "obsolete/neurotools.obsolete.gpu.cl.function.rst", "obsolete/neurotools.obsolete.gpu.cl.matrix.rst", "obsolete/neurotools.obsolete.gpu.cpu.rst", "obsolete/neurotools.obsolete.gpu.cpu.util.rst", "obsolete/neurotools.obsolete.gpu.cu.rst", "obsolete/neurotools.obsolete.gpu.cu.convolution.rst", "obsolete/neurotools.obsolete.gpu.cu.device.rst", "obsolete/neurotools.obsolete.gpu.cu.function.rst", "obsolete/neurotools.obsolete.gpu.cu.gpufun.rst", "obsolete/neurotools.obsolete.gpu.cu.graph.rst", "obsolete/neurotools.obsolete.gpu.cu.logic.rst", "obsolete/neurotools.obsolete.gpu.cu.matrix.rst", "obsolete/neurotools.obsolete.gpu.cu.plot.rst", "obsolete/neurotools.obsolete.gpu.cu.sequence.rst", "obsolete/neurotools.obsolete.gpu.cu.statistics.rst", "obsolete/neurotools.obsolete.models.rst", "obsolete/neurotools.obsolete.models.izh.rst", "obsolete/neurotools.obsolete.models.lif.rst", "obsolete/neurotools.obsolete.opto.rst", "obsolete/neurotools.obsolete.rbm.rst", "obsolete/neurotools.obsolete.rbm.rbm.rst", "obsolete/neurotools.obsolete.rbm.rbm_helper.rst", "obsolete/neurotools.obsolete.rbm.rbm_sample.rst", "obsolete/neurotools.obsolete.rbm.rbm_utils.rst", "obsolete/neurotools.obsolete.rbm.rbm_utils.rbm.rst", "obsolete/neurotools.obsolete.rbm.rbm_utils.stutils.rst", "obsolete/neurotools.opto.rst", "obsolete/neurotools.signal.rst", "obsolete/neurotools.signal.coherence.rst", "obsolete/neurotools.signal.conv.rst", "obsolete/neurotools.signal.linenoise.rst", "obsolete/neurotools.signal.morlet.rst", "obsolete/neurotools.signal.morlet_coherence.rst", "obsolete/neurotools.signal.multitaper.rst", "obsolete/neurotools.signal.ppc.rst", "obsolete/neurotools.signal.resonator.rst", "obsolete/neurotools.signal.savitskygolay.rst", "obsolete/neurotools.signal.sde.rst", "obsolete/neurotools.signal.signal.rst", "obsolete/neurotools.spatial.rst", "obsolete/neurotools.spatial.array.rst", "obsolete/neurotools.spatial.dct.rst", "obsolete/neurotools.spatial.distance.rst", "obsolete/neurotools.spatial.fftzeros.rst", "obsolete/neurotools.spatial.geometry.rst", "obsolete/neurotools.spatial.kernels.rst", "obsolete/neurotools.spatial.masking.rst", "obsolete/neurotools.spatial.phase.rst", "obsolete/neurotools.spatial.points.rst", "obsolete/neurotools.spatial.spatialPSD.rst", "obsolete/neurotools.spatial.spiking.rst", "obsolete/neurotools.spatial.triangulation.rst", "obsolete/neurotools.spatial.wave_parametric_models.rst", "obsolete/neurotools.spikes.rst", "obsolete/neurotools.spikes.spikes.rst", "obsolete/neurotools.spikes.waveform.rst", "obsolete/neurotools.stats.rst", "obsolete/neurotools.stats.GLMFit.rst", "obsolete/neurotools.stats.Gaussian.rst", "obsolete/neurotools.stats.circular.rst", "obsolete/neurotools.stats.convolutional.rst", "obsolete/neurotools.stats.density.rst", "obsolete/neurotools.stats.distributions.rst", "obsolete/neurotools.stats.entropy.rst", "obsolete/neurotools.stats.fast_kde.rst", "obsolete/neurotools.stats.gaussian (Case Conflict 1).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 2).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 3).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 4).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 5).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 6).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 7).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 8).rst", "obsolete/neurotools.stats.gaussian (Case Conflict).rst", "obsolete/neurotools.stats.glm.rst", "obsolete/neurotools.stats.gmm.rst", "obsolete/neurotools.stats.grid_search.rst", "obsolete/neurotools.stats.history_basis.rst", "obsolete/neurotools.stats.hmm.rst", "obsolete/neurotools.stats.information.rst", "obsolete/neurotools.stats.kent_reimann.rst", "obsolete/neurotools.stats.lessons.rst", "obsolete/neurotools.stats.matzner_bar-gad_PLoS_2015.rst", "obsolete/neurotools.stats.mcint.rst", "obsolete/neurotools.stats.minimize.rst", "obsolete/neurotools.stats.mixtures.rst", "obsolete/neurotools.stats.modefind.rst", "obsolete/neurotools.stats.mvg.rst", "obsolete/neurotools.stats.pvalues.rst", "obsolete/neurotools.stats.regressions.rst", "obsolete/neurotools.stats.sde.rst", "obsolete/neurotools.stats.spatiotemporal_glm_utils.rst", "obsolete/neurotools.stats.stats.rst", "obsolete/neurotools.system.rst", "obsolete/neurotools.text.rst", "obsolete/neurotools.tools.rst", "obsolete/neurotools.util.rst", "obsolete/neurotools.util.dependencies.rst", "obsolete/neurotools.util.functions.rst", "obsolete/neurotools.util.getfftw.rst", "obsolete/neurotools.util.hdfmat.rst", "obsolete/neurotools.util.string.rst", "obsolete/neurotools.util.system.rst", "obsolete/neurotools.util.time.rst", "obsolete/neurotools.util.tools.rst", "obsolete/nlab.rst", "obsolete/opto.rst", "obsolete/signal.rst", "obsolete/signal.coherence.rst", "obsolete/signal.conv.rst", "obsolete/signal.linenoise.rst", "obsolete/signal.morlet.rst", "obsolete/signal.morlet_coherence.rst", "obsolete/signal.multitaper.rst", "obsolete/signal.ppc.rst", "obsolete/signal.resonator.rst", "obsolete/signal.savitskygolay.rst", "obsolete/signal.signal.rst", "obsolete/spatial.rst", "obsolete/spatial.array.rst", "obsolete/spatial.dct.rst", "obsolete/spatial.distance.rst", "obsolete/spatial.fftzeros.rst", "obsolete/spatial.kernels.rst", "obsolete/spatial.phase.rst", "obsolete/spatial.spatialPSD.rst", "obsolete/spatial.spiking.rst", "obsolete/spatial.triangulation.rst", "obsolete/spatial.wave_parametric_models.rst", "obsolete/spikes.spikes.rst", "obsolete/spikes.waveform.rst", "obsolete/stats.GLMFit.rst", "obsolete/stats.Gaussian.rst", "obsolete/stats.circular.rst", "obsolete/stats.convolutional.rst", "obsolete/stats.density.rst", "obsolete/stats.distributions.rst", "obsolete/stats.entropy.rst", "obsolete/stats.fast_kde.rst", "obsolete/stats.glm.rst", "obsolete/stats.gmm.rst", "obsolete/stats.history_basis.rst", "obsolete/stats.hmm.rst", "obsolete/stats.information.rst", "obsolete/stats.kent_reimann.rst", "obsolete/stats.lessons.rst", "obsolete/stats.matzner_bar-gad_PLoS_2015.rst", "obsolete/stats.mcint.rst", "obsolete/stats.minimize.rst", "obsolete/stats.mixtures.rst", "obsolete/stats.modefind.rst", "obsolete/stats.mvg.rst", "obsolete/stats.pvalues.rst", "obsolete/stats.regressions.rst", "obsolete/stats.sde.rst", "obsolete/stats.spatiotemporal_glm_utils.rst", "obsolete/stats.stats.rst"], "titles": ["dependencies module", "Neurotools", "neurotools", "neurotools package", "neurotools.graphics package", "neurotools.graphics.color module", "neurotools.graphics.colormaps module", "neurotools.graphics.dendron module", "neurotools.graphics.fabio_maps module", "neurotools.graphics.image module", "neurotools.graphics.matplotlib module", "neurotools.graphics.plot module", "neurotools.graphics.pygame module", "neurotools.graphics.ztransform_plot_helpers module", "neurotools.jobs package", "neurotools.jobs.cache module", "neurotools.jobs.closure module", "neurotools.jobs.filenames module", "neurotools.jobs.initialize_system_cache module", "neurotools.jobs.ndecorator module", "neurotools.jobs.parallel module", "neurotools.linalg package", "neurotools.linalg.arguments module", "neurotools.linalg.matrix module", "neurotools.linalg.operators module", "neurotools.nlab module", "neurotools.obsolete package", "neurotools.obsolete.encoding package", "neurotools.obsolete.encoding.Huffman module", "neurotools.obsolete.encoding.NaryHuffman module", "neurotools.obsolete.gpu package", "neurotools.obsolete.gpu.cl package", "neurotools.obsolete.gpu.cl.device module", "neurotools.obsolete.gpu.cl.function module", "neurotools.obsolete.gpu.cl.matrix module", "neurotools.obsolete.gpu.cpu package", "neurotools.obsolete.gpu.cpu.util module", "neurotools.obsolete.gpu.cu package", "neurotools.obsolete.gpu.cu.convolution module", "neurotools.obsolete.gpu.cu.device module", "neurotools.obsolete.gpu.cu.function module", "neurotools.obsolete.gpu.cu.gpufun module", "neurotools.obsolete.gpu.cu.graph module", "neurotools.obsolete.gpu.cu.logic module", "neurotools.obsolete.gpu.cu.matrix module", "neurotools.obsolete.gpu.cu.plot module", "neurotools.obsolete.gpu.cu.sequence module", "neurotools.obsolete.gpu.cu.statistics module", "neurotools.obsolete.models package", "neurotools.obsolete.models.izh module", "neurotools.obsolete.models.lif module", "neurotools.obsolete.opto module", "neurotools.obsolete.rbm package", "neurotools.obsolete.rbm.rbm module", "neurotools.obsolete.rbm.rbm_helper module", "neurotools.obsolete.rbm.rbm_sample module", "neurotools.obsolete.rbm.rbm_utils package", "neurotools.obsolete.rbm.rbm_utils.rbm module", "neurotools.obsolete.rbm.rbm_utils.stutils module", "neurotools.signal package", "neurotools.signal.coherence module", "neurotools.signal.conv module", "neurotools.signal.morlet module", "neurotools.signal.multitaper module", "neurotools.signal.ppc module", "neurotools.signal.savitskygolay module", "neurotools.signal.sde module", "neurotools.spatial package", "neurotools.spatial.array module", "neurotools.spatial.dct module", "neurotools.spatial.distance module", "neurotools.spatial.fftzeros module", "neurotools.spatial.geometry module", "neurotools.spatial.kernels module", "neurotools.spatial.masking module", "neurotools.spatial.phase module", "neurotools.spatial.points module", "neurotools.spatial.spiking module", "neurotools.spatial.triangulation module", "neurotools.spikes package", "neurotools.spikes.spikes module", "neurotools.spikes.waveform module", "neurotools.stats package", "neurotools.stats.convolutional module", "neurotools.stats.density module", "neurotools.stats.distributions module", "neurotools.stats.fast_kde module", "neurotools.stats.gaussian module", "neurotools.stats.glm module", "neurotools.stats.grid_search module", "neurotools.stats.hmm module", "neurotools.stats.information module", "neurotools.stats.mcint module", "neurotools.stats.minimize module", "neurotools.stats.mixtures module", "neurotools.stats.modefind module", "neurotools.stats.pvalues module", "neurotools.stats.regressions module", "neurotools.util package", "neurotools.util.dependencies module", "neurotools.util.functions module", "neurotools.util.getfftw module", "neurotools.util.hdfmat module", "neurotools.util.string module", "neurotools.util.system module", "neurotools.util.time module", "neurotools.util.tools module", "functions module", "getfftw module", "gpu package", "gpu.cl package", "gpu.cl.device module", "gpu.cl.function module", "gpu.cl.matrix module", "gpu.cpu package", "gpu.cpu.util module", "gpu.cu package", "gpu.cu.convolution module", "gpu.cu.device module", "gpu.cu.function module", "gpu.cu.gpufun module", "gpu.cu.graph module", "gpu.cu.logic module", "gpu.cu.matrix module", "gpu.cu.plot module", "gpu.cu.sequence module", "gpu.cu.statistics module", "graphics package", "graphics.color module", "graphics.image module", "graphics.matplotlib module", "graphics.plot module", "graphics.pygame module", "jobs package", "jobs.cache module", "jobs.closure module", "jobs.decorator module", "jobs.filenames module", "jobs.initialize_system_cache module", "jobs.parallel module", "linalg package", "linalg.arguments module", "linalg.matrix module", "linalg.operators module", "models package", "models.izh module", "models.lif module", "models.rbm package", "models.rbm.rbm module", "models.rbm.rbm_helper module", "models.rbm.rbm_sample module", "models.rbm.rbm_utils package", "models.rbm.rbm_utils.rbm module", "models.rbm.rbm_utils.stutils module", "neurotools", "neurotools package", "neurotools.dependencies module", "neurotools.encoding package", "neurotools.encoding.Huffman module", "neurotools.encoding.NaryHuffman module", "neurotools.functions module", "neurotools.getfftw module", "neurotools.gpu package", "neurotools.gpu.cl package", "neurotools.gpu.cl.device module", "neurotools.gpu.cl.function module", "neurotools.gpu.cl.matrix module", "neurotools.gpu.cpu package", "neurotools.gpu.cpu.util module", "neurotools.gpu.cu package", "neurotools.gpu.cu.convolution module", "neurotools.gpu.cu.device module", "neurotools.gpu.cu.function module", "neurotools.gpu.cu.gpufun module", "neurotools.gpu.cu.graph module", "neurotools.gpu.cu.logic module", "neurotools.gpu.cu.matrix module", "neurotools.gpu.cu.plot module", "neurotools.gpu.cu.sequence module", "neurotools.gpu.cu.statistics module", "neurotools.graphics package", "neurotools.graphics.color module", "neurotools.graphics.colormaps module", "neurotools.graphics.dendron module", "neurotools.graphics.fabio_maps module", "neurotools.graphics.image module", "neurotools.graphics.matplotlib module", "neurotools.graphics.plot module", "neurotools.graphics.pygame module", "neurotools.graphics.ztransform_plot_helpers module", "neurotools.hdfmat module", "neurotools.jobs package", "neurotools.jobs.cache module", "neurotools.jobs.closure module", "neurotools.jobs.filenames module", "neurotools.jobs.initialize_system_cache module", "neurotools.jobs.ndecorator module", "neurotools.jobs.parallel module", "neurotools.linalg package", "neurotools.linalg.arguments module", "neurotools.linalg.matrix module", "neurotools.linalg.operators module", "neurotools.models package", "neurotools.models.izh module", "neurotools.models.lif module", "neurotools.models.rbm package", "neurotools.models.rbm.rbm module", "neurotools.models.rbm.rbm_helper module", "neurotools.models.rbm.rbm_sample module", "neurotools.models.rbm.rbm_utils package", "neurotools.models.rbm.rbm_utils.rbm module", "neurotools.models.rbm.rbm_utils.stutils module", "neurotools.nlab module", "neurotools.obsolete package", "neurotools.obsolete.encoding package", "neurotools.obsolete.encoding.Huffman module", "neurotools.obsolete.encoding.NaryHuffman module", "neurotools.obsolete.gpu package", "neurotools.obsolete.gpu.cl package", "neurotools.obsolete.gpu.cl.device module", "neurotools.obsolete.gpu.cl.function module", "neurotools.obsolete.gpu.cl.matrix module", "neurotools.obsolete.gpu.cpu package", "neurotools.obsolete.gpu.cpu.util module", "neurotools.obsolete.gpu.cu package", "neurotools.obsolete.gpu.cu.convolution module", "neurotools.obsolete.gpu.cu.device module", "neurotools.obsolete.gpu.cu.function module", "neurotools.obsolete.gpu.cu.gpufun module", "neurotools.obsolete.gpu.cu.graph module", "neurotools.obsolete.gpu.cu.logic module", "neurotools.obsolete.gpu.cu.matrix module", "neurotools.obsolete.gpu.cu.plot module", "neurotools.obsolete.gpu.cu.sequence module", "neurotools.obsolete.gpu.cu.statistics module", "neurotools.obsolete.models package", "neurotools.obsolete.models.izh module", "neurotools.obsolete.models.lif module", "neurotools.obsolete.opto module", "neurotools.obsolete.rbm package", "neurotools.obsolete.rbm.rbm module", "neurotools.obsolete.rbm.rbm_helper module", "neurotools.obsolete.rbm.rbm_sample module", "neurotools.obsolete.rbm.rbm_utils package", "neurotools.obsolete.rbm.rbm_utils.rbm module", "neurotools.obsolete.rbm.rbm_utils.stutils module", "neurotools.opto module", "neurotools.signal package", "neurotools.signal.coherence module", "neurotools.signal.conv module", "neurotools.signal.linenoise module", "neurotools.signal.morlet module", "neurotools.signal.morlet_coherence module", "neurotools.signal.multitaper module", "neurotools.signal.ppc module", "neurotools.signal.resonator module", "neurotools.signal.savitskygolay module", "neurotools.signal.sde module", "neurotools.signal.signal module", "neurotools.spatial package", "neurotools.spatial.array module", "neurotools.spatial.dct module", "neurotools.spatial.distance module", "neurotools.spatial.fftzeros module", "neurotools.spatial.geometry module", "neurotools.spatial.kernels module", "neurotools.spatial.masking module", "neurotools.spatial.phase module", "neurotools.spatial.points module", "neurotools.spatial.spatialPSD module", "neurotools.spatial.spiking module", "neurotools.spatial.triangulation module", "neurotools.spatial.wave_parametric_models module", "neurotools.spikes package", "neurotools.spikes.spikes module", "neurotools.spikes.waveform module", "neurotools.stats package", "neurotools.stats.GLMFit module", "neurotools.stats.Gaussian module", "neurotools.stats.circular module", "neurotools.stats.convolutional module", "neurotools.stats.density module", "neurotools.stats.distributions module", "neurotools.stats.entropy module", "neurotools.stats.fast_kde module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.glm module", "neurotools.stats.gmm module", "neurotools.stats.grid_search module", "neurotools.stats.history_basis module", "neurotools.stats.hmm module", "neurotools.stats.information module", "neurotools.stats.kent_reimann module", "neurotools.stats.lessons module", "neurotools.stats.matzner_bar-gad_PLoS_2015 module", "neurotools.stats.mcint module", "neurotools.stats.minimize module", "neurotools.stats.mixtures module", "neurotools.stats.modefind module", "neurotools.stats.mvg module", "neurotools.stats.pvalues module", "neurotools.stats.regressions module", "neurotools.stats.sde module", "neurotools.stats.spatiotemporal_glm_utils module", "neurotools.stats.stats module", "neurotools.system module", "neurotools.text module", "neurotools.tools module", "neurotools.util package", "neurotools.util.dependencies module", "neurotools.util.functions module", "neurotools.util.getfftw module", "neurotools.util.hdfmat module", "neurotools.util.string module", "neurotools.util.system module", "neurotools.util.time module", "neurotools.util.tools module", "nlab module", "opto module", "signal package", "signal.coherence module", "signal.conv module", "signal.linenoise module", "signal.morlet module", "signal.morlet_coherence module", "signal.multitaper module", "signal.ppc module", "signal.resonator module", "signal.savitskygolay module", "signal.signal module", "spatial package", "spatial.array module", "spatial.dct module", "spatial.distance module", "spatial.fftzeros module", "spatial.kernels module", "spatial.phase module", "spatial.spatialPSD module", "spatial.spiking module", "spatial.triangulation module", "spatial.wave_parametric_models module", "spikes.spikes module", "spikes.waveform module", "stats.GLMFit module", "stats.Gaussian module", "stats.circular module", "stats.convolutional module", "stats.density module", "stats.distributions module", "stats.entropy module", "stats.fast_kde module", "stats.glm module", "stats.gmm module", "stats.history_basis module", "stats.hmm module", "stats.information module", "stats.kent_reimann module", "stats.lessons module", "stats.matzner_bar-gad_PLoS_2015 module", "stats.mcint module", "stats.minimize module", "stats.mixtures module", "stats.modefind module", "stats.mvg module", "stats.pvalues module", "stats.regressions module", "stats.sde module", "stats.spatiotemporal_glm_utils module", "stats.stats module"], "terms": {"python": [1, 10, 15, 16, 17, 20, 25, 40, 41, 103, 104, 105, 106, 119, 120, 130, 134, 135, 137, 139, 186, 192, 193, 194, 197, 212, 227, 228, 321, 322, 323, 324, 325, 327, 337], "modul": [1, 2, 154], "statist": [1, 25, 30, 37, 59, 64, 68, 70, 75, 82, 96, 109, 116, 162, 169, 212, 217, 224, 247, 254, 260, 262, 267, 276, 308, 325, 339, 341, 344, 372], "model": [1, 3, 25, 26, 82, 84, 87, 88, 89, 90, 94, 155, 212, 213, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 305, 325, 355, 359, 362, 369], "comput": [1, 15, 18, 23, 25, 36, 59, 62, 63, 64, 65, 68, 69, 70, 71, 75, 77, 78, 80, 82, 83, 85, 87, 90, 91, 97, 115, 134, 138, 142, 192, 195, 200, 212, 223, 247, 251, 253, 254, 256, 260, 261, 262, 263, 267, 270, 271, 274, 276, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 309, 325, 339, 340, 341, 342, 344, 346, 347, 349, 354, 356, 362, 363, 373], "neurosci": [1, 95, 306, 370], "much": [1, 25, 41, 43, 83, 92, 120, 122, 212, 228, 230, 280, 303, 325, 354, 367], "packag": [1, 2, 19, 154, 196], "i": [1, 5, 10, 11, 12, 15, 16, 17, 18, 20, 23, 24, 25, 35, 36, 39, 40, 41, 43, 46, 49, 50, 59, 61, 62, 63, 64, 68, 69, 71, 73, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 96, 102, 103, 104, 106, 114, 115, 118, 119, 120, 122, 125, 128, 130, 131, 132, 134, 135, 137, 138, 139, 142, 143, 145, 146, 181, 186, 187, 188, 192, 193, 194, 195, 197, 200, 201, 212, 222, 223, 226, 227, 228, 230, 233, 236, 237, 247, 249, 251, 253, 254, 260, 261, 263, 265, 267, 268, 270, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 303, 306, 308, 320, 321, 322, 324, 325, 327, 337, 339, 340, 342, 343, 344, 346, 350, 354, 355, 356, 358, 359, 362, 363, 367, 370, 372], "research": [1, 25, 212, 325], "code": [1, 5, 15, 16, 18, 20, 23, 25, 36, 40, 41, 50, 64, 69, 71, 86, 96, 115, 119, 120, 128, 134, 135, 138, 139, 142, 146, 181, 192, 193, 195, 197, 200, 212, 223, 227, 228, 237, 254, 261, 263, 284, 308, 325, 327, 340, 342, 358, 372], "unstabl": 1, "refer": [1, 16, 23, 25, 40, 75, 96, 119, 135, 142, 193, 200, 212, 227, 267, 308, 325, 344, 372], "specif": [1, 15, 18, 25, 134, 138, 192, 195, 212, 325], "further": [1, 68, 260, 339], "document": [1, 19, 30, 35, 36, 46, 59, 82, 83, 97, 109, 114, 115, 125, 196, 217, 222, 223, 233, 247, 276, 280, 309, 354, 373], "thi": [1, 5, 10, 11, 15, 16, 18, 20, 23, 24, 25, 36, 39, 40, 41, 43, 50, 59, 61, 62, 63, 64, 68, 69, 70, 71, 73, 75, 80, 81, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 103, 104, 106, 115, 118, 119, 120, 122, 128, 130, 131, 134, 135, 138, 139, 142, 143, 146, 181, 186, 187, 192, 193, 195, 197, 200, 201, 212, 223, 226, 227, 228, 230, 237, 247, 249, 251, 253, 254, 260, 261, 262, 263, 265, 267, 274, 275, 276, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 303, 304, 305, 306, 308, 321, 322, 324, 325, 327, 339, 340, 341, 342, 343, 344, 349, 350, 354, 358, 359, 362, 367, 368, 369, 370, 372], "project": [1, 25, 59, 70, 87, 90, 212, 247, 262, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 325, 341, 362], "confus": 1, "neural": [1, 88, 294, 359], "simul": [1, 25, 49, 66, 145, 212, 236, 257, 325], "depend": [1, 3, 11, 15, 16, 18, 23, 25, 62, 68, 75, 82, 88, 96, 98, 131, 134, 135, 138, 142, 155, 187, 192, 193, 195, 200, 212, 251, 260, 267, 276, 294, 308, 316, 325, 339, 344, 359, 372], "numpi": [1, 5, 15, 17, 20, 23, 25, 40, 59, 68, 71, 78, 82, 84, 88, 89, 94, 100, 106, 107, 119, 128, 134, 137, 139, 142, 181, 192, 194, 197, 200, 212, 227, 247, 260, 263, 271, 276, 281, 294, 296, 305, 318, 324, 325, 339, 342, 347, 355, 359, 369], "scipi": [1, 15, 23, 24, 25, 59, 78, 84, 85, 86, 88, 93, 94, 97, 134, 142, 143, 192, 200, 201, 212, 247, 271, 281, 282, 284, 294, 304, 305, 309, 325, 347, 355, 356, 358, 359, 368, 369, 373], "statsmodel": [1, 82, 88, 276, 294, 359], "panda": 1, "nipi": 1, "The": [1, 5, 7, 15, 16, 17, 18, 20, 23, 24, 25, 40, 50, 59, 63, 64, 68, 71, 75, 82, 86, 87, 88, 90, 96, 104, 106, 119, 128, 134, 135, 137, 138, 139, 142, 143, 146, 181, 183, 192, 193, 194, 195, 197, 200, 201, 212, 227, 237, 247, 253, 254, 260, 263, 267, 276, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 308, 322, 324, 325, 327, 337, 339, 342, 344, 358, 359, 362, 372], "sourc": [1, 5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 28, 29, 31, 36, 38, 39, 40, 42, 45, 46, 49, 50, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 106, 107, 110, 115, 117, 118, 119, 121, 124, 125, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 181, 182, 183, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 199, 200, 201, 215, 216, 218, 223, 225, 226, 227, 229, 232, 233, 236, 237, 247, 249, 251, 253, 254, 256, 257, 259, 260, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 303, 304, 305, 306, 308, 309, 318, 320, 321, 322, 323, 324, 327, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 354, 355, 356, 358, 359, 362, 363, 367, 368, 369, 370, 372, 373], "can": [1, 5, 7, 11, 15, 16, 17, 18, 20, 24, 25, 36, 39, 59, 64, 68, 80, 82, 83, 87, 91, 93, 106, 115, 118, 128, 131, 134, 135, 137, 138, 139, 143, 181, 183, 187, 192, 193, 194, 195, 197, 201, 212, 223, 226, 247, 254, 260, 274, 276, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 304, 324, 325, 327, 337, 339, 349, 354, 363, 368], "brows": 1, "download": [1, 25, 212, 325], "from": [1, 11, 15, 18, 19, 20, 23, 24, 25, 36, 39, 41, 49, 59, 64, 66, 68, 69, 70, 73, 75, 76, 78, 82, 83, 84, 87, 88, 89, 90, 91, 93, 94, 96, 97, 102, 106, 115, 118, 120, 131, 134, 138, 139, 142, 143, 145, 187, 192, 195, 196, 197, 200, 201, 212, 223, 226, 228, 236, 247, 254, 257, 260, 261, 262, 265, 267, 268, 271, 276, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 304, 305, 308, 309, 320, 324, 325, 327, 339, 340, 341, 343, 344, 347, 354, 355, 359, 362, 363, 368, 369, 372, 373], "github": [1, 86, 284, 358], "ha": [1, 11, 15, 18, 25, 59, 64, 68, 69, 75, 88, 131, 134, 138, 187, 192, 195, 212, 247, 254, 260, 261, 267, 294, 325, 339, 340, 344, 359], "been": [1, 15, 18, 25, 59, 64, 69, 88, 134, 138, 192, 195, 212, 247, 254, 261, 294, 325, 340, 359], "review": 1, "prepar": [1, 82, 276], "us": [1, 5, 6, 7, 10, 11, 15, 17, 18, 19, 20, 23, 24, 25, 36, 40, 41, 43, 46, 50, 59, 61, 62, 63, 64, 65, 68, 69, 71, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 100, 103, 106, 107, 115, 119, 120, 122, 125, 128, 130, 131, 134, 137, 138, 139, 142, 143, 146, 181, 182, 183, 186, 187, 192, 194, 195, 196, 197, 200, 201, 212, 223, 227, 228, 230, 233, 237, 247, 249, 251, 253, 254, 256, 260, 261, 263, 267, 270, 274, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 303, 304, 306, 308, 309, 318, 321, 324, 325, 327, 339, 340, 342, 344, 346, 349, 350, 354, 355, 356, 358, 359, 362, 363, 367, 368, 370, 372, 373], "gener": [1, 11, 15, 17, 18, 23, 24, 25, 41, 59, 61, 65, 70, 73, 80, 82, 83, 88, 120, 131, 134, 137, 138, 142, 143, 187, 192, 194, 195, 200, 201, 212, 228, 247, 249, 256, 262, 265, 274, 276, 280, 294, 325, 341, 343, 349, 354, 359], "public": 1, "when": [1, 15, 18, 20, 23, 25, 59, 64, 71, 90, 134, 138, 139, 142, 192, 195, 197, 200, 212, 247, 254, 263, 298, 325, 342, 362], "otherwis": [1, 15, 25, 40, 75, 88, 119, 134, 192, 212, 227, 267, 294, 325, 344, 359], "specifi": [1, 11, 15, 25, 59, 65, 69, 75, 82, 87, 91, 131, 134, 187, 192, 212, 247, 256, 261, 267, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 325, 327, 340, 344, 363], "associ": [1, 25, 64, 212, 254, 325, 327], "content": [1, 2, 25, 154, 212, 325], "licens": 1, "under": [1, 25, 82, 88, 212, 276, 294, 325, 359], "creativ": 1, "common": [1, 10, 20, 25, 85, 88, 97, 100, 107, 130, 139, 186, 197, 212, 282, 294, 309, 318, 325, 356, 359, 373], "attribut": [1, 19, 196, 327], "non": [1, 15, 16, 19, 23, 25, 59, 68, 83, 88, 90, 96, 103, 134, 135, 142, 192, 193, 196, 200, 212, 247, 260, 280, 294, 298, 308, 321, 325, 339, 354, 359, 362, 372], "commerci": 1, "share": [1, 18, 39, 118, 138, 195, 226], "alik": 1, "3": [1, 5, 7, 15, 16, 17, 24, 25, 29, 49, 59, 65, 68, 73, 78, 82, 88, 89, 90, 96, 100, 104, 107, 128, 134, 135, 137, 143, 145, 181, 183, 192, 193, 194, 201, 212, 216, 236, 247, 256, 260, 265, 271, 276, 294, 296, 298, 308, 318, 322, 325, 327, 339, 343, 347, 359, 362, 372], "0": [1, 5, 7, 8, 11, 12, 15, 23, 24, 25, 41, 43, 49, 50, 59, 62, 63, 68, 69, 71, 73, 75, 77, 81, 82, 83, 84, 85, 87, 88, 90, 92, 94, 96, 97, 103, 106, 120, 122, 128, 131, 132, 134, 142, 143, 145, 146, 181, 183, 184, 187, 188, 192, 200, 201, 212, 228, 230, 236, 237, 247, 251, 253, 260, 261, 263, 265, 267, 270, 275, 276, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 303, 305, 308, 309, 321, 324, 325, 327, 339, 340, 342, 343, 344, 346, 350, 354, 355, 356, 359, 362, 367, 369, 372, 373], "full": [1, 15, 25, 59, 81, 134, 192, 212, 247, 275, 325, 350], "index": [1, 20, 25, 40, 59, 63, 68, 71, 76, 82, 83, 89, 106, 119, 139, 197, 212, 227, 247, 253, 260, 263, 268, 276, 280, 296, 324, 325, 339, 342, 354], "signal": [1, 2, 3, 11, 23, 25, 49, 50, 67, 68, 71, 75, 80, 81, 83, 131, 142, 145, 146, 154, 155, 187, 200, 212, 236, 237, 259, 260, 263, 267, 274, 275, 280, 325, 338, 339, 342, 344, 349, 350, 354], "stat": [1, 2, 3, 25, 59, 154, 155, 212, 247, 325], "spatial": [1, 2, 3, 154, 155], "spike": [1, 2, 3, 49, 50, 59, 64, 67, 83, 84, 88, 145, 146, 154, 155, 236, 237, 247, 254, 259, 280, 281, 294, 338, 354, 355, 359], "graphic": [1, 2, 3, 154, 155], "linalg": [1, 2, 3, 82, 87, 154, 155, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293], "job": [1, 2, 3, 154, 155], "util": [1, 2, 3, 10, 30, 35, 41, 73, 77, 109, 114, 120, 130, 154, 155, 162, 167, 186, 217, 222, 228, 265, 270, 343, 346], "subpackag": [2, 154], "submodul": [2, 30, 109, 154, 162, 217], "obsolet": [2, 3, 61, 154, 155, 249], "nlab": [2, 3, 23, 142, 154, 155, 200], "random": [2, 3, 25, 41, 59, 64, 96, 120, 154, 155, 212, 228, 247, 254, 308, 325, 372], "beta": [2, 3, 25, 154, 155, 212, 325], "binomi": [2, 3, 25, 154, 155, 212, 325], "chisquar": [2, 3, 25, 154, 155, 212, 325], "choic": [2, 3, 25, 154, 155, 212, 325], "dirichlet": [2, 3, 24, 25, 143, 154, 155, 201, 212, 325], "exponenti": [2, 3, 25, 36, 41, 50, 66, 73, 88, 97, 100, 107, 115, 120, 146, 154, 155, 212, 223, 228, 237, 257, 265, 294, 309, 318, 325, 343, 359, 373], "f": [2, 3, 11, 15, 16, 19, 20, 25, 36, 40, 41, 43, 50, 59, 62, 63, 64, 65, 68, 75, 83, 87, 90, 92, 98, 100, 103, 106, 107, 115, 119, 120, 122, 131, 134, 135, 139, 146, 154, 155, 187, 192, 193, 196, 197, 212, 223, 227, 228, 230, 237, 247, 251, 253, 254, 256, 260, 267, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 303, 316, 318, 321, 324, 325, 339, 344, 354, 362, 367], "gamma": [2, 3, 25, 154, 155, 212, 325], "geometr": [2, 3, 25, 154, 155, 212, 325], "get_stat": [2, 3, 25, 154, 155, 212, 325], "gumbel": [2, 3, 25, 154, 155, 212, 325], "hypergeometr": [2, 3, 25, 154, 155, 212, 325], "laplac": [2, 3, 25, 90, 154, 155, 212, 298, 325, 362], "logist": [2, 3, 25, 88, 154, 155, 212, 294, 325, 359], "lognorm": [2, 3, 25, 154, 155, 212, 325], "logseri": [2, 3, 25, 154, 155, 212, 325], "multinomi": [2, 3, 25, 154, 155, 212, 325], "multivariate_norm": [2, 3, 25, 154, 155, 212, 325], "negative_binomi": [2, 3, 25, 154, 155, 212, 325], "noncentral_chisquar": [2, 3, 25, 154, 155, 212, 325], "noncentral_f": [2, 3, 25, 154, 155, 212, 325], "normal": [2, 3, 20, 24, 25, 36, 41, 59, 68, 73, 80, 81, 82, 85, 88, 115, 120, 139, 143, 154, 155, 197, 201, 212, 223, 228, 247, 260, 265, 274, 275, 276, 282, 294, 325, 339, 343, 349, 350, 356, 359], "pareto": [2, 3, 25, 154, 155, 212, 325], "permut": [2, 3, 25, 106, 154, 155, 212, 324, 325], "poisson": [2, 3, 25, 82, 85, 88, 90, 91, 94, 154, 155, 212, 276, 282, 294, 298, 299, 305, 325, 356, 359, 362, 363, 369], "power": [2, 3, 25, 63, 75, 97, 154, 155, 212, 253, 267, 309, 325, 344, 373], "rand": [2, 3, 25, 41, 106, 120, 154, 155, 212, 228, 324, 325], "randint": [2, 3, 25, 90, 154, 155, 212, 298, 325, 362], "randn": [2, 3, 23, 25, 87, 92, 97, 142, 154, 155, 200, 212, 285, 286, 287, 288, 289, 290, 291, 292, 293, 303, 309, 325, 367, 373], "random_integ": [2, 3, 25, 154, 155, 212, 325], "random_sampl": [2, 3, 25, 154, 155, 212, 325], "rayleigh": [2, 3, 25, 154, 155, 212, 325], "seed": [2, 3, 25, 154, 155, 212, 325], "set_stat": [2, 3, 25, 154, 155, 212, 325], "shuffl": [2, 3, 23, 25, 82, 142, 154, 155, 200, 212, 276, 325], "standard_cauchi": [2, 3, 25, 154, 155, 212, 325], "standard_exponenti": [2, 3, 25, 154, 155, 212, 325], "standard_gamma": [2, 3, 25, 154, 155, 212, 325], "standard_norm": [2, 3, 25, 154, 155, 212, 325], "standard_t": [2, 3, 25, 154, 155, 212, 325], "triangular": [2, 3, 11, 23, 25, 131, 142, 154, 155, 187, 200, 212, 325], "uniform": [2, 3, 25, 41, 59, 90, 120, 154, 155, 212, 228, 247, 298, 325, 362], "vonmis": [2, 3, 25, 154, 155, 212, 325], "wald": [2, 3, 25, 154, 155, 212, 325], "weibul": [2, 3, 25, 154, 155, 212, 325], "zipf": [2, 3, 25, 154, 155, 212, 325], "color": [3, 4, 6, 7, 8, 11, 12, 25, 127, 131, 132, 155, 180, 182, 183, 184, 187, 188, 212, 325], "rgb2hex": [3, 4, 5, 127, 128, 155, 180, 181], "hex2rgb": [3, 4, 5, 127, 128, 155, 180, 181], "hsv2rgb": [3, 4, 5, 127, 128, 155, 180, 181], "light": [3, 4, 5, 11, 127, 128, 131, 155, 180, 181, 187], "luminance_matrix": [3, 4, 5, 127, 128, 155, 180, 181], "match_lumin": [3, 4, 5, 127, 128, 155, 180, 181], "rotat": [3, 4, 5, 11, 23, 24, 59, 64, 71, 81, 127, 128, 131, 142, 143, 155, 180, 181, 187, 200, 201, 247, 254, 263, 275, 342, 350], "rgbtohcl": [3, 4, 5, 127, 128, 155, 180, 181], "hue_angl": [3, 4, 5, 127, 128, 155, 180, 181], "hcl2rgb": [3, 4, 5, 127, 128, 155, 180, 181], "circularly_smooth_colormap": [3, 4, 5, 127, 128, 155, 180, 181], "isoluminance1": [3, 4, 5, 127, 128, 155, 180, 181], "isoluminance2": [3, 4, 5, 127, 128, 155, 180, 181], "isoluminance3": [3, 4, 5, 127, 128, 155, 180, 181], "isoluminance4": [3, 4, 5, 127, 128, 155, 180, 181], "lighthu": [3, 4, 5, 127, 128, 155, 180, 181], "darkhu": [3, 4, 5, 127, 128, 155, 180, 181], "medhu": [3, 4, 5, 127, 128, 155, 180, 181], "radl2rgb": [3, 4, 5, 127, 128, 155, 180, 181], "radl2rgblut": [3, 4, 5, 127, 128, 155, 180, 181], "complexhlarr2rgb": [3, 4, 5, 127, 128, 155, 180, 181], "color_boxplot": [3, 4, 5, 127, 128, 155, 180, 181], "hex_pack_bgr": [3, 4, 5, 127, 128, 155, 180, 181], "code_to_16bit": [3, 4, 5, 127, 128, 155, 180, 181], "bit16_rgb_to_tupl": [3, 4, 5, 127, 128, 155, 180, 181], "enumerate_fast_color": [3, 4, 5, 127, 128, 155, 180, 181], "tuple_to_bit16": [3, 4, 5, 127, 128, 155, 180, 181], "tuple_to_bit24": [3, 4, 5, 127, 128, 155, 180, 181], "bit16_print_color": [3, 4, 5, 127, 128, 155, 180, 181], "show_fast_pallet": [3, 4, 5, 127, 128, 155, 180, 181], "show_complete_fast_pallet": [3, 4, 5, 127, 128, 155, 180, 181], "show_complete_fastest_pallet": [3, 4, 5, 127, 128, 155, 180, 181], "show_hex_pallet": [3, 4, 5, 127, 128, 155, 180, 181], "colormap": [3, 4, 5, 8, 11, 128, 131, 155, 180, 181, 184, 187], "test_colormap": [3, 4, 6, 155, 180, 182], "dendron": [3, 4, 155, 180], "list_lik": [3, 4, 7, 155, 180, 183], "get_depth": [3, 4, 7, 155, 180, 183], "count_nod": [3, 4, 7, 155, 180, 183], "inorder_travers": [3, 4, 7, 155, 180, 183], "plot_bracket": [3, 4, 7, 155, 180, 183], "plot_brackets_polar": [3, 4, 7, 155, 180, 183], "fabio_map": [3, 4, 6, 155, 180, 182], "imag": [3, 4, 11, 12, 46, 69, 86, 96, 125, 127, 131, 132, 155, 180, 187, 188, 233, 261, 284, 308, 340, 358, 372], "median_cent": [3, 4, 9, 127, 129, 155, 180, 185], "mean_cent": [3, 4, 9, 127, 129, 155, 180, 185], "unit": [3, 4, 9, 11, 25, 41, 49, 50, 59, 68, 71, 75, 80, 82, 84, 120, 127, 129, 131, 145, 146, 155, 180, 185, 187, 212, 228, 236, 237, 247, 260, 263, 267, 274, 276, 281, 325, 339, 342, 344, 349, 355], "visualize_deriv": [3, 4, 9, 127, 129, 155, 180, 185], "matplotlib": [3, 4, 6, 8, 11, 25, 71, 78, 127, 131, 155, 180, 182, 184, 187, 212, 263, 271, 325, 342, 347], "hide_toolbar": [3, 4, 10, 127, 130, 155, 180, 186], "start": [3, 4, 10, 11, 12, 25, 40, 59, 119, 127, 130, 131, 132, 155, 180, 186, 187, 188, 212, 227, 247, 325], "draw_arrai": [3, 4, 10, 12, 127, 130, 132, 155, 180, 186, 188], "plot": [3, 4, 9, 10, 23, 25, 30, 37, 50, 71, 78, 95, 97, 109, 116, 127, 129, 130, 142, 146, 155, 162, 169, 180, 185, 186, 200, 212, 217, 224, 237, 263, 271, 306, 309, 325, 342, 347, 370, 373], "simpleaxi": [3, 4, 11, 23, 127, 131, 142, 155, 180, 187, 200], "rightaxi": [3, 4, 11, 127, 131, 155, 180, 187], "simpleraxi": [3, 4, 11, 127, 131, 155, 180, 187], "simplerright": [3, 4, 11, 127, 131, 155, 180, 187], "noaxi": [3, 4, 11, 127, 131, 155, 180, 187], "nicebp": [3, 4, 11, 127, 131, 155, 180, 187], "colored_boxplot": [3, 4, 11, 127, 131, 155, 180, 187], "nicei": [3, 4, 11, 127, 131, 155, 180, 187], "nicex": [3, 4, 11, 127, 131, 155, 180, 187], "nicexi": [3, 4, 11, 127, 131, 155, 180, 187], "positivex": [3, 4, 11, 127, 131, 155, 180, 187], "positivei": [3, 4, 11, 127, 131, 155, 180, 187], "positivexi": [3, 4, 11, 127, 131, 155, 180, 187], "xylim": [3, 4, 11, 127, 131, 155, 180, 187], "noclip": [3, 4, 11, 127, 131, 155, 180, 187], "notick": [3, 4, 11, 127, 131, 155, 180, 187], "nox": [3, 4, 11, 127, 131, 155, 180, 187], "noi": [3, 4, 11, 127, 131, 155, 180, 187], "noxyax": [3, 4, 11, 127, 131, 155, 180, 187], "noxlabel": [3, 4, 11, 127, 131, 155, 180, 187], "noylabel": [3, 4, 11, 127, 131, 155, 180, 187], "nolabel": [3, 4, 11, 127, 131, 155, 180, 187], "righti": [3, 4, 11, 127, 131, 155, 180, 187], "uniti": [3, 4, 11, 127, 131, 155, 180, 187], "unitx": [3, 4, 11, 127, 131, 155, 180, 187], "force_aspect": [3, 4, 11, 23, 127, 131, 142, 155, 180, 187, 200], "get_aspect": [3, 4, 11, 127, 131, 155, 180, 187], "match_image_aspect": [3, 4, 11, 127, 131, 155, 180, 187], "unitax": [3, 4, 11, 127, 131, 155, 180, 187], "adjustmap": [3, 4, 11, 127, 131, 155, 180, 187], "get_ax_s": [3, 4, 11, 127, 131, 155, 180, 187], "get_ax_pixel": [3, 4, 11, 127, 131, 155, 180, 187], "get_ax_pixel_ratio": [3, 4, 11, 127, 131, 155, 180, 187], "pixels_to_xunit": [3, 4, 11, 127, 131, 155, 180, 187], "yunits_to_pixel": [3, 4, 11, 127, 131, 155, 180, 187], "xunits_to_pixel": [3, 4, 11, 127, 131, 155, 180, 187], "pixels_to_yunit": [3, 4, 11, 127, 131, 155, 180, 187], "pixels_to_xfigureunit": [3, 4, 11, 127, 131, 155, 180, 187], "pixels_to_yfigureunit": [3, 4, 11, 127, 131, 155, 180, 187], "xfigureunits_to_pixel": [3, 4, 11, 127, 131, 155, 180, 187], "yfigureunits_to_pixel": [3, 4, 11, 127, 131, 155, 180, 187], "px2x": [3, 4, 11, 127, 131, 155, 180, 187], "px2y": [3, 4, 11, 127, 131, 155, 180, 187], "adjust_ylabel_spac": [3, 4, 11, 127, 131, 155, 180, 187], "adjust_xlabel_spac": [3, 4, 11, 127, 131, 155, 180, 187], "get_bbox": [3, 4, 11, 127, 131, 155, 180, 187], "nudge_axis_y_pixel": [3, 4, 11, 127, 131, 155, 180, 187], "adjust_axis_height_pixel": [3, 4, 11, 127, 131, 155, 180, 187], "nudge_axis_i": [3, 4, 11, 127, 131, 155, 180, 187], "nudge_axis_x": [3, 4, 11, 127, 131, 155, 180, 187], "expand_axis_x": [3, 4, 11, 127, 131, 155, 180, 187], "expand_axis_i": [3, 4, 11, 127, 131, 155, 180, 187], "nudge_axis_baselin": [3, 4, 11, 127, 131, 155, 180, 187], "nudge_axis_left": [3, 4, 11, 127, 131, 155, 180, 187], "zoombox": [3, 4, 11, 127, 131, 155, 180, 187], "fudgex": [3, 4, 11, 127, 131, 155, 180, 187], "fudgei": [3, 4, 11, 127, 131, 155, 180, 187], "fudgexi": [3, 4, 11, 127, 131, 155, 180, 187], "shade_edg": [3, 4, 11, 127, 131, 155, 180, 187], "ybartext": [3, 4, 11, 127, 131, 155, 180, 187], "xbartext": [3, 4, 11, 127, 131, 155, 180, 187], "nice_legend": [3, 4, 11, 127, 131, 155, 180, 187], "right_legend": [3, 4, 11, 127, 131, 155, 180, 187], "left_legend": [3, 4, 11, 127, 131, 155, 180, 187], "base_legend": [3, 4, 11, 127, 131, 155, 180, 187], "rangeto": [3, 4, 11, 127, 131, 155, 180, 187], "rangeov": [3, 4, 11, 127, 131, 155, 180, 187], "cleartop": [3, 4, 11, 127, 131, 155, 180, 187], "plotcwt": [3, 4, 11, 127, 131, 155, 180, 187], "plotwtphas": [3, 4, 11, 127, 131, 155, 180, 187], "wtpshow": [3, 4, 11, 127, 131, 155, 180, 187], "plotwtphasefig": [3, 4, 11, 127, 131, 155, 180, 187], "domask": [3, 4, 11, 127, 131, 155, 180, 187], "fsize": [3, 4, 11, 127, 131, 155, 180, 187], "handlersquar": [3, 4, 11, 127, 131, 155, 180, 187], "plot_complex": [3, 4, 11, 127, 131, 155, 180, 187], "animate_complex": [3, 4, 11, 127, 131, 155, 180, 187], "good_colorbar": [3, 4, 11, 127, 131, 155, 180, 187], "complex_axi": [3, 4, 11, 127, 131, 155, 180, 187], "subfigurelabel": [3, 4, 11, 127, 131, 155, 180, 187], "sigbar": [3, 4, 11, 127, 131, 155, 180, 187], "hsigbar": [3, 4, 11, 127, 131, 155, 180, 187], "savefigur": [3, 4, 11, 127, 131, 155, 180, 187], "clean_y_rang": [3, 4, 11, 127, 131, 155, 180, 187], "round_to_precis": [3, 4, 11, 127, 131, 155, 180, 187], "ceil_to_precis": [3, 4, 11, 127, 131, 155, 180, 187], "floor_to_precis": [3, 4, 11, 127, 131, 155, 180, 187], "expand_y_rang": [3, 4, 11, 127, 131, 155, 180, 187], "gaussian2d_covellips": [3, 4, 11, 127, 131, 155, 180, 187], "stderrplot": [3, 4, 11, 127, 131, 155, 180, 187], "yscalebar": [3, 4, 11, 127, 131, 155, 180, 187], "xscalebar": [3, 4, 11, 127, 131, 155, 180, 187], "addspik": [3, 4, 11, 127, 131, 155, 180, 187], "unit_crosshair": [3, 4, 11, 127, 131, 155, 180, 187], "covariance_crosshair": [3, 4, 11, 127, 131, 155, 180, 187], "draw_circl": [3, 4, 11, 127, 131, 155, 180, 187], "simple_arrow": [3, 4, 11, 127, 131, 155, 180, 187], "inhibition_arrow": [3, 4, 11, 127, 131, 155, 180, 187], "figurebox": [3, 4, 11, 127, 131, 155, 180, 187], "more_xtick": [3, 4, 11, 127, 131, 155, 180, 187], "more_ytick": [3, 4, 11, 127, 131, 155, 180, 187], "border_width": [3, 4, 11, 127, 131, 155, 180, 187], "broken_step": [3, 4, 11, 127, 131, 155, 180, 187], "label": [3, 4, 11, 25, 82, 96, 127, 131, 155, 180, 187, 212, 276, 308, 325, 372], "flathist": [3, 4, 11, 127, 131, 155, 180, 187], "barcompar": [3, 4, 11, 127, 131, 155, 180, 187], "shellmean": [3, 4, 11, 127, 131, 155, 180, 187], "trendlin": [3, 4, 11, 127, 131, 155, 180, 187], "shellplot": [3, 4, 11, 127, 131, 155, 180, 187], "arrow_between": [3, 4, 11, 127, 131, 155, 180, 187], "splitz": [3, 4, 11, 127, 131, 155, 180, 187], "plotz": [3, 4, 11, 127, 131, 155, 180, 187], "save_limit": [3, 4, 11, 127, 131, 155, 180, 187], "restore_limit": [3, 4, 11, 127, 131, 155, 180, 187], "mock_legend": [3, 4, 11, 127, 131, 155, 180, 187], "xtickpad": [3, 4, 11, 127, 131, 155, 180, 187], "ytickpad": [3, 4, 11, 127, 131, 155, 180, 187], "xticklen": [3, 4, 11, 127, 131, 155, 180, 187], "yticklen": [3, 4, 11, 127, 131, 155, 180, 187], "xin": [3, 4, 11, 88, 127, 131, 155, 180, 187, 294, 359], "yin": [3, 4, 11, 127, 131, 155, 180, 187], "lighten": [3, 4, 11, 127, 131, 155, 180, 187], "darken": [3, 4, 11, 127, 131, 155, 180, 187], "axvstrip": [3, 4, 11, 127, 131, 155, 180, 187], "widths_to_edg": [3, 4, 11, 127, 131, 155, 180, 187], "center": [3, 4, 11, 24, 25, 59, 68, 71, 73, 82, 84, 88, 127, 131, 143, 155, 180, 187, 201, 212, 247, 260, 263, 265, 276, 281, 294, 325, 339, 342, 343, 355, 359], "widths_to_cent": [3, 4, 11, 127, 131, 155, 180, 187], "axvband": [3, 4, 11, 127, 131, 155, 180, 187], "zerohlin": [3, 4, 11, 127, 131, 155, 180, 187], "zerovlin": [3, 4, 11, 127, 131, 155, 180, 187], "boxplot_signific": [3, 4, 11, 127, 131, 155, 180, 187], "pikeplot": [3, 4, 11, 127, 131, 155, 180, 187], "pygam": [3, 4, 127, 155, 180], "enable_vsync": [3, 4, 12, 127, 132, 155, 180, 188], "ztransform_plot_help": [3, 4, 155, 180], "cach": [3, 14, 16, 17, 18, 19, 25, 63, 106, 133, 135, 137, 138, 155, 191, 193, 194, 195, 196, 212, 253, 324, 325], "function_hash_with_subroutin": [3, 14, 15, 133, 134, 155, 191, 192], "get_sourc": [3, 14, 15, 133, 134, 155, 191, 192], "function_hash_no_subroutin": [3, 14, 15, 133, 134, 155, 191, 192], "base64hash": [3, 14, 15, 133, 134, 155, 191, 192], "base64hash2byt": [3, 14, 15, 133, 134, 155, 191, 192], "function_signatur": [3, 14, 15, 133, 134, 155, 191, 192], "signature_to_file_str": [3, 14, 15, 133, 134, 155, 191, 192], "file_string_to_signatur": [3, 14, 15, 133, 134, 155, 191, 192], "human_encod": [3, 14, 15, 133, 134, 155, 191, 192], "human_decod": [3, 14, 15, 133, 134, 155, 191, 192], "get_cache_path": [3, 14, 15, 133, 134, 155, 191, 192], "locate_cach": [3, 14, 15, 133, 134, 155, 191, 192], "validate_for_matfil": [3, 14, 15, 133, 134, 155, 191, 192], "validate_for_numpi": [3, 14, 15, 133, 134, 155, 191, 192], "read_cache_entri": [3, 14, 15, 133, 134, 155, 191, 192], "disk_cach": [3, 14, 15, 133, 134, 155, 191, 192], "hierarchical_cach": [3, 14, 15, 133, 134, 155, 191, 192], "closur": [3, 14, 133, 155, 191], "is_immut": [3, 14, 16, 133, 135, 155, 191, 193], "is_probably_saf": [3, 14, 16, 133, 135, 155, 191, 193], "csv": [3, 14, 16, 133, 135, 155, 191, 193], "inspect_function_closur": [3, 14, 16, 133, 135, 155, 191, 193], "verify_function_closur": [3, 14, 16, 133, 135, 155, 191, 193], "get_subroutin": [3, 14, 16, 133, 135, 155, 191, 193], "filenam": [3, 14, 15, 46, 125, 133, 134, 155, 191, 192, 233], "validate_argument_signatur": [3, 14, 17, 133, 137, 155, 191, 194], "is_dangerous_filenam": [3, 14, 17, 133, 137, 155, 191, 194], "check_filenam": [3, 14, 17, 133, 137, 155, 191, 194], "initialize_system_cach": [3, 14, 133, 155, 191], "purge_ram_cach": [3, 14, 18, 133, 138, 155, 191, 195], "purge_ssd_cach": [3, 14, 18, 133, 138, 155, 191, 195], "du": [3, 14, 18, 49, 133, 138, 145, 155, 191, 195, 236], "reset_ramdisk": [3, 14, 18, 133, 138, 155, 191, 195], "launch_cache_synchron": [3, 14, 18, 133, 138, 155, 191, 195], "initialize_cach": [3, 14, 18, 133, 138, 155, 191, 195], "cache_test": [3, 14, 18, 133, 138, 155, 191, 195], "ndecor": [3, 14, 18, 138, 155, 191, 195], "listit": [3, 14, 19, 155, 191, 196], "tupleit": [3, 14, 19, 155, 191, 196], "sanit": [3, 14, 19, 155, 191, 196], "summarize_funct": [3, 14, 19, 155, 191, 196], "argument_signatur": [3, 14, 15, 19, 134, 155, 191, 192, 196], "print_signatur": [3, 14, 19, 155, 191, 196], "time": [3, 11, 14, 15, 19, 20, 24, 25, 46, 49, 50, 59, 62, 63, 64, 66, 68, 70, 71, 73, 75, 80, 81, 82, 83, 84, 88, 90, 93, 95, 97, 98, 125, 131, 134, 139, 143, 145, 146, 155, 187, 191, 192, 196, 197, 201, 212, 233, 236, 237, 247, 251, 253, 254, 257, 260, 262, 263, 265, 267, 274, 275, 276, 280, 281, 294, 298, 304, 306, 309, 316, 325, 339, 341, 342, 343, 344, 349, 350, 354, 355, 359, 362, 368, 370, 373], "clear_memo": [3, 14, 19, 155, 191, 196], "memoiz": [3, 14, 15, 18, 19, 41, 120, 134, 138, 155, 191, 192, 195, 196, 228], "unwrap": [3, 14, 19, 59, 75, 155, 191, 196, 247, 267, 344], "parallel": [3, 14, 43, 103, 122, 133, 155, 191, 230, 321], "parmap": [3, 14, 20, 133, 139, 155, 191, 197], "pararraymap": [3, 14, 20, 133, 139, 155, 191, 197], "parmap_dict": [3, 14, 20, 133, 139, 155, 191, 197], "function_fingerprint": [3, 14, 20, 133, 139, 155, 191, 197], "eval_from_cach": [3, 14, 20, 133, 139, 155, 191, 197], "parallel_indirect_wrapp": [3, 14, 20, 133, 139, 155, 191, 197], "parallel_cached_wrapp": [3, 14, 20, 133, 139, 155, 191, 197], "parimap": [3, 14, 20, 133, 139, 155, 191, 197], "close_pool": [3, 14, 20, 133, 139, 155, 191, 197], "reset_pool": [3, 14, 20, 133, 139, 155, 191, 197], "parallel_error_handl": [3, 14, 20, 133, 139, 155, 191, 197], "argument": [3, 11, 15, 16, 17, 19, 20, 21, 25, 36, 40, 59, 62, 78, 88, 89, 106, 115, 119, 131, 134, 135, 137, 139, 140, 155, 187, 192, 193, 194, 196, 197, 198, 212, 223, 227, 247, 251, 271, 294, 296, 324, 325, 327, 337, 347, 359], "issquar": [3, 21, 22, 140, 141, 155, 198, 199], "iscolumn": [3, 21, 22, 140, 141, 155, 198, 199], "isrow": [3, 21, 22, 140, 141, 155, 198, 199], "asrow": [3, 21, 22, 140, 141, 155, 198, 199], "ascolumn": [3, 21, 22, 140, 141, 155, 198, 199], "assquar": [3, 21, 22, 140, 141, 155, 198, 199], "assertsquar": [3, 21, 22, 140, 141, 155, 198, 199], "assertcolumn": [3, 21, 22, 140, 141, 155, 198, 199], "assertrow": [3, 21, 22, 140, 141, 155, 198, 199], "assertvector": [3, 21, 22, 140, 141, 155, 198, 199], "asvector": [3, 21, 22, 140, 141, 155, 198, 199], "scalar": [3, 5, 11, 21, 22, 23, 25, 36, 64, 82, 83, 84, 87, 88, 89, 96, 100, 103, 107, 115, 128, 131, 140, 141, 142, 155, 181, 187, 198, 199, 200, 212, 223, 254, 276, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 308, 318, 321, 325, 354, 355, 359, 372], "assertfinit": [3, 21, 22, 140, 141, 155, 198, 199], "assertr": [3, 21, 22, 140, 141, 155, 198, 199], "assertfiniter": [3, 21, 22, 140, 141, 155, 198, 199], "assertshap": [3, 21, 22, 140, 141, 155, 198, 199], "matrix": [3, 11, 21, 24, 25, 30, 31, 36, 37, 46, 59, 63, 75, 82, 83, 86, 87, 88, 90, 109, 110, 115, 116, 125, 131, 140, 143, 155, 162, 163, 169, 187, 198, 201, 212, 217, 218, 223, 224, 233, 247, 253, 267, 276, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 325, 344, 354, 358, 359, 362], "triu_el": [3, 21, 23, 140, 142, 155, 198, 200], "tril_el": [3, 21, 23, 140, 142, 155, 198, 200], "column": [3, 21, 23, 49, 68, 71, 88, 103, 140, 142, 145, 155, 198, 200, 236, 260, 263, 294, 321, 339, 342, 359], "row": [3, 21, 23, 25, 36, 40, 68, 71, 78, 115, 119, 140, 142, 155, 198, 200, 212, 223, 227, 260, 263, 271, 325, 339, 342, 347], "rcond": [3, 21, 23, 140, 142, 155, 198, 200], "check_finite_r": [3, 21, 23, 140, 142, 155, 198, 200], "check_covmat": [3, 21, 23, 140, 142, 155, 198, 200], "check_covmat_fast": [3, 21, 23, 140, 142, 155, 198, 200], "real_eig": [3, 21, 23, 140, 142, 155, 198, 200], "psd_eig": [3, 21, 23, 140, 142, 155, 198, 200], "logdet": [3, 21, 23, 140, 142, 155, 198, 200], "solt": [3, 21, 23, 140, 142, 155, 198, 200], "rsolt": [3, 21, 23, 140, 142, 155, 198, 200], "rsolv": [3, 21, 23, 140, 142, 155, 198, 200], "qf": [3, 21, 23, 140, 142, 155, 198, 200], "abserr": [3, 21, 23, 140, 142, 155, 198, 200], "errmx": [3, 21, 23, 140, 142, 155, 198, 200], "cholupd": [3, 21, 23, 140, 142, 155, 198, 200], "cholupdate_ey": [3, 21, 23, 140, 142, 155, 198, 200], "cartesian_product": [3, 21, 23, 140, 142, 155, 198, 200], "nearpdhigham": [3, 21, 23, 140, 142, 155, 198, 200], "nearpsdrebonatojackel": [3, 21, 23, 140, 142, 155, 198, 200], "cinv": [3, 21, 23, 140, 142, 155, 198, 200], "csolv": [3, 21, 23, 140, 142, 155, 198, 200], "wheremax": [3, 21, 23, 140, 142, 155, 198, 200], "wheremin": [3, 21, 23, 140, 142, 155, 198, 200], "reglstsq": [3, 21, 23, 140, 142, 155, 198, 200], "ldistanc": [3, 21, 23, 140, 142, 155, 198, 200], "llasso": [3, 21, 23, 140, 142, 155, 198, 200], "rmatrix": [3, 21, 23, 140, 142, 155, 198, 200], "ldiv": [3, 21, 23, 30, 35, 36, 109, 114, 115, 140, 142, 155, 198, 200, 217, 222, 223], "rdiv": [3, 21, 23, 140, 142, 155, 198, 200], "autopredict": [3, 21, 23, 140, 142, 155, 198, 200], "kronsum": [3, 21, 23, 140, 142, 155, 198, 200], "top_v": [3, 21, 23, 140, 142, 155, 198, 200], "normedcovari": [3, 21, 23, 140, 142, 155, 198, 200], "maxeig": [3, 21, 23, 140, 142, 155, 198, 200], "selector_matrix": [3, 21, 23, 140, 142, 155, 198, 200], "laplace_kernel": [3, 21, 23, 67, 73, 140, 142, 155, 198, 200, 259, 265, 338, 343], "match_covari": [3, 21, 23, 140, 142, 155, 198, 200], "oper": [3, 21, 23, 36, 40, 41, 59, 75, 82, 83, 90, 106, 115, 119, 120, 140, 142, 155, 198, 200, 223, 227, 228, 247, 267, 276, 280, 298, 324, 344, 354, 362], "adjacency1d": [3, 21, 24, 140, 143, 155, 198, 201], "laplacian1d_circular": [3, 21, 24, 140, 143, 155, 198, 201], "adjacency2d": [3, 21, 24, 140, 143, 155, 198, 201], "laplacian2d": [3, 21, 24, 140, 143, 155, 198, 201], "adjacency2d_circular": [3, 21, 24, 140, 143, 155, 198, 201], "adjacency2d_rot": [3, 21, 24, 140, 143, 155, 198, 201], "laplacian1d": [3, 21, 24, 140, 143, 155, 198, 201], "laplacianft1d": [3, 21, 24, 140, 143, 155, 198, 201], "wienerft1d": [3, 21, 24, 140, 143, 155, 198, 201], "diffuseft1d": [3, 21, 24, 140, 143, 155, 198, 201], "flatcov": [3, 21, 24, 140, 143, 155, 198, 201], "delta": [3, 21, 24, 64, 76, 88, 96, 140, 143, 155, 198, 201, 254, 268, 294, 308, 359, 372], "differenti": [3, 21, 24, 50, 59, 65, 68, 71, 87, 140, 143, 146, 155, 198, 201, 237, 247, 256, 260, 263, 285, 286, 287, 288, 289, 290, 291, 292, 293, 339, 342], "integr": [3, 21, 24, 50, 73, 85, 87, 88, 90, 92, 140, 143, 146, 155, 198, 201, 237, 265, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 303, 343, 356, 359, 362, 367], "covfrom": [3, 21, 24, 140, 143, 155, 198, 201], "oucov": [3, 21, 24, 140, 143, 155, 198, 201], "gaussian1dbluroper": [3, 21, 24, 140, 143, 155, 198, 201], "circular1dbluroper": [3, 21, 24, 140, 143, 155, 198, 201], "separable_guassian_blur": [3, 21, 24, 140, 143, 155, 198, 201], "gaussian2dbluroper": [3, 21, 24, 140, 143, 155, 198, 201], "cosine_kernel": [3, 21, 24, 67, 73, 82, 88, 140, 143, 155, 198, 201, 259, 265, 276, 294, 338, 343, 359], "log_cosine_basi": [3, 21, 24, 67, 73, 82, 88, 140, 143, 155, 198, 201, 259, 265, 276, 294, 338, 343, 359], "make_cosine_basi": [3, 21, 24, 67, 73, 82, 88, 140, 143, 155, 198, 201, 259, 265, 276, 294, 338, 343, 359], "encod": [3, 15, 26, 59, 68, 76, 134, 155, 192, 213, 247, 260, 268, 339], "gpu": [3, 26, 155, 213], "opto": [3, 26, 155, 213], "coher": [3, 59, 62, 63, 68, 75, 83, 155, 247, 251, 253, 260, 267, 280, 327, 339, 344, 354], "conv": [3, 59, 155, 247, 327], "reflect2d": [3, 59, 61, 155, 247, 249], "reflect2d_1": [3, 59, 61, 155, 247, 249], "mirror2d": [3, 59, 61, 67, 71, 155, 247, 249, 259, 263, 338, 342], "convolve2dct": [3, 59, 61, 155, 247, 249], "separable2d": [3, 59, 61, 155, 247, 249], "gausskern2d": [3, 59, 61, 155, 247, 249], "gausskern1d": [3, 59, 61, 155, 247, 249], "morlet": [3, 59, 155, 247, 327], "normalized_morlet": [3, 59, 62, 155, 247, 251], "prepare_wavelet_fft_basi": [3, 59, 62, 155, 247, 251], "fft_cwt": [3, 59, 62, 155, 247, 251], "logfreq": [3, 59, 62, 155, 247, 251], "prepare_wavelet_fft_basis_logspac": [3, 59, 62, 155, 247, 251], "population_synchrony_spectrum": [3, 59, 62, 155, 247, 251], "fft_cwt_transpos": [3, 59, 62, 155, 247, 251], "fft_cwt_transposed_logspac": [3, 59, 62, 155, 247, 251], "multitap": [3, 59, 64, 155, 247, 254, 327], "dpss_cach": [3, 59, 63, 155, 247, 253], "multitaper_spectrum": [3, 59, 63, 155, 247, 253], "multitaper_squared_spectrum": [3, 59, 63, 155, 247, 253], "sliding_multitaper_spectrum": [3, 59, 63, 155, 247, 253], "multitaper_population_eigencoher": [3, 59, 63, 155, 247, 253], "ppc": [3, 59, 155, 247, 327], "phase_random": [3, 59, 64, 155, 247, 254], "fftppc_bias": [3, 59, 64, 155, 247, 254], "fftppc": [3, 59, 64, 155, 247, 254], "fftppc_biased_multitap": [3, 59, 64, 155, 247, 254], "fftppc_multitap": [3, 59, 64, 155, 247, 254], "discard_spikes_closer_than_delta": [3, 59, 64, 155, 247, 254], "pairwise_phase_consist": [3, 59, 64, 155, 247, 254], "estimate_bias_in_uncorrected_ppc": [3, 59, 64, 155, 247, 254], "phase_randomized_bias_correct": [3, 59, 64, 155, 247, 254], "ppc_chance_level": [3, 59, 64, 155, 247, 254], "ppc_phase_randomize_chance_level_sampl": [3, 59, 64, 155, 247, 254], "savitskygolai": [3, 59, 155, 247, 327], "sgord": [3, 59, 65, 155, 247, 256], "sgkern": [3, 59, 65, 155, 247, 256], "sgkernv": [3, 59, 65, 155, 247, 256], "sgkerna": [3, 59, 65, 155, 247, 256], "sgkernj": [3, 59, 65, 155, 247, 256], "sgfilt": [3, 59, 65, 155, 247, 256], "sgfiltv": [3, 59, 65, 155, 247, 256], "sgfilta": [3, 59, 65, 155, 247, 256], "sgfiltj": [3, 59, 65, 155, 247, 256], "sgsmooth": [3, 59, 65, 155, 247, 256], "sgdifferenti": [3, 59, 65, 155, 247, 256], "sgacceler": [3, 59, 65, 155, 247, 256], "sgjerk": [3, 59, 65, 155, 247, 256], "sde": [3, 59, 155, 247], "sample_wiener_process": [3, 59, 66, 155, 247, 257], "sample_ou_process": [3, 59, 66, 155, 247, 257], "geometric_window": [3, 59, 155, 247], "gaussian_kernel": [3, 59, 155, 247], "gaussian_smooth": [3, 59, 155, 247], "circular_gaussian_smooth": [3, 59, 155, 247], "circular_gaussian_smooth_2d": [3, 59, 155, 247], "linear_cosine_basi": [3, 59, 155, 247], "circular_cosine_basi": [3, 59, 155, 247], "unitscal": [3, 59, 155, 247], "topercentil": [3, 59, 155, 247], "local_maxima": [3, 59, 155, 247], "local_minima": [3, 59, 155, 247], "amp": [3, 59, 69, 155, 247, 261, 340], "get_snip": [3, 59, 155, 247], "triggered_averag": [3, 59, 155, 247], "get_triggered_stat": [3, 59, 155, 247], "padout": [3, 59, 155, 247], "padin": [3, 59, 155, 247], "nonnegative_bandpass_filt": [3, 59, 155, 247], "pad_sign": [3, 59, 155, 247], "bandpass_filt": [3, 59, 155, 247], "box_filt": [3, 59, 155, 247], "median_filt": [3, 59, 155, 247], "percentile_filt": [3, 59, 155, 247], "variance_filt": [3, 59, 155, 247], "rewrap": [3, 59, 155, 247], "pdiff": [3, 59, 155, 247], "pghilbert": [3, 59, 155, 247], "fudge_deriv": [3, 59, 155, 247], "ifreq": [3, 59, 155, 247], "ang": [3, 59, 155, 247], "randband": [3, 59, 155, 247], "arenear": [3, 59, 155, 247], "aresaf": [3, 59, 155, 247], "get_edg": [3, 59, 155, 247], "set_edg": [3, 59, 155, 247], "remove_gap": [3, 59, 155, 247], "remove_short": [3, 59, 155, 247], "phase_rot": [3, 59, 155, 247], "fm_mod": [3, 59, 155, 247], "piec": [3, 25, 59, 155, 212, 247, 325], "stats_block": [3, 59, 155, 247], "mean_block": [3, 59, 155, 247], "var_block": [3, 59, 155, 247], "median_block": [3, 59, 155, 247], "phase_randomize_from_amplitud": [3, 59, 155, 247], "estimate_pad": [3, 59, 155, 247], "lowpass_filt": [3, 59, 155, 247], "highpass_filt": [3, 59, 155, 247], "fdiff": [3, 59, 155, 247], "interpolate_nan": [3, 59, 155, 247], "interpolate_nan_quadrat": [3, 59, 155, 247], "killspik": [3, 59, 155, 247], "peak_within": [3, 59, 155, 247], "local_peak_within": [3, 59, 155, 247], "zeromean": [3, 59, 155, 247], "zscore": [3, 59, 106, 155, 247, 324], "gaussian": [3, 5, 11, 24, 25, 59, 61, 71, 73, 82, 83, 86, 90, 96, 100, 107, 128, 131, 143, 155, 181, 187, 201, 212, 247, 249, 263, 265, 276, 280, 284, 298, 308, 318, 325, 342, 343, 354, 358, 362, 372], "deltaovermean": [3, 59, 155, 247], "unit_length": [3, 59, 155, 247], "sign_preserving_amplitude_demodul": [3, 59, 155, 247], "autocorrel": [3, 59, 64, 83, 155, 247, 254, 280, 354], "upsampl": [3, 59, 68, 155, 247, 260, 339], "linfilt": [3, 59, 155, 247], "span": [3, 11, 24, 59, 73, 80, 82, 88, 131, 143, 155, 187, 201, 247, 265, 274, 276, 294, 343, 349, 359], "make_lag": [3, 59, 155, 247], "zgrid": [3, 59, 155, 247], "nice_interp": [3, 59, 155, 247], "fftacorr1d": [3, 59, 155, 247], "fftsta": [3, 59, 155, 247], "interpmax1d": [3, 59, 155, 247], "spaced_deriv": [3, 59, 155, 247], "drop_nonfinit": [3, 59, 155, 247], "split_into_group": [3, 59, 155, 247], "invert_uniform": [3, 59, 155, 247], "virtual_reference_line_noise_remov": [3, 59, 155, 247], "band_stop_line_noise_remov": [3, 59, 155, 247], "ndargmax": [3, 59, 155, 247], "complex_to_nan": [3, 59, 155, 247], "make_rebroadcast_slic": [3, 59, 155, 247], "arrai": [3, 5, 11, 12, 15, 23, 24, 25, 36, 40, 41, 49, 59, 61, 62, 64, 65, 67, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 100, 106, 107, 115, 119, 120, 128, 131, 132, 134, 142, 143, 145, 155, 181, 187, 188, 192, 200, 201, 212, 223, 227, 228, 236, 247, 249, 251, 254, 256, 259, 261, 262, 263, 265, 267, 268, 270, 271, 274, 275, 276, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 303, 305, 306, 309, 318, 324, 325, 338, 340, 341, 342, 343, 344, 346, 347, 349, 350, 354, 358, 359, 362, 363, 367, 369, 370, 373], "array_average_amplitud": [3, 67, 68, 155, 259, 260, 338, 339], "array_kuramoto": [3, 67, 68, 155, 259, 260, 338, 339], "array_synchroni": [3, 67, 68, 155, 259, 260, 338, 339], "array_kuramoto_standard_devi": [3, 67, 68, 155, 259, 260, 338, 339], "array_synchrony_standard_devi": [3, 67, 68, 155, 259, 260, 338, 339], "array_phase_gradi": [3, 67, 68, 155, 259, 260, 338, 339], "array_count_cent": [3, 67, 68, 155, 259, 260, 338, 339], "array_count_crit": [3, 67, 68, 155, 259, 260, 338, 339], "array_phasegradient_loc": [3, 67, 68, 155, 259, 260, 338, 339], "array_phasegradient_planar": [3, 67, 68, 155, 259, 260, 338, 339], "array_phasegradient_magnitude_sigma": [3, 67, 68, 155, 259, 260, 338, 339], "array_phasegradient_magnitude_cv": [3, 67, 68, 155, 259, 260, 338, 339], "array_phasegradient_pgd_threshold": [3, 67, 68, 155, 259, 260, 338, 339], "array_wavelength_pgd_threshold": [3, 67, 68, 155, 259, 260, 338, 339], "array_wavelength_local_pgd_threshold": [3, 67, 68, 155, 259, 260, 338, 339], "array_speed_pgd_threshold": [3, 67, 68, 155, 259, 260, 338, 339], "array_speed_loc": [3, 67, 68, 155, 259, 260, 338, 339], "array_wavelength_loc": [3, 67, 68, 155, 259, 260, 338, 339], "array_wavelength_planar": [3, 67, 68, 155, 259, 260, 338, 339], "array_synchrony_pgd": [3, 67, 68, 155, 259, 260, 338, 339], "array_synchrony_pgd_standard_devi": [3, 67, 68, 155, 259, 260, 338, 339], "array_kuramoto_pgd": [3, 67, 68, 155, 259, 260, 338, 339], "array_kuramoto_pgd_standard_devi": [3, 67, 68, 155, 259, 260, 338, 339], "trim_arrai": [3, 67, 68, 155, 259, 260, 338, 339], "trim_array_as_if": [3, 67, 68, 155, 259, 260, 338, 339], "pack_array_data": [3, 67, 68, 155, 259, 260, 338, 339], "dct": [3, 67, 155, 259, 338], "get_mask_antialias": [3, 67, 69, 155, 259, 261, 338, 340], "get_mask": [3, 67, 69, 155, 259, 261, 338, 340], "dct_cut": [3, 67, 69, 155, 259, 261, 338, 340], "outer_complex": [3, 67, 69, 155, 259, 261, 338, 340], "dct_cut_antialia": [3, 67, 69, 155, 259, 261, 338, 340], "dct_cut_downsampl": [3, 67, 69, 155, 259, 261, 338, 340], "dct_upsampl": [3, 67, 69, 155, 259, 261, 338, 340], "iterated_upsampl": [3, 67, 69, 155, 259, 261, 338, 340], "dct_upsample_notrim": [3, 67, 69, 155, 259, 261, 338, 340], "distanc": [3, 11, 23, 25, 46, 67, 71, 76, 97, 125, 131, 142, 155, 187, 200, 212, 233, 259, 263, 268, 309, 325, 338, 342, 373], "get_pair_dist": [3, 67, 70, 155, 259, 262, 338, 341], "distance_angular_devi": [3, 67, 70, 155, 259, 262, 338, 341], "get_averaged_angular_dist": [3, 67, 70, 155, 259, 262, 338, 341], "get_length_constant_tri": [3, 67, 70, 155, 259, 262, 338, 341], "get_average_synchrony_length_constant_parallel": [3, 67, 70, 155, 259, 262, 338, 341], "synchrony_length_constant_areas_summari": [3, 67, 70, 155, 259, 262, 338, 341], "fftzero": [3, 67, 69, 155, 259, 261, 338, 340], "plot_phase_gradi": [3, 67, 71, 155, 259, 263, 338, 342], "plot_phase_direct": [3, 67, 71, 155, 259, 263, 338, 342], "dphidx": [3, 67, 71, 155, 259, 263, 338, 342], "dphidi": [3, 67, 71, 155, 259, 263, 338, 342], "get_phase_gradient_as_complex": [3, 67, 71, 155, 259, 263, 338, 342], "getpeaks2d": [3, 67, 71, 155, 259, 263, 338, 342], "coalesc": [3, 67, 71, 78, 155, 259, 263, 271, 338, 342, 347], "coalesce_point": [3, 67, 71, 155, 259, 263, 338, 342], "find_critical_point": [3, 67, 71, 155, 259, 263, 338, 342], "plot_critical_point": [3, 67, 71, 155, 259, 263, 338, 342], "find_critical_potential_point": [3, 67, 71, 155, 259, 263, 338, 342], "grad": [3, 67, 71, 155, 259, 263, 338, 342], "quickgrad": [3, 67, 71, 155, 259, 263, 338, 342], "getp": [3, 67, 71, 155, 259, 263, 338, 342], "get_critical_spectra": [3, 67, 71, 155, 259, 263, 338, 342], "plot_critical_spectra": [3, 67, 71, 155, 259, 263, 338, 342], "cut_array_data": [3, 67, 71, 155, 259, 263, 338, 342], "geometri": [3, 67, 155, 259], "kernel": [3, 5, 23, 24, 30, 37, 39, 40, 41, 59, 61, 65, 67, 68, 86, 88, 109, 116, 118, 119, 120, 128, 142, 143, 155, 181, 200, 201, 217, 224, 226, 227, 228, 247, 249, 256, 259, 260, 284, 294, 338, 339, 358, 359], "laplacian": [3, 9, 23, 24, 67, 73, 129, 142, 143, 155, 185, 200, 201, 259, 265, 338, 343], "gaussian_2d_kernel": [3, 67, 73, 155, 259, 265, 338, 343], "absorbing_gaussian": [3, 67, 73, 155, 259, 265, 338, 343], "absorbing_laplacian": [3, 67, 73, 155, 259, 265, 338, 343], "magicsharp": [3, 67, 73, 155, 259, 265, 338, 343], "magickernel": [3, 67, 73, 155, 259, 265, 338, 343], "continuum_kernel": [3, 67, 73, 155, 259, 265, 338, 343], "log_spline_basi": [3, 67, 73, 155, 259, 265, 338, 343], "exponential_basi": [3, 67, 73, 155, 259, 265, 338, 343], "diffusion_basi": [3, 67, 73, 155, 259, 265, 338, 343], "iterative_orthogonalize_basi": [3, 67, 73, 155, 259, 265, 338, 343], "mask": [3, 5, 24, 67, 69, 128, 143, 155, 181, 201, 259, 261, 327, 340], "phase": [3, 11, 24, 59, 64, 67, 68, 69, 71, 73, 88, 131, 143, 155, 187, 201, 247, 254, 259, 260, 261, 263, 265, 294, 338, 339, 340, 342, 343, 359], "population_kuramoto": [3, 67, 75, 155, 259, 267, 338, 344], "population_synchroni": [3, 67, 75, 155, 259, 267, 338, 344], "population_polar_std": [3, 67, 75, 155, 259, 267, 338, 344], "population_average_amplitud": [3, 67, 75, 155, 259, 267, 338, 344], "population_signal_dispers": [3, 67, 75, 155, 259, 267, 338, 344], "population_signal_concentr": [3, 67, 75, 155, 259, 267, 338, 344], "population_signal_precis": [3, 67, 75, 155, 259, 267, 338, 344], "population_signal_phase_dispers": [3, 67, 75, 155, 259, 267, 338, 344], "population_signal_phase_std": [3, 67, 75, 155, 259, 267, 338, 344], "population_signal_amplitude_std": [3, 67, 75, 155, 259, 267, 338, 344], "population_signal_amplitude_dispers": [3, 67, 75, 155, 259, 267, 338, 344], "population_signal_phase_precis": [3, 67, 75, 155, 259, 267, 338, 344], "population_signal_amplitude_precis": [3, 67, 75, 155, 259, 267, 338, 344], "population_signal_descript": [3, 67, 75, 155, 259, 267, 338, 344], "population_synchrony_linear": [3, 67, 75, 155, 259, 267, 338, 344], "population_phase_coher": [3, 67, 75, 155, 259, 267, 338, 344], "analytic_signal_coher": [3, 67, 75, 155, 259, 267, 338, 344], "population_sliding_signal_coher": [3, 67, 75, 155, 259, 267, 338, 344], "sliding_population_signal_coher": [3, 67, 75, 155, 259, 267, 338, 344], "population_normalized_sliding_signal_coher": [3, 67, 75, 155, 259, 267, 338, 344], "population_phase_relative_sliding_kuramoto": [3, 67, 75, 155, 259, 267, 338, 344], "population_median_phase_veloc": [3, 67, 75, 155, 259, 267, 338, 344], "population_median_frequ": [3, 67, 75, 155, 259, 267, 338, 344], "point": [3, 11, 23, 25, 36, 59, 67, 68, 69, 71, 75, 77, 78, 80, 84, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 100, 103, 106, 107, 115, 131, 142, 155, 187, 200, 212, 223, 247, 259, 260, 261, 263, 267, 270, 271, 274, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 305, 306, 308, 309, 318, 321, 324, 325, 338, 339, 340, 342, 344, 346, 347, 349, 355, 356, 358, 359, 362, 369, 370, 372, 373], "p2c": [3, 67, 76, 98, 106, 155, 259, 268, 316, 324], "c2p": [3, 67, 76, 98, 106, 155, 259, 268, 316, 324], "to_xypoint": [3, 67, 76, 155, 259, 268], "closest": [3, 67, 76, 155, 259, 268], "pair_neighbor": [3, 67, 76, 155, 259, 268], "paired_dist": [3, 67, 76, 155, 259, 268], "interp_bin": [3, 67, 77, 155, 259, 270, 338, 346], "triangul": [3, 67, 155, 259, 338], "z2xy": [3, 67, 78, 155, 259, 271, 338, 347], "uniquerow": [3, 67, 78, 155, 259, 271, 338, 347], "trianglestoedg": [3, 67, 78, 155, 259, 271, 338, 347], "edgesnearbi": [3, 67, 78, 155, 259, 271, 338, 347], "plot_edg": [3, 67, 78, 155, 259, 271, 338, 347], "plot_triangl": [3, 67, 78, 155, 259, 271, 338, 347], "mergenearbi": [3, 67, 78, 155, 259, 271, 338, 347], "brute_force_local_2d_maxima": [3, 67, 155, 259, 338], "pp_xcorr": [3, 79, 80, 155, 273, 274, 349], "txcorr": [3, 79, 80, 155, 273, 274, 349], "pack_cross_correlation_matrix": [3, 79, 80, 155, 273, 274, 349], "cut_spik": [3, 79, 80, 155, 273, 274, 349], "times_to_rast": [3, 79, 80, 155, 273, 274, 349], "bin_spikes_rast": [3, 79, 80, 155, 273, 274, 349], "bin_spike_tim": [3, 79, 80, 155, 273, 274, 349], "waveform": [3, 79, 155, 273], "realign": [3, 79, 81, 155, 273, 275, 350], "getfwhm": [3, 79, 81, 155, 273, 275, 350], "getpvt": [3, 79, 81, 155, 273, 275, 350], "getwahp": [3, 79, 81, 155, 273, 275, 350], "getpt": [3, 79, 81, 155, 273, 275, 350], "getpthw": [3, 79, 81, 155, 273, 275, 350], "getphp": [3, 79, 81, 155, 273, 275, 350], "minmax": [3, 79, 81, 155, 273, 275, 350], "normalized_waveform": [3, 79, 81, 155, 273, 275, 350], "is_thin": [3, 79, 81, 155, 273, 275, 350], "is_thin_pvt": [3, 79, 81, 155, 273, 275, 350], "process": [3, 18, 20, 23, 24, 25, 39, 59, 62, 66, 69, 79, 80, 81, 88, 90, 95, 118, 138, 139, 142, 143, 155, 195, 197, 200, 201, 212, 226, 247, 251, 257, 261, 273, 274, 275, 294, 298, 306, 325, 327, 340, 349, 350, 359, 362, 370], "convolut": [3, 30, 37, 59, 61, 65, 73, 82, 86, 109, 116, 155, 162, 169, 217, 224, 247, 249, 256, 265, 276, 284, 343, 358], "ccor": [3, 82, 83, 155, 276, 280, 354], "ccm": [3, 82, 83, 155, 276, 280, 354], "blockccm": [3, 82, 83, 155, 276, 280, 354], "sta": [3, 59, 82, 83, 155, 247, 276, 280, 354], "blocksta": [3, 82, 83, 155, 276, 280, 354], "reconstruct": [3, 82, 83, 155, 276, 280, 354], "cspect": [3, 82, 83, 155, 276, 280, 354], "cspectm": [3, 82, 83, 155, 276, 280, 354], "spike_lfp_filt": [3, 82, 83, 155, 276, 280, 354], "spectreconstruct": [3, 82, 83, 155, 276, 280, 354], "create_spectral_model": [3, 82, 83, 155, 276, 280, 354], "construct_lowpass_oper": [3, 82, 83, 155, 276, 280, 354], "autocorrelation_bay": [3, 82, 83, 155, 276, 280, 354], "densiti": [3, 25, 49, 80, 82, 83, 86, 87, 90, 91, 95, 100, 107, 145, 155, 212, 236, 274, 276, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 306, 318, 325, 349, 354, 358, 362, 363, 370], "kdepeak": [3, 82, 84, 155, 276, 281, 355], "knn_1d_densiti": [3, 82, 84, 155, 276, 281, 355], "adaptive_density_grid": [3, 82, 84, 155, 276, 281, 355], "gridhist": [3, 82, 84, 155, 276, 281, 355], "distribut": [3, 18, 25, 40, 41, 59, 64, 68, 75, 82, 84, 86, 87, 90, 91, 94, 95, 100, 107, 119, 120, 138, 155, 195, 212, 227, 228, 247, 254, 260, 267, 276, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 305, 306, 318, 325, 339, 344, 355, 358, 362, 363, 369, 370], "poisson_logpdf": [3, 82, 85, 155, 276, 282, 356], "poisson_pdf": [3, 82, 85, 155, 276, 282, 356], "gaussian_logpdf": [3, 82, 85, 155, 276, 282, 356], "gaussian_pdf": [3, 82, 85, 155, 276, 282, 356], "explogpdf": [3, 82, 85, 155, 276, 282, 356], "sample_categor": [3, 82, 85, 155, 276, 282, 356], "fast_kd": [3, 82, 155, 276], "image_cov": [3, 82, 86, 155, 276, 284, 358], "gaussian_quadratur": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "gaussian_quadrature_logarithm": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_check": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_logpdf": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_pdf": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_sampl": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_multipli": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_multiply_c": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_divid": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_project": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_entropi": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_dkl": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_dkl_cp": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_condit": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_kalman": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_kalman_p_inversea": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_kalman_joint": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "mvg_kalman_joint_p": [3, 82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "glm": [3, 82, 155, 276], "glmpenaltypoisson": [3, 82, 88, 155, 276, 294, 359], "sexp": [3, 82, 88, 98, 100, 107, 155, 276, 294, 316, 318, 359], "sigmoid": [3, 82, 88, 98, 100, 107, 155, 276, 294, 316, 318, 359], "glmpenaltybernoulli": [3, 82, 88, 155, 276, 294, 359], "glmpenaltyl2": [3, 82, 88, 155, 276, 294, 359], "ppglmfit": [3, 82, 88, 155, 276, 294, 359], "fitglm": [3, 82, 88, 155, 276, 294, 359], "crossvalidatedauc": [3, 82, 88, 155, 276, 294, 359], "gradientglmfit": [3, 82, 88, 155, 276, 294, 359], "numeric_grad": [3, 82, 88, 155, 276, 294, 359], "numeric_hess": [3, 82, 88, 155, 276, 294, 359], "grid_search": [3, 82, 155, 276], "hmm": [3, 82, 155, 276], "poisson_parameter_guess": [3, 82, 90, 155, 276, 298, 362], "poisson_baum_welch": [3, 82, 90, 155, 276, 298, 362], "viterbi": [3, 82, 90, 155, 276, 298, 362], "viterbi_log": [3, 82, 90, 155, 276, 298, 362], "hasnan": [3, 82, 90, 155, 276, 298, 362], "poisson_viterbi_state_inf": [3, 82, 90, 155, 276, 298, 362], "forward_backward": [3, 82, 90, 155, 276, 298, 362], "jump": [3, 82, 90, 155, 276, 298, 362], "sampl": [3, 5, 11, 23, 24, 25, 36, 50, 59, 62, 63, 64, 65, 66, 68, 69, 73, 75, 80, 82, 83, 84, 86, 87, 88, 90, 91, 92, 96, 103, 115, 128, 131, 142, 143, 146, 155, 181, 187, 200, 201, 212, 223, 237, 247, 251, 253, 254, 256, 257, 260, 261, 265, 267, 274, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 303, 308, 321, 325, 339, 340, 343, 344, 349, 354, 355, 358, 359, 362, 363, 367, 372], "log_likelihood": [3, 82, 90, 155, 276, 298, 362], "baum_welch": [3, 82, 90, 155, 276, 298, 362], "forward_abstract": [3, 82, 90, 155, 276, 298, 362], "backward_abstract": [3, 82, 90, 155, 276, 298, 362], "forward_backward_abstract": [3, 82, 90, 155, 276, 298, 362], "diffusiongaussian": [3, 82, 90, 155, 276, 298, 362], "loggaussiancoxapproxim": [3, 82, 90, 155, 276, 298, 362], "loggaussiancoxmodel": [3, 82, 90, 155, 276, 298, 362], "gaussiancoxapproxim": [3, 82, 90, 155, 276, 298, 362], "gaussiancoxmodel": [3, 82, 90, 155, 276, 298, 362], "chisquarecoxapproxim": [3, 82, 90, 155, 276, 298, 362], "chisquarecoxmodel": [3, 82, 90, 155, 276, 298, 362], "bernoulliobservationapproxim": [3, 82, 90, 155, 276, 298, 362], "bernoulliobservationmodel": [3, 82, 90, 155, 276, 298, 362], "truncatedloggaussiancoxapproxim": [3, 82, 90, 155, 276, 298, 362], "truncatedloggaussiancoxmodel": [3, 82, 90, 155, 276, 298, 362], "mvgaussian": [3, 82, 90, 155, 276, 298, 362], "mvgupdat": [3, 82, 90, 155, 276, 298, 362], "lgcp_observation_minim": [3, 82, 90, 155, 276, 298, 362], "mvloggaussiancox": [3, 82, 90, 155, 276, 298, 362], "ougaussian": [3, 82, 90, 155, 276, 298, 362], "mvgouupdat": [3, 82, 90, 155, 276, 298, 362], "poissonobservationapproxim": [3, 82, 90, 155, 276, 298, 362], "poissonobservationmodel": [3, 82, 90, 155, 276, 298, 362], "truncatedpoissonobservationapproxim": [3, 82, 90, 155, 276, 298, 362], "truncatedpoissonobservationmodel": [3, 82, 90, 155, 276, 298, 362], "inform": [3, 11, 15, 19, 20, 23, 25, 39, 82, 93, 118, 131, 134, 139, 142, 155, 187, 192, 196, 197, 200, 212, 226, 276, 304, 325, 368], "dkl_discret": [3, 82, 91, 155, 276, 299, 363], "discrete_entropy_sampl": [3, 82, 91, 155, 276, 299, 363], "discrete_entropy_distribut": [3, 82, 91, 155, 276, 299, 363], "regularized_discrete_entropi": [3, 82, 91, 155, 276, 299, 363], "poisson_entropy_nat": [3, 82, 91, 155, 276, 299, 363], "mcint": [3, 82, 155, 276], "monte_carlo_expect": [3, 82, 92, 155, 276, 303, 367], "monte_carlo_mo": [3, 82, 92, 155, 276, 303, 367], "minim": [3, 23, 82, 88, 97, 142, 155, 200, 276, 294, 309, 359, 373], "failureerror": [3, 82, 93, 155, 276, 304, 368], "minimize_retri": [3, 82, 93, 155, 276, 304, 368], "mixtur": [3, 25, 82, 90, 155, 212, 276, 298, 325, 362], "two_class_poisson_mixture_model": [3, 82, 94, 155, 276, 305, 369], "modefind": [3, 82, 155, 276], "logmodeplot": [3, 82, 95, 155, 276, 306, 370], "logmod": [3, 82, 95, 155, 276, 306, 370], "peakfinder5": [3, 82, 95, 155, 276, 306, 370], "pvalu": [3, 11, 82, 131, 155, 187, 276], "benjamini_hochberg_positive_correl": [3, 82, 96, 155, 276, 308, 372], "correct_pvalues_positive_depend": [3, 82, 96, 155, 276, 308, 372], "correct_pvalu": [3, 82, 96, 155, 276, 308, 372], "bootstrap_statistic_two_sid": [3, 82, 96, 155, 276, 308, 372], "bootstrap_median": [3, 82, 96, 155, 276, 308, 372], "bootstrap_mean": [3, 82, 96, 155, 276, 308, 372], "bootstrap_compare_statistic_two_sid": [3, 82, 96, 155, 276, 308, 372], "bootstrap_compare_statistic_two_sided_parallel": [3, 82, 96, 155, 276, 308, 372], "bootstrap_compare_median": [3, 82, 96, 155, 276, 308, 372], "bootstrap_compare_mean": [3, 82, 96, 155, 276, 308, 372], "regress": [3, 82, 155, 276], "damped_cosin": [3, 82, 97, 155, 276, 309, 373], "weighted_least_squar": [3, 82, 97, 155, 276, 309, 373], "power_law": [3, 82, 97, 155, 276, 309, 373], "gaussian_funct": [3, 82, 97, 155, 276, 309, 373], "half_gaussian_funct": [3, 82, 97, 155, 276, 309, 373], "exponential_decai": [3, 82, 97, 155, 276, 309, 373], "robust_lin": [3, 82, 97, 155, 276, 309, 373], "nrmse": [3, 82, 155, 276], "weighted_avg_and_std": [3, 82, 155, 276], "partition_data": [3, 82, 155, 276], "partition_trials_for_crossvalid": [3, 82, 155, 276], "polar_error": [3, 82, 155, 276], "add_const": [3, 82, 155, 276], "trial_crossvalidated_least_squar": [3, 82, 155, 276], "partition_data_for_crossvalid": [3, 82, 155, 276], "block_shuffl": [3, 82, 155, 276], "crossvalidated_least_squar": [3, 82, 155, 276], "print_stat": [3, 82, 155, 276], "outlier": [3, 82, 155, 276], "reject_outli": [3, 82, 155, 276], "pca": [3, 82, 155, 276], "covari": [3, 11, 23, 24, 25, 36, 75, 82, 83, 86, 87, 88, 90, 115, 131, 142, 143, 155, 187, 200, 201, 212, 223, 267, 276, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 325, 344, 354, 358, 359, 362], "descript": [3, 15, 81, 82, 134, 155, 192, 275, 276, 350], "short": [3, 59, 62, 82, 88, 103, 155, 247, 251, 276, 294, 321, 359], "glmfit": [3, 82, 155, 276], "auc_to_g2": [3, 82, 155, 276], "fraction_explained_devi": [3, 82, 155, 276], "function": [3, 5, 11, 15, 16, 17, 18, 19, 20, 23, 24, 25, 30, 31, 36, 37, 39, 41, 43, 50, 59, 61, 63, 64, 66, 69, 70, 71, 73, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 98, 105, 106, 109, 110, 115, 116, 118, 120, 122, 128, 131, 134, 135, 137, 138, 139, 142, 143, 146, 155, 162, 163, 169, 181, 187, 192, 193, 194, 195, 196, 197, 200, 201, 212, 217, 218, 223, 224, 226, 228, 230, 237, 247, 249, 253, 254, 257, 261, 262, 263, 265, 267, 274, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 303, 304, 305, 308, 316, 323, 324, 325, 327, 337, 340, 341, 342, 343, 344, 349, 354, 355, 356, 358, 359, 362, 367, 368, 369, 372], "slog": [3, 98, 100, 107, 155, 316, 318], "inversesigmoid": [3, 98, 100, 107, 155, 316, 318], "dsigmoid": [3, 98, 100, 107, 155, 316, 318], "g": [3, 5, 15, 18, 25, 36, 41, 59, 82, 98, 100, 107, 115, 120, 128, 134, 138, 155, 181, 192, 195, 212, 223, 228, 247, 276, 316, 318, 325], "f1": [3, 98, 100, 107, 155, 316, 318], "f2": [3, 98, 100, 107, 155, 316, 318], "npdf": [3, 98, 100, 107, 155, 316, 318], "log_factori": [3, 98, 100, 107, 155, 316, 318], "getfftw": [3, 98, 155, 316], "ftwthr": [3, 98, 101, 108, 155, 316, 319], "hdfmat": [3, 98, 155, 316], "gethdfvalu": [3, 98, 102, 155, 316, 320], "gethdf": [3, 98, 102, 155, 316, 320], "hdf2dict": [3, 98, 102, 155, 316, 320], "printmathdf5": [3, 98, 102, 155, 316, 320], "recursive_printmathdf5": [3, 98, 102, 155, 316, 320], "string": [3, 5, 7, 11, 15, 17, 18, 19, 25, 36, 39, 40, 59, 71, 82, 84, 98, 102, 104, 105, 106, 115, 118, 119, 128, 131, 134, 137, 138, 155, 181, 183, 187, 192, 194, 195, 196, 212, 223, 226, 227, 247, 263, 276, 281, 316, 320, 322, 323, 324, 325, 342, 355], "hcat": [3, 98, 103, 155, 316, 321], "wordwrap": [3, 98, 103, 155, 316, 321], "incolumn": [3, 98, 103, 155, 316, 321], "percent": [3, 25, 82, 98, 103, 155, 212, 276, 316, 321, 325], "shortscientif": [3, 98, 103, 155, 316, 321], "eformat": [3, 98, 103, 155, 316, 321], "v2str": [3, 98, 103, 155, 316, 321], "v2str_long": [3, 98, 103, 155, 316, 321], "nicet": [3, 98, 103, 155, 316, 321], "isint": [3, 98, 103, 155, 316, 321], "system": [3, 15, 18, 20, 23, 25, 59, 90, 98, 134, 138, 139, 142, 155, 192, 195, 197, 200, 212, 247, 298, 316, 325, 362], "execfil": [3, 98, 104, 155, 316, 322], "query_yes_no": [3, 98, 104, 155, 316, 322], "current_milli_tim": [3, 98, 105, 155, 316, 323], "todai": [3, 98, 105, 155, 316, 323], "now": [3, 15, 18, 25, 90, 92, 98, 105, 134, 138, 155, 192, 195, 212, 298, 303, 316, 323, 325, 362, 367], "tic": [3, 98, 105, 155, 316, 323], "toc": [3, 98, 105, 155, 316, 323], "waitfor": [3, 98, 105, 155, 316, 323], "tool": [3, 20, 82, 98, 139, 155, 197, 276, 316], "varexist": [3, 98, 106, 155, 316, 324], "nowarn": [3, 98, 106, 155, 316, 324], "okwarn": [3, 98, 106, 155, 316, 324], "dowarn": [3, 98, 106, 155, 316, 324], "warn": [3, 15, 17, 18, 25, 64, 98, 106, 134, 137, 138, 155, 192, 194, 195, 212, 254, 316, 324, 325], "debug": [3, 19, 20, 23, 98, 106, 139, 142, 155, 196, 197, 200, 316, 324], "wait": [3, 25, 98, 105, 106, 155, 212, 316, 323, 324, 325, 327], "matlab": [3, 15, 17, 23, 25, 68, 96, 98, 102, 105, 106, 134, 137, 142, 155, 192, 194, 200, 212, 260, 308, 316, 320, 323, 324, 325, 339, 372], "zeroslik": [3, 98, 106, 155, 316, 324], "oneslik": [3, 98, 106, 155, 316, 324], "histori": [3, 98, 106, 155, 316, 324], "emitt": [3, 98, 106, 155, 316, 324], "piper": [3, 98, 106, 155, 316, 324], "global": [3, 15, 16, 20, 59, 81, 98, 104, 106, 134, 135, 139, 155, 192, 193, 197, 247, 275, 316, 322, 324, 350], "exist": [3, 15, 25, 40, 98, 106, 119, 134, 155, 192, 212, 227, 316, 324, 325], "metaloadmat": [3, 98, 106, 155, 316, 324], "find_all_extens": [3, 98, 106, 155, 316, 324], "lmap": [3, 98, 106, 155, 316, 324], "slist": [3, 98, 106, 155, 316, 324], "amap": [3, 98, 106, 155, 316, 324], "lap": [3, 98, 106, 155, 316, 324], "aap": [3, 98, 106, 155, 316, 324], "sl": [3, 98, 106, 155, 316, 324], "setinrang": [3, 98, 106, 155, 316, 324], "mapdict": [3, 98, 106, 155, 316, 324], "getdict": [3, 98, 106, 155, 316, 324], "ensure_dir": [3, 98, 106, 155, 316, 324], "getsiz": [3, 98, 106, 155, 316, 324], "savecontext": [3, 98, 106, 155, 316, 324], "clear": [3, 19, 98, 106, 155, 196, 316, 324], "restorecontext": [3, 98, 106, 155, 316, 324], "camel2underscor": [3, 98, 106, 155, 316, 324], "underscore2camel": [3, 98, 106, 155, 316, 324], "getvari": [3, 98, 106, 155, 316, 324], "arraymap": [3, 11, 68, 71, 98, 106, 131, 155, 187, 260, 263, 316, 324, 339, 342], "invert_permut": [3, 98, 106, 155, 316, 324], "find": [3, 23, 50, 59, 67, 69, 76, 82, 90, 95, 96, 98, 106, 142, 146, 155, 200, 237, 247, 259, 261, 268, 276, 298, 306, 308, 316, 324, 338, 340, 362, 370, 372], "ezip": [3, 98, 106, 155, 316, 324], "asiter": [3, 98, 106, 155, 316, 324], "stuff": [3, 10, 23, 98, 106, 130, 142, 155, 186, 200, 316, 324], "create_artist": [4, 11, 127, 131, 180, 187], "miscellan": [5, 128, 181], "relat": [5, 15, 23, 25, 50, 59, 61, 64, 73, 77, 80, 94, 128, 134, 142, 146, 181, 192, 200, 212, 237, 247, 249, 254, 265, 270, 274, 305, 325, 343, 346, 349, 369], "r": [5, 11, 23, 25, 40, 42, 67, 97, 119, 121, 128, 131, 142, 181, 187, 200, 212, 227, 229, 259, 309, 325, 338, 373], "b": [5, 11, 20, 23, 24, 25, 28, 29, 36, 40, 41, 43, 49, 59, 69, 73, 82, 83, 88, 90, 96, 97, 106, 115, 119, 120, 122, 128, 131, 139, 142, 143, 145, 181, 187, 197, 200, 201, 212, 215, 216, 223, 227, 228, 230, 236, 247, 261, 265, 276, 280, 294, 298, 308, 309, 324, 325, 340, 343, 354, 359, 362, 372, 373], "hexcod": [5, 128, 181], "h": [5, 10, 12, 23, 24, 25, 50, 59, 61, 69, 75, 105, 128, 130, 132, 142, 143, 146, 181, 186, 188, 200, 201, 212, 237, 247, 249, 261, 267, 323, 325, 340, 344], "": [5, 8, 11, 15, 23, 25, 28, 29, 36, 41, 42, 43, 46, 59, 64, 68, 75, 80, 82, 83, 87, 90, 100, 105, 106, 107, 115, 120, 121, 122, 125, 128, 131, 134, 142, 181, 184, 187, 192, 200, 212, 215, 216, 223, 228, 229, 230, 233, 247, 254, 260, 267, 274, 276, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 318, 323, 324, 325, 339, 344, 349, 354, 362], "v": [5, 11, 23, 25, 36, 40, 41, 43, 49, 50, 82, 96, 103, 115, 119, 120, 122, 128, 131, 142, 145, 146, 181, 187, 200, 212, 223, 227, 228, 230, 236, 237, 276, 308, 321, 325, 372], "force_lumin": [5, 128, 181], "none": [5, 11, 18, 20, 23, 24, 25, 40, 45, 46, 50, 59, 61, 62, 63, 64, 69, 71, 76, 80, 82, 83, 84, 86, 87, 88, 89, 90, 93, 95, 96, 102, 104, 106, 119, 124, 125, 128, 131, 138, 139, 142, 143, 146, 181, 187, 195, 197, 200, 201, 212, 227, 232, 233, 237, 247, 249, 251, 253, 254, 261, 263, 268, 274, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 304, 306, 308, 320, 322, 324, 325, 327, 340, 342, 349, 354, 355, 358, 359, 362, 368, 370, 372], "method": [5, 15, 25, 64, 68, 69, 82, 84, 93, 128, 134, 181, 192, 212, 254, 260, 261, 276, 281, 304, 325, 339, 340, 355, 368], "perceiv": [5, 128, 181], "convert": [5, 11, 15, 19, 59, 75, 76, 78, 82, 85, 102, 106, 128, 131, 134, 181, 187, 192, 196, 247, 267, 268, 271, 276, 282, 320, 324, 344, 347, 356], "hsv": [5, 71, 128, 181, 263, 342], "rgb": [5, 11, 12, 128, 131, 132, 181, 187, 188], "paramet": [5, 11, 12, 15, 17, 18, 19, 20, 23, 24, 25, 46, 49, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 106, 107, 125, 128, 131, 132, 134, 137, 138, 139, 142, 143, 145, 181, 187, 188, 192, 194, 195, 196, 197, 200, 201, 212, 233, 236, 247, 249, 251, 253, 254, 256, 257, 259, 260, 261, 263, 265, 267, 268, 270, 274, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 304, 305, 306, 308, 309, 318, 320, 321, 322, 323, 324, 325, 338, 339, 340, 342, 343, 344, 346, 349, 350, 354, 355, 356, 358, 359, 362, 363, 368, 369, 370, 372, 373], "hue": [5, 11, 71, 128, 131, 181, 187, 263, 342], "360": [5, 128, 181], "satur": [5, 82, 128, 181, 276], "1": [5, 7, 9, 11, 12, 15, 16, 18, 20, 23, 24, 25, 36, 40, 41, 43, 49, 50, 59, 62, 64, 65, 66, 68, 69, 70, 71, 73, 75, 77, 80, 82, 84, 85, 87, 88, 90, 92, 94, 96, 97, 100, 106, 107, 115, 119, 120, 122, 128, 129, 131, 132, 134, 135, 138, 139, 142, 143, 145, 146, 181, 183, 185, 187, 188, 192, 193, 195, 197, 200, 201, 212, 223, 227, 228, 230, 236, 237, 247, 251, 254, 256, 257, 260, 261, 262, 263, 265, 267, 270, 274, 276, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 303, 305, 308, 309, 318, 324, 325, 327, 339, 340, 341, 342, 343, 344, 346, 349, 355, 356, 359, 362, 367, 369, 372, 373], "valu": [5, 11, 12, 15, 16, 17, 18, 19, 20, 23, 24, 25, 59, 63, 64, 68, 71, 75, 81, 82, 83, 84, 85, 86, 87, 89, 90, 92, 96, 97, 100, 102, 103, 104, 106, 107, 128, 131, 132, 134, 135, 137, 138, 139, 142, 143, 181, 187, 188, 192, 193, 194, 195, 196, 197, 200, 201, 212, 247, 253, 254, 260, 263, 267, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 303, 308, 309, 318, 320, 321, 322, 324, 325, 327, 337, 339, 342, 344, 350, 354, 355, 356, 358, 362, 367, 372, 373], "return": [5, 7, 11, 12, 15, 16, 17, 18, 19, 20, 23, 24, 25, 36, 39, 40, 41, 49, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103, 104, 105, 106, 107, 115, 118, 119, 120, 128, 131, 132, 134, 135, 137, 138, 139, 142, 143, 145, 181, 183, 187, 188, 192, 193, 194, 195, 196, 197, 200, 201, 212, 223, 226, 227, 228, 236, 247, 249, 251, 253, 254, 256, 257, 259, 260, 261, 263, 265, 267, 268, 270, 271, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 303, 304, 305, 306, 308, 309, 318, 320, 321, 322, 323, 324, 325, 327, 337, 338, 339, 340, 342, 343, 344, 346, 347, 354, 355, 356, 358, 359, 362, 363, 367, 368, 369, 370, 372, 373], "type": [5, 11, 15, 16, 17, 18, 19, 20, 23, 24, 25, 40, 49, 59, 61, 62, 64, 65, 66, 67, 68, 71, 73, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 90, 91, 95, 96, 97, 102, 103, 104, 105, 106, 119, 128, 131, 134, 135, 137, 138, 139, 142, 143, 145, 181, 187, 192, 193, 194, 195, 196, 197, 200, 201, 212, 227, 236, 247, 249, 251, 254, 256, 257, 259, 260, 263, 265, 267, 268, 270, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 306, 308, 309, 320, 321, 322, 323, 324, 325, 338, 339, 342, 343, 344, 346, 354, 355, 356, 358, 359, 362, 363, 370, 372, 373], "tupl": [5, 7, 11, 15, 16, 19, 20, 23, 25, 59, 67, 71, 76, 86, 89, 97, 106, 128, 131, 134, 135, 139, 142, 181, 183, 187, 192, 193, 196, 197, 200, 212, 247, 259, 263, 268, 284, 296, 309, 324, 325, 327, 338, 342, 358, 373], "red": [5, 128, 181], "green": [5, 128, 181], "blue": [5, 128, 181], "str": [5, 11, 15, 16, 18, 24, 25, 59, 81, 82, 103, 106, 128, 131, 134, 135, 138, 143, 181, 187, 192, 193, 195, 201, 212, 247, 275, 276, 321, 324, 325, 350], "standard": [5, 11, 15, 19, 24, 25, 36, 41, 59, 61, 66, 68, 73, 75, 82, 85, 92, 100, 106, 107, 115, 120, 128, 131, 134, 143, 181, 187, 192, 196, 201, 212, 223, 228, 247, 249, 257, 260, 265, 267, 276, 282, 303, 318, 324, 325, 339, 343, 344, 356, 367], "default": [5, 11, 15, 16, 18, 20, 23, 24, 25, 49, 59, 62, 63, 64, 68, 71, 73, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 95, 96, 103, 104, 106, 128, 131, 134, 135, 138, 139, 142, 143, 145, 181, 187, 192, 193, 195, 197, 200, 201, 212, 236, 247, 251, 253, 254, 260, 263, 265, 267, 268, 270, 274, 275, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 306, 308, 321, 322, 324, 325, 327, 339, 342, 343, 344, 346, 349, 350, 354, 355, 358, 359, 362, 370, 372], "m": [5, 11, 22, 23, 25, 40, 41, 46, 50, 59, 62, 65, 82, 87, 90, 96, 97, 105, 119, 120, 125, 128, 131, 141, 142, 146, 181, 187, 199, 200, 212, 227, 228, 233, 237, 247, 251, 256, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 308, 309, 323, 325, 362, 372, 373], "weight": [5, 23, 24, 25, 63, 75, 82, 86, 88, 97, 128, 142, 143, 181, 200, 201, 212, 253, 267, 276, 284, 294, 309, 325, 344, 358, 359, 373], "vector": [5, 23, 25, 36, 46, 59, 82, 83, 85, 87, 88, 90, 91, 96, 103, 115, 125, 128, 142, 181, 200, 212, 223, 233, 247, 276, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 308, 321, 325, 354, 356, 359, 362, 363, 372], "lumin": [5, 128, 181], "np": [5, 11, 23, 24, 25, 49, 59, 61, 62, 64, 65, 67, 68, 71, 73, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94, 95, 97, 100, 106, 107, 128, 131, 142, 143, 145, 181, 187, 200, 201, 212, 236, 247, 249, 251, 254, 256, 259, 260, 263, 265, 267, 268, 270, 275, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 305, 306, 309, 318, 324, 325, 338, 339, 342, 343, 344, 346, 350, 354, 355, 356, 358, 359, 362, 363, 369, 370, 373], "ndarrai": [5, 25, 59, 63, 69, 71, 82, 84, 90, 128, 181, 212, 247, 253, 261, 263, 276, 281, 298, 325, 340, 342, 355, 362], "299": [5, 128, 181], "587": [5, 128, 181], "114": [5, 128, 181], "2126": [5, 128, 181], "7152": [5, 128, 181], "0722": [5, 128, 181], "59": [5, 24, 73, 88, 90, 128, 143, 181, 201, 265, 294, 298, 343, 359, 362], "11": [5, 15, 24, 25, 73, 88, 128, 134, 143, 181, 192, 201, 212, 265, 294, 325, 327, 343, 359], "lrgb": [5, 128, 181], "target": [5, 23, 96, 128, 142, 181, 200, 308, 372], "threshold": [5, 11, 25, 50, 59, 68, 78, 81, 96, 128, 131, 146, 181, 187, 212, 237, 247, 260, 271, 275, 308, 325, 339, 347, 350, 372], "01": [5, 25, 84, 92, 96, 128, 181, 212, 281, 303, 308, 325, 355, 367, 372], "squar": [5, 11, 23, 24, 25, 61, 63, 71, 73, 82, 83, 90, 128, 131, 142, 143, 181, 187, 200, 201, 212, 249, 253, 263, 265, 276, 280, 298, 325, 342, 343, 354, 362], "fals": [5, 11, 15, 17, 18, 19, 20, 23, 25, 43, 59, 63, 64, 71, 80, 82, 86, 88, 92, 93, 96, 104, 122, 128, 131, 134, 137, 138, 139, 142, 181, 187, 192, 194, 195, 196, 197, 200, 212, 230, 247, 253, 254, 263, 274, 276, 284, 294, 303, 304, 308, 322, 325, 342, 349, 358, 359, 367, 368, 372], "adjust": [5, 11, 23, 59, 62, 128, 131, 142, 181, 187, 200, 247, 251], "match": [5, 11, 19, 23, 50, 64, 76, 82, 87, 106, 128, 131, 142, 146, 181, 187, 196, 200, 237, 254, 268, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 324], "luminos": [5, 128, 181], "th": [5, 10, 128, 130, 181, 186], "list": [5, 7, 11, 15, 19, 20, 23, 25, 36, 40, 46, 59, 62, 63, 64, 68, 76, 78, 80, 82, 84, 88, 89, 91, 95, 96, 97, 103, 106, 115, 119, 125, 128, 131, 134, 139, 142, 181, 183, 187, 192, 196, 197, 200, 212, 223, 227, 233, 247, 251, 253, 254, 260, 268, 271, 274, 276, 281, 294, 296, 299, 306, 308, 309, 321, 324, 325, 339, 347, 349, 355, 359, 363, 370, 372, 373], "angl": [5, 7, 23, 25, 59, 64, 128, 142, 181, 183, 200, 212, 247, 254, 325], "theta": [5, 25, 70, 128, 181, 212, 262, 325, 341], "like": [5, 7, 11, 15, 16, 18, 23, 25, 36, 40, 59, 69, 75, 82, 86, 88, 89, 90, 91, 92, 97, 100, 104, 107, 115, 119, 128, 131, 134, 135, 138, 142, 181, 183, 187, 192, 193, 195, 200, 212, 223, 227, 247, 261, 267, 276, 284, 294, 296, 298, 299, 303, 309, 318, 322, 325, 327, 340, 344, 358, 359, 362, 363, 367, 373], "iter": [5, 7, 11, 42, 59, 73, 76, 82, 87, 90, 91, 103, 106, 121, 128, 131, 181, 183, 187, 229, 247, 265, 268, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 321, 324, 327, 343, 362, 363], "doe": [5, 11, 15, 25, 40, 82, 106, 119, 128, 131, 134, 181, 187, 192, 212, 227, 276, 324, 325], "affect": [5, 25, 128, 181, 212, 325], "magnitud": [5, 11, 25, 36, 59, 68, 71, 75, 86, 97, 115, 128, 131, 181, 187, 212, 223, 247, 260, 263, 267, 284, 309, 325, 339, 342, 344, 358, 373], "mai": [5, 11, 15, 16, 18, 25, 50, 59, 61, 68, 69, 90, 96, 128, 131, 134, 135, 138, 146, 181, 187, 192, 193, 195, 212, 237, 247, 249, 260, 261, 298, 308, 325, 327, 339, 340, 362, 372], "caus": [5, 16, 18, 19, 41, 59, 93, 120, 128, 135, 138, 181, 193, 195, 196, 228, 247, 304, 368], "result": [5, 11, 15, 18, 20, 25, 40, 41, 59, 61, 62, 63, 68, 73, 82, 83, 84, 85, 86, 89, 90, 97, 106, 119, 120, 128, 131, 134, 138, 139, 181, 187, 192, 195, 197, 212, 227, 228, 247, 249, 251, 253, 260, 265, 276, 280, 281, 282, 284, 296, 298, 309, 324, 325, 327, 339, 343, 354, 355, 356, 358, 362, 373], "fall": [5, 77, 93, 128, 181, 270, 304, 346, 368], "outsid": [5, 11, 25, 77, 128, 131, 181, 187, 212, 270, 325, 346], "origin": [5, 11, 18, 23, 36, 40, 59, 94, 97, 106, 115, 119, 128, 131, 138, 142, 181, 187, 195, 200, 223, 227, 247, 305, 309, 324, 369, 373], "colorspac": [5, 128, 181], "float": [5, 9, 11, 15, 16, 23, 25, 40, 43, 46, 49, 59, 61, 62, 65, 66, 68, 71, 73, 75, 76, 77, 83, 84, 85, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 103, 107, 119, 122, 125, 128, 129, 131, 134, 135, 142, 145, 181, 185, 187, 192, 193, 200, 212, 227, 230, 233, 236, 247, 249, 251, 256, 257, 260, 263, 265, 267, 268, 270, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 305, 306, 308, 309, 318, 321, 325, 339, 342, 343, 344, 346, 354, 355, 356, 359, 362, 363, 369, 370, 372, 373], "chroma": [5, 128, 181], "space": [5, 10, 11, 15, 18, 19, 24, 25, 62, 68, 69, 71, 73, 87, 88, 97, 103, 128, 130, 131, 134, 138, 143, 181, 186, 187, 192, 195, 196, 201, 212, 251, 260, 261, 263, 265, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 309, 321, 325, 339, 340, 342, 343, 359, 373], "c1": [5, 11, 87, 128, 131, 181, 187, 285, 286, 287, 288, 289, 290, 291, 292, 293], "c2": [5, 11, 23, 87, 128, 131, 142, 181, 187, 200, 285, 286, 287, 288, 289, 290, 291, 292, 293], "calcul": [5, 25, 59, 65, 68, 76, 82, 86, 88, 128, 181, 212, 247, 256, 260, 268, 276, 284, 294, 325, 339, 358, 359], "angular": [5, 70, 128, 181, 262, 341], "differ": [5, 15, 16, 20, 23, 24, 25, 36, 50, 59, 61, 90, 94, 96, 115, 128, 134, 135, 139, 142, 143, 146, 181, 192, 193, 197, 200, 201, 212, 223, 237, 247, 249, 298, 305, 308, 325, 362, 369, 372], "between": [5, 11, 17, 18, 23, 25, 59, 62, 63, 64, 68, 70, 76, 80, 82, 83, 85, 87, 88, 91, 128, 131, 137, 138, 142, 181, 187, 194, 195, 200, 212, 247, 251, 253, 254, 260, 262, 268, 274, 276, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 325, 339, 341, 349, 354, 356, 359, 363], "two": [5, 11, 15, 16, 20, 23, 24, 25, 36, 59, 61, 63, 68, 69, 71, 76, 78, 80, 87, 88, 90, 94, 96, 103, 115, 128, 131, 134, 135, 139, 142, 143, 181, 187, 192, 193, 197, 200, 201, 212, 223, 247, 249, 253, 260, 261, 263, 268, 271, 274, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 305, 308, 321, 325, 327, 337, 339, 340, 342, 347, 349, 359, 362, 369, 372], "hcl": [5, 128, 181], "first": [5, 20, 23, 25, 36, 40, 46, 49, 59, 62, 63, 68, 71, 75, 82, 83, 87, 90, 96, 115, 119, 125, 128, 139, 142, 145, 181, 197, 200, 212, 223, 227, 233, 236, 247, 251, 253, 260, 263, 267, 276, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 308, 325, 327, 337, 339, 342, 344, 354, 362, 372], "second": [5, 25, 49, 50, 59, 62, 65, 68, 71, 83, 84, 87, 92, 100, 107, 128, 145, 146, 181, 212, 236, 237, 247, 251, 256, 260, 263, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 303, 318, 325, 327, 337, 339, 342, 354, 355, 367], "difer": [5, 128, 181], "c": [5, 11, 23, 25, 41, 49, 50, 59, 71, 82, 87, 120, 128, 131, 142, 145, 146, 181, 187, 200, 212, 228, 236, 237, 247, 263, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325, 342], "l": [5, 11, 23, 24, 25, 36, 59, 62, 71, 73, 75, 82, 85, 88, 90, 91, 97, 115, 128, 131, 142, 143, 181, 187, 200, 201, 212, 223, 247, 251, 263, 265, 267, 276, 282, 294, 298, 299, 309, 325, 342, 343, 344, 356, 359, 362, 363, 373], "degre": [5, 25, 29, 64, 65, 82, 128, 181, 212, 216, 254, 256, 276, 325], "length": [5, 11, 24, 25, 30, 35, 36, 46, 59, 63, 65, 75, 76, 83, 87, 88, 96, 97, 106, 109, 114, 115, 125, 128, 131, 143, 181, 187, 201, 212, 217, 222, 223, 233, 247, 253, 256, 267, 268, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 308, 309, 324, 325, 344, 354, 359, 372, 373], "compon": [5, 11, 15, 25, 59, 64, 69, 71, 78, 82, 128, 131, 134, 181, 187, 192, 212, 247, 254, 261, 263, 271, 276, 325, 340, 342, 347], "cm": [5, 11, 50, 128, 131, 146, 181, 187, 237], "smooth": [5, 11, 24, 59, 65, 68, 69, 71, 80, 84, 90, 128, 131, 143, 181, 187, 201, 247, 256, 260, 261, 263, 274, 281, 298, 339, 340, 342, 349, 355, 362], "cirular": [5, 128, 181], "boundari": [5, 24, 25, 59, 61, 68, 69, 73, 77, 128, 143, 181, 201, 212, 247, 249, 260, 261, 265, 270, 325, 339, 340, 343, 346], "condit": [5, 11, 16, 23, 24, 25, 59, 61, 64, 66, 69, 73, 87, 89, 90, 93, 128, 131, 135, 142, 143, 181, 187, 193, 200, 201, 212, 247, 249, 254, 257, 261, 265, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 304, 325, 340, 343, 362, 368], "sigma": [5, 11, 24, 25, 30, 35, 36, 59, 61, 66, 73, 82, 85, 90, 100, 107, 109, 114, 115, 128, 131, 143, 181, 187, 201, 212, 217, 222, 223, 247, 249, 257, 265, 276, 282, 298, 318, 325, 343, 356, 362], "dev": [5, 128, 181], "map": [5, 6, 8, 11, 15, 18, 20, 36, 40, 68, 69, 71, 78, 106, 115, 119, 128, 131, 134, 138, 139, 181, 182, 184, 187, 192, 195, 197, 223, 227, 260, 261, 263, 271, 324, 339, 340, 342, 347], "radiu": [5, 11, 65, 67, 71, 76, 78, 128, 131, 181, 187, 256, 259, 263, 268, 271, 338, 342, 347], "rbg": [5, 128, 181], "circular": [5, 24, 25, 75, 82, 128, 143, 181, 201, 212, 267, 276, 325, 344], "5": [5, 7, 11, 15, 16, 23, 24, 25, 46, 59, 63, 67, 68, 71, 73, 80, 88, 90, 95, 125, 128, 131, 134, 135, 142, 143, 181, 183, 187, 192, 193, 200, 201, 212, 233, 247, 253, 259, 260, 263, 265, 274, 294, 298, 306, 325, 327, 338, 339, 342, 343, 349, 359, 362, 370], "n": [5, 11, 23, 24, 25, 36, 41, 42, 46, 50, 59, 61, 65, 66, 73, 75, 77, 87, 88, 90, 91, 92, 100, 103, 106, 107, 115, 120, 121, 125, 128, 131, 142, 143, 146, 181, 187, 200, 201, 212, 223, 228, 229, 233, 237, 247, 249, 256, 257, 265, 267, 270, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 303, 318, 321, 324, 325, 343, 344, 346, 359, 362, 363, 367], "10": [5, 8, 11, 15, 23, 24, 25, 50, 59, 69, 73, 75, 82, 84, 87, 88, 90, 95, 96, 97, 106, 128, 131, 134, 142, 143, 146, 181, 184, 187, 192, 200, 201, 212, 237, 247, 261, 265, 267, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 306, 308, 309, 324, 325, 327, 340, 343, 344, 355, 359, 362, 370, 372, 373], "7": [5, 11, 23, 24, 25, 73, 88, 128, 131, 142, 143, 181, 187, 200, 201, 212, 265, 294, 325, 327, 343, 359], "4": [5, 8, 11, 15, 16, 24, 25, 59, 62, 64, 65, 68, 69, 71, 73, 88, 90, 97, 103, 128, 131, 134, 135, 143, 181, 184, 187, 192, 193, 201, 212, 247, 251, 254, 256, 260, 261, 263, 265, 294, 298, 309, 321, 325, 327, 339, 340, 342, 343, 359, 362, 373], "6": [5, 8, 11, 23, 24, 25, 59, 65, 73, 75, 87, 88, 90, 128, 131, 142, 143, 181, 184, 187, 200, 201, 212, 247, 256, 265, 267, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 325, 327, 343, 344, 359, 362], "slightli": [5, 128, 181], "more": [5, 11, 15, 17, 25, 39, 64, 68, 69, 70, 75, 82, 83, 85, 90, 93, 96, 100, 106, 107, 118, 128, 131, 134, 137, 181, 187, 192, 194, 212, 226, 254, 260, 261, 262, 267, 276, 280, 282, 298, 304, 308, 318, 324, 325, 339, 340, 341, 344, 354, 356, 362, 368, 372], "optim": [5, 25, 69, 88, 89, 90, 93, 97, 128, 181, 212, 261, 294, 296, 298, 304, 309, 325, 340, 359, 362, 368, 373], "hsl": [5, 128, 181], "convers": [5, 15, 106, 128, 134, 181, 192, 324], "routin": [5, 11, 18, 20, 23, 25, 59, 61, 63, 68, 70, 75, 78, 80, 81, 82, 83, 87, 88, 90, 91, 92, 93, 95, 96, 97, 102, 128, 131, 138, 139, 142, 181, 187, 195, 197, 200, 212, 247, 249, 253, 260, 262, 267, 271, 274, 275, 276, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 303, 304, 306, 308, 309, 320, 325, 339, 341, 344, 347, 349, 350, 354, 359, 362, 363, 367, 368, 370, 372, 373], "fix": [5, 11, 25, 59, 65, 103, 128, 131, 181, 187, 212, 247, 256, 321, 325], "back": [5, 15, 18, 59, 93, 128, 134, 138, 181, 192, 195, 247, 304, 368], "limit": [5, 11, 15, 25, 39, 46, 73, 90, 96, 100, 107, 118, 125, 128, 131, 134, 181, 187, 192, 212, 226, 233, 265, 298, 308, 318, 325, 343, 362, 372], "resolut": [5, 24, 59, 64, 73, 88, 128, 143, 181, 201, 247, 254, 265, 294, 343, 359], "lookup": [5, 106, 128, 181, 324], "tabl": [5, 25, 103, 128, 181, 212, 321, 325], "z": [5, 11, 23, 25, 59, 75, 76, 78, 97, 106, 128, 131, 142, 181, 187, 200, 212, 247, 267, 268, 271, 309, 324, 325, 344, 347, 373], "perform": [5, 11, 15, 18, 25, 43, 59, 82, 86, 87, 122, 128, 131, 134, 138, 181, 187, 192, 195, 212, 230, 247, 276, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325, 358], "bulk": [5, 128, 181], "lut": [5, 128, 181], "complex": [5, 11, 15, 59, 68, 71, 75, 76, 78, 106, 128, 131, 134, 181, 187, 192, 247, 260, 263, 267, 268, 271, 324, 339, 342, 344, 347], "number": [5, 11, 15, 20, 23, 24, 25, 39, 40, 41, 46, 59, 62, 63, 64, 66, 68, 69, 71, 76, 77, 78, 80, 82, 83, 84, 86, 87, 88, 90, 92, 93, 95, 96, 103, 105, 106, 118, 119, 120, 125, 128, 131, 134, 139, 142, 143, 181, 187, 192, 197, 200, 201, 212, 226, 227, 228, 233, 247, 251, 253, 254, 257, 260, 261, 263, 268, 270, 271, 274, 276, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 303, 304, 306, 308, 321, 323, 324, 325, 327, 337, 339, 340, 342, 346, 347, 349, 354, 355, 358, 359, 362, 367, 368, 370, 372], "avoid": [5, 15, 16, 20, 59, 69, 84, 88, 90, 100, 107, 128, 134, 135, 139, 181, 192, 193, 197, 247, 261, 281, 294, 298, 318, 340, 355, 359, 362], "loop": [5, 15, 39, 40, 118, 119, 128, 134, 181, 192, 226, 227], "bp": [5, 11, 59, 128, 131, 181, 187, 247], "boxplot": [5, 11, 128, 131, 181, 187], "ar": [5, 7, 11, 15, 16, 17, 18, 19, 20, 23, 24, 25, 39, 41, 59, 61, 63, 64, 68, 69, 70, 71, 75, 78, 82, 83, 87, 93, 95, 96, 102, 118, 120, 128, 131, 134, 135, 137, 138, 139, 142, 143, 181, 183, 187, 192, 193, 194, 195, 196, 197, 200, 201, 212, 226, 228, 247, 249, 253, 254, 260, 261, 262, 263, 267, 271, 276, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 304, 306, 308, 320, 325, 327, 339, 340, 341, 342, 344, 347, 354, 368, 370, 372], "aw": [5, 82, 128, 181, 276], "littl": [5, 11, 40, 43, 119, 122, 128, 131, 181, 187, 227, 230], "better": [5, 11, 18, 25, 89, 128, 131, 138, 181, 187, 195, 212, 296, 325], "pack": [5, 23, 25, 36, 40, 115, 119, 128, 142, 181, 200, 212, 223, 227, 325], "data": [5, 11, 12, 15, 18, 19, 23, 25, 38, 39, 41, 46, 50, 59, 61, 62, 64, 68, 69, 71, 73, 75, 77, 81, 82, 83, 86, 90, 95, 96, 97, 103, 106, 117, 118, 120, 125, 128, 131, 132, 134, 138, 142, 146, 181, 187, 188, 192, 195, 196, 200, 212, 225, 226, 228, 233, 237, 247, 249, 251, 254, 260, 261, 263, 265, 267, 270, 275, 276, 280, 284, 298, 306, 308, 309, 321, 324, 325, 339, 340, 342, 343, 344, 346, 350, 354, 358, 362, 370, 372, 373], "hexadecim": [5, 128, 181], "bgr": [5, 128, 181], "format": [5, 11, 15, 17, 19, 30, 37, 40, 46, 78, 96, 97, 102, 103, 105, 109, 116, 119, 125, 128, 131, 134, 137, 181, 187, 192, 194, 196, 217, 224, 227, 233, 271, 308, 309, 320, 321, 323, 347, 372, 373], "fast": [5, 15, 18, 25, 128, 134, 138, 181, 192, 195, 212, 325], "render": [5, 10, 11, 128, 130, 131, 181, 186, 187], "javascript": [5, 128, 181], "canva": [5, 128, 181], "import": [5, 6, 18, 23, 25, 80, 128, 138, 142, 181, 182, 195, 200, 212, 274, 325, 327, 337, 349], "html": [5, 19, 23, 25, 88, 128, 142, 181, 196, 200, 212, 294, 325, 359], "demo": [5, 128, 181], "256x3": [5, 128, 181], "hex": [5, 128, 181], "given": [5, 7, 11, 17, 25, 59, 68, 78, 84, 88, 89, 90, 103, 106, 128, 131, 137, 181, 183, 187, 194, 212, 247, 260, 271, 281, 294, 296, 298, 321, 324, 325, 327, 337, 339, 347, 355, 359, 362], "rrggbb": [5, 128, 181], "16": [5, 24, 25, 73, 75, 88, 128, 143, 181, 201, 212, 265, 267, 294, 325, 343, 344, 359], "bit": [5, 15, 25, 59, 103, 128, 134, 181, 192, 212, 247, 321, 325], "565": [5, 128, 181], "brg": [5, 12, 128, 132, 181, 188], "integ": [5, 11, 15, 18, 25, 36, 40, 59, 63, 64, 80, 84, 85, 90, 100, 103, 107, 115, 119, 128, 131, 134, 138, 181, 187, 192, 195, 212, 223, 227, 247, 253, 254, 274, 281, 282, 298, 318, 321, 325, 349, 355, 356, 362], "form": [5, 11, 18, 23, 25, 36, 40, 43, 59, 77, 89, 90, 115, 119, 122, 128, 131, 138, 142, 181, 187, 195, 200, 212, 223, 227, 230, 247, 270, 296, 298, 325, 346, 362], "rrrrr": [5, 128, 181], "gggggg": [5, 128, 181], "bbbbb": [5, 128, 181], "int": [5, 11, 16, 20, 23, 24, 25, 40, 46, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 77, 80, 82, 84, 85, 88, 90, 95, 96, 103, 119, 125, 128, 131, 135, 139, 142, 143, 181, 187, 193, 197, 200, 201, 212, 227, 233, 247, 249, 251, 253, 254, 256, 257, 259, 260, 261, 263, 267, 268, 270, 274, 276, 281, 282, 294, 298, 306, 308, 321, 325, 338, 339, 340, 342, 344, 346, 349, 355, 356, 359, 362, 370, 372], "enumer": [5, 128, 181, 327], "over": [5, 11, 15, 16, 17, 18, 20, 25, 36, 41, 49, 59, 63, 68, 70, 75, 80, 83, 86, 87, 89, 90, 106, 115, 120, 128, 131, 134, 135, 137, 138, 139, 145, 181, 187, 192, 193, 194, 195, 197, 212, 223, 228, 236, 247, 253, 260, 262, 267, 274, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 324, 325, 339, 341, 344, 349, 354, 358, 362], "bu": [5, 128, 181], "ident": [5, 16, 25, 86, 128, 135, 181, 193, 212, 284, 325, 358], "byte": [5, 15, 18, 128, 134, 138, 181, 192, 195], "skip": [5, 59, 64, 68, 71, 128, 181, 247, 254, 260, 263, 339, 342], "lowest": [5, 25, 128, 181, 212, 325], "each": [5, 11, 15, 16, 20, 25, 36, 39, 59, 62, 63, 64, 68, 75, 76, 82, 84, 85, 86, 89, 90, 94, 115, 118, 128, 131, 134, 135, 139, 181, 187, 192, 193, 197, 212, 223, 226, 247, 251, 253, 254, 260, 267, 268, 276, 281, 282, 284, 296, 298, 305, 325, 339, 344, 355, 356, 358, 362, 369], "reserv": [5, 128, 181], "fourth": [5, 128, 181], "storag": [5, 18, 128, 138, 181, 195], "intend": [5, 128, 181], "develop": [5, 25, 128, 181, 212, 325], "pallet": [5, 128, 181], "mictrocontrol": [5, 128, 181], "driven": [5, 25, 128, 181, 212, 325], "displai": [5, 25, 128, 181, 212, 325], "interfac": [5, 10, 104, 128, 130, 181, 186, 322], "formt": [5, 128, 181], "binari": [5, 36, 40, 59, 88, 90, 115, 119, 128, 181, 223, 227, 247, 294, 298, 359, 362], "liter": [5, 128, 181], "subset": [5, 23, 25, 64, 128, 142, 181, 200, 212, 254, 325], "shownn": [5, 128, 181], "quickli": [5, 128, 181], "arduino": [5, 128, 181], "uno": [5, 128, 181], "2": [5, 11, 15, 16, 17, 20, 23, 24, 25, 36, 43, 50, 59, 61, 63, 65, 68, 69, 73, 76, 77, 78, 81, 82, 88, 90, 92, 97, 106, 115, 122, 128, 131, 134, 135, 137, 139, 142, 143, 146, 181, 187, 192, 193, 194, 197, 200, 201, 212, 223, 230, 237, 247, 249, 253, 256, 260, 261, 265, 268, 270, 271, 275, 276, 294, 298, 303, 309, 324, 325, 327, 339, 340, 343, 346, 347, 350, 359, 362, 367, 373], "inch": [5, 128, 181], "tft": [5, 128, 181], "touch": [5, 128, 181], "screen": [5, 10, 12, 128, 130, 132, 181, 186, 188], "breakout": [5, 128, 181], "restrict": [5, 15, 68, 128, 134, 181, 192, 260, 339], "sent": [5, 68, 128, 181, 260, 339], "singl": [5, 11, 15, 20, 23, 25, 50, 90, 128, 131, 134, 139, 142, 146, 181, 187, 192, 197, 200, 212, 237, 298, 325, 362], "write": [5, 10, 15, 50, 128, 130, 134, 146, 181, 186, 192, 237], "one": [5, 11, 15, 18, 20, 23, 24, 25, 39, 40, 46, 50, 59, 61, 71, 82, 87, 93, 95, 96, 103, 118, 119, 125, 128, 131, 134, 138, 139, 142, 143, 146, 181, 187, 192, 195, 197, 200, 201, 212, 226, 227, 233, 237, 247, 249, 263, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 304, 306, 308, 321, 325, 327, 342, 368, 370, 372], "port": [5, 25, 128, 181, 212, 325], "mode": [5, 11, 15, 19, 25, 59, 82, 95, 128, 131, 134, 181, 187, 192, 196, 212, 247, 276, 306, 325, 370], "low": [5, 25, 59, 62, 65, 69, 75, 83, 128, 181, 212, 247, 251, 256, 261, 267, 280, 325, 340, 344, 354], "high": [5, 18, 25, 59, 62, 68, 69, 81, 100, 107, 128, 138, 181, 195, 212, 247, 251, 260, 261, 275, 318, 325, 339, 340, 350], "don": [5, 20, 59, 88, 92, 128, 139, 181, 197, 247, 294, 303, 359, 367], "t": [5, 11, 19, 20, 23, 24, 25, 46, 50, 59, 63, 64, 73, 82, 87, 88, 90, 92, 93, 104, 105, 125, 128, 131, 139, 142, 143, 146, 181, 187, 196, 197, 200, 201, 212, 233, 237, 247, 253, 254, 265, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 303, 304, 322, 323, 325, 343, 359, 362, 367, 368], "even": [5, 25, 59, 68, 81, 93, 128, 181, 212, 247, 260, 275, 304, 325, 339, 350, 368], "lower": [5, 11, 23, 25, 68, 69, 128, 131, 142, 181, 187, 200, 212, 260, 261, 325, 339, 340], "show": [5, 11, 23, 25, 71, 128, 131, 142, 181, 187, 200, 212, 263, 325, 342], "addit": [6, 11, 20, 25, 69, 82, 131, 139, 182, 187, 197, 212, 261, 276, 325, 340], "also": [6, 7, 15, 20, 23, 25, 36, 50, 59, 64, 68, 69, 75, 89, 96, 115, 134, 139, 142, 146, 182, 183, 192, 197, 200, 212, 223, 237, 247, 254, 260, 261, 267, 296, 308, 325, 339, 340, 344, 372], "load": [6, 8, 25, 106, 182, 184, 212, 324, 325], "tree": [7, 15, 134, 183, 192], "get": [7, 10, 11, 15, 20, 23, 25, 59, 63, 64, 80, 81, 83, 85, 130, 131, 134, 139, 142, 183, 186, 187, 192, 197, 200, 212, 247, 253, 254, 274, 275, 280, 282, 325, 349, 350, 354, 356], "depth": [7, 183], "structur": [7, 15, 23, 134, 142, 183, 192, 200], "ani": [7, 15, 20, 25, 36, 59, 64, 68, 88, 90, 91, 115, 134, 139, 183, 192, 197, 212, 223, 247, 254, 260, 294, 298, 299, 325, 339, 359, 362, 363], "nest": [7, 15, 19, 102, 134, 183, 192, 196, 320], "count": [7, 25, 50, 59, 68, 80, 82, 85, 88, 90, 91, 94, 146, 183, 212, 237, 247, 260, 274, 276, 282, 294, 298, 299, 305, 325, 339, 349, 356, 359, 362, 363, 369], "howev": [7, 15, 20, 25, 134, 139, 183, 192, 197, 212, 325], "leaf": [7, 27, 28, 29, 183, 214, 215, 216], "node": [7, 15, 27, 28, 29, 134, 183, 192, 214, 215, 216], "leav": [7, 20, 24, 59, 73, 88, 139, 143, 183, 197, 201, 247, 265, 294, 343, 359], "order": [7, 12, 15, 16, 25, 59, 65, 68, 75, 86, 132, 134, 135, 183, 188, 192, 193, 212, 247, 256, 260, 267, 284, 325, 339, 344, 358], "deep": [7, 183], "flatten": [7, 36, 40, 59, 115, 119, 183, 223, 227, 247], "command": [7, 10, 11, 18, 104, 106, 130, 131, 138, 183, 186, 187, 195, 322, 324], "lw": [7, 11, 23, 71, 131, 142, 183, 187, 200, 263, 342], "k": [7, 11, 23, 25, 42, 46, 59, 61, 63, 64, 65, 71, 75, 80, 82, 83, 84, 85, 87, 88, 90, 95, 100, 107, 121, 125, 131, 142, 183, 187, 200, 212, 229, 233, 247, 249, 253, 254, 256, 263, 267, 274, 276, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 306, 318, 325, 342, 344, 349, 354, 355, 356, 359, 362, 370], "rotate_label": [7, 183], "true": [7, 11, 12, 15, 18, 20, 23, 24, 25, 43, 59, 63, 64, 68, 71, 82, 86, 88, 93, 102, 104, 105, 122, 131, 132, 134, 138, 139, 142, 143, 183, 187, 188, 192, 195, 197, 200, 201, 212, 230, 247, 253, 254, 260, 263, 276, 284, 294, 304, 320, 322, 323, 325, 339, 342, 358, 359, 368], "label_offset": [7, 183], "arcspan": [7, 183], "figsiz": [7, 183], "9": [7, 11, 19, 24, 25, 73, 77, 88, 92, 97, 131, 143, 183, 187, 196, 201, 212, 265, 270, 294, 303, 309, 325, 327, 343, 346, 359, 367, 373], "fontsiz": [7, 11, 131, 183, 187], "line_resolut": [7, 183], "50": [7, 11, 24, 25, 64, 73, 88, 131, 143, 183, 187, 201, 212, 254, 265, 294, 325, 343, 359], "regist": [8, 39, 118, 184, 226], "fabio": [8, 184], "crameri": [8, 184], "well": [8, 25, 68, 81, 184, 212, 260, 275, 325, 339, 350], "revers": [8, 10, 59, 130, 184, 186, 247], "version": [8, 10, 25, 36, 59, 65, 100, 107, 115, 130, 184, 186, 212, 223, 247, 256, 318, 325], "similarli": [8, 59, 82, 184, 247, 276], "built": [8, 15, 16, 20, 134, 135, 139, 184, 192, 193, 197], "2020": [8, 184], "januari": [8, 184], "scientif": [8, 103, 184, 321], "colour": [8, 184], "zenodo": [8, 184], "http": [8, 10, 19, 23, 25, 73, 86, 88, 90, 104, 106, 130, 142, 184, 186, 196, 200, 212, 265, 284, 294, 298, 322, 324, 325, 343, 358, 359, 362], "doi": [8, 184], "org": [8, 19, 23, 25, 88, 90, 142, 184, 196, 200, 212, 294, 298, 325, 359, 362], "5281": [8, 184], "4153113": [8, 184], "gradient": [9, 59, 68, 69, 71, 88, 93, 129, 185, 247, 260, 261, 263, 294, 304, 339, 340, 342, 359, 368], "left": [9, 11, 25, 28, 40, 75, 82, 119, 129, 131, 185, 187, 212, 215, 227, 267, 276, 325, 344], "right": [9, 11, 23, 25, 28, 75, 82, 129, 131, 142, 185, 187, 200, 212, 215, 267, 276, 325, 344], "onli": [9, 11, 15, 16, 17, 23, 25, 41, 59, 75, 83, 86, 93, 103, 120, 129, 131, 134, 135, 137, 142, 185, 187, 192, 193, 194, 200, 212, 228, 247, 267, 280, 284, 304, 321, 325, 344, 354, 358, 368], "test": [9, 11, 18, 23, 25, 50, 59, 64, 69, 73, 82, 88, 90, 96, 106, 129, 131, 138, 142, 146, 185, 187, 195, 200, 212, 237, 247, 254, 261, 265, 276, 294, 298, 308, 324, 325, 340, 343, 359, 362, 372], "2d": [9, 11, 23, 24, 59, 61, 67, 68, 69, 71, 73, 75, 77, 78, 82, 86, 87, 129, 131, 142, 143, 185, 187, 200, 201, 247, 249, 259, 260, 261, 263, 265, 267, 270, 271, 276, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 338, 339, 340, 342, 343, 344, 346, 347, 358], "channel": [9, 11, 59, 68, 70, 71, 75, 129, 131, 185, 187, 247, 260, 262, 263, 267, 339, 341, 342, 344], "collect": [10, 11, 18, 23, 63, 68, 75, 76, 96, 103, 130, 131, 138, 142, 186, 187, 195, 200, 253, 260, 267, 268, 308, 321, 339, 344, 372], "direct": [10, 11, 24, 59, 64, 68, 71, 130, 131, 143, 186, 187, 201, 247, 254, 260, 263, 339, 342], "pixel": [10, 11, 24, 71, 130, 131, 143, 186, 187, 201, 263, 342], "via": [10, 11, 16, 18, 20, 23, 36, 59, 104, 115, 130, 131, 135, 138, 139, 142, 186, 187, 193, 195, 197, 200, 223, 247, 322, 327], "It": [10, 16, 17, 18, 20, 25, 39, 40, 59, 68, 71, 83, 88, 92, 96, 104, 106, 118, 119, 130, 135, 137, 138, 139, 186, 193, 194, 195, 197, 212, 226, 227, 247, 260, 263, 280, 294, 303, 308, 322, 324, 325, 339, 342, 354, 359, 367, 372], "difficult": [10, 16, 130, 135, 186, 193], "directli": [10, 11, 25, 69, 130, 131, 186, 187, 212, 261, 325, 340], "One": [10, 59, 90, 130, 186, 247, 298, 362], "trick": [10, 130, 186], "let": [10, 11, 25, 130, 131, 186, 187, 212, 325], "do": [10, 11, 15, 20, 23, 25, 39, 41, 59, 64, 68, 83, 106, 118, 120, 130, 131, 134, 139, 142, 186, 187, 192, 197, 200, 212, 226, 228, 247, 254, 260, 280, 324, 325, 339, 354], "heavi": [10, 25, 130, 186, 212, 325], "lift": [10, 130, 186], "you": [10, 20, 25, 36, 40, 59, 64, 82, 88, 89, 90, 106, 115, 119, 130, 139, 186, 197, 212, 223, 227, 247, 254, 276, 294, 296, 298, 324, 325, 359, 362], "At": [10, 40, 73, 119, 130, 186, 227, 265, 343], "cost": [10, 15, 130, 134, 186, 192], "engin": [10, 25, 130, 186, 212, 325], "how": [10, 11, 15, 20, 25, 59, 75, 81, 96, 106, 130, 131, 134, 139, 186, 187, 192, 197, 212, 247, 267, 275, 308, 324, 325, 327, 344, 350, 372], "access": [10, 16, 20, 25, 106, 130, 135, 139, 186, 193, 197, 212, 324, 325, 327], "have": [10, 16, 18, 20, 23, 25, 43, 59, 61, 64, 68, 75, 82, 88, 90, 122, 130, 135, 138, 139, 142, 186, 193, 195, 197, 200, 212, 230, 247, 249, 254, 260, 267, 276, 294, 298, 325, 339, 344, 359, 362], "handl": [10, 15, 16, 20, 39, 59, 102, 118, 130, 134, 135, 139, 186, 192, 193, 197, 226, 247, 320], "all": [10, 11, 15, 16, 18, 19, 20, 23, 25, 39, 41, 59, 67, 71, 77, 78, 80, 82, 83, 89, 90, 106, 118, 120, 130, 131, 134, 135, 138, 139, 142, 186, 187, 192, 193, 195, 196, 197, 200, 212, 226, 228, 247, 259, 263, 270, 271, 274, 276, 280, 296, 298, 324, 325, 338, 342, 346, 347, 349, 354, 362], "tk": [10, 130, 186], "qt": [10, 130, 186], "agg": [10, 130, 186], "backend": [10, 130, 186], "so": [10, 11, 15, 19, 20, 24, 25, 40, 41, 46, 59, 64, 68, 73, 81, 88, 90, 92, 93, 96, 106, 119, 120, 125, 130, 131, 134, 139, 143, 186, 187, 192, 196, 197, 201, 212, 227, 228, 233, 247, 254, 260, 265, 275, 294, 298, 303, 304, 308, 324, 325, 327, 339, 343, 350, 359, 362, 367, 368, 372], "multipl": [10, 11, 25, 36, 39, 59, 87, 96, 115, 118, 130, 131, 186, 187, 212, 223, 226, 247, 285, 286, 287, 288, 289, 290, 291, 292, 293, 308, 325, 372], "platform": [10, 25, 130, 186, 212, 325, 327], "fig": [10, 11, 130, 131, 186, 187], "hide": [10, 11, 130, 131, 186, 187], "toolabr": [10, 130, 186], "chang": [10, 11, 15, 16, 25, 59, 90, 130, 131, 134, 135, 186, 187, 192, 193, 212, 247, 298, 325, 327, 362], "across": [10, 15, 16, 25, 64, 68, 71, 130, 134, 135, 186, 192, 193, 212, 254, 260, 263, 325, 339, 342], "try": [10, 15, 20, 25, 73, 93, 103, 130, 134, 139, 186, 192, 197, 212, 265, 304, 321, 325, 343, 368], "catch": [10, 20, 130, 139, 186, 197], "toolbar": [10, 130, 186], "w": [10, 11, 12, 23, 25, 43, 59, 61, 62, 69, 82, 87, 97, 122, 130, 131, 132, 142, 186, 187, 188, 200, 212, 230, 247, 249, 251, 261, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 309, 325, 340, 373], "titl": [10, 11, 23, 25, 45, 124, 130, 131, 142, 186, 187, 200, 212, 232, 325], "untitl": [10, 12, 130, 132, 186, 188], "stackoverflow": [10, 23, 103, 104, 105, 106, 130, 142, 186, 200, 321, 322, 323, 324], "com": [10, 23, 25, 59, 73, 86, 103, 104, 105, 106, 130, 142, 186, 200, 212, 247, 265, 284, 321, 322, 323, 324, 325, 343, 358], "question": [10, 23, 103, 104, 105, 106, 130, 142, 186, 200, 321, 322, 323, 324], "9295026": [10, 130, 186], "remov": [10, 11, 59, 68, 78, 81, 82, 95, 130, 131, 186, 187, 247, 260, 271, 275, 276, 306, 339, 347, 350, 370], "axi": [10, 11, 25, 59, 71, 75, 82, 130, 131, 186, 187, 212, 247, 263, 267, 276, 325, 342, 344], "legend": [10, 11, 25, 130, 131, 186, 187, 212, 325], "white": [10, 11, 25, 130, 131, 186, 187, 212, 325], "rgbdata": [10, 12, 130, 132, 186, 188], "helper": [11, 40, 61, 93, 119, 131, 187, 227, 249, 304, 368], "ax": [11, 23, 25, 68, 90, 131, 142, 187, 200, 212, 260, 298, 325, 339, 362], "draw": [11, 25, 41, 66, 90, 92, 96, 120, 131, 187, 212, 228, 257, 298, 303, 308, 325, 362, 367, 372], "bottom": [11, 131, 187], "line": [11, 25, 40, 46, 59, 71, 97, 103, 104, 106, 119, 125, 131, 187, 212, 227, 233, 247, 263, 309, 321, 322, 324, 325, 342, 373], "maplotlib": [11, 131, 187], "plt": [11, 25, 131, 187, 212, 325], "gca": [11, 131, 187], "move": [11, 40, 50, 59, 70, 119, 131, 146, 187, 227, 237, 247, 262, 341], "y": [11, 23, 25, 36, 40, 43, 49, 50, 59, 63, 67, 68, 71, 76, 78, 82, 84, 86, 88, 90, 97, 105, 115, 119, 122, 131, 142, 145, 146, 187, 200, 212, 223, 227, 230, 236, 237, 247, 253, 259, 260, 263, 268, 271, 276, 281, 284, 294, 298, 309, 323, 325, 338, 339, 342, 347, 355, 358, 359, 362, 373], "noth": [11, 131, 187], "els": [11, 18, 71, 89, 105, 131, 138, 187, 195, 263, 296, 323, 327, 342], "linewidth": [11, 25, 131, 187, 212, 325], "improv": [11, 16, 24, 68, 131, 135, 143, 187, 193, 201, 260, 339], "appear": [11, 25, 50, 64, 131, 146, 187, 212, 237, 254, 325], "box": [11, 59, 131, 187, 247], "whisker": [11, 131, 187], "To": [11, 15, 25, 59, 68, 131, 134, 187, 192, 212, 247, 260, 325, 339], "call": [11, 15, 16, 18, 20, 23, 25, 39, 40, 41, 59, 82, 93, 105, 106, 118, 119, 120, 131, 134, 135, 138, 139, 142, 187, 192, 193, 195, 197, 200, 212, 226, 227, 228, 247, 276, 304, 323, 324, 325, 327, 337, 368], "object": [11, 12, 15, 16, 19, 23, 28, 29, 36, 59, 82, 87, 88, 89, 90, 93, 97, 102, 103, 106, 115, 131, 132, 134, 135, 142, 187, 188, 192, 193, 196, 200, 215, 216, 223, 247, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 304, 309, 320, 321, 324, 327, 337, 359, 362, 368, 373], "accompani": [11, 18, 131, 138, 187, 195], "set": [11, 16, 18, 19, 20, 24, 25, 59, 73, 76, 78, 82, 87, 88, 91, 93, 131, 135, 138, 139, 143, 187, 193, 195, 196, 197, 201, 212, 247, 265, 268, 271, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 304, 325, 327, 337, 343, 347, 359, 363, 368], "posit": [11, 23, 24, 25, 59, 61, 62, 63, 64, 65, 66, 73, 77, 80, 82, 83, 84, 85, 87, 88, 90, 96, 97, 103, 106, 131, 142, 143, 187, 200, 201, 212, 247, 249, 251, 253, 254, 256, 257, 265, 270, 274, 276, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 308, 309, 321, 324, 325, 343, 346, 349, 354, 355, 356, 359, 362, 372, 373], "width": [11, 24, 25, 46, 59, 69, 71, 81, 84, 103, 125, 131, 143, 187, 201, 212, 233, 247, 261, 263, 275, 281, 321, 325, 340, 342, 350, 355], "fill": [11, 25, 59, 84, 106, 131, 187, 212, 247, 281, 324, 325, 355], "notch": [11, 131, 187], "showflier": [11, 131, 187], "whi": [11, 131, 187], "95": [11, 24, 25, 73, 88, 131, 143, 187, 201, 212, 265, 294, 325, 343, 359], "bgcolor": [11, 131, 187], "94509804": [11, 131, 187], "9411765": [11, 131, 187], "9137255": [11, 131, 187], "dtype": [11, 25, 131, 187, 212, 325], "float32": [11, 15, 25, 40, 59, 61, 73, 76, 81, 82, 84, 85, 119, 131, 134, 187, 192, 212, 227, 247, 249, 265, 268, 275, 276, 281, 282, 325, 343, 350, 355, 356], "mediancolor": [11, 131, 187], "kwarg": [11, 15, 19, 31, 39, 45, 78, 82, 88, 93, 106, 110, 118, 124, 131, 134, 187, 192, 196, 218, 226, 232, 271, 276, 294, 304, 324, 347, 359, 368], "nice": [11, 15, 59, 69, 131, 134, 187, 192, 247, 261, 340], "style": [11, 102, 131, 187, 320], "npoint": [11, 76, 77, 131, 187, 268, 270, 346], "ngroup": [11, 131, 187], "x": [11, 15, 16, 23, 24, 25, 36, 40, 41, 43, 49, 50, 59, 61, 62, 63, 64, 65, 67, 68, 69, 71, 73, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 100, 101, 103, 106, 107, 108, 115, 119, 120, 122, 131, 134, 135, 142, 143, 145, 146, 187, 192, 193, 200, 201, 212, 223, 227, 228, 230, 236, 237, 247, 249, 251, 253, 254, 256, 259, 260, 261, 263, 265, 267, 268, 270, 271, 276, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 303, 309, 318, 319, 321, 324, 325, 338, 339, 340, 342, 343, 344, 346, 347, 354, 355, 356, 358, 359, 362, 363, 367, 373], "group": [11, 25, 59, 131, 187, 212, 247, 325], "boolean": [11, 15, 18, 23, 25, 43, 59, 64, 71, 80, 82, 86, 103, 122, 131, 134, 138, 142, 187, 192, 195, 200, 212, 230, 247, 254, 263, 274, 276, 284, 321, 325, 342, 349, 358], "whether": [11, 15, 16, 17, 20, 23, 25, 59, 68, 71, 75, 81, 82, 86, 90, 131, 134, 135, 137, 139, 142, 187, 192, 193, 194, 197, 200, 212, 247, 260, 263, 267, 275, 276, 284, 298, 325, 339, 342, 344, 350, 358, 362], "inset": [11, 131, 187], "median": [11, 25, 59, 75, 82, 96, 131, 187, 212, 247, 267, 276, 308, 325, 344, 372], "outli": [11, 131, 187], "scatter": [11, 23, 25, 131, 142, 187, 200, 212, 325], "which": [11, 12, 15, 20, 23, 24, 25, 40, 59, 63, 64, 67, 68, 69, 71, 75, 82, 84, 85, 87, 90, 100, 102, 107, 119, 131, 132, 134, 139, 142, 143, 187, 188, 192, 197, 200, 201, 212, 227, 247, 253, 254, 259, 260, 261, 263, 267, 276, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 318, 320, 325, 338, 339, 340, 342, 344, 355, 356, 362], "percentil": [11, 59, 82, 131, 187, 247, 276], "rang": [11, 24, 25, 36, 59, 73, 75, 80, 88, 90, 115, 131, 143, 187, 201, 212, 223, 247, 265, 267, 274, 294, 298, 325, 343, 344, 349, 359, 362], "background": [11, 15, 131, 134, 187, 192], "black": [11, 25, 131, 187, 212, 325], "unless": [11, 18, 25, 75, 131, 138, 187, 195, 212, 267, 325, 344], "case": [11, 15, 18, 20, 25, 59, 84, 88, 93, 106, 131, 134, 138, 139, 187, 192, 195, 197, 212, 247, 281, 294, 304, 324, 325, 355, 359, 368], "foward": [11, 131, 187], "pyplot": [11, 25, 36, 115, 131, 187, 212, 223, 325], "mark": [11, 59, 68, 131, 187, 247, 260, 339], "min": [11, 25, 45, 59, 86, 124, 131, 187, 212, 232, 247, 284, 325, 358], "max": [11, 25, 45, 59, 82, 86, 96, 124, 131, 187, 212, 232, 247, 276, 284, 308, 325, 358, 372], "xby": [11, 131, 187], "yby": [11, 131, 187], "see": [11, 15, 18, 23, 25, 59, 62, 73, 81, 82, 90, 97, 103, 131, 134, 138, 142, 187, 192, 195, 200, 212, 247, 251, 265, 275, 276, 298, 309, 321, 325, 327, 337, 343, 350, 362, 373], "zero": [11, 23, 24, 25, 41, 50, 59, 71, 73, 75, 80, 81, 83, 84, 88, 90, 97, 106, 120, 131, 142, 143, 146, 187, 200, 201, 212, 228, 237, 247, 263, 265, 267, 274, 275, 280, 281, 294, 298, 309, 324, 325, 342, 343, 344, 349, 350, 354, 355, 359, 362, 373], "upper": [11, 23, 25, 68, 131, 142, 187, 200, 212, 260, 325, 339], "largest": [11, 23, 24, 25, 39, 59, 90, 118, 131, 142, 143, 187, 200, 201, 212, 226, 247, 298, 325, 362], "un": [11, 131, 187], "current": [11, 39, 49, 50, 105, 118, 131, 145, 146, 187, 226, 236, 237, 323, 327], "xlimit": [11, 131, 187], "If": [11, 15, 16, 18, 19, 20, 23, 24, 25, 39, 49, 59, 71, 75, 82, 83, 87, 90, 93, 95, 118, 131, 134, 135, 138, 139, 142, 143, 145, 187, 192, 193, 195, 196, 197, 200, 201, 212, 226, 236, 247, 263, 267, 276, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 304, 306, 325, 342, 344, 354, 362, 368, 370], "curent": [11, 131, 187], "xlim": [11, 131, 187], "neg": [11, 23, 25, 59, 64, 83, 87, 90, 103, 131, 142, 187, 200, 212, 247, 254, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 321, 325, 354, 362], "error": [11, 16, 17, 19, 20, 23, 25, 36, 59, 82, 87, 92, 93, 97, 115, 131, 135, 137, 139, 142, 187, 193, 194, 196, 197, 200, 212, 223, 247, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 303, 304, 309, 325, 367, 368, 373], "rais": [11, 17, 18, 24, 25, 73, 75, 82, 88, 131, 137, 138, 143, 187, 194, 195, 201, 212, 265, 267, 276, 294, 325, 343, 344, 359], "ylimit": [11, 131, 187], "ylim": [11, 131, 187], "both": [11, 15, 24, 25, 50, 63, 64, 82, 131, 134, 143, 146, 187, 192, 201, 212, 237, 253, 254, 276, 325], "smae": [11, 131, 187], "turn": [11, 131, 187], "clip": [11, 59, 100, 107, 131, 187, 247, 318], "tick": [11, 131, 187], "aspect": [11, 71, 131, 187, 263, 342], "interv": [11, 25, 59, 95, 131, 187, 212, 247, 306, 325, 370], "ratio": [11, 25, 36, 68, 71, 115, 131, 187, 212, 223, 260, 263, 325, 339, 342], "im": [11, 131, 187], "keep": [11, 18, 59, 82, 87, 131, 138, 187, 195, 247, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293], "corner": [11, 24, 73, 131, 143, 187, 201, 265, 343], "rescal": [11, 24, 59, 73, 88, 131, 143, 187, 201, 247, 265, 294, 343, 359], "height": [11, 24, 25, 46, 69, 125, 131, 143, 187, 201, 212, 233, 261, 325, 340], "dimens": [11, 23, 25, 46, 59, 61, 62, 63, 68, 69, 71, 75, 82, 87, 90, 125, 131, 142, 187, 200, 212, 233, 247, 249, 251, 253, 260, 261, 263, 267, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 325, 339, 340, 342, 344, 362], "instanc": [11, 15, 25, 36, 115, 131, 134, 187, 192, 212, 223, 325], "tha": [11, 131, 187], "size": [11, 18, 20, 23, 24, 25, 36, 38, 39, 46, 59, 61, 64, 68, 71, 82, 83, 86, 91, 96, 103, 106, 115, 117, 118, 125, 131, 138, 139, 142, 143, 187, 195, 197, 200, 201, 212, 223, 225, 226, 233, 247, 249, 254, 260, 263, 276, 280, 284, 299, 308, 321, 324, 325, 339, 342, 354, 358, 363, 372], "figur": [11, 25, 103, 131, 187, 212, 321, 325], "rel": [11, 24, 25, 59, 64, 75, 80, 131, 143, 187, 201, 212, 247, 254, 267, 274, 325, 344, 349], "measur": [11, 25, 59, 62, 68, 75, 82, 131, 187, 212, 247, 251, 260, 267, 276, 325, 339, 344], "scale": [11, 25, 30, 35, 36, 59, 68, 69, 71, 82, 97, 109, 114, 115, 131, 187, 212, 217, 222, 223, 247, 260, 261, 263, 276, 309, 325, 339, 340, 342, 373], "bound": [11, 16, 25, 68, 91, 131, 135, 187, 193, 212, 260, 299, 325, 339, 363], "currenta": [11, 131, 187], "dy": [11, 50, 71, 131, 146, 187, 237, 263, 342], "dx": [11, 71, 85, 131, 187, 263, 282, 342, 356], "orient": [11, 25, 131, 187, 212, 325], "resiz": [11, 131, 187], "baselin": [11, 82, 131, 187, 276], "amount": [11, 15, 39, 59, 118, 131, 134, 187, 192, 226, 247], "expand": [11, 15, 59, 131, 134, 187, 192, 247], "same": [11, 15, 16, 23, 25, 36, 40, 59, 71, 75, 80, 82, 86, 106, 115, 119, 131, 134, 135, 142, 187, 192, 193, 200, 212, 223, 227, 247, 263, 267, 274, 276, 284, 324, 325, 342, 344, 349, 358], "top": [11, 25, 131, 187, 212, 325], "intact": [11, 131, 187], "ax1": [11, 131, 187], "ax2": [11, 131, 187], "xspan1": [11, 131, 187], "xspan2": [11, 131, 187], "draw_left": [11, 131, 187], "draw_right": [11, 131, 187], "doshow": [11, 12, 131, 132, 187, 188], "dishow": [11, 131, 187], "edg": [11, 24, 59, 61, 64, 71, 73, 76, 78, 81, 131, 143, 187, 201, 247, 249, 254, 263, 265, 268, 271, 275, 342, 343, 347, 350], "stop": [11, 59, 90, 131, 187, 247, 298, 362], "shade": [11, 131, 187], "region": [11, 25, 67, 131, 187, 212, 259, 325, 338], "graph": [11, 15, 25, 30, 37, 73, 109, 116, 131, 134, 162, 169, 187, 192, 212, 217, 224, 265, 325, 343], "defin": [11, 15, 16, 20, 25, 59, 78, 89, 131, 134, 135, 139, 187, 192, 193, 197, 212, 247, 271, 296, 325, 347], "keyword": [11, 15, 25, 88, 131, 134, 187, 192, 212, 294, 325, 359], "forward": [11, 23, 25, 59, 71, 78, 87, 88, 90, 131, 142, 187, 200, 212, 247, 263, 271, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 325, 342, 347, 359, 362], "text": [11, 25, 103, 131, 187, 212, 321, 325], "arg": [11, 15, 19, 20, 31, 39, 40, 45, 70, 103, 106, 110, 118, 119, 124, 131, 134, 139, 187, 192, 196, 197, 218, 226, 227, 232, 262, 321, 324, 341], "fudg": [11, 131, 187], "base": [11, 15, 23, 24, 25, 28, 29, 59, 62, 64, 65, 68, 73, 81, 82, 87, 88, 90, 93, 96, 106, 131, 134, 142, 143, 187, 192, 200, 201, 212, 215, 216, 247, 251, 254, 256, 260, 265, 275, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 304, 308, 324, 325, 327, 339, 343, 350, 359, 362, 368, 372], "pad": [11, 59, 61, 77, 81, 84, 131, 187, 247, 249, 270, 275, 281, 346, 350, 355], "rangefun": [11, 131, 187], "ff": [11, 64, 71, 131, 187, 254, 263, 342], "cwt": [11, 131, 187], "auto": [11, 40, 71, 119, 131, 187, 227, 263, 342], "vmin": [11, 131, 187], "vmax": [11, 131, 187], "afmhot": [11, 131, 187], "interpol": [11, 59, 68, 77, 84, 131, 187, 247, 260, 270, 281, 339, 346, 355], "nearest": [11, 36, 68, 71, 76, 80, 84, 115, 131, 187, 223, 260, 263, 268, 274, 281, 339, 342, 349, 355], "dodraw": [11, 131, 187], "numer": [11, 19, 25, 59, 62, 69, 71, 82, 87, 88, 90, 91, 100, 103, 107, 131, 187, 196, 212, 247, 251, 261, 263, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 318, 321, 325, 340, 342, 359, 362, 363], "frequenc": [11, 25, 28, 29, 50, 59, 62, 63, 64, 65, 68, 69, 70, 71, 75, 83, 90, 91, 131, 146, 187, 212, 215, 216, 237, 247, 251, 253, 254, 256, 260, 261, 262, 263, 267, 280, 298, 299, 325, 339, 340, 341, 342, 344, 354, 362, 363], "wavelet": [11, 62, 131, 187, 251], "transform": [11, 23, 24, 59, 61, 62, 68, 69, 75, 87, 131, 142, 143, 187, 200, 201, 247, 249, 251, 260, 261, 267, 285, 286, 287, 288, 289, 290, 291, 292, 293, 339, 340, 344], "what": [11, 15, 25, 64, 104, 131, 134, 187, 192, 212, 254, 322, 325], "ip": [11, 131, 187], "bone": [11, 131, 187], "class": [11, 25, 28, 29, 82, 87, 90, 94, 100, 106, 107, 131, 187, 212, 215, 216, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 305, 318, 324, 325, 327, 362, 369], "patch_func": [11, 131, 187], "handlerpatch": [11, 131, 187], "orig_handl": [11, 131, 187], "xdescent": [11, 131, 187], "ydescent": [11, 131, 187], "tran": [11, 25, 131, 187, 212, 325], "vm": [11, 131, 187], "bicub": [11, 131, 187], "extent": [11, 71, 86, 131, 187, 263, 284, 342, 358], "onlyphas": [11, 131, 187], "previou": [11, 131, 187, 327, 337], "polar": [11, 82, 131, 187, 276], "modulu": [11, 131, 187], "ab": [11, 23, 25, 59, 68, 131, 142, 187, 200, 212, 247, 260, 325, 339], "imshow": [11, 131, 187], "avail": [11, 25, 59, 83, 94, 131, 187, 212, 247, 280, 305, 325, 354, 369], "output": [11, 25, 86, 131, 187, 212, 284, 325, 358], "skirt": [11, 69, 131, 187, 261, 340], "replot": [11, 131, 187], "nuisanc": [11, 131, 187], "updat": [11, 23, 49, 50, 87, 93, 131, 142, 145, 146, 187, 200, 236, 237, 285, 286, 287, 288, 289, 290, 291, 292, 293, 304, 368], "should": [11, 15, 17, 18, 23, 25, 40, 59, 68, 69, 71, 82, 87, 90, 94, 96, 100, 106, 107, 119, 131, 134, 137, 138, 142, 187, 192, 194, 195, 200, 212, 227, 247, 260, 261, 263, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 305, 308, 318, 324, 325, 339, 340, 342, 362, 369, 372], "faster": [11, 15, 86, 90, 93, 131, 134, 187, 192, 284, 298, 304, 358, 362, 368], "img": [11, 131, 187], "copi": [11, 15, 25, 36, 40, 59, 69, 83, 115, 119, 131, 134, 187, 192, 212, 223, 227, 247, 261, 280, 325, 340, 354], "reus": [11, 131, 187], "subsequ": [11, 89, 131, 187, 296], "speed": [11, 25, 68, 131, 187, 212, 260, 325, 339], "thing": [11, 16, 17, 40, 119, 131, 135, 137, 187, 193, 194, 227], "up": [11, 18, 20, 25, 36, 80, 115, 131, 138, 139, 187, 195, 197, 212, 223, 274, 325, 349], "anim": [11, 25, 131, 187, 212, 325], "video": [11, 131, 187], "except": [11, 20, 25, 40, 93, 103, 119, 131, 139, 187, 197, 212, 227, 304, 321, 325, 368], "an": [11, 15, 16, 17, 19, 23, 24, 25, 36, 40, 41, 50, 59, 66, 68, 71, 75, 78, 80, 82, 84, 86, 88, 90, 96, 97, 100, 102, 103, 104, 106, 107, 115, 119, 120, 131, 134, 135, 137, 142, 143, 146, 187, 192, 193, 194, 196, 200, 201, 212, 223, 227, 228, 237, 247, 257, 260, 263, 267, 271, 274, 276, 281, 284, 294, 298, 308, 309, 318, 320, 321, 322, 324, 325, 327, 339, 342, 344, 347, 349, 355, 358, 359, 362, 372, 373], "cmap": [11, 30, 35, 36, 71, 109, 114, 115, 131, 187, 217, 222, 223, 263, 342], "sidewai": [11, 131, 187], "border": [11, 59, 131, 187, 247], "15": [11, 23, 24, 25, 73, 88, 131, 142, 143, 187, 200, 201, 212, 265, 294, 325, 327, 343, 359], "labelpad": [11, 131, 187], "vscale": [11, 131, 187], "va": [11, 131, 187], "colorbar": [11, 131, 187], "pretti": [11, 25, 131, 187, 212, 325], "bad": [11, 18, 25, 71, 131, 138, 187, 195, 212, 263, 325, 342], "less": [11, 23, 25, 39, 59, 75, 90, 96, 118, 131, 142, 187, 200, 212, 226, 247, 267, 298, 308, 325, 344, 362, 372], "mathrm": [11, 131, 187], "mu": [11, 25, 30, 35, 36, 85, 88, 100, 107, 109, 114, 115, 131, 187, 212, 217, 222, 223, 282, 294, 318, 325, 356, 359], "mac": [11, 131, 187], "option": [11, 15, 18, 25, 40, 59, 75, 82, 83, 86, 88, 89, 90, 93, 103, 119, 131, 134, 138, 187, 192, 195, 212, 227, 247, 267, 276, 280, 284, 294, 296, 298, 304, 321, 325, 344, 354, 358, 359, 362, 368], "add": [11, 25, 36, 59, 82, 98, 103, 106, 115, 131, 187, 212, 223, 247, 276, 316, 321, 324, 325], "bool": [11, 15, 16, 17, 18, 20, 23, 24, 25, 59, 68, 71, 82, 90, 105, 131, 134, 135, 137, 138, 139, 142, 143, 187, 192, 193, 194, 195, 197, 200, 201, 212, 247, 260, 263, 276, 298, 323, 325, 339, 342, 362], "flip": [11, 25, 59, 64, 131, 187, 212, 247, 254, 325], "around": [11, 24, 59, 64, 68, 75, 131, 143, 187, 201, 247, 254, 260, 267, 339, 344], "font": [11, 131, 187], "12": [11, 24, 25, 73, 87, 88, 131, 143, 187, 201, 212, 265, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 325, 327, 343, 359], "parent": [11, 25, 131, 187, 212, 325], "vertic": [11, 61, 131, 187, 249], "align": [11, 25, 131, 187, 212, 325], "plane": [11, 68, 75, 131, 187, 260, 267, 339, 344], "latex": [11, 131, 187], "re": [11, 15, 20, 25, 50, 59, 83, 89, 93, 131, 134, 139, 146, 187, 192, 197, 212, 237, 247, 280, 296, 304, 325, 354, 368], "everyth": [11, 18, 131, 138, 187, 195], "39": [11, 24, 73, 88, 131, 143, 187, 201, 265, 294, 343, 359], "bold": [11, 131, 187], "x1": [11, 23, 131, 142, 187, 200], "x2": [11, 23, 76, 131, 142, 187, 200, 268], "26666668": [11, 131, 187], "32156864": [11, 131, 187], "36078432": [11, 131, 187], "signific": [11, 25, 103, 131, 187, 212, 321, 325], "bar": [11, 25, 131, 187, 212, 325], "brace": [11, 131, 187], "y1": [11, 131, 187], "y2": [11, 131, 187], "horizont": [11, 61, 103, 131, 187, 249, 321], "name": [11, 12, 15, 16, 25, 36, 59, 82, 93, 106, 115, 131, 132, 134, 135, 187, 188, 192, 193, 212, 223, 247, 276, 304, 324, 325, 368], "stamp": [11, 131, 187], "save": [11, 15, 89, 131, 134, 187, 192, 296], "svg": [11, 131, 187], "pdf": [11, 25, 41, 85, 87, 120, 131, 187, 212, 228, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325, 356], "prepend": [11, 131, 187], "date": [11, 105, 131, 187, 323], "ti": [11, 131, 187], "me": [11, 39, 118, 131, 187, 226], "yyyymmdd_hhmmss": [11, 131, 187], "file": [11, 15, 18, 46, 73, 102, 106, 125, 131, 134, 138, 187, 192, 195, 233, 265, 320, 324, 343], "san": [11, 131, 187], "extens": [11, 15, 106, 131, 134, 187, 192, 324], "precis": [11, 15, 23, 25, 75, 85, 87, 92, 100, 103, 107, 131, 134, 142, 187, 192, 200, 212, 267, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 303, 318, 321, 325, 344, 356, 367], "round": [11, 24, 25, 36, 39, 115, 118, 131, 143, 187, 201, 212, 223, 226, 325], "down": [11, 24, 39, 68, 118, 131, 143, 187, 201, 226, 260, 339], "digit": [11, 85, 103, 131, 187, 282, 321, 356], "yvalu": [11, 131, 187], "60": [11, 24, 50, 59, 73, 88, 131, 143, 146, 187, 201, 237, 247, 265, 294, 343, 359], "xy": [11, 131, 187], "ellips": [11, 131, 187], "mean": [11, 23, 25, 30, 35, 36, 41, 59, 68, 75, 81, 82, 83, 84, 85, 87, 88, 90, 92, 94, 96, 100, 104, 106, 107, 109, 114, 115, 120, 131, 142, 187, 200, 212, 217, 222, 223, 228, 247, 260, 267, 275, 276, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 303, 305, 308, 318, 322, 324, 325, 339, 344, 350, 354, 355, 356, 359, 362, 367, 369, 372], "drawn": [11, 25, 131, 187, 212, 325], "deviat": [11, 24, 25, 36, 41, 59, 61, 66, 68, 73, 75, 82, 85, 100, 107, 115, 120, 131, 143, 187, 201, 212, 223, 228, 247, 249, 257, 260, 265, 267, 276, 282, 318, 325, 339, 343, 344, 356], "coordin": [11, 25, 59, 67, 76, 131, 187, 212, 247, 259, 268, 325, 338], "2x2": [11, 23, 131, 142, 187, 200], "alpha": [11, 25, 50, 96, 131, 146, 187, 212, 237, 308, 325, 372], "stdwidth": [11, 131, 187], "96": [11, 24, 73, 88, 131, 143, 187, 201, 265, 294, 343, 359], "\u03c3": [11, 59, 75, 82, 131, 187, 247, 267, 276, 344], "varianc": [11, 25, 36, 59, 64, 82, 83, 87, 96, 115, 131, 187, 212, 223, 247, 254, 276, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 308, 325, 354, 372], "confid": [11, 131, 187], "blend": [11, 131, 187], "ycenter": [11, 131, 187], "yheight": [11, 131, 187], "side": [11, 25, 82, 106, 131, 187, 212, 276, 324, 325], "xcenter": [11, 131, 187], "xlength": [11, 131, 187], "wide": [11, 25, 131, 187, 212, 325], "where": [11, 15, 20, 23, 25, 35, 50, 59, 68, 75, 82, 88, 106, 114, 131, 134, 139, 142, 146, 187, 192, 197, 200, 212, 222, 237, 247, 260, 267, 276, 294, 324, 325, 339, 344, 359], "draw_ellips": [11, 131, 187], "draw_cross": [11, 131, 187], "p": [11, 15, 20, 25, 42, 46, 59, 64, 76, 87, 88, 90, 91, 96, 100, 103, 106, 107, 121, 125, 131, 134, 139, 187, 192, 197, 212, 229, 233, 247, 254, 268, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 308, 318, 321, 324, 325, 359, 362, 363, 372], "8": [11, 15, 24, 25, 71, 73, 88, 90, 103, 131, 134, 143, 187, 192, 201, 212, 263, 265, 294, 298, 321, 325, 327, 342, 343, 359, 362], "For": [11, 15, 18, 25, 36, 40, 41, 59, 63, 65, 75, 82, 84, 90, 92, 96, 115, 119, 120, 131, 134, 138, 187, 192, 195, 212, 223, 227, 228, 247, 253, 256, 267, 276, 281, 298, 303, 308, 325, 344, 355, 362, 367, 372], "90": [11, 24, 73, 88, 131, 143, 187, 201, 265, 294, 343, 359], "605": [11, 131, 187], "991": [11, 131, 187], "97": [11, 24, 73, 88, 131, 143, 187, 201, 265, 294, 343, 359], "378": [11, 131, 187], "99": [11, 24, 73, 88, 131, 143, 187, 201, 265, 294, 343, 359], "210": [11, 131, 187], "597": [11, 131, 187], "fraction": [11, 25, 82, 131, 187, 212, 276, 325], "enclos": [11, 131, 187], "centx": [11, 131, 187], "centi": [11, 131, 187], "angle_": [11, 131, 187], "theta2_": [11, 131, 187], "arrows": [11, 131, 187], "cap_start": [11, 131, 187], "cap_end": [11, 131, 187], "connect": [11, 76, 78, 131, 187, 268, 271, 347], "pass": [11, 15, 16, 20, 25, 36, 40, 59, 62, 65, 69, 75, 78, 83, 89, 90, 93, 115, 119, 131, 134, 135, 139, 187, 192, 193, 197, 212, 223, 227, 247, 251, 256, 261, 267, 271, 280, 296, 298, 304, 325, 327, 340, 344, 347, 354, 362, 368], "headlength": [11, 131, 187], "headwidth": [11, 131, 187], "arrow": [11, 131, 187], "properti": [11, 23, 25, 131, 142, 187, 200, 212, 325], "inhibit": [11, 131, 187], "brake": [11, 131, 187], "ep": [11, 23, 77, 84, 87, 90, 91, 97, 100, 107, 131, 142, 187, 200, 270, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 309, 318, 346, 355, 362, 363, 373], "1e": [11, 23, 24, 25, 59, 77, 82, 87, 90, 91, 92, 93, 97, 131, 142, 143, 187, 200, 201, 212, 247, 270, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 303, 304, 309, 325, 346, 362, 363, 367, 368, 373], "05": [11, 24, 25, 93, 96, 131, 143, 187, 201, 212, 304, 308, 325, 368, 372], "step": [11, 46, 49, 50, 59, 63, 66, 90, 125, 131, 145, 146, 187, 233, 236, 237, 247, 253, 257, 298, 362], "adjac": [11, 24, 131, 143, 187, 201], "level": [11, 16, 25, 64, 96, 131, 135, 187, 193, 212, 254, 308, 325, 372], "abov": [11, 25, 68, 131, 187, 212, 260, 325, 339], "break": [11, 17, 59, 82, 131, 137, 187, 194, 247, 276], "conveni": [11, 25, 84, 131, 187, 212, 281, 325, 355], "bin": [11, 25, 45, 46, 59, 77, 80, 88, 124, 125, 131, 187, 212, 232, 233, 247, 270, 274, 294, 325, 346, 349, 359], "20": [11, 24, 25, 73, 88, 96, 131, 143, 187, 201, 212, 265, 294, 308, 325, 327, 343, 359, 372], "p50": [11, 131, 187], "markers": [11, 131, 187], "summar": [11, 59, 131, 187, 247], "histogram": [11, 25, 77, 86, 95, 131, 187, 212, 270, 284, 306, 325, 346, 358, 370], "\u03bc": [11, 81, 82, 88, 131, 187, 275, 276, 294, 350, 359], "d\u03bc": [11, 131, 187], "\u03b4e": [11, 131, 187], "92156863": [11, 131, 187], "47843137": [11, 131, 187], "34901962": [11, 131, 187], "shell": [11, 18, 106, 131, 138, 187, 195, 324], "averag": [11, 25, 36, 41, 50, 59, 63, 68, 75, 78, 82, 83, 97, 115, 120, 131, 146, 187, 212, 223, 228, 237, 247, 253, 260, 267, 271, 276, 280, 309, 325, 339, 344, 347, 354, 373], "A": [11, 15, 23, 25, 36, 40, 59, 68, 75, 82, 86, 87, 89, 90, 96, 115, 119, 131, 134, 142, 187, 192, 200, 212, 223, 227, 247, 260, 267, 276, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 308, 325, 327, 337, 339, 344, 358, 362, 372], "thr": [11, 50, 59, 81, 131, 146, 187, 237, 247, 275, 350], "09": [11, 23, 25, 77, 91, 131, 142, 187, 200, 212, 270, 299, 325, 346, 363], "split": [11, 59, 82, 131, 187, 247, 276], "1d": [11, 24, 59, 61, 64, 73, 75, 76, 80, 81, 82, 84, 86, 87, 88, 90, 91, 97, 131, 143, 187, 201, 247, 249, 254, 265, 267, 268, 274, 275, 276, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 299, 309, 343, 344, 349, 350, 355, 358, 359, 362, 363, 373], "real": [11, 15, 23, 25, 59, 64, 68, 69, 71, 78, 87, 131, 134, 142, 187, 192, 200, 212, 247, 254, 260, 261, 263, 271, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325, 327, 339, 340, 342, 347], "imaginari": [11, 15, 68, 71, 78, 131, 134, 187, 192, 260, 263, 271, 339, 342, 347], "part": [11, 68, 78, 131, 187, 260, 271, 339, 347], "either": [11, 16, 24, 25, 69, 82, 96, 131, 135, 143, 187, 193, 201, 212, 261, 276, 308, 325, 327, 340, 372], "nan": [11, 23, 25, 59, 76, 90, 100, 107, 131, 142, 187, 200, 212, 247, 268, 298, 318, 325, 362], "u": [11, 25, 49, 59, 131, 145, 187, 212, 236, 247, 325], "separ": [11, 25, 75, 88, 102, 103, 131, 187, 212, 267, 294, 320, 321, 325, 344, 359], "without": [11, 15, 25, 41, 61, 64, 69, 103, 120, 131, 134, 187, 192, 212, 228, 249, 254, 261, 321, 325, 340], "overlap": [11, 24, 73, 88, 131, 143, 187, 201, 265, 294, 343, 359], "dash": [11, 131, 187], "stash": [11, 131, 187], "x0": [11, 66, 90, 131, 187, 257, 298, 362], "y0": [11, 131, 187], "__save_limits_private_storage__": [11, 131, 187], "These": [11, 16, 18, 25, 43, 59, 122, 131, 135, 138, 187, 193, 195, 212, 230, 247, 325], "restor": [11, 59, 131, 187, 247], "later": [11, 16, 25, 106, 131, 135, 187, 193, 212, 324, 325], "store": [11, 15, 20, 71, 131, 134, 139, 187, 192, 197, 263, 342], "40": [11, 24, 25, 59, 73, 88, 131, 143, 187, 201, 212, 247, 265, 294, 325, 343, 359], "marker": [11, 131, 187], "some": [11, 15, 16, 18, 20, 25, 43, 59, 69, 85, 91, 93, 96, 97, 122, 131, 134, 135, 138, 139, 187, 192, 193, 195, 197, 212, 230, 247, 261, 282, 299, 304, 308, 309, 325, 340, 356, 363, 368, 372, 373], "popul": [11, 25, 36, 63, 75, 96, 103, 115, 131, 187, 212, 223, 253, 267, 308, 321, 325, 344, 372], "creat": [11, 15, 16, 18, 19, 20, 23, 25, 36, 40, 41, 59, 69, 106, 115, 119, 120, 131, 134, 135, 138, 139, 142, 187, 192, 193, 195, 196, 197, 200, 212, 223, 227, 228, 247, 261, 324, 325, 340], "ofl": [11, 131, 187], "xtick": [11, 131, 187], "major": [11, 36, 40, 68, 115, 119, 131, 187, 223, 227, 260, 339], "minor": [11, 131, 187], "appli": [11, 19, 20, 23, 24, 25, 49, 59, 62, 64, 68, 73, 75, 83, 106, 131, 139, 142, 143, 145, 187, 196, 197, 200, 201, 212, 236, 247, 251, 254, 260, 265, 267, 280, 324, 325, 339, 343, 344, 354], "ytick": [11, 131, 187], "make": [11, 15, 16, 25, 36, 64, 83, 96, 106, 115, 131, 134, 135, 187, 192, 193, 212, 223, 254, 280, 308, 324, 325, 354, 372], "inward": [11, 131, 187], "discard": [11, 68, 69, 131, 187, 260, 261, 339, 340], "fade": [11, 131, 187], "altern": [11, 15, 20, 25, 104, 131, 134, 139, 187, 192, 197, 212, 322, 325], "band": [11, 59, 62, 131, 187, 247, 251, 327], "within": [11, 18, 20, 25, 39, 59, 67, 75, 76, 80, 102, 118, 131, 138, 139, 187, 195, 197, 212, 226, 247, 259, 267, 268, 274, 320, 325, 338, 344, 349], "mix": [11, 131, 187], "startat": [11, 131, 187], "delimit": [11, 46, 125, 131, 187, 233], "consecut": [11, 131, 187], "wrapper": [11, 20, 25, 40, 41, 43, 82, 84, 88, 119, 120, 122, 131, 139, 187, 197, 212, 227, 228, 230, 276, 281, 294, 325, 355, 359], "accept": [11, 25, 36, 40, 59, 64, 68, 78, 80, 87, 88, 90, 95, 96, 115, 119, 131, 187, 212, 223, 227, 247, 254, 260, 271, 274, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 306, 308, 325, 327, 339, 347, 349, 359, 362, 370, 372], "rather": [11, 25, 59, 63, 64, 90, 131, 187, 212, 247, 253, 254, 298, 325, 362], "than": [11, 15, 17, 23, 24, 25, 39, 59, 63, 64, 67, 71, 82, 83, 85, 86, 87, 90, 95, 96, 100, 107, 118, 131, 134, 137, 142, 143, 187, 192, 194, 200, 201, 212, 226, 247, 253, 254, 259, 263, 276, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 306, 308, 318, 325, 338, 342, 354, 356, 358, 362, 370, 372], "a1": [11, 131, 187], "positionsa": [11, 131, 187], "b1": [11, 131, 187], "positionsb": [11, 131, 187], "fdr": [11, 96, 131, 187, 308, 372], "label_pvalu": [11, 131, 187], "significance_mark": [11, 131, 187], "wilcoxon": [11, 131, 187], "pair": [11, 36, 59, 76, 83, 115, 131, 187, 223, 247, 268, 280, 354], "bracket": [11, 131, 187], "correct": [11, 59, 64, 84, 96, 131, 187, 247, 254, 281, 308, 355, 372], "comparison": [11, 25, 96, 131, 187, 212, 308, 325, 372], "benjamini": [11, 96, 131, 187, 308, 372], "hochberg": [11, 96, 131, 187, 308, 372], "procedur": [11, 15, 59, 81, 90, 96, 131, 134, 187, 192, 247, 275, 298, 308, 350, 362, 372], "whichev": [11, 59, 96, 131, 187, 247, 308, 372], "conserv": [11, 68, 96, 131, 187, 260, 308, 339, 372], "desir": [11, 25, 59, 61, 65, 131, 187, 212, 247, 249, 256, 325], "discoveri": [11, 96, 131, 187, 308, 372], "rate": [11, 25, 50, 59, 62, 63, 64, 65, 68, 69, 75, 82, 83, 84, 85, 90, 96, 131, 146, 187, 212, 237, 247, 251, 253, 254, 256, 260, 261, 267, 276, 280, 281, 282, 298, 308, 325, 339, 340, 344, 354, 355, 356, 362, 372], "annot": [11, 131, 187], "postiiv": [11, 131, 187], "shown": [11, 71, 131, 187, 263, 342], "note": [11, 15, 25, 41, 50, 73, 90, 104, 120, 131, 134, 146, 187, 192, 212, 228, 237, 265, 298, 322, 325, 343, 362], "is_signific": [11, 131, 187], "indic": [11, 23, 25, 71, 75, 78, 82, 131, 142, 187, 200, 212, 263, 267, 271, 276, 325, 342, 344, 347], "wa": [11, 18, 20, 25, 59, 75, 81, 131, 138, 139, 187, 195, 197, 212, 247, 267, 275, 325, 344, 350], "signfiic": [11, 131, 187], "falst": [11, 131, 187], "after": [11, 20, 25, 39, 50, 118, 131, 139, 146, 187, 197, 212, 226, 237, 325], "timeseri": [11, 59, 65, 131, 187, 247, 256], "veric": [11, 131, 187], "drop": [11, 131, 187], "locat": [11, 15, 18, 25, 40, 59, 67, 68, 71, 77, 78, 84, 86, 87, 95, 106, 119, 131, 134, 138, 187, 192, 195, 212, 227, 247, 259, 260, 263, 270, 271, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 306, 324, 325, 338, 339, 342, 346, 347, 355, 358, 370], "send": [12, 20, 132, 139, 188, 197, 327], "window": [12, 15, 17, 59, 63, 64, 75, 132, 134, 137, 188, 192, 194, 247, 253, 254, 267, 344], "unusu": [12, 132, 188], "reorder": [12, 132, 188], "disk": [15, 17, 18, 134, 137, 138, 192, 194, 195], "forc": [15, 18, 59, 69, 93, 134, 138, 192, 195, 247, 261, 304, 340, 368], "subroutin": [15, 16, 18, 23, 134, 135, 138, 142, 192, 193, 195, 200], "hash": [15, 16, 134, 135, 192, 193], "sensit": [15, 25, 68, 70, 96, 106, 134, 192, 212, 260, 262, 308, 324, 325, 339, 341, 372], "docstr": [15, 36, 115, 134, 192, 223], "recurs": [15, 19, 102, 106, 134, 192, 196, 320, 324], "fair": [15, 134, 192], "overhead": [15, 134, 192], "allow": [15, 18, 23, 25, 40, 62, 68, 76, 93, 106, 119, 134, 138, 142, 192, 195, 200, 212, 227, 251, 260, 268, 304, 324, 325, 339, 368], "possibl": [15, 18, 23, 25, 73, 76, 100, 107, 134, 138, 142, 192, 195, 200, 212, 265, 268, 318, 325, 327, 337, 343], "mutual": [15, 23, 134, 142, 192, 200], "exclud": [15, 25, 59, 68, 95, 134, 192, 212, 247, 260, 306, 325, 339, 370], "alreadi": [15, 83, 88, 134, 192, 280, 294, 354, 359], "visit": [15, 134, 192], "compat": [15, 17, 25, 59, 68, 92, 134, 137, 192, 194, 212, 247, 260, 303, 325, 339, 367], "grace": [15, 134, 192], "potenti": [15, 50, 71, 134, 146, 192, 237, 263, 342], "recurr": [15, 134, 192], "tricki": [15, 16, 134, 135, 192, 193], "present": [15, 20, 43, 59, 64, 104, 122, 134, 139, 192, 197, 230, 247, 254, 322], "therefor": [15, 25, 59, 134, 192, 212, 247, 325], "mani": [15, 17, 20, 25, 59, 134, 137, 139, 192, 194, 197, 212, 247, 325], "intermedi": [15, 18, 134, 138, 192, 195], "far": [15, 18, 25, 93, 134, 138, 192, 195, 212, 304, 325, 368], "encount": [15, 134, 192], "we": [15, 16, 18, 20, 23, 25, 50, 59, 64, 68, 90, 93, 94, 134, 135, 138, 139, 142, 146, 192, 193, 195, 197, 200, 212, 237, 247, 254, 260, 298, 304, 305, 325, 339, 362, 368, 369], "cannot": [15, 16, 19, 20, 59, 134, 135, 139, 192, 193, 196, 197, 247], "worth": [15, 134, 192], "topologi": [15, 134, 192], "least": [15, 23, 25, 68, 82, 83, 134, 142, 192, 200, 212, 260, 276, 280, 325, 339, 354], "suffic": [15, 134, 192], "librari": [15, 18, 20, 23, 25, 35, 41, 114, 120, 134, 138, 139, 142, 192, 195, 197, 200, 212, 222, 228, 325], "grab": [15, 25, 134, 192, 212, 325], "combin": [15, 41, 68, 120, 134, 192, 228, 260, 339], "datastructur": [15, 40, 119, 134, 192, 227], "repres": [15, 17, 25, 36, 40, 65, 78, 87, 103, 106, 115, 119, 134, 137, 192, 194, 212, 223, 227, 256, 271, 285, 286, 287, 288, 289, 290, 291, 292, 293, 321, 324, 325, 347], "profil": [15, 134, 192], "obtain": [15, 25, 102, 134, 192, 212, 320, 325], "assum": [15, 25, 59, 68, 75, 90, 96, 134, 192, 212, 247, 260, 267, 298, 308, 325, 339, 344, 362, 372], "decor": [15, 16, 19, 133, 134, 135, 192, 193, 196], "wrap": [15, 23, 24, 25, 40, 41, 59, 68, 82, 103, 119, 120, 134, 142, 143, 192, 200, 201, 212, 227, 228, 247, 260, 276, 321, 325, 339], "modifi": [15, 18, 19, 25, 70, 96, 134, 138, 192, 195, 196, 212, 262, 308, 325, 341, 372], "safe": [15, 16, 17, 19, 20, 23, 68, 87, 100, 107, 134, 135, 137, 139, 142, 192, 193, 194, 196, 197, 200, 260, 285, 286, 287, 288, 289, 290, 291, 292, 293, 318, 327, 339], "strip": [15, 19, 59, 134, 192, 196, 247], "assumpt": [15, 25, 96, 134, 192, 212, 308, 325, 372], "detect": [15, 16, 23, 59, 134, 135, 142, 192, 193, 200, 247], "effect": [15, 25, 59, 106, 134, 192, 212, 247, 324, 325, 327], "behavior": [15, 16, 25, 59, 81, 134, 135, 192, 193, 212, 247, 275, 325, 350], "variabl": [15, 20, 23, 25, 40, 49, 82, 97, 106, 119, 134, 139, 142, 145, 192, 197, 200, 212, 227, 236, 276, 309, 324, 325, 373], "mutabl": [15, 16, 20, 25, 134, 135, 139, 192, 193, 197, 212, 325], "scope": [15, 20, 134, 139, 192, 197], "close": [15, 16, 20, 23, 24, 25, 59, 64, 134, 135, 139, 142, 143, 192, 193, 197, 200, 201, 212, 247, 254, 325], "muse": [15, 134, 192], "fail": [15, 18, 20, 25, 90, 93, 134, 138, 139, 192, 195, 197, 212, 298, 304, 325, 362, 368], "extract": [15, 23, 59, 64, 68, 75, 102, 134, 142, 192, 200, 247, 254, 260, 267, 320, 339, 344], "contain": [15, 16, 17, 18, 19, 23, 25, 36, 41, 43, 59, 68, 69, 73, 81, 82, 90, 103, 115, 120, 122, 134, 135, 137, 138, 142, 192, 193, 194, 195, 196, 200, 212, 223, 228, 230, 247, 260, 261, 265, 275, 276, 298, 321, 325, 339, 340, 343, 350, 362], "undecor": [15, 134, 192], "construct": [15, 24, 40, 83, 119, 134, 143, 192, 201, 227, 280, 354], "obj": [15, 88, 106, 134, 192, 294, 324, 359], "identifi": [15, 59, 71, 134, 192, 247, 263, 342], "correspond": [15, 87, 134, 192, 285, 286, 287, 288, 289, 290, 291, 292, 293], "particular": [15, 134, 192], "want": [15, 25, 36, 59, 64, 88, 90, 115, 134, 192, 212, 223, 247, 254, 294, 298, 325, 359, 362], "abl": [15, 134, 192], "dist": [15, 134, 192], "underli": [15, 25, 36, 59, 68, 75, 115, 134, 192, 212, 223, 247, 260, 267, 325, 339, 344], "pickl": [15, 20, 134, 139, 192, 197], "check": [15, 16, 17, 23, 25, 50, 59, 87, 92, 103, 106, 134, 135, 137, 142, 146, 192, 193, 194, 200, 212, 237, 247, 285, 286, 287, 288, 289, 290, 291, 292, 293, 303, 321, 324, 325, 367], "meaning": [15, 134, 192], "almost": [15, 134, 192], "imposs": [15, 134, 192], "becom": [15, 25, 134, 192, 212, 325], "invalid": [15, 134, 192], "quit": [15, 16, 43, 59, 69, 122, 134, 135, 192, 193, 230, 247, 261, 340], "ll": [15, 25, 134, 192, 212, 325], "argspec": [15, 19, 134, 192, 196], "valid": [15, 17, 59, 82, 87, 88, 134, 137, 192, 194, 247, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 327, 359], "significantli": [15, 96, 134, 192, 308, 372], "sig": [15, 17, 19, 134, 137, 192, 194, 196], "repr": [15, 134, 192], "compress": [15, 134, 192], "base64encod": [15, 134, 192], "truncat": [15, 24, 25, 59, 106, 134, 143, 192, 201, 212, 247, 324, 325], "signatur": [15, 16, 17, 19, 82, 134, 135, 137, 192, 193, 194, 196, 276], "human": [15, 134, 192], "readabl": [15, 134, 192], "simpli": [15, 23, 40, 96, 119, 134, 142, 192, 200, 227, 308, 372], "most": [15, 17, 25, 36, 41, 59, 83, 90, 94, 115, 120, 134, 137, 192, 194, 212, 223, 228, 247, 280, 298, 305, 325, 354, 362, 369], "d": [15, 23, 25, 41, 42, 43, 46, 49, 83, 88, 89, 90, 102, 106, 120, 121, 122, 125, 134, 142, 145, 192, 200, 212, 228, 229, 230, 233, 236, 280, 294, 296, 298, 320, 324, 325, 354, 359, 362], "still": [15, 16, 18, 134, 135, 138, 192, 193, 195], "need": [15, 18, 23, 25, 39, 43, 59, 64, 83, 87, 118, 122, 134, 138, 142, 192, 195, 200, 212, 226, 230, 247, 254, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325, 354], "verif": [15, 134, 192], "No": [15, 17, 25, 59, 75, 96, 134, 137, 192, 194, 212, 247, 267, 308, 325, 344, 372], "4096": [15, 134, 192], "charact": [15, 17, 103, 134, 137, 192, 194, 321], "path": [15, 18, 102, 106, 134, 138, 192, 195, 320, 324], "255": [15, 17, 134, 137, 192, 194], "260": [15, 134, 192], "total": [15, 25, 103, 134, 192, 212, 321, 325], "pathlen": [15, 134, 192], "ascii": [15, 17, 134, 137, 192, 194], "31": [15, 24, 25, 73, 88, 134, 143, 192, 201, 212, 265, 294, 325, 327, 343, 359], "easiest": [15, 134, 192], "wai": [15, 16, 19, 20, 25, 69, 90, 106, 134, 135, 139, 192, 193, 196, 197, 212, 261, 298, 324, 325, 340, 362], "problemat": [15, 134, 192], "input": [15, 23, 25, 50, 59, 64, 68, 71, 82, 86, 104, 134, 142, 146, 192, 200, 212, 237, 247, 254, 260, 263, 276, 284, 322, 325, 339, 342, 358], "64": [15, 24, 73, 88, 134, 143, 192, 201, 265, 294, 327, 343, 359], "follow": [15, 18, 23, 25, 59, 84, 96, 134, 138, 142, 192, 195, 200, 212, 247, 281, 308, 325, 355, 372], "support": [15, 25, 40, 41, 59, 87, 119, 120, 134, 192, 212, 227, 228, 247, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325], "ast": [15, 85, 134, 192, 282, 356], "literal_ev": [15, 134, 192], "node_or_str": [15, 134, 192], "serial": [15, 134, 192], "permit": [15, 17, 87, 134, 137, 192, 194, 285, 286, 287, 288, 289, 290, 291, 292, 293], "paramtet": [15, 134, 192], "json": [15, 134, 192], "uniqu": [15, 19, 25, 78, 106, 134, 192, 196, 212, 271, 324, 325, 347], "recov": [15, 69, 134, 192, 261, 340], "becaus": [15, 25, 59, 64, 134, 192, 212, 247, 254, 325], "represent": [15, 24, 25, 69, 134, 143, 192, 201, 212, 261, 325, 340], "circumv": [15, 134, 192], "take": [15, 20, 23, 25, 59, 64, 82, 96, 100, 107, 134, 139, 142, 192, 197, 200, 212, 247, 254, 276, 308, 318, 325, 372], "longer": [15, 134, 192], "work": [15, 18, 20, 23, 25, 43, 59, 83, 84, 87, 90, 93, 96, 104, 122, 134, 138, 139, 142, 192, 195, 197, 200, 212, 230, 247, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 304, 308, 322, 325, 354, 355, 362, 368, 372], "attempt": [15, 20, 23, 25, 69, 106, 134, 139, 142, 192, 197, 200, 212, 261, 324, 325, 340], "experiment": [15, 18, 64, 134, 138, 192, 195, 254], "defaut": [15, 134, 192], "base64": [15, 134, 192], "kei": [15, 25, 106, 134, 192, 212, 324, 325], "entri": [15, 18, 23, 24, 25, 59, 82, 96, 134, 138, 142, 143, 192, 195, 200, 201, 212, 247, 276, 308, 325, 372], "invers": [15, 23, 25, 59, 69, 73, 75, 87, 100, 107, 134, 142, 192, 200, 212, 247, 261, 265, 267, 285, 286, 287, 288, 289, 290, 291, 292, 293, 318, 325, 340, 343, 344], "eperiment": [15, 134, 192], "cache_root": [15, 134, 192], "directori": [15, 106, 134, 192, 324], "e": [15, 18, 23, 25, 36, 41, 49, 59, 69, 82, 115, 120, 134, 138, 142, 145, 192, 195, 200, 212, 223, 228, 236, 247, 261, 276, 325, 340], "npy": [15, 134, 192], "mat": [15, 36, 102, 106, 115, 134, 192, 223, 320, 324], "etc": [15, 25, 59, 82, 97, 134, 192, 212, 247, 276, 309, 325, 373], "fn": [15, 134, 192], "info": [15, 59, 89, 134, 192, 247, 296], "absolut": [15, 23, 25, 62, 68, 75, 82, 92, 106, 134, 142, 192, 200, 212, 251, 260, 267, 276, 303, 324, 325, 339, 344, 367], "int8": [15, 134, 192], "128": [15, 134, 192], "127": [15, 134, 192], "int16": [15, 134, 192], "32768": [15, 134, 192], "32767": [15, 134, 192], "int32": [15, 40, 67, 76, 85, 119, 134, 192, 227, 259, 268, 282, 338, 356], "2147483648": [15, 134, 192], "2147483647": [15, 134, 192], "int64": [15, 25, 134, 192, 212, 325], "9223372036854775808": [15, 134, 192], "9223372036854775807": [15, 134, 192], "uint8": [15, 25, 134, 192, 212, 325], "unsign": [15, 25, 134, 192, 212, 325], "uint16": [15, 134, 192], "65535": [15, 134, 192], "uint32": [15, 134, 192], "4294967295": [15, 134, 192], "uint64": [15, 134, 192], "18446744073709551615": [15, 134, 192], "float16": [15, 134, 192], "half": [15, 25, 59, 63, 81, 134, 192, 212, 247, 253, 275, 325, 350], "sign": [15, 25, 40, 59, 64, 82, 119, 134, 192, 212, 227, 247, 254, 276, 325], "expon": [15, 24, 25, 73, 88, 103, 134, 143, 192, 201, 212, 265, 294, 321, 325, 343, 359], "mantissa": [15, 134, 192], "23": [15, 24, 25, 73, 88, 100, 107, 134, 143, 192, 201, 212, 265, 294, 318, 325, 327, 343, 359], "float64": [15, 23, 59, 82, 92, 100, 107, 134, 142, 192, 200, 247, 276, 303, 318, 367], "doubl": [15, 25, 36, 61, 115, 134, 192, 212, 223, 249, 325], "52": [15, 24, 73, 81, 88, 134, 143, 192, 201, 265, 275, 294, 343, 350, 359], "complex64": [15, 59, 76, 134, 192, 247, 268], "32": [15, 24, 25, 73, 88, 134, 143, 192, 201, 212, 265, 294, 325, 343, 359], "complex128": [15, 71, 134, 192, 263, 342], "archiv": [15, 25, 59, 134, 192, 212, 247, 325], "cache_loc": [15, 134, 192], "write_back": [15, 134, 192], "skip_fast": [15, 134, 192], "verbos": [15, 18, 19, 20, 23, 59, 87, 88, 92, 93, 96, 134, 138, 139, 142, 192, 195, 196, 197, 200, 247, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 303, 304, 308, 359, 367, 368, 372], "allow_mutable_bind": [15, 134, 192], "cache_identifi": [15, 18, 134, 138, 192, 195], "__neurotools_cache__": [15, 18, 134, 138, 192, 195], "curri": [15, 36, 41, 115, 120, 134, 192, 223, 228], "pattern": [15, 25, 134, 192, 212, 325], "here": [15, 20, 25, 35, 41, 64, 81, 86, 114, 120, 134, 139, 192, 197, 212, 222, 228, 254, 275, 284, 325, 350, 358], "decotr": [15, 134, 192], "In": [15, 16, 18, 20, 23, 25, 59, 73, 134, 135, 138, 139, 142, 192, 193, 195, 197, 200, 212, 247, 265, 325, 343], "hierarch": [15, 134, 192], "filesystem": [15, 17, 18, 106, 134, 137, 138, 192, 194, 195, 324], "rsync": [15, 18, 134, 138, 192, 195], "asynchron": [15, 134, 192], "serious": [15, 134, 192], "slow": [15, 18, 100, 107, 134, 138, 192, 195, 318], "speedup": [15, 134, 192], "due": [15, 25, 59, 134, 192, 212, 247, 325], "io": [15, 134, 192], "savemat": [15, 134, 192], "loadmat": [15, 134, 192], "unfortun": [15, 134, 192], "alter": [15, 25, 134, 192, 212, 325], "retriev": [15, 102, 134, 192, 320], "Will": [15, 134, 192], "hdf5": [15, 102, 106, 134, 192, 320, 324], "Not": [15, 17, 18, 69, 87, 134, 137, 138, 192, 194, 195, 261, 285, 286, 287, 288, 289, 290, 291, 292, 293, 340], "implement": [15, 17, 18, 25, 40, 50, 59, 61, 63, 87, 103, 119, 134, 137, 138, 146, 192, 194, 195, 212, 227, 237, 247, 249, 253, 285, 286, 287, 288, 289, 290, 291, 292, 293, 321, 325], "futur": [15, 134, 192], "storang": [15, 134, 192], "new": [15, 18, 23, 25, 36, 40, 41, 59, 87, 90, 102, 115, 119, 120, 134, 138, 142, 192, 195, 200, 212, 223, 227, 228, 247, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 320, 325, 362], "previous": [15, 134, 192], "read": [15, 106, 134, 192, 324], "too": [15, 25, 64, 92, 134, 192, 212, 254, 303, 325, 367], "long": [15, 16, 17, 25, 59, 90, 134, 135, 137, 192, 193, 194, 212, 247, 298, 325, 362], "print": [15, 18, 19, 20, 23, 25, 40, 82, 90, 92, 93, 102, 105, 106, 119, 134, 138, 139, 142, 192, 195, 196, 197, 200, 212, 227, 276, 298, 303, 304, 320, 323, 324, 325, 362, 367, 368], "detaild": [15, 134, 192], "log": [15, 20, 24, 25, 41, 69, 73, 85, 87, 88, 90, 95, 97, 100, 107, 120, 134, 139, 143, 192, 197, 201, 212, 228, 261, 265, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 306, 309, 318, 325, 340, 343, 356, 359, 362, 370, 373], "Such": [15, 25, 134, 192, 212, 325], "lead": [15, 18, 23, 25, 59, 134, 138, 142, 192, 195, 200, 212, 247, 325], "subdirectori": [15, 102, 134, 192, 320], "todo": [15, 19, 46, 59, 69, 70, 81, 83, 97, 103, 106, 125, 134, 192, 196, 233, 247, 261, 262, 275, 280, 309, 321, 324, 340, 341, 350, 354, 373], "cacher": [15, 18, 134, 138, 192, 195], "fast_to_slow": [15, 134, 192], "term": [15, 24, 25, 76, 80, 88, 97, 106, 134, 143, 192, 201, 212, 268, 274, 294, 309, 324, 325, 349, 359, 373], "hierarchi": [15, 18, 134, 138, 192, 195], "slower": [15, 18, 23, 93, 134, 138, 142, 192, 195, 200, 304, 368], "fallback": [15, 134, 192], "main": [15, 18, 134, 138, 192, 195], "automat": [15, 16, 18, 23, 40, 59, 82, 119, 134, 135, 138, 142, 192, 193, 195, 200, 227, 247, 276], "newli": [15, 20, 134, 139, 192, 197], "detail": [15, 20, 25, 59, 82, 97, 134, 139, 192, 197, 212, 247, 276, 309, 325, 373], "iform": [15, 134, 192], "out": [15, 20, 23, 25, 40, 50, 59, 64, 82, 103, 119, 134, 139, 142, 146, 192, 197, 200, 212, 227, 237, 247, 254, 276, 321, 325], "manipul": [15, 134, 192], "unsaf": [15, 16, 134, 135, 192, 193], "namespac": [15, 16, 134, 135, 192, 193], "bind": [15, 16, 41, 120, 134, 135, 192, 193, 228], "exampl": [15, 18, 25, 36, 40, 41, 59, 73, 75, 82, 84, 87, 90, 91, 92, 94, 97, 106, 115, 119, 120, 134, 138, 192, 195, 212, 223, 227, 228, 247, 265, 267, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 303, 305, 309, 324, 325, 343, 344, 355, 362, 363, 367, 369, 373], "user": [15, 18, 20, 23, 25, 82, 89, 104, 134, 138, 139, 142, 192, 195, 197, 200, 212, 276, 296, 322, 325, 327], "those": [15, 16, 25, 59, 68, 134, 135, 192, 193, 212, 247, 260, 325, 339], "consequenti": [15, 134, 192], "tell": [15, 134, 192], "old": [15, 134, 192], "sub": [15, 25, 59, 134, 192, 212, 247, 325], "folder": [15, 134, 192], "deal": [16, 135, 193], "problem": [16, 20, 23, 25, 135, 139, 142, 193, 197, 200, 212, 325], "late": [16, 135, 193], "supris": [16, 135, 193], "state": [16, 20, 25, 49, 59, 85, 87, 89, 90, 135, 139, 145, 193, 197, 212, 236, 247, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 325, 356, 362], "surpris": [16, 135, 193], "extern": [16, 135, 193], "run": [16, 18, 20, 25, 39, 82, 106, 118, 135, 138, 139, 193, 195, 197, 212, 226, 276, 324, 325], "extren": [16, 135, 193], "guarante": [16, 25, 135, 193, 212, 325], "befor": [16, 18, 25, 59, 64, 69, 82, 106, 135, 138, 193, 195, 212, 247, 254, 261, 276, 324, 325, 340], "trust": [16, 135, 193], "safeti": [16, 135, 193], "hopefulli": [16, 18, 135, 138, 193, 195], "likel": [16, 135, 193], "troubl": [16, 135, 193], "immut": [16, 135, 193], "must": [16, 17, 18, 25, 59, 67, 68, 77, 85, 87, 90, 91, 104, 135, 137, 138, 193, 194, 195, 212, 247, 259, 260, 270, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 322, 325, 338, 339, 346, 356, 362, 363], "compos": [16, 30, 35, 36, 109, 114, 115, 135, 193, 217, 222, 223], "its": [16, 18, 20, 23, 25, 36, 59, 65, 69, 75, 81, 115, 135, 138, 139, 142, 193, 195, 197, 200, 212, 223, 247, 256, 261, 267, 275, 325, 340, 344, 350], "element": [16, 23, 24, 25, 36, 41, 73, 82, 88, 89, 115, 120, 135, 142, 143, 193, 200, 201, 212, 223, 228, 265, 276, 294, 296, 325, 343, 359], "probabl": [16, 23, 25, 28, 29, 40, 41, 49, 69, 84, 85, 86, 87, 90, 91, 94, 96, 100, 106, 107, 119, 120, 135, 142, 145, 193, 200, 212, 215, 216, 227, 228, 236, 261, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 299, 305, 308, 318, 324, 325, 340, 355, 356, 358, 362, 363, 369, 372], "unlikli": [16, 135, 193], "thei": [16, 18, 20, 25, 43, 50, 83, 106, 122, 135, 138, 139, 146, 193, 195, 197, 212, 230, 237, 280, 324, 325, 354], "obvious": [16, 135, 193], "latter": [16, 135, 193], "practic": [16, 25, 59, 135, 193, 212, 247, 325], "ok": [16, 17, 18, 96, 135, 137, 138, 193, 194, 195, 308, 372], "riski": [16, 18, 20, 135, 138, 139, 193, 195, 197], "formal": [16, 135, 193], "sens": [16, 83, 135, 193, 280, 354], "design": [16, 25, 59, 88, 135, 193, 212, 247, 294, 325, 359], "other": [16, 18, 20, 25, 40, 41, 59, 73, 76, 81, 89, 119, 120, 135, 138, 139, 193, 195, 197, 212, 227, 228, 247, 265, 268, 275, 296, 325, 343, 350], "incorpor": [16, 135, 193], "themselv": [16, 135, 193], "invok": [16, 135, 193], "theori": [16, 23, 25, 91, 135, 142, 193, 200, 212, 299, 325, 363], "could": [16, 18, 25, 40, 69, 119, 135, 138, 193, 195, 212, 227, 261, 325, 340], "snapshot": [16, 135, 193], "valueerror": [16, 19, 23, 25, 82, 87, 135, 142, 193, 196, 200, 212, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325], "resembl": [16, 25, 135, 193, 212, 325], "callabl": [16, 106, 135, 193, 324, 327, 337], "objet": [16, 135, 193], "determin": [17, 23, 25, 75, 81, 89, 106, 137, 142, 194, 200, 212, 267, 275, 296, 324, 325, 344, 350], "hashabl": [17, 19, 91, 137, 194, 196, 299, 363], "consist": [17, 25, 64, 137, 194, 212, 254, 325], "translat": [17, 25, 137, 194, 212, 325], "convenct": [17, 137, 194], "modern": [17, 137, 194], "filnam": [17, 137, 194], "shorter": [17, 59, 95, 137, 194, 247, 306, 370], "special": [17, 25, 137, 194, 212, 325], "escap": [17, 137, 194], "sequenc": [17, 25, 28, 29, 30, 37, 59, 83, 84, 90, 109, 116, 137, 162, 169, 194, 212, 215, 216, 217, 224, 247, 280, 281, 298, 325, 354, 355, 362], "unicod": [17, 137, 194], "broadli": [17, 137, 194], "lenient": [17, 137, 194], "pythoon": [17, 137, 194], "char": [17, 137, 194], "trigger": [17, 59, 64, 83, 137, 194, 247, 254, 280, 354], "outright": [17, 137, 194], "static": [18, 138, 195], "initi": [18, 20, 25, 59, 66, 81, 88, 89, 90, 93, 97, 138, 139, 195, 197, 212, 247, 257, 275, 294, 296, 298, 304, 309, 325, 350, 359, 362, 368, 373], "neurotools_cach": [18, 138, 195], "were": [18, 19, 20, 25, 59, 138, 139, 195, 196, 197, 212, 247, 325], "written": [18, 83, 94, 138, 195, 280, 305, 354, 369], "framework": [18, 138, 195], "oscar": [18, 138, 195], "cluster": [18, 138, 195], "brown": [18, 138, 195], "univers": [18, 25, 138, 195, 212, 325], "yet": [18, 83, 87, 138, 195, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 354], "hard": [18, 39, 118, 138, 195, 226], "delet": [18, 138, 195], "ramdisk": [18, 138, 195], "WITH": [18, 138, 195], "caution": [18, 64, 138, 195, 254], "rm": [18, 82, 138, 195, 276], "rf": [18, 138, 195], "entir": [18, 68, 138, 195, 260, 339], "ramdisk_loc": [18, 138, 195], "extrem": [18, 25, 59, 82, 138, 195, 212, 247, 276, 325], "danger": [18, 138, 195], "disabl": [18, 138, 195], "notimplementederror": [18, 138, 195], "ssd": [18, 138, 195], "drive": [18, 66, 138, 195, 257], "level2_loc": [18, 138, 195], "usav": [18, 138, 195], "override_ramdisk_loc": [18, 138, 195], "500gb": [18, 138, 195], "debian": [18, 138, 195], "linux": [18, 138, 195], "ram": [18, 63, 106, 138, 195, 253, 324], "inter": [18, 138, 195], "commun": [18, 138, 195], "metaphor": [18, 138, 195], "consid": [18, 25, 50, 80, 138, 146, 195, 212, 237, 274, 325, 349], "requir": [18, 19, 25, 64, 104, 138, 195, 196, 212, 254, 322, 325], "sudo": [18, 138, 195], "privileg": [18, 138, 195], "execut": [18, 40, 59, 119, 138, 195, 227, 247, 327], "jupyt": [18, 138, 195], "ipython": [18, 104, 138, 195, 322], "notebook": [18, 81, 104, 138, 195, 275, 322, 350], "insid": [18, 138, 195], "browser": [18, 138, 195], "hand": [18, 20, 23, 25, 138, 139, 142, 195, 197, 200, 212, 325], "configur": [18, 82, 106, 138, 195, 276, 324], "mediat": [18, 138, 195], "onto": [18, 59, 138, 195, 247], "larg": [18, 25, 59, 86, 90, 96, 138, 195, 212, 247, 284, 298, 308, 325, 358, 362, 372], "solut": [18, 23, 25, 50, 138, 142, 146, 195, 200, 212, 237, 325], "depric": [18, 106, 138, 195, 324], "spawn": [18, 138, 195], "synchron": [18, 138, 195], "reason": [18, 20, 25, 63, 96, 138, 139, 195, 197, 212, 253, 308, 325, 372], "mi": [18, 138, 195], "loss": [18, 138, 195], "sort": [18, 25, 96, 138, 195, 212, 308, 325, 372], "lazi": [18, 138, 195], "protocol": [18, 138, 195], "level1": [18, 138, 195], "home": [18, 138, 195], "mer49": [18, 138, 195], "neurotools_ramdisk": [18, 138, 195], "level2": [18, 138, 195], "level3": [18, 138, 195], "miss": [18, 20, 25, 30, 31, 37, 39, 45, 59, 68, 71, 84, 106, 109, 110, 116, 118, 124, 138, 139, 195, 197, 212, 217, 218, 224, 226, 232, 247, 260, 263, 281, 324, 325, 339, 342, 355], "repopul": [18, 138, 195], "might": [18, 20, 40, 91, 119, 138, 139, 195, 197, 227, 299, 363], "includ": [18, 19, 25, 59, 67, 82, 138, 195, 196, 212, 247, 259, 276, 325, 338], "local": [18, 59, 65, 67, 68, 71, 73, 75, 84, 90, 104, 138, 195, 247, 256, 259, 260, 263, 265, 267, 281, 298, 322, 338, 339, 342, 343, 344, 355, 362], "life": [18, 138, 195], "frequent": [18, 25, 138, 195, 212, 325], "hdd": [18, 138, 195], "larger": [18, 25, 59, 68, 69, 75, 96, 138, 195, 212, 247, 260, 261, 267, 308, 325, 339, 340, 344, 372], "dataset": [18, 45, 59, 82, 124, 138, 195, 232, 247, 276], "network": [18, 138, 195], "databas": [18, 138, 195], "memori": [18, 36, 39, 40, 115, 118, 119, 138, 195, 223, 226, 227], "unsafe_disk_cach": [18, 138, 195], "patch": [18, 138, 195], "replac": [18, 25, 59, 106, 138, 195, 212, 247, 324, 325], "persist": [18, 138, 195], "provid": [18, 19, 20, 24, 25, 59, 68, 75, 80, 82, 84, 90, 106, 138, 139, 143, 195, 196, 197, 201, 212, 247, 260, 267, 274, 276, 281, 298, 324, 325, 339, 344, 349, 355, 362], "bug": [18, 93, 138, 195, 304, 368], "wors": [18, 138, 195], "By": [18, 25, 138, 195, 212, 325], "excplitli": [18, 138, 195], "enforc": [18, 138, 195], "original": [18, 138, 195], "truccolo": [18, 96, 138, 195, 308, 372], "lab": [18, 138, 195], "myhost": [18, 138, 195], "o": [18, 25, 90, 138, 195, 212, 298, 325, 362], "unam": [18, 138, 195], "moonbas": [18, 138, 195], "level1_loc": [18, 138, 195], "media": [18, 138, 195], "neurotools_level1": [18, 138, 195], "ssd_1": [18, 138, 195], "mrule": [18, 138, 195], "level3_loc": [18, 138, 195], "ldisk_1": [18, 138, 195], "elif": [18, 138, 195], "basecamp": [18, 138, 195], "robotfortress": [18, 138, 195], "petra": [18, 138, 195], "script": [18, 138, 195], "robust": [19, 196], "pythonhost": [19, 196], "liber": [19, 196], "strict": [19, 196], "primit": [19, 196], "veri": [19, 25, 43, 59, 68, 88, 92, 122, 196, 212, 230, 247, 260, 294, 303, 325, 339, 359, 367], "chracter": [19, 196], "za": [19, 196], "z0": [19, 196], "throw": [19, 23, 25, 64, 87, 142, 196, 200, 212, 254, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325], "timer": [19, 59, 196, 247], "runtim": [19, 196], "purg": [19, 196], "kind": [19, 84, 196, 281, 355], "__wrapped__": [19, 196], "leavefre": [20, 139, 197], "show_progress": [20, 93, 139, 197, 304, 368], "implmenet": [20, 139, 197], "multiprocess": [20, 139, 197], "evaul": [20, 69, 139, 197, 261, 340], "core": [20, 40, 119, 139, 197, 227], "open": [20, 25, 139, 197, 212, 325], "handel": [20, 59, 69, 139, 197, 247, 261, 340], "correctli": [20, 59, 139, 197, 247], "fingerprint": [20, 139, 197], "recompil": [20, 139, 197], "compil": [20, 41, 120, 139, 197, 228], "dictionari": [20, 25, 78, 96, 102, 106, 139, 197, 212, 271, 308, 320, 324, 325, 347, 372], "__indirect_eval_fallback_cach": [20, 139, 197], "worker": [20, 139, 197], "pool": [20, 139, 197], "usual": [20, 139, 197], "yield": [20, 25, 82, 85, 139, 197, 212, 276, 282, 325, 356], "undefin": [20, 25, 40, 59, 119, 139, 197, 212, 227, 247, 325], "rebuild": [20, 139, 197], "lambda": [20, 25, 36, 43, 97, 115, 122, 139, 197, 212, 223, 230, 309, 325, 373], "express": [20, 25, 40, 106, 119, 139, 197, 212, 227, 324, 325], "them": [20, 25, 59, 106, 139, 197, 212, 247, 324, 325], "ahead": [20, 139, 197], "force_cach": [20, 139, 197], "force_fallback": [20, 139, 197], "allow_fallback": [20, 139, 197], "defind": [20, 139, 197], "happen": [20, 25, 93, 139, 197, 212, 304, 325, 368], "unabl": [20, 139, 197], "initiatl": [20, 139, 197], "There": [20, 139, 197], "workaround": [20, 139, 197], "your": [20, 36, 88, 115, 139, 197, 223, 294, 359], "funcion": [20, 139, 197], "launch": [20, 139, 197], "prevent": [20, 59, 77, 139, 197, 247, 270, 346], "thread": [20, 39, 40, 62, 70, 118, 119, 139, 197, 226, 227, 251, 262, 327, 341], "understand": [20, 25, 139, 197, 212, 325], "ensur": [20, 23, 64, 92, 106, 139, 142, 197, 200, 254, 303, 324, 367], "pointer": [20, 139, 197], "workspac": [20, 139, 197], "Then": [20, 25, 83, 139, 197, 212, 280, 325, 354], "gain": [20, 90, 139, 197, 298, 362], "inheret": [20, 139, 197], "context": [20, 39, 118, 139, 197, 226], "halt": [20, 139, 197], "stuck": [20, 139, 197], "hang": [20, 139, 197], "On": [20, 25, 139, 197, 212, 325], "anyth": [20, 89, 139, 197, 296, 327], "violent": [20, 139, 197], "free": [20, 93, 139, 197, 304, 368], "minu": [20, 25, 139, 197, 212, 325], "restart": [20, 25, 139, 197, 212, 325], "realli": [20, 83, 139, 197, 280, 354], "just": [20, 25, 40, 80, 104, 106, 119, 139, 197, 212, 227, 274, 322, 324, 325, 349], "propag": [20, 68, 139, 197, 260, 339], "shape": [22, 23, 24, 25, 59, 61, 69, 73, 75, 76, 82, 83, 86, 88, 90, 97, 106, 141, 142, 143, 199, 200, 201, 212, 247, 249, 261, 265, 267, 268, 276, 280, 284, 294, 298, 309, 324, 325, 340, 343, 344, 354, 358, 359, 362, 373], "similar": [23, 25, 50, 73, 75, 105, 142, 146, 200, 212, 237, 265, 267, 323, 325, 343, 344], "diag": [23, 142, 200], "matric": [23, 24, 40, 83, 119, 142, 143, 200, 201, 227, 280, 354], "triangl": [23, 78, 142, 200, 271, 347], "nxn": [23, 24, 87, 142, 143, 200, 201, 285, 286, 287, 288, 289, 290, 291, 292, 293], "diagon": [23, 24, 25, 82, 142, 143, 200, 201, 212, 276, 325], "offset": [23, 24, 59, 73, 82, 88, 97, 142, 143, 200, 201, 247, 265, 276, 294, 309, 343, 359, 373], "triu_indeci": [23, 142, 200], "somewhat": [23, 41, 120, 142, 200, 228], "multidimension": [23, 59, 142, 200, 247], "ravel": [23, 106, 142, 200, 324], "reciproc": [23, 75, 87, 142, 200, 267, 285, 286, 287, 288, 289, 290, 291, 292, 293, 344], "finit": [23, 24, 59, 64, 87, 142, 143, 200, 201, 247, 254, 285, 286, 287, 288, 289, 290, 291, 292, 293], "06": [23, 87, 142, 200, 285, 286, 287, 288, 289, 290, 291, 292, 293], "verifi": [23, 25, 68, 90, 142, 200, 212, 260, 298, 325, 339, 362], "definit": [23, 25, 87, 142, 200, 212, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325], "expect": [23, 25, 50, 75, 88, 90, 92, 142, 146, 200, 212, 237, 267, 294, 298, 303, 325, 344, 359, 362, 367], "maximum": [23, 25, 59, 76, 80, 81, 82, 90, 92, 93, 103, 142, 200, 212, 247, 268, 274, 275, 276, 298, 303, 304, 321, 325, 349, 350, 362, 367, 368], "transpos": [23, 25, 63, 64, 142, 200, 212, 253, 254, 325], "recondit": [23, 142, 200], "matirx": [23, 87, 142, 200, 285, 286, 287, 288, 289, 290, 291, 292, 293], "hermetian": [23, 142, 200], "redund": [23, 142, 200], "eigh": [23, 142, 200], "instead": [23, 25, 84, 142, 200, 212, 281, 325, 355], "eigenvalu": [23, 63, 82, 142, 200, 253, 276], "eigenvector": [23, 82, 142, 200, 276], "logarithm": [23, 25, 59, 62, 100, 107, 142, 200, 212, 247, 251, 318, 325], "solve_triangular": [23, 142, 200], "solv": [23, 24, 50, 73, 88, 142, 143, 146, 200, 201, 237, 265, 294, 343, 359], "quatrat": [23, 142, 200], "m1": [23, 75, 87, 142, 200, 267, 285, 286, 287, 288, 289, 290, 291, 292, 293, 344], "m2": [23, 87, 142, 200, 285, 286, 287, 288, 289, 290, 291, 292, 293], "wise": [23, 36, 41, 115, 120, 142, 200, 223, 228], "teo": [23, 142, 200], "pairwis": [23, 63, 64, 76, 80, 83, 97, 142, 200, 253, 254, 268, 274, 280, 309, 349, 354, 373], "mst": [23, 142, 200], "rank": [23, 25, 59, 142, 200, 212, 247, 325], "choleski": [23, 142, 200], "factor": [23, 59, 68, 69, 80, 84, 142, 200, 247, 260, 261, 274, 281, 339, 340, 349, 355], "possibli": [23, 142, 200], "recomput": [23, 142, 200], "q": [23, 25, 87, 91, 96, 100, 107, 142, 200, 212, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 308, 318, 325, 363, 372], "qq": [23, 142, 200], "dot": [23, 30, 35, 36, 87, 109, 114, 115, 142, 200, 217, 222, 223, 285, 286, 287, 288, 289, 290, 291, 292, 293], "ch": [23, 25, 142, 200, 212, 325], "chol": [23, 142, 200], "xx": [23, 25, 142, 200, 212, 325], "outer": [23, 69, 142, 200, 261, 340], "pp": [23, 25, 71, 96, 142, 200, 212, 263, 308, 325, 342, 372], "cp": [23, 142, 200], "idenet": [23, 142, 200], "ey": [23, 142, 200], "11144513": [23, 142, 200], "cartesian": [23, 142, 200], "product": [23, 24, 25, 36, 69, 73, 87, 115, 142, 143, 200, 201, 212, 223, 261, 265, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325, 340, 343], "nit": [23, 142, 200], "algorithm": [23, 25, 59, 90, 93, 142, 200, 212, 247, 298, 304, 325, 362, 368], "higham": [23, 142, 200], "2000": [23, 50, 142, 146, 200, 237], "answer": [23, 25, 104, 142, 200, 212, 322, 325], "10940283": [23, 142, 200], "900749": [23, 142, 200], "relev": [23, 25, 142, 200, 212, 325], "intellectu": [23, 142, 200], "retain": [23, 59, 82, 142, 200, 247, 276], "sega": [23, 142, 200], "sai": [23, 142, 200], "1269140": [23, 142, 200], "semi": [23, 142, 200], "epsilon": [23, 142, 200], "rebonato": [23, 142, 200], "jackel": [23, 142, 200], "1999": [23, 25, 142, 200, 212, 325], "18542094": [23, 142, 200], "minimum": [23, 59, 68, 82, 87, 88, 142, 200, 247, 260, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 339, 359], "repair": [23, 87, 142, 200, 285, 286, 287, 288, 289, 290, 291, 292, 293], "invert": [23, 59, 87, 106, 142, 200, 247, 285, 286, 287, 288, 289, 290, 291, 292, 293, 324], "alias": [23, 69, 142, 200, 261, 340], "analogi": [23, 68, 71, 142, 200, 260, 263, 339, 342], "operatornam": [23, 142, 200], "lapack": [23, 142, 200], "dtrtri": [23, 142, 200], "www": [23, 25, 88, 142, 200, 212, 294, 325, 359], "netlib": [23, 142, 200], "explor": [23, 25, 142, 200, 212, 325], "da": [23, 142, 200], "dba": [23, 142, 200], "group__double_o_t_h_e_rcomputational_ga97c5ddb103f5f6bc2dc060886aaf2ffc": [23, 142, 200], "ga97c5ddb103f5f6bc2dc060886aaf2ffc": [23, 142, 200], "doc": [23, 142, 200], "symmetr": [23, 24, 25, 69, 73, 87, 142, 143, 200, 201, 212, 261, 265, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325, 340, 343], "j": [23, 25, 76, 83, 96, 142, 200, 212, 268, 280, 308, 325, 354, 372], "psd": [23, 142, 200], "linear": [23, 41, 50, 59, 75, 82, 83, 84, 87, 88, 90, 97, 120, 142, 146, 200, 228, 237, 247, 267, 276, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 309, 344, 354, 355, 359, 362, 373], "indeci": [23, 59, 68, 76, 78, 82, 142, 200, 247, 260, 268, 271, 276, 339, 347], "multi": [23, 25, 63, 64, 68, 82, 87, 142, 200, 212, 253, 254, 260, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325, 339], "dimension": [23, 24, 25, 59, 61, 68, 71, 81, 82, 90, 95, 142, 143, 200, 201, 212, 247, 249, 260, 263, 275, 276, 298, 306, 325, 339, 342, 350, 362, 370], "reg": [23, 82, 142, 200, 276], "regular": [23, 59, 82, 83, 86, 88, 90, 142, 200, 247, 276, 280, 284, 294, 298, 354, 358, 359, 362], "xm": [23, 142, 200], "l2": [23, 82, 83, 88, 142, 200, 276, 280, 294, 354, 359], "observ": [23, 25, 82, 88, 90, 91, 94, 103, 142, 200, 212, 276, 294, 298, 299, 305, 321, 325, 359, 362, 363, 369], "explanatori": [23, 142, 200], "independ": [23, 25, 36, 64, 82, 96, 115, 142, 200, 212, 223, 254, 276, 308, 325, 372], "nsampl": [23, 25, 64, 82, 83, 88, 142, 200, 212, 254, 276, 280, 294, 325, 354, 359], "nfeatur": [23, 82, 88, 142, 200, 276, 294, 359], "respons": [23, 49, 59, 83, 97, 142, 145, 200, 236, 247, 280, 309, 354, 373], "small": [23, 25, 40, 59, 69, 77, 84, 90, 119, 142, 200, 212, 227, 247, 261, 270, 281, 298, 325, 340, 346, 355, 362], "001": [23, 142, 200], "norm": [23, 25, 30, 35, 36, 109, 114, 115, 142, 200, 212, 217, 222, 223, 325], "lasso": [23, 142, 200], "think": [23, 69, 142, 200, 261, 340], "radian": [23, 68, 71, 75, 82, 142, 200, 260, 263, 267, 276, 339, 342, 344], "behav": [23, 25, 59, 142, 200, 212, 247, 325], "multipli": [23, 25, 73, 87, 90, 142, 200, 212, 265, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 325, 343, 362], "noutput": [23, 142, 200], "bx": [23, 142, 200], "predict": [23, 82, 142, 200, 276], "approxim": [23, 25, 90, 91, 95, 100, 107, 142, 200, 212, 298, 299, 306, 318, 325, 362, 363, 370], "kroneck": [23, 142, 200], "sum": [23, 25, 36, 59, 62, 63, 80, 85, 90, 96, 100, 106, 107, 115, 142, 200, 212, 223, 247, 251, 253, 274, 282, 298, 308, 318, 324, 325, 349, 356, 362, 372], "divid": [23, 36, 59, 82, 87, 115, 142, 200, 223, 247, 276, 285, 286, 287, 288, 289, 290, 291, 292, 293], "largetst": [23, 142, 200], "selector": [23, 142, 200], "3x3": [23, 24, 73, 142, 143, 200, 201, 265, 343], "radial": [23, 24, 69, 73, 142, 143, 200, 201, 261, 265, 340, 343], "discret": [23, 24, 25, 50, 59, 61, 69, 73, 90, 91, 142, 143, 146, 200, 201, 212, 237, 247, 249, 261, 265, 298, 299, 325, 340, 343, 362, 363], "sample_defici": [23, 82, 142, 200, 276], "distort": [23, 142, 200], "eigendecomposit": [23, 142, 200], "whiten": [23, 142, 200], "tutori": [23, 88, 142, 200, 294, 359], "approach": [23, 25, 142, 200, 212, 325], "eldar": [23, 142, 200], "yc": [23, 142, 200], "2003": [23, 25, 50, 142, 146, 200, 212, 237, 325], "ieee": [23, 142, 200], "intern": [23, 25, 142, 200, 212, 325], "confer": [23, 142, 200], "acoust": [23, 142, 200], "speech": [23, 142, 200], "proceed": [23, 142, 200], "icassp": [23, 142, 200], "03": [23, 142, 200], "apr": [23, 142, 200], "vol": [23, 25, 142, 200, 212, 325], "vi": [23, 142, 200], "713": [23, 142, 200], "oppenheim": [23, 142, 200], "av": [23, 142, 200], "mmse": [23, 142, 200], "subspac": [23, 142, 200], "transact": [23, 142, 200], "jun": [23, 142, 200], "25": [23, 24, 25, 73, 88, 142, 143, 200, 201, 212, 265, 294, 325, 327, 343, 359], "49": [23, 24, 25, 73, 88, 142, 143, 200, 201, 212, 265, 294, 325, 343, 359], "1846": [23, 142, 200], "51": [23, 24, 25, 73, 88, 142, 143, 200, 201, 212, 265, 294, 325, 343, 359], "inproceed": [23, 142, 200], "eldar2003minimum": [23, 142, 200], "author": [23, 86, 142, 200, 284, 358], "yonina": [23, 142, 200], "booktitl": [23, 142, 200], "volum": [23, 25, 49, 142, 145, 200, 212, 236, 325], "page": [23, 25, 142, 200, 212, 325], "year": [23, 25, 142, 200, 212, 325], "organ": [23, 142, 200], "articl": [23, 142, 200], "eldar2003mms": [23, 142, 200], "alan": [23, 142, 200], "journal": [23, 25, 142, 200, 212, 325], "1851": [23, 142, 200], "publish": [23, 25, 142, 200, 212, 325], "reli": [23, 25, 142, 200, 212, 325], "1000": [23, 25, 50, 59, 62, 63, 64, 68, 75, 80, 83, 90, 96, 142, 146, 200, 212, 237, 247, 251, 253, 254, 260, 267, 274, 280, 298, 308, 325, 339, 344, 349, 354, 362, 372], "subplot": [23, 142, 200], "131": [23, 142, 200], "132": [23, 25, 142, 200, 212, 325], "133": [23, 25, 142, 200, 212, 325], "cat": [23, 25, 142, 200, 212, 325], "xi1": [23, 142, 200], "xi2": [23, 142, 200], "zip": [23, 36, 115, 142, 200, 223], "nfeatures\u00b2": [23, 142, 200], "overrid": [23, 142, 200], "saniti": [23, 142, 200], "while": [23, 25, 142, 200, 212, 325], "certain": [24, 64, 68, 143, 201, 254, 260, 339], "fourier": [24, 59, 62, 69, 143, 201, 247, 251, 261, 340], "coeffici": [24, 25, 36, 64, 68, 75, 82, 115, 143, 201, 212, 223, 254, 260, 267, 276, 325, 339, 344], "spars": [24, 143, 201], "domain": [24, 59, 63, 69, 83, 87, 143, 201, 247, 253, 261, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 340, 354], "circularli": [24, 59, 68, 82, 143, 201, 247, 260, 276, 339], "neighborhood": [24, 143, 201], "build": [24, 73, 88, 143, 201, 265, 294, 343, 359], "approximatelli": [24, 143, 201], "cell": [24, 81, 143, 201, 275, 350], "lxl": [24, 59, 143, 201, 247], "neumann": [24, 143, 201], "reflect": [24, 59, 61, 69, 73, 82, 84, 87, 90, 143, 201, 247, 249, 261, 265, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 340, 343, 355, 362], "csr_matrix": [24, 143, 201], "self": [24, 25, 143, 201, 212, 325], "n\u00b2xn\u00b2": [24, 143, 201], "nonzero": [24, 75, 143, 201, 267, 344], "neighbor": [24, 67, 68, 80, 84, 143, 201, 259, 260, 274, 281, 338, 339, 349, 355], "symmetri": [24, 143, 201], "lenght": [24, 143, 201], "root": [24, 25, 73, 82, 143, 201, 212, 265, 276, 325, 343], "wiener": [24, 66, 90, 143, 201, 257, 298, 362], "differentiaion": [24, 143, 201], "ssvar": [24, 143, 201], "tau": [24, 50, 66, 90, 143, 146, 201, 237, 257, 298, 362], "gaussan": [24, 143, 201], "blur": [24, 143, 201], "buffer": [24, 143, 201], "smaller": [24, 59, 68, 71, 87, 95, 143, 201, 247, 260, 263, 285, 286, 287, 288, 289, 290, 291, 292, 293, 306, 339, 342, 370], "op": [24, 40, 41, 119, 120, 143, 201, 227, 228], "tensor": [24, 143, 201], "cosin": [24, 59, 61, 69, 73, 88, 97, 143, 201, 247, 249, 261, 265, 294, 309, 340, 343, 359, 373], "basi": [24, 59, 62, 73, 88, 143, 201, 247, 251, 265, 294, 343, 359], "13": [24, 73, 88, 143, 201, 265, 294, 327, 343, 359], "14": [24, 25, 71, 73, 88, 143, 201, 212, 263, 265, 294, 325, 327, 342, 343, 359], "17": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 327, 343, 359], "18": [24, 73, 88, 96, 143, 201, 265, 294, 308, 327, 343, 359, 372], "19": [24, 73, 88, 91, 96, 143, 201, 265, 294, 299, 308, 327, 343, 359, 363, 372], "21": [24, 73, 88, 143, 201, 265, 294, 327, 343, 359], "22": [24, 73, 88, 143, 201, 265, 294, 327, 343, 359], "24": [24, 73, 88, 143, 201, 265, 294, 327, 343, 359], "26": [24, 25, 73, 88, 100, 107, 143, 201, 212, 265, 294, 318, 325, 327, 343, 359], "27": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 327, 343, 359], "28": [24, 73, 88, 143, 201, 265, 294, 327, 343, 359], "29": [24, 73, 88, 143, 201, 265, 294, 327, 343, 359], "30": [24, 25, 59, 73, 88, 143, 201, 212, 247, 265, 294, 325, 327, 343, 359], "33": [24, 73, 88, 143, 201, 265, 294, 343, 359], "34": [24, 73, 88, 143, 201, 265, 294, 327, 343, 359], "35": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "36": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "37": [24, 73, 88, 143, 201, 265, 294, 343, 359], "38": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "41": [24, 73, 88, 143, 201, 265, 294, 343, 359], "42": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "43": [24, 73, 88, 143, 201, 265, 294, 343, 359], "44": [24, 73, 88, 143, 201, 265, 294, 343, 359], "45": [24, 73, 75, 88, 143, 201, 265, 267, 294, 343, 344, 359], "46": [24, 73, 88, 143, 201, 265, 294, 343, 359], "47": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "48": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "53": [24, 73, 88, 143, 201, 265, 294, 343, 359], "54": [24, 73, 88, 143, 201, 265, 294, 343, 359], "55": [24, 73, 88, 143, 201, 265, 294, 343, 359], "56": [24, 73, 88, 143, 201, 265, 294, 343, 359], "57": [24, 25, 73, 88, 96, 143, 201, 212, 265, 294, 308, 325, 343, 359, 372], "58": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "61": [24, 73, 88, 143, 201, 265, 294, 343, 359], "62": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "63": [24, 73, 88, 143, 201, 265, 294, 343, 359], "65": [24, 73, 88, 143, 201, 265, 294, 343, 359], "66": [24, 73, 88, 143, 201, 265, 294, 343, 359], "67": [24, 73, 88, 143, 201, 265, 294, 343, 359], "68": [24, 73, 88, 143, 201, 265, 294, 343, 359], "69": [24, 73, 88, 90, 143, 201, 265, 294, 298, 343, 359, 362], "70": [24, 50, 73, 88, 143, 146, 201, 237, 265, 294, 343, 359], "71": [24, 73, 88, 143, 201, 265, 294, 343, 359], "72": [24, 73, 88, 143, 201, 265, 294, 343, 359], "73": [24, 73, 88, 143, 201, 265, 294, 343, 359], "74": [24, 73, 88, 143, 201, 265, 294, 343, 359], "75": [24, 73, 88, 143, 201, 265, 294, 343, 359], "76": [24, 73, 88, 143, 201, 265, 294, 343, 359], "77": [24, 73, 88, 143, 201, 265, 294, 343, 359], "78": [24, 73, 88, 143, 201, 265, 294, 343, 359], "79": [24, 73, 88, 143, 201, 265, 294, 343, 359], "80": [24, 25, 73, 88, 103, 143, 201, 212, 265, 294, 321, 325, 343, 359], "81": [24, 73, 88, 143, 201, 265, 294, 343, 359], "82": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "83": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "84": [24, 73, 88, 143, 201, 265, 294, 343, 359], "85": [24, 73, 88, 143, 201, 265, 294, 343, 359], "86": [24, 25, 73, 88, 143, 201, 212, 265, 294, 325, 343, 359], "87": [24, 73, 88, 143, 201, 265, 294, 343, 359], "88": [24, 73, 88, 143, 201, 265, 294, 343, 359], "89": [24, 73, 88, 143, 201, 265, 294, 343, 359], "91": [24, 73, 88, 143, 201, 265, 294, 343, 359], "92": [24, 73, 88, 143, 201, 265, 294, 343, 359], "93": [24, 73, 88, 143, 201, 265, 294, 343, 359], "94": [24, 73, 88, 143, 201, 265, 294, 343, 359], "98": [24, 73, 81, 88, 143, 201, 265, 275, 294, 343, 350, 359], "wave": [24, 25, 68, 71, 73, 75, 88, 143, 201, 212, 260, 263, 265, 267, 294, 325, 339, 342, 343, 344, 359], "quarter": [24, 73, 88, 143, 201, 265, 294, 343, 359], "n_element": [24, 73, 88, 143, 201, 265, 294, 343, 359], "n_time": [24, 73, 88, 143, 201, 265, 294, 343, 359], "min_interv": [24, 73, 88, 143, 201, 265, 294, 343, 359], "logarightm": [24, 73, 88, 143, 201, 265, 294, 343, 359], "peak": [24, 25, 59, 67, 71, 73, 81, 88, 95, 143, 201, 212, 247, 259, 263, 265, 275, 294, 306, 325, 338, 342, 343, 350, 359, 370], "constraint": [24, 73, 88, 143, 201, 265, 294, 343, 359], "n_basi": [24, 73, 88, 143, 201, 265, 294, 343, 359], "exp": [24, 25, 40, 50, 69, 73, 88, 97, 100, 107, 119, 143, 146, 201, 212, 227, 237, 261, 265, 294, 309, 318, 325, 340, 343, 359, 373], "pylab": [25, 106, 212, 324, 325], "commonli": [25, 100, 107, 212, 318, 325], "alia": [25, 69, 212, 261, 325, 327, 340], "eas": [25, 212, 325], "api": [25, 212, 325], "frac": [25, 212, 325], "int_0": [25, 212, 325], "dt": [25, 42, 49, 50, 66, 90, 105, 121, 145, 146, 212, 229, 236, 237, 257, 298, 323, 325, 362], "often": [25, 59, 212, 247, 325], "seen": [25, 212, 325], "bayesian": [25, 212, 325], "infer": [25, 89, 90, 212, 296, 298, 325, 362], "default_rng": [25, 212, 325], "pleas": [25, 82, 84, 90, 212, 276, 281, 298, 325, 355, 362], "quick": [25, 82, 212, 276, 325], "array_lik": [25, 92, 212, 303, 325, 367], "broadcast": [25, 59, 212, 247, 325], "parameter": [25, 212, 325], "trial": [25, 59, 70, 82, 212, 247, 262, 276, 325, 341], "success": [25, 212, 325], "equal": [25, 63, 212, 253, 325], "binom": [25, 212, 325], "cumul": [25, 212, 325], "estim": [25, 39, 59, 64, 68, 75, 80, 82, 84, 86, 87, 88, 90, 92, 94, 95, 96, 118, 212, 226, 247, 254, 260, 267, 274, 276, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 303, 305, 306, 308, 325, 339, 344, 349, 355, 358, 359, 362, 367, 369, 370, 372], "proport": [25, 212, 325], "peopl": [25, 212, 325], "who": [25, 212, 325], "dalgaard": [25, 212, 325], "peter": [25, 212, 325], "introductori": [25, 212, 325], "springer": [25, 212, 325], "verlag": [25, 212, 325], "2002": [25, 212, 325], "glantz": [25, 212, 325], "stanton": [25, 212, 325], "primer": [25, 212, 325], "biostatist": [25, 212, 325], "mcgraw": [25, 212, 325], "hill": [25, 41, 89, 120, 212, 228, 296, 325], "fifth": [25, 212, 325], "edit": [25, 212, 325], "lentner": [25, 212, 325], "marvin": [25, 212, 325], "elementari": [25, 212, 325], "bogden": [25, 212, 325], "quiglei": [25, 212, 325], "1972": [25, 212, 325], "weisstein": [25, 212, 325], "eric": [25, 212, 325], "mathworld": [25, 212, 325], "wolfram": [25, 212, 325], "web": [25, 73, 212, 265, 325, 343], "resourc": [25, 212, 325], "binomialdistribut": [25, 212, 325], "wikipedia": [25, 90, 212, 298, 325, 362], "en": [25, 90, 212, 298, 325, 362], "wiki": [25, 90, 212, 298, 325, 362], "binomial_distribut": [25, 212, 325], "coin": [25, 212, 325], "world": [25, 212, 325], "compani": [25, 212, 325], "drill": [25, 212, 325], "wild": [25, 212, 325], "oil": [25, 212, 325], "nine": [25, 212, 325], "000": [25, 212, 325], "20000": [25, 212, 325], "38885": [25, 212, 325], "df": [25, 212, 325], "chi": [25, 90, 212, 298, 325, 362], "hypothesi": [25, 64, 212, 254, 325], "freedom": [25, 64, 212, 254, 325], "inappropri": [25, 212, 325], "sum_": [25, 212, 325], "mathtt": [25, 212, 325], "2_i": [25, 212, 325], "denot": [25, 40, 119, 212, 227, 325], "sim": [25, 46, 125, 212, 233, 325], "2_k": [25, 212, 325], "infti": [25, 212, 325], "nist": [25, 212, 325], "handbook": [25, 212, 325], "itl": [25, 212, 325], "gov": [25, 212, 325], "div898": [25, 212, 325], "eda": [25, 212, 325], "section3": [25, 212, 325], "eda3666": [25, 212, 325], "htm": [25, 212, 325], "89920014": [25, 212, 325], "00867716": [25, 212, 325], "13710533": [25, 212, 325], "62318272": [25, 212, 325], "arang": [25, 69, 97, 212, 261, 309, 325, 340, 373], "select": [25, 64, 69, 212, 254, 261, 325, 340], "item": [25, 82, 103, 212, 276, 321, 325], "greater": [25, 212, 325], "through": [25, 106, 212, 324, 325], "effici": [25, 39, 40, 86, 106, 118, 119, 212, 226, 227, 284, 324, 325, 358], "sampler": [25, 212, 325], "produc": [25, 36, 59, 86, 115, 212, 223, 247, 284, 325, 358], "len": [25, 59, 81, 85, 86, 88, 96, 212, 247, 275, 282, 284, 294, 308, 325, 350, 356, 358, 359, 372], "equival": [25, 36, 40, 59, 115, 119, 212, 223, 227, 247, 325], "repeat": [25, 212, 325], "arbitrari": [25, 68, 212, 260, 325, 339], "aa_milne_arr": [25, 212, 325], "pooh": [25, 212, 325], "rabbit": [25, 212, 325], "piglet": [25, 212, 325], "christoph": [25, 212, 325], "u11": [25, 212, 325], "multivari": [25, 87, 90, 212, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 325, 362], "conjug": [25, 212, 325], "prior": [25, 83, 87, 90, 212, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 325, 354, 362], "fulfil": [25, 212, 325], "x_i": [25, 86, 212, 284, 325, 358], "propto": [25, 212, 325], "prod_": [25, 212, 325], "alpha_i": [25, 212, 325], "_i": [25, 212, 325], "concentr": [25, 75, 212, 267, 325, 344], "y_i": [25, 86, 212, 284, 325, 358], "david": [25, 212, 325], "mckai": [25, 212, 325], "learn": [25, 88, 212, 294, 325, 359], "chapter": [25, 212, 325], "uk": [25, 212, 325], "mackai": [25, 212, 325], "itila": [25, 212, 325], "dirichlet_distribut": [25, 212, 325], "cite": [25, 212, 325], "cut": [25, 30, 35, 36, 59, 68, 80, 109, 114, 115, 212, 217, 222, 223, 247, 260, 274, 325, 339, 349], "had": [25, 36, 115, 212, 223, 325], "variat": [25, 68, 75, 87, 212, 260, 267, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325, 339, 344], "barh": [25, 212, 325], "Its": [25, 212, 325], "elsewher": [25, 40, 71, 119, 212, 227, 263, 325, 342], "_": [25, 212, 325], "continu": [25, 59, 83, 84, 93, 106, 212, 247, 280, 281, 304, 324, 325, 354, 355, 368], "analogu": [25, 82, 212, 276, 325], "describ": [25, 75, 212, 267, 325, 344], "situat": [25, 212, 325], "raindrop": [25, 212, 325], "rainstorm": [25, 212, 325], "request": [25, 212, 325], "peyton": [25, 212, 325], "peebl": [25, 212, 325], "jr": [25, 212, 325], "principl": [25, 82, 212, 276, 325], "4th": [25, 75, 212, 267, 325, 344], "ed": [25, 212, 325], "2001": [25, 75, 212, 267, 325, 344], "poisson_process": [25, 212, 325], "exponential_distribut": [25, 212, 325], "dfnum": [25, 212, 325], "dfden": [25, 212, 325], "denomin": [25, 212, 325], "known": [25, 39, 118, 212, 226, 325], "fisher": [25, 212, 325], "aris": [25, 93, 94, 212, 304, 305, 325, 368, 369], "anova": [25, 212, 325], "compar": [25, 64, 76, 80, 82, 96, 212, 254, 268, 274, 276, 308, 325, 349, 372], "respect": [25, 40, 78, 119, 212, 227, 271, 325, 347], "children": [25, 29, 212, 216, 325], "diabet": [25, 212, 325], "control": [25, 59, 62, 106, 212, 247, 251, 324, 325], "blood": [25, 212, 325], "glucos": [25, 212, 325], "null": [25, 64, 96, 212, 254, 308, 325, 372], "statu": [25, 93, 212, 304, 325, 368], "give": [25, 41, 120, 212, 228, 325], "61988120985": [25, 212, 325], "about": [25, 96, 212, 308, 325, 372], "chanc": [25, 64, 212, 254, 325], "exce": [25, 39, 59, 118, 212, 226, 247, 325], "reject": [25, 82, 96, 212, 276, 308, 325, 372], "sometim": [25, 212, 325], "failur": [25, 93, 212, 304, 325, 368], "electron": [25, 212, 325], "natur": [25, 41, 59, 100, 107, 120, 212, 228, 247, 318, 325], "event": [25, 50, 64, 68, 95, 146, 212, 237, 254, 260, 306, 325, 327, 339, 370], "gammadistribut": [25, 212, 325], "gamma_distribut": [25, 212, 325], "std": [25, 30, 35, 36, 59, 106, 109, 114, 115, 212, 217, 222, 223, 247, 324, 325], "sqrt": [25, 63, 92, 212, 253, 303, 325, 367], "along": [25, 59, 68, 71, 82, 95, 212, 247, 260, 263, 276, 306, 325, 339, 342, 370], "sp": [25, 212, 325], "ignor": [25, 87, 212, 285, 286, 287, 288, 289, 290, 291, 292, 293, 325, 327], "hist": [25, 77, 212, 270, 325, 346], "bernoulli": [25, 88, 90, 212, 294, 298, 325, 359, 362], "experi": [25, 59, 212, 247, 325], "outcom": [25, 212, 325], "achiev": [25, 59, 212, 247, 325], "mass": [25, 49, 84, 145, 212, 236, 281, 325, 355], "individu": [25, 212, 325], "ten": [25, 212, 325], "thousand": [25, 212, 325], "10000": [25, 90, 96, 212, 298, 308, 325, 362, 372], "succeed": [25, 212, 325], "34889999999999999": [25, 212, 325], "legaci": [25, 63, 212, 253, 325], "flag": [25, 212, 325], "bitgener": [25, 212, 325], "mt19937": [25, 212, 325], "dict": [25, 96, 102, 106, 212, 308, 320, 324, 325, 372], "624": [25, 212, 325], "po": [25, 212, 325], "has_gauss": [25, 212, 325], "cached_gaussian": [25, 212, 325], "uint": [25, 212, 325], "manual": [25, 88, 212, 294, 325, 359], "know": [25, 212, 325], "exactli": [25, 212, 325], "he": [25, 212, 325], "she": [25, 212, 325], "loc": [25, 212, 325], "below": [25, 68, 106, 212, 260, 324, 325, 339], "gumbel_l": [25, 212, 325], "gumbel_r": [25, 212, 325], "genextrem": [25, 212, 325], "smallest": [25, 212, 325], "sev": [25, 212, 325], "gev": [25, 212, 325], "tail": [25, 212, 325], "german": [25, 212, 325], "mathematician": [25, 212, 325], "emil": [25, 212, 325], "juliu": [25, 212, 325], "earli": [25, 212, 325], "hydrologi": [25, 212, 325], "literatur": [25, 212, 325], "occurr": [25, 212, 325], "flood": [25, 212, 325], "wind": [25, 212, 325], "rainfal": [25, 212, 325], "fat": [25, 212, 325], "henc": [25, 212, 325], "surprisingli": [25, 212, 325], "100": [25, 36, 41, 50, 59, 63, 64, 75, 80, 82, 84, 87, 90, 115, 120, 146, 212, 223, 228, 237, 247, 253, 254, 267, 274, 276, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 325, 344, 349, 355, 362], "underestim": [25, 64, 212, 254, 325], "frechet": [25, 212, 325], "57721": [25, 212, 325], "pi": [25, 59, 68, 88, 212, 247, 260, 294, 325, 339, 359], "york": [25, 212, 325], "columbia": [25, 212, 325], "press": [25, 106, 212, 324, 325], "1958": [25, 212, 325], "reiss": [25, 212, 325], "thoma": [25, 212, 325], "analysi": [25, 63, 68, 77, 83, 88, 212, 253, 260, 270, 280, 294, 325, 339, 346, 354, 359], "insur": [25, 212, 325], "financ": [25, 212, 325], "field": [25, 71, 212, 263, 325, 342], "basel": [25, 212, 325], "birkhaus": [25, 212, 325], "maxima": [25, 67, 68, 71, 212, 259, 260, 263, 325, 338, 339, 342], "append": [25, 82, 212, 276, 325], "ngood": [25, 212, 325], "nbad": [25, 212, 325], "good": [25, 212, 325], "nonneg": [25, 212, 325], "randomli": [25, 59, 64, 212, 247, 254, 325], "taken": [25, 63, 75, 78, 89, 212, 253, 267, 271, 296, 325, 344, 347], "hypergeom": [25, 212, 325], "le": [25, 212, 325], "urn": [25, 212, 325], "marbl": [25, 212, 325], "ball": [25, 212, 325], "wherea": [25, 212, 325], "infinit": [25, 212, 325], "As": [25, 40, 119, 212, 227, 325], "hypergeometricdistribut": [25, 212, 325], "hypergeometric_distribut": [25, 212, 325], "nsamp": [25, 212, 325], "unlik": [25, 212, 325], "suppos": [25, 212, 325], "pull": [25, 212, 325], "100000": [25, 92, 96, 212, 303, 308, 325, 367, 372], "003": [25, 212, 325], "decai": [25, 50, 97, 146, 212, 237, 309, 325, 373], "sharper": [25, 212, 325], "fatter": [25, 212, 325], "law": [25, 97, 212, 309, 325, 373], "1774": [25, 212, 325], "econom": [25, 212, 325], "health": [25, 212, 325], "scienc": [25, 212, 325], "seem": [25, 104, 212, 322, 325], "abramowitz": [25, 212, 325], "stegun": [25, 212, 325], "mathemat": [25, 100, 107, 212, 318, 325], "formula": [25, 82, 212, 276, 325], "9th": [25, 212, 325], "dover": [25, 212, 325], "kotz": [25, 212, 325], "samuel": [25, 212, 325], "et": [25, 68, 212, 260, 325, 339], "al": [25, 68, 212, 260, 325, 339], "laplacedistribut": [25, 212, 325], "laplace_distribut": [25, 212, 325], "act": [25, 212, 325], "epidemiologi": [25, 212, 325], "chess": [25, 212, 325], "feder": [25, 212, 325], "fide": [25, 212, 325], "elo": [25, 212, 325], "player": [25, 212, 325], "logisticdistribut": [25, 212, 325], "logistic_distribut": [25, 212, 325], "against": [25, 50, 146, 212, 237, 325], "def": [25, 92, 106, 212, 303, 324, 325, 367], "lgst_val": [25, 212, 325], "itself": [25, 73, 212, 265, 325, 343], "deriv": [25, 49, 59, 65, 69, 71, 81, 96, 100, 107, 145, 212, 236, 247, 256, 261, 263, 275, 308, 318, 325, 340, 342, 350, 372], "ln": [25, 212, 325], "limpert": [25, 212, 325], "stahel": [25, 212, 325], "abbt": [25, 212, 325], "clue": [25, 212, 325], "bioscienc": [25, 212, 325], "ethz": [25, 212, 325], "mid": [25, 212, 325], "linspac": [25, 212, 325], "tight": [25, 212, 325], "demonstr": [25, 212, 325], "fit": [25, 39, 65, 82, 88, 89, 90, 97, 118, 212, 226, 256, 276, 294, 296, 298, 309, 325, 359, 362, 373], "seri": [25, 59, 96, 212, 247, 308, 325, 372], "logser": [25, 212, 325], "speci": [25, 212, 325], "rich": [25, 212, 325], "propos": [25, 212, 325], "corbet": [25, 212, 325], "william": [25, 212, 325], "1943": [25, 212, 325], "occup": [25, 212, 325], "car": [25, 212, 325], "buza": [25, 212, 325], "martin": [25, 212, 325], "culver": [25, 212, 325], "stephen": [25, 212, 325], "divers": [25, 212, 325], "biodivers": [25, 212, 325], "septemb": [25, 212, 325], "187": [25, 212, 325], "195": [25, 212, 325], "ecologi": [25, 212, 325], "dali": [25, 212, 325], "lunn": [25, 212, 325], "ostrowski": [25, 212, 325], "crc": [25, 212, 325], "1994": [25, 212, 325], "logarithmic_distribut": [25, 212, 325], "pval": [25, 212, 325], "dice": [25, 212, 325], "x_0": [25, 90, 212, 298, 325, 362], "x_1": [25, 212, 325], "x_p": [25, 212, 325], "last": [25, 59, 63, 84, 105, 106, 212, 247, 253, 281, 323, 324, 325, 355], "alwai": [25, 40, 119, 212, 227, 325], "account": [25, 59, 212, 247, 325], "remain": [25, 59, 68, 212, 247, 260, 325, 339], "word": [25, 103, 212, 321, 325], "land": [25, 212, 325], "onc": [25, 41, 120, 212, 228, 325], "again": [25, 212, 325], "threw": [25, 212, 325], "die": [25, 212, 325], "leftov": [25, 212, 325], "bias": [25, 64, 212, 254, 325], "twice": [25, 212, 325], "wrong": [25, 212, 325], "traceback": [25, 212, 325], "recent": [25, 212, 325], "cov": [25, 30, 35, 36, 86, 109, 114, 115, 212, 217, 222, 223, 284, 325, 358], "check_valid": [25, 212, 325], "tol": [25, 93, 212, 304, 325, 368], "multinorm": [25, 212, 325], "higher": [25, 67, 89, 212, 259, 296, 325, 338], "analog": [25, 105, 212, 323, 325], "semidefinit": [25, 212, 325], "proper": [25, 212, 325], "arrang": [25, 212, 325], "toler": [25, 68, 92, 93, 212, 260, 303, 304, 325, 339, 367, 368], "singular": [25, 63, 212, 253, 325], "cast": [25, 40, 59, 92, 119, 212, 227, 247, 303, 325, 367], "bell": [25, 212, 325], "curv": [25, 88, 212, 294, 325, 359], "univari": [25, 75, 87, 100, 107, 212, 267, 285, 286, 287, 288, 289, 290, 291, 292, 293, 318, 325, 344], "vari": [25, 212, 325], "togeth": [25, 59, 64, 212, 247, 254, 325], "x_2": [25, 212, 325], "x_n": [25, 50, 146, 212, 237, 325], "c_": [25, 212, 325], "ij": [25, 212, 325], "x_j": [25, 212, 325], "ii": [25, 76, 78, 212, 268, 271, 325, 347], "spread": [25, 212, 325], "popular": [25, 212, 325], "spheric": [25, 212, 325], "5000": [25, 212, 325], "backward": [25, 59, 68, 87, 90, 212, 247, 260, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 325, 339, 362], "papouli": [25, 212, 325], "stochast": [25, 212, 325], "3rd": [25, 212, 325], "1991": [25, 212, 325], "duda": [25, 212, 325], "hart": [25, 212, 325], "stork": [25, 212, 325], "classif": [25, 212, 325], "2nd": [25, 212, 325], "wilei": [25, 212, 325], "800": [25, 212, 325], "bivari": [25, 212, 325], "correl": [25, 36, 59, 80, 82, 83, 96, 115, 212, 223, 247, 274, 276, 280, 308, 325, 349, 354, 372], "65465": [25, 212, 325], "pt": [25, 96, 212, 308, 325, 372], "0326911": [25, 212, 325], "01280782": [25, 212, 325], "96202397": [25, 212, 325], "85602287": [25, 212, 325], "47613949": [25, 212, 325], "corrcoef": [25, 212, 325], "6273591314603949": [25, 212, 325], "visual": [25, 69, 212, 261, 325, 340], "cloud": [25, 212, 325], "illustr": [25, 212, 325], "grid": [25, 59, 69, 77, 84, 86, 89, 212, 247, 261, 270, 281, 284, 296, 325, 340, 346, 355, 358], "occur": [25, 49, 59, 145, 212, 236, 247, 325], "reach": [25, 212, 325], "pmf": [25, 212, 325], "repeatedli": [25, 212, 325], "until": [25, 212, 325, 327], "third": [25, 36, 49, 65, 89, 115, 145, 212, 223, 236, 256, 296, 325], "negativebinomialdistribut": [25, 212, 325], "negative_binomial_distribut": [25, 212, 325], "nonc": [25, 212, 325], "noncentr": [25, 212, 325], "earlier": [25, 212, 325], "central": [25, 212, 325], "p_": [25, 212, 325], "y_": [25, 50, 146, 212, 237, 325], "2i": [25, 212, 325], "noncentral_chi": [25, 212, 325], "squared_distribut": [25, 212, 325], "200": [25, 59, 83, 212, 247, 280, 325, 354], "0000001": [25, 212, 325], "values2": [25, 212, 325], "ob": [25, 212, 325], "noncentralf": [25, 212, 325], "studi": [25, 212, 325], "area": [25, 70, 88, 212, 262, 294, 325, 341, 359], "deg": [25, 212, 325], "nc_val": [25, 212, 325], "1000000": [25, 92, 212, 303, 325, 367], "nf": [25, 212, 325], "c_val": [25, 212, 325], "de": [25, 212, 325], "moivr": [25, 212, 325], "gauss": [25, 212, 325], "characterist": [25, 212, 325], "influenc": [25, 212, 325], "tini": [25, 212, 325], "disturb": [25, 212, 325], "own": [25, 212, 325], "centr": [25, 212, 325], "increas": [25, 59, 212, 247, 325], "607": [25, 212, 325], "impli": [25, 212, 325], "ly": [25, 45, 124, 212, 232, 325], "awai": [25, 212, 325], "normal_distribut": [25, 212, 325], "theorem": [25, 212, 325], "125": [25, 212, 325], "ddof": [25, 212, 325], "four": [25, 212, 325], "49401501": [25, 212, 325], "00950034": [25, 212, 325], "81814867": [25, 212, 325], "29718677": [25, 212, 325], "39924804": [25, 212, 325], "68456316": [25, 212, 325], "99394529": [25, 212, 325], "84057254": [25, 212, 325], "lomax": [25, 212, 325], "shift": [25, 30, 35, 36, 59, 75, 109, 114, 115, 212, 217, 222, 223, 247, 267, 325, 344], "classic": [25, 212, 325], "ad": [25, 36, 41, 59, 82, 88, 115, 120, 212, 223, 228, 247, 276, 294, 325, 359], "simplifi": [25, 40, 88, 106, 119, 212, 227, 294, 324, 325, 359], "unbound": [25, 212, 325], "rule": [25, 212, 325], "genpareto": [25, 212, 325], "am": [25, 212, 325], "italian": [25, 212, 325], "economist": [25, 212, 325], "vilfredo": [25, 212, 325], "bradford": [25, 212, 325], "wealth": [25, 212, 325], "economi": [25, 212, 325], "found": [25, 43, 59, 68, 86, 93, 106, 122, 212, 230, 247, 260, 284, 304, 324, 325, 339, 358, 368], "sourceforg": [25, 88, 212, 294, 325, 359], "franci": [25, 212, 325], "hunt": [25, 212, 325], "paul": [25, 212, 325], "johnson": [25, 212, 325], "1896": [25, 212, 325], "cours": [25, 212, 325], "polit": [25, 212, 325], "lausann": [25, 212, 325], "pareto_distribut": [25, 212, 325], "arr": [25, 36, 115, 212, 223, 325], "reshap": [25, 212, 325], "lam": [25, 212, 325], "poissondistribut": [25, 212, 325], "poisson_distribut": [25, 212, 325], "500": [25, 63, 75, 212, 253, 267, 325, 344], "report": [25, 212, 325], "claim": [25, 212, 325], "christian": [25, 212, 325], "kleiber": [25, 212, 325], "actuari": [25, 212, 325], "heckert": [25, 212, 325], "filliben": [25, 212, 325], "jame": [25, 212, 325], "148": [25, 212, 325], "dataplot": [25, 212, 325], "subcommand": [25, 212, 325], "nation": [25, 212, 325], "institut": [25, 212, 325], "technologi": [25, 212, 325], "june": [25, 212, 325], "softwar": [25, 212, 325], "refman2": [25, 212, 325], "auxillar": [25, 212, 325], "powpdf": [25, 212, 325], "normed_i": [25, 212, 325], "diff": [25, 90, 212, 298, 325, 362], "rv": [25, 212, 325], "rvsp": [25, 212, 325], "powerlaw": [25, 212, 325], "d0": [25, 212, 325], "d1": [25, 212, 325], "dn": [25, 212, 325], "That": [25, 40, 88, 90, 119, 212, 227, 294, 298, 325, 359, 362], "ones": [25, 59, 86, 88, 97, 106, 212, 247, 284, 294, 309, 324, 325, 358, 359, 373], "14022471": [25, 212, 325], "96360618": [25, 212, 325], "37601032": [25, 212, 325], "25528411": [25, 212, 325], "49313049": [25, 212, 325], "94909878": [25, 212, 325], "inclus": [25, 212, 325], "exclus": [25, 212, 325], "highest": [25, 212, 325], "byteord": [25, 212, 325], "nativ": [25, 212, 325], "appropri": [25, 68, 82, 212, 260, 276, 325, 339], "omit": [25, 71, 212, 263, 325, 342], "int_lik": [25, 212, 325], "suppli": [25, 212, 325], "1923875335537315": [25, 212, 325], "int_": [25, 212, 325], "deprec": [25, 212, 325], "sinc": [25, 43, 69, 75, 105, 122, 212, 230, 261, 267, 323, 325, 340, 344], "evenli": [25, 59, 103, 212, 247, 321, 325], "choos": [25, 82, 212, 276, 325], "five": [25, 212, 325], "625": [25, 212, 325], "roll": [25, 212, 325], "six": [25, 212, 325], "d2": [25, 212, 325], "dsum": [25, 212, 325], "unif": [25, 212, 325], "47108547995356098": [25, 212, 325], "30220482": [25, 212, 325], "86820401": [25, 212, 325], "1654503": [25, 212, 325], "11659149": [25, 212, 325], "54323428": [25, 212, 325], "three": [25, 212, 325], "99149989": [25, 212, 325], "52338984": [25, 212, 325], "99091858": [25, 212, 325], "79479508": [25, 212, 325], "23204345": [25, 212, 325], "75224494": [25, 212, 325], "cdotp": [25, 212, 325], "would": [25, 36, 41, 50, 115, 120, 146, 212, 223, 228, 237, 325], "east": [25, 212, 325], "north": [25, 212, 325], "veloc": [25, 59, 75, 212, 247, 267, 325, 344], "brighton": [25, 212, 325], "ltd": [25, 212, 325], "20090514091424": [25, 212, 325], "co": [25, 70, 88, 97, 106, 212, 262, 294, 309, 324, 325, 341, 359, 373], "asp": [25, 212, 325], "rayleigh_distribut": [25, 212, 325], "tend": [25, 59, 212, 247, 325], "meter": [25, 212, 325], "meanvalu": [25, 212, 325], "modevalu": [25, 212, 325], "percentag": [25, 103, 212, 321, 325], "087300000000000003": [25, 212, 325], "rese": [25, 212, 325], "best": [25, 89, 93, 212, 296, 304, 325, 368], "recreat": [25, 212, 325], "randomst": [25, 212, 325], "seedsequ": [25, 212, 325], "123456789": [25, 212, 325], "stream": [25, 212, 325], "987654321": [25, 212, 325], "mersenn": [25, 212, 325], "twister": [25, 212, 325], "pseudo": [25, 212, 325], "although": [25, 93, 212, 304, 325, 368], "matsumoto": [25, 212, 325], "nishimura": [25, 212, 325], "623": [25, 212, 325], "equidistribut": [25, 212, 325], "pseudorandom": [25, 212, 325], "acm": [25, 212, 325], "jan": [25, 212, 325], "1998": [25, 212, 325], "place": [25, 59, 212, 247, 325], "mutablesequ": [25, 212, 325], "cauchi": [25, 212, 325], "lorentz": [25, 212, 325], "bigl": [25, 212, 325], "bigr": [25, 212, 325], "harmon": [25, 212, 325], "oscil": [25, 75, 212, 267, 325, 344], "spectral": [25, 62, 63, 83, 212, 251, 253, 280, 325, 354], "broaden": [25, 212, 325], "tilt": [25, 212, 325], "look": [25, 68, 71, 212, 260, 263, 325, 339, 342], "heavier": [25, 212, 325], "sematech": [25, 212, 325], "eda3663": [25, 212, 325], "cauchydistribut": [25, 212, 325], "cauchy_distribut": [25, 212, 325], "3x8000": [25, 212, 325], "8000": [25, 212, 325], "stdev": [25, 212, 325], "6888893": [25, 212, 325], "78096262": [25, 212, 325], "89086505": [25, 212, 325], "49876311": [25, 212, 325], "38672696": [25, 212, 325], "4685006": [25, 212, 325], "student": [25, 212, 325], "hyperbol": [25, 212, 325], "come": [25, 91, 212, 299, 325, 363], "1908": [25, 212, 325], "gosset": [25, 212, 325], "guin": [25, 212, 325], "breweri": [25, 212, 325], "dublin": [25, 212, 325], "proprietari": [25, 212, 325], "issu": [25, 69, 212, 261, 325, 340], "pseudonym": [25, 212, 325], "With": [25, 212, 325], "s_t": [25, 212, 325], "daili": [25, 212, 325], "energi": [25, 91, 212, 299, 325, 363], "intak": [25, 212, 325], "women": [25, 212, 325], "kilojoul": [25, 212, 325], "kj": [25, 212, 325], "5260": [25, 212, 325], "5470": [25, 212, 325], "5640": [25, 212, 325], "6180": [25, 212, 325], "6390": [25, 212, 325], "6515": [25, 212, 325], "6805": [25, 212, 325], "7515": [25, 212, 325], "8230": [25, 212, 325], "8770": [25, 212, 325], "systemat": [25, 212, 325], "recommend": [25, 96, 212, 308, 325, 372], "7725": [25, 212, 325], "our": [25, 64, 212, 254, 325], "absenc": [25, 212, 325], "presenc": [25, 64, 68, 212, 254, 260, 325, 339], "empir": [25, 212, 325], "unbias": [25, 64, 212, 254, 325], "final": [25, 81, 84, 97, 212, 275, 281, 309, 325, 350, 355, 373], "concav": [25, 212, 325], "6753": [25, 212, 325], "636363636364": [25, 212, 325], "1142": [25, 212, 325], "1232221373727": [25, 212, 325], "8207540608310198": [25, 212, 325], "adequ": [25, 212, 325], "critic": [25, 68, 69, 71, 212, 260, 261, 263, 325, 339, 340, 342], "018318": [25, 212, 325], "pre": [25, 212, 325], "condition": [25, 212, 325], "being": [25, 69, 212, 261, 325, 327, 340], "begin": [25, 59, 212, 247, 325], "leq": [25, 212, 325], "end": [25, 46, 59, 81, 82, 125, 212, 233, 247, 275, 276, 325, 350], "ill": [25, 212, 325], "knowledg": [25, 212, 325], "triangular_distribut": [25, 212, 325], "uniformli": [25, 212, 325], "equat": [25, 41, 50, 120, 146, 212, 228, 237, 325], "anywher": [25, 212, 325], "offici": [25, 212, 325], "eventu": [25, 212, 325], "satisfi": [25, 212, 325], "inequ": [25, 212, 325], "99999999": [25, 212, 325], "ones_lik": [25, 212, 325], "kappa": [25, 212, 325], "von": [25, 212, 325], "mise": [25, 212, 325], "dispers": [25, 75, 96, 212, 267, 308, 325, 344, 372], "circl": [25, 212, 325], "thought": [25, 212, 325], "i_0": [25, 212, 325], "bessel": [25, 212, 325], "richard": [25, 212, 325], "edler": [25, 212, 325], "born": [25, 212, 325], "austria": [25, 212, 325], "hungari": [25, 212, 325], "ukrain": [25, 212, 325], "fled": [25, 212, 325], "1939": [25, 212, 325], "becam": [25, 212, 325], "professor": [25, 212, 325], "harvard": [25, 212, 325], "aerodynam": [25, 212, 325], "fluid": [25, 212, 325], "mechan": [25, 212, 325], "philosophi": [25, 212, 325], "academ": [25, 212, 325], "1964": [25, 212, 325], "i0": [25, 212, 325], "num": [25, 212, 325], "infin": [25, 212, 325], "relationship": [25, 212, 325], "brownian": [25, 212, 325], "motion": [25, 59, 212, 247, 325], "1956": [25, 212, 325], "tweedi": [25, 212, 325], "cover": [25, 212, 325], "2x": [25, 212, 325], "competitor": [25, 212, 325], "reliabl": [25, 68, 75, 212, 260, 267, 325, 339, 344], "stock": [25, 212, 325], "interest": [25, 212, 325], "20090423014010": [25, 212, 325], "chhikara": [25, 212, 325], "raj": [25, 212, 325], "folk": [25, 212, 325], "leroi": [25, 212, 325], "methodologi": [25, 212, 325], "applic": [25, 212, 325], "1988": [25, 212, 325], "inverse_gaussian_distribut": [25, 212, 325], "weibull_max": [25, 212, 325], "weibull_min": [25, 212, 325], "iii": [25, 212, 325], "asymptot": [25, 97, 212, 309, 325, 373], "rosin": [25, 212, 325], "rammler": [25, 212, 325], "reduc": [25, 59, 64, 68, 212, 247, 254, 260, 325, 339], "waloddi": [25, 212, 325], "royal": [25, 96, 212, 308, 325, 372], "technic": [25, 212, 325], "stockholm": [25, 212, 325], "Of": [25, 212, 325], "strength": [25, 212, 325], "materi": [25, 212, 325], "ingeniorsvetenskapsakademien": [25, 212, 325], "handlingar": [25, 212, 325], "nr": [25, 212, 325], "151": [25, 212, 325], "generalstaben": [25, 212, 325], "litografiska": [25, 212, 325], "anstalt": [25, 212, 325], "forlag": [25, 212, 325], "asm": [25, 212, 325], "paper": [25, 212, 325], "1951": [25, 212, 325], "weibull_distribut": [25, 212, 325], "weib": [25, 212, 325], "zeta": [25, 212, 325], "geq": [25, 212, 325], "riemann": [25, 212, 325], "american": [25, 212, 325], "linguist": [25, 212, 325], "georg": [25, 212, 325], "kingslei": [25, 212, 325], "languag": [25, 212, 325], "cambridg": [25, 212, 325], "ma": [25, 212, 325], "univ": [25, 212, 325], "1932": [25, 212, 325], "bincount": [25, 212, 325], "semilogi": [25, 212, 325], "huffman": [26, 27, 157, 213, 214], "naryhuffman": [26, 27, 157, 213, 214], "cl": [26, 30, 109, 162, 213, 217], "cpu": [26, 30, 37, 40, 62, 109, 116, 119, 162, 213, 217, 224, 227, 251], "cu": [26, 30, 109, 162, 213, 217], "izh": [26, 48, 144, 202, 213, 235], "dv_izh": [26, 48, 49, 144, 145, 213, 235, 236], "du_izh": [26, 48, 49, 144, 145, 213, 235, 236], "update_izh": [26, 48, 49, 144, 145, 213, 235, 236], "sim_izh": [26, 48, 49, 144, 145, 213, 235, 236], "lif": [26, 48, 144, 202, 213, 235], "euler_integrate_lif": [26, 48, 50, 144, 146, 213, 235, 237], "exponential_integrate_lif": [26, 48, 50, 144, 146, 213, 235, 237], "exponential_moving_averag": [26, 48, 50, 144, 146, 213, 235, 237], "unmaintain": [26, 213], "walk": [27, 28, 29, 214, 215, 216], "encode_packet": [27, 28, 29, 214, 215, 216], "decod": [27, 28, 29, 214, 215, 216], "symbol": [28, 29, 215, 216], "devic": [30, 31, 37, 109, 110, 116, 162, 163, 169, 217, 218, 224], "flat": [30, 35, 36, 109, 114, 115, 217, 222, 223], "idivup": [30, 35, 36, 109, 114, 115, 217, 222, 223], "fanci": [30, 35, 36, 109, 114, 115, 217, 222, 223], "elem": [30, 35, 36, 109, 114, 115, 217, 222, 223], "mmap": [30, 35, 36, 109, 114, 115, 217, 222, 223], "ldif": [30, 35, 36, 109, 114, 115, 217, 222, 223], "lsum": [30, 35, 36, 109, 114, 115, 217, 222, 223], "lmul": [30, 35, 36, 109, 114, 115, 217, 222, 223], "lpow": [30, 35, 36, 109, 114, 115, 217, 222, 223], "ldif2": [30, 35, 36, 109, 114, 115, 217, 222, 223], "lsum2": [30, 35, 36, 109, 114, 115, 217, 222, 223], "lmul2": [30, 35, 36, 109, 114, 115, 217, 222, 223], "ldiv2": [30, 35, 36, 109, 114, 115, 217, 222, 223], "lpow2": [30, 35, 36, 109, 114, 115, 217, 222, 223], "var": [30, 35, 36, 59, 90, 106, 109, 114, 115, 217, 222, 223, 247, 298, 324, 362], "svar": [30, 35, 36, 109, 114, 115, 217, 222, 223], "sstd": [30, 35, 36, 109, 114, 115, 217, 222, 223], "sem": [30, 35, 36, 109, 114, 115, 217, 222, 223], "corr": [30, 35, 36, 109, 114, 115, 217, 222, 223], "mdif": [30, 35, 36, 109, 114, 115, 217, 222, 223], "msum": [30, 35, 36, 109, 114, 115, 217, 222, 223], "mmul": [30, 35, 36, 109, 114, 115, 217, 222, 223], "mdiv": [30, 35, 36, 109, 114, 115, 217, 222, 223], "mpow": [30, 35, 36, 109, 114, 115, 217, 222, 223], "mmean": [30, 35, 36, 109, 114, 115, 217, 222, 223], "mstd": [30, 35, 36, 109, 114, 115, 217, 222, 223], "mvar": [30, 35, 36, 109, 114, 115, 217, 222, 223], "rnorm": [30, 35, 36, 109, 114, 115, 217, 222, 223], "gpuboxconv_cor": [30, 37, 38, 109, 116, 117, 217, 224, 225], "gpuboxconv": [30, 37, 38, 109, 116, 117, 217, 224, 225], "estimatethreadsperblock": [30, 37, 39, 109, 116, 118, 217, 224, 226], "estimateblock": [30, 37, 39, 109, 116, 118, 217, 224, 226], "estimateloop": [30, 37, 39, 109, 116, 118, 217, 224, 226], "card_info": [30, 37, 39, 109, 116, 118, 217, 224, 226], "printkernel": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpubin": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpuscalar": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpumap": [30, 37, 40, 43, 109, 116, 119, 122, 217, 224, 227, 230], "gpuintmap": [30, 37, 40, 109, 116, 119, 217, 224, 227], "expsub": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpumapeq": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpubinaryeq": [30, 37, 40, 43, 109, 116, 119, 122, 217, 224, 227, 230], "guessgputyp": [30, 37, 40, 109, 116, 119, 217, 224, 227], "togputyp": [30, 37, 40, 109, 116, 119, 217, 224, 227], "ezkern": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpupoint": [30, 37, 40, 46, 109, 116, 119, 125, 217, 224, 227, 233], "gpufloat": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpufloatmat": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpufloatr": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpuint": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpuintmat": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpuintr": [30, 37, 40, 109, 116, 119, 217, 224, 227], "gpufun": [30, 37, 109, 116, 162, 169, 217, 224], "gpulcomb": [30, 37, 41, 109, 116, 120, 217, 224, 228], "gpumean": [30, 37, 41, 109, 116, 120, 217, 224, 228], "gpunpdf": [30, 37, 41, 46, 109, 116, 120, 125, 217, 224, 228, 233], "gpulogpdf": [30, 37, 41, 109, 116, 120, 217, 224, 228], "gpuhil": [30, 37, 41, 109, 116, 120, 217, 224, 228], "gpurandf": [30, 37, 41, 109, 116, 120, 217, 224, 228], "gpuuniform": [30, 37, 41, 109, 116, 120, 217, 224, 228], "gpurandexp": [30, 37, 41, 109, 116, 120, 217, 224, 228], "random_point_sheet": [30, 37, 42, 109, 116, 121, 217, 224, 229], "uniform_point_sheet": [30, 37, 42, 109, 116, 121, 217, 224, 229], "connect_gaussian": [30, 37, 42, 109, 116, 121, 217, 224, 229], "spherepoint": [30, 37, 42, 109, 116, 121, 217, 224, 229], "logic": [30, 37, 106, 109, 116, 162, 169, 217, 224, 324], "gpult": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpugt": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpueq": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpuneq": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpulteq": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpugteq": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpunot": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpuy": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpuand": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpunor": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpuhzero": [30, 37, 43, 109, 116, 122, 217, 224, 230], "gpurang": [30, 37, 43, 109, 116, 122, 217, 224, 230], "elementwisekernel": [30, 37, 45, 109, 116, 124, 217, 224, 232], "gpubarlinedata": [30, 37, 45, 109, 116, 124, 217, 224, 232], "sebarlin": [30, 37, 45, 109, 116, 124, 217, 224, 232], "sebarline2": [30, 37, 45, 109, 116, 124, 217, 224, 232], "gpuhistogram": [30, 37, 45, 109, 116, 124, 217, 224, 232], "gpusequenceautodetect": [30, 37, 46, 109, 116, 125, 217, 224, 233], "gpupointautodist": [30, 37, 46, 109, 116, 125, 217, 224, 233], "gpuautometr": [30, 37, 46, 109, 116, 125, 217, 224, 233], "gpumagmetr": [30, 37, 46, 109, 116, 125, 217, 224, 233], "gpudotmetr": [30, 37, 46, 109, 116, 125, 217, 224, 233], "deltamag": [30, 37, 46, 109, 116, 125, 217, 224, 233], "summag": [30, 37, 46, 109, 116, 125, 217, 224, 233], "gpuderiv": [30, 37, 46, 109, 116, 125, 217, 224, 233], "gpusmooth": [30, 37, 46, 109, 116, 125, 217, 224, 233], "gputh": [30, 37, 46, 109, 116, 125, 217, 224, 233], "mulmag": [30, 37, 46, 109, 116, 125, 217, 224, 233], "frameeat": [30, 37, 46, 109, 116, 125, 217, 224, 233], "gpusubsetmean": [30, 37, 46, 109, 116, 125, 217, 224, 233], "gpusubsetgfit": [30, 37, 46, 109, 116, 125, 217, 224, 233], "gpulognpdf": [30, 37, 46, 109, 116, 125, 217, 224, 233], "fitgaussbimod": [30, 37, 46, 109, 116, 125, 217, 224, 233], "fitgausstrimod": [30, 37, 46, 109, 116, 125, 217, 224, 233], "live": [35, 114, 222], "anonym": [36, 115, 223], "sphinx": [36, 115, 223], "autodoc": [36, 115, 223], "tripl": [36, 115, 223], "quot": [36, 115, 223], "follo": [36, 115, 223], "declataion": [36, 115, 223], "naiv": [36, 115, 223], "concaten": [36, 103, 115, 223, 321], "lot": [36, 115, 223], "composit": [36, 115, 223], "interpret": [36, 59, 68, 75, 115, 223, 247, 260, 267, 339, 344], "eqival": [36, 115, 223], "ceil": [36, 59, 115, 223, 247], "wap": [36, 115, 223], "math": [36, 115, 223], "markup": [36, 115, 223], "elementwis": [36, 41, 115, 120, 223, 228], "lista": [36, 115, 223], "listb": [36, 115, 223], "verion": [36, 115, 223], "succesor": [36, 115, 223], "everi": [36, 68, 71, 75, 82, 90, 115, 223, 260, 263, 267, 276, 298, 339, 342, 344, 362], "pearson": [36, 82, 115, 223, 276], "rowlen": [36, 115, 223], "subscript": [36, 115, 223], "facilit": [36, 115, 223], "creation": [36, 40, 115, 119, 223, 227], "100x100": [36, 115, 223], "gpuarrai": [36, 40, 41, 115, 119, 120, 223, 227, 228], "slice": [36, 59, 115, 223, 247], "section": [36, 61, 115, 223, 249], "cudamodul": [39, 118, 226], "accepta": [39, 118, 226], "cuda": [39, 40, 118, 119, 226, 227], "block": [39, 40, 59, 75, 82, 83, 88, 118, 119, 226, 227, 247, 267, 276, 280, 294, 344, 354, 359], "per": [39, 50, 68, 75, 118, 146, 226, 237, 260, 267, 339, 344], "warp": [39, 118, 226], "n_unit": [39, 118, 226], "multiprocessor": [39, 118, 226], "my": [39, 40, 118, 119, 226, 227], "convent": [39, 43, 59, 118, 122, 226, 230, 247], "unclear": [39, 118, 226], "weather": [39, 118, 226], "processor": [39, 118, 226], "enough": [39, 118, 226], "pycuda": [39, 40, 41, 118, 119, 120, 226, 227, 228], "formatt": [40, 119, 227], "mostli": [40, 61, 119, 227, 249], "indent": [40, 119, 227], "fun": [40, 106, 119, 227, 324], "autom": [40, 119, 227], "dollar": [40, 119, 227], "clone": [40, 41, 119, 120, 227, 228], "idenitii": [40, 119, 227], "assign": [40, 84, 90, 94, 119, 227, 281, 298, 305, 355, 362, 369], "nontrivi": [40, 119, 227], "nonlinear": [40, 68, 96, 119, 227, 260, 308, 339, 372], "datatyp": [40, 92, 119, 227, 303, 367], "alloc": [40, 119, 227], "suppliment": [40, 119, 227], "hold": [40, 119, 227], "moment": [40, 90, 92, 119, 227, 298, 303, 362, 367], "header": [40, 119, 227], "easi": [40, 119, 227], "bodi": [40, 119, 227], "tid": [40, 119, 227], "manag": [40, 119, 227], "gpuarr": [40, 119, 227], "reduct": [40, 119, 227], "succint": [40, 119, 227], "sever": [41, 86, 120, 228, 284, 358], "simpl": [41, 120, 228], "orix": [41, 120, 228], "succinctli": [41, 120, 228], "overload": [41, 120, 228], "duplic": [41, 78, 120, 228, 271, 347], "useless": [41, 120, 228], "cumath": [41, 120, 228], "syntax": [41, 120, 228], "weight1": [41, 120, 228], "weight2": [41, 120, 228], "data1": [41, 120, 228], "data2": [41, 120, 228], "succes": [41, 120, 228], "recompili": [41, 120, 228], "evalu": [41, 64, 82, 84, 85, 87, 88, 89, 92, 93, 100, 107, 120, 228, 254, 276, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 303, 304, 318, 355, 356, 359, 367, 368], "gpupdf": [41, 120, 228], "compili": [41, 120, 228], "standard_devi": [41, 120, 228], "distribt": [41, 120, 228], "noncoop": [41, 120, 228], "curandom": [41, 120, 228], "basic": [43, 122, 230], "iverson": [43, 122, 230], "0f": [43, 122, 230], "nevertheless": [43, 122, 230], "circumst": [43, 122, 230], "xdata": [45, 124, 232], "ydata": [45, 124, 232], "minval": [45, 124, 232], "maxval": [45, 124, 232], "lx": [45, 124, 232], "thresh": [46, 68, 125, 233, 260, 339], "13k": [46, 125, 233], "timestep": [46, 125, 233], "256x256": [46, 125, 233], "datapoint": [46, 125, 233], "inner": [46, 125, 233], "rad": [46, 125, 233], "maxfram": [46, 125, 233], "frame": [46, 59, 68, 75, 125, 233, 247, 260, 267, 327, 337, 339, 344], "tab": [46, 125, 233], "next": [46, 125, 233], "izhikevich": [49, 145, 236], "dv": [49, 50, 145, 146, 236, 237], "neuron": [49, 83, 145, 236, 280, 354], "ntime": [49, 62, 68, 71, 75, 82, 145, 236, 251, 260, 263, 267, 276, 339, 342, 344], "leaki": [50, 146, 237], "fire": [50, 146, 237], "g_l": [50, 146, 237], "g_e": [50, 146, 237], "00074": [50, 146, 237], "e_": [50, 146, 237], "e_l": [50, 146, 237], "g_": [50, 146, 237], "baker": [50, 146, 237], "pinch": [50, 146, 237], "lemon": [50, 146, 237], "euler": [50, 146, 237], "though": [50, 146, 237], "synapt": [50, 146, 237], "activ": [50, 75, 146, 237, 267, 344], "uf": [50, 146, 237], "membran": [50, 146, 237], "capacit": [50, 146, 237], "leak": [50, 146, 237], "conduct": [50, 146, 237], "mv": [50, 75, 146, 237, 267, 344], "rest": [50, 146, 237], "excitatori": [50, 146, 237], "constant": [50, 66, 69, 75, 82, 85, 88, 97, 100, 107, 146, 237, 257, 261, 267, 276, 282, 294, 309, 318, 340, 344, 356, 359, 373], "hz": [50, 59, 62, 63, 64, 65, 75, 84, 146, 237, 247, 251, 253, 254, 256, 267, 281, 344, 355], "10m": [50, 146, 237], "rc": [50, 146, 237], "epsp": [50, 146, 237], "microvolt": [50, 146, 237], "1mv": [50, 146, 237], "emper": [50, 146, 237], "farad": [50, 146, 237], "volt": [50, 146, 237], "amper": [50, 146, 237], "siemen": [50, 146, 237], "ohm": [50, 146, 237], "millisiemen": [50, 146, 237], "millivolt": [50, 146, 237], "microamp": [50, 146, 237], "microfarad": [50, 146, 237], "millisecond": [50, 105, 146, 237, 323], "clf": [50, 146, 237], "y_n": [50, 146, 237], "convolv": [50, 59, 61, 73, 146, 237, 247, 249, 265, 343], "heavisid": [50, 146, 237], "And": [50, 146, 237], "exact": [50, 146, 237], "impuls": [50, 83, 97, 146, 237, 280, 309, 354, 373], "y_0": [50, 146, 237], "rbm_util": [52, 144, 147, 202, 205, 213, 239], "stutil": [52, 56, 144, 147, 151, 205, 209, 239, 243], "rbm_helper": [52, 144, 147, 202, 205, 213, 239], "rbm_sampl": [52, 144, 147, 202, 205, 213, 239], "gemoetr": [59, 247], "fa": [59, 62, 75, 247, 251, 267, 344], "cutoff": [59, 62, 65, 68, 69, 71, 247, 251, 256, 260, 261, 263, 339, 340, 342], "fb": [59, 62, 75, 83, 247, 251, 267, 280, 344, 354], "guassian": [59, 247], "clamp": [59, 247], "filter": [59, 65, 69, 83, 87, 90, 247, 256, 261, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 340, 354, 362], "nbasi": [59, 247], "tile": [59, 247], "minima": [59, 68, 71, 247, 260, 263, 339, 342], "amplitud": [59, 68, 71, 75, 97, 247, 260, 263, 267, 309, 339, 342, 344, 373], "envelop": [59, 68, 247, 260, 339], "hilbert": [59, 247], "narrow": [59, 247], "watch": [59, 247], "snippit": [59, 64, 247, 254], "surrond": [59, 247], "typic": [59, 75, 86, 247, 267, 284, 344, 358], "summari": [59, 63, 64, 68, 82, 89, 247, 253, 254, 260, 276, 296, 339], "dimensionan": [59, 247], "erro": [59, 247], "handi": [59, 247], "middl": [59, 73, 75, 247, 265, 267, 343, 344], "mirrord": [59, 247], "condtit": [59, 247], "zerophas": [59, 247], "bandstop": [59, 247], "ring": [59, 247], "fiter": [59, 247], "unrealist": [59, 247], "compens": [59, 247], "underflow": [59, 88, 247, 294, 359], "stabil": [59, 75, 247, 267, 344], "freq": [59, 62, 64, 247, 251, 254], "lowpass": [59, 247], "highpass": [59, 247], "butterworth": [59, 247], "IF": [59, 247], "smoothat": [59, 247], "padmod": [59, 247], "filtr": [59, 247], "trim": [59, 68, 247, 260, 339], "slide": [59, 75, 247, 267, 344], "pct": [59, 247], "wraparound": [59, 247], "undesir": [59, 247], "ambigu": [59, 247], "halfwai": [59, 247], "instantan": [59, 247], "od": [59, 247], "decreas": [59, 247], "wari": [59, 247], "nois": [59, 68, 75, 247, 260, 267, 339, 344], "contract": [59, 247], "pad_edg": [59, 247], "treatch": [59, 247], "treat": [59, 87, 247, 285, 286, 287, 288, 289, 290, 291, 292, 293], "2xn": [59, 247], "period": [59, 247], "outsiz": [59, 247], "gap": [59, 247], "streach": [59, 247], "durat": [59, 80, 81, 247, 274, 275, 349, 350], "advanc": [59, 247], "portion": [59, 247], "reson": [59, 247, 327], "resonantdr": [59, 247], "statfunct": [59, 247], "sample_match": [59, 247], "buit": [59, 247], "ins": [59, 247], "opposit": [59, 64, 247, 254], "nyquist": [59, 64, 247, 254], "address": [59, 93, 96, 247, 304, 308, 368, 372], "bandwidth": [59, 63, 64, 247, 253, 254], "artifact": [59, 247], "240": [59, 247], "singnal": [59, 247], "quadrat": [59, 247], "particularli": [59, 247], "higkinemat": [59, 247], "trajectori": [59, 90, 247, 298, 362], "track": [59, 87, 247, 285, 286, 287, 288, 289, 290, 291, 292, 293], "sharp": [59, 247], "spectrum": [59, 63, 247, 253], "cc": [59, 82, 247, 276], "ignore_nan": [59, 247], "trend": [59, 247], "score": [59, 75, 247, 267, 344], "preven": [59, 247], "instabl": [59, 247], "refular": [59, 247], "subtract": [59, 82, 247, 276], "analytic_sign": [59, 247], "doplot": [59, 247], "analyt": [59, 68, 71, 75, 247, 260, 263, 267, 339, 342, 344], "cross": [59, 71, 80, 82, 83, 88, 247, 263, 274, 276, 280, 294, 342, 349, 354, 359], "rectifi": [59, 247], "heuriddddst": [59, 247], "basd": [59, 247], "abnorm": [59, 247], "extremum": [59, 247], "voltag": [59, 247], "curvatur": [59, 247], "demodul": [59, 247], "lag": [59, 80, 83, 247, 274, 280, 349, 354], "fft": [59, 62, 64, 247, 251, 254], "matter": [59, 247], "acf": [59, 247], "mirror": [59, 61, 69, 247, 249, 261, 340], "partial_t": [59, 247], "syst": [59, 247], "nlag": [59, 247], "lagspac": [59, 247], "retrospect": [59, 247], "causal": [59, 247], "featur": [59, 81, 82, 88, 247, 275, 276, 294, 350, 359], "interp1d": [59, 84, 247, 281, 355], "autocorrelogram": [59, 247], "triggerd": [59, 247], "dspguru": [59, 247], "dsp": [59, 247], "howto": [59, 247], "gloabal": [59, 247], "smoothli": [59, 69, 247, 261, 340], "group_siz": [59, 247], "killep": [59, 247], "quirk": [59, 247], "done": [59, 247], "maze": [59, 247], "mous": [59, 247], "spend": [59, 247], "dynam": [59, 68, 247, 260, 339], "dedicatd": [59, 247], "heurist": [59, 64, 247, 254], "dan": [59, 247], "helen": [59, 247], "ethan": [59, 247], "isn": [59, 247], "rankdata": [59, 247], "dedic": [59, 247], "timepoint": [59, 68, 75, 247, 260, 267, 339, 344], "actual": [59, 64, 247, 254], "uinform": [59, 247], "raw": [59, 64, 247, 254], "blank": [59, 247], "did": [59, 81, 247, 275, 350], "recontruct": [59, 247], "original_x": [59, 247], "lfp": [59, 62, 64, 83, 247, 251, 254, 280, 354], "hbw": [59, 247], "record": [59, 247], "1000hz": [59, 247], "60hz": [59, 247], "overton": [59, 247], "usa": [59, 247], "replc": [59, 247], "stastist": [59, 247], "2h": [61, 249], "2w": [61, 249], "shaoe": [61, 249], "3d": [61, 68, 249, 260, 339], "supersed": [61, 69, 249, 261, 340], "k2": [61, 249], "wavelength": [62, 68, 251, 260, 339], "tempor": [62, 251], "nfreqss": [62, 251], "post": [62, 81, 95, 251, 275, 306, 350, 370], "magnitu": [62, 251], "nfreq": [62, 251], "specral": [62, 251], "nchannel": [62, 68, 71, 75, 251, 260, 263, 267, 339, 342, 344], "tradeoff": [62, 251], "timescal": [62, 251], "synchroni": [62, 75, 251, 267, 344], "nch": [62, 251], "wavelt": [62, 251], "taper": [63, 64, 253, 254], "half_bandwidth_paramet": [63, 253], "dpss": [63, 253], "advantag": [63, 253], "expens": [63, 64, 253, 254], "nodc": [63, 253], "bw": [63, 253], "NOT": [63, 87, 253, 285, 286, 287, 288, 289, 290, 291, 292, 293], "lowf": [63, 253], "highf": [63, 253], "ntaper": [63, 64, 253, 254], "use_parallel": [63, 253], "coupl": [64, 254], "sigal": [64, 254], "bia": [64, 90, 254, 298, 362], "vicin": [64, 254], "attai": [64, 254], "npp": [64, 254], "transpose_warn": [64, 254], "nspike": [64, 254], "nwindow": [64, 254], "trace": [64, 254], "surround": [64, 254], "expos": [64, 254], "examin": [64, 75, 254, 267, 327, 344], "lfp_segment": [64, 254], "booleanl": [64, 254], "nrand": [64, 254], "deafult": [64, 254], "nrandom": [64, 254], "trian": [64, 254], "savitski": [65, 256], "golai": [65, 256], "polynomi": [65, 256], "spline": [65, 256], "fc": [65, 256], "2m": [65, 256], "ou": [66, 257], "ntrial": [66, 83, 96, 257, 280, 308, 354, 372], "ornstein": [66, 257], "uhlenbeck": [66, 257], "damp": [66, 97, 257, 309, 373], "rxr": [67, 259, 338], "electrod": [68, 260, 339], "nd": [68, 75, 260, 267, 339, 344], "kuramoto": [68, 75, 260, 267, 339, 344], "kuramotor": [68, 75, 260, 267, 339, 344], "syncroni": [68, 260, 339], "diment": [68, 260, 339], "exept": [68, 260, 339], "arra": [68, 260, 339], "electrode_spac": [68, 260, 339], "mm": [68, 69, 260, 261, 339, 340], "4mm": [68, 260, 339], "utah": [68, 260, 339], "nclockwis": [68, 260, 339], "clockwis": [68, 71, 260, 263, 339, 342], "nanticlockwis": [68, 260, 339], "anticlockwis": [68, 71, 260, 263, 339, 342], "nsaddl": [68, 260, 339], "saddl": [68, 71, 260, 263, 339, 342], "nmaxima": [68, 260, 339], "nminima": [68, 260, 339], "magnitur": [68, 260, 339], "cycl": [68, 75, 260, 267, 339, 344], "accur": [68, 69, 100, 107, 260, 261, 318, 339, 340], "assess": [68, 260, 339], "directionl": [68, 260, 339], "contribut": [68, 260, 339], "direction": [68, 260, 339], "pgd": [68, 260, 339], "planar": [68, 260, 339], "denois": [68, 260, 339], "accuraci": [68, 88, 260, 294, 339, 359], "mitig": [68, 260, 339], "impact": [68, 260, 339], "rubinto": [68, 260, 339], "2009": [68, 260, 339], "pg": [68, 260, 339], "easier": [68, 75, 260, 267, 339, 344], "nonlinearli": [68, 260, 339], "empti": [68, 260, 339], "crop": [68, 260, 339], "lxkxntime": [68, 260, 339], "primarili": [69, 261, 340], "h_w": [69, 261, 340], "aa": [69, 261, 340], "anti": [69, 261, 340], "antialias": [69, 261, 340], "supsampl": [69, 261, 340], "retrun": [69, 261, 340], "intead": [69, 261, 340], "a_i": [69, 261, 340], "b_k": [69, 261, 340], "1j": [69, 261, 340], "guess": [69, 88, 90, 93, 261, 294, 298, 304, 340, 359, 362, 368], "brute": [69, 261, 340], "dctcut": [69, 261, 340], "compact": [69, 261, 340], "whole": [69, 261, 340], "downsampl": [69, 80, 261, 274, 340, 349], "made": [69, 261, 340], "insert": [69, 261, 340], "custom": [69, 261, 340], "impliment": [69, 261, 340], "frist": [69, 261, 340], "aribtrari": [69, 261, 340], "niter": [69, 261, 340], "multielectrod": [70, 262, 341], "session": [70, 262, 341], "ch1": [70, 262, 341], "ch2": [70, 262, 341], "epoch": [70, 75, 262, 267, 341, 344], "phi": [70, 262, 341], "cgid": [70, 262, 341], "dz": [71, 263, 342], "zorder": [71, 263, 342], "wheel": [71, 263, 342], "flow": [71, 263, 342], "anf": [71, 263, 342], "compass": [71, 263, 342], "needl": [71, 263, 342], "complex1": [71, 263, 342], "search": [71, 89, 106, 263, 296, 324, 342], "s1": [71, 75, 263, 267, 342, 344], "s2": [71, 75, 263, 267, 342, 344], "merg": [71, 78, 106, 263, 271, 324, 342, 347], "nearbi": [71, 78, 87, 263, 271, 285, 286, 287, 288, 289, 290, 291, 292, 293, 342, 347], "pk": [71, 263, 342], "neighbord": [71, 263, 342], "docoalesc": [71, 263, 342], "edgeavoid": [71, 263, 342], "antclockwis": [71, 263, 342], "ss": [71, 263, 342], "plotsaddl": [71, 263, 342], "unknown": [71, 263, 327, 342], "defualt": [71, 263, 342], "sadd": [71, 263, 342], "curl": [71, 263, 342], "wt": [71, 263, 342], "smt": [71, 263, 342], "smf": [71, 263, 342], "id": [71, 263, 327, 342], "mesh": [73, 78, 265, 271, 343, 347], "absorb": [73, 265, 343], "showim": [73, 265, 343], "bounari": [73, 265, 343], "continuum": [73, 265, 343], "magic": [73, 265, 343], "piecewis": [73, 265, 343], "johncostella": [73, 265, 343], "conceptu": [73, 265, 343], "repeatli": [73, 265, 343], "orthogon": [73, 265, 343], "help": [73, 265, 343], "maintain": [73, 265, 343], "oppos": [73, 265, 343], "pop": [75, 267, 344], "unitless": [75, 267, 344], "analag": [75, 267, 344], "tr": [75, 267, 344], "spk120918": [75, 267, 344], "get_all_analytic_pop": [75, 267, 344], "600": [75, 267, 344], "han": [75, 267, 344], "population_signal_coher": [75, 267, 344], "textrm": [75, 267, 344], "langl": [75, 267, 344], "rangl": [75, 267, 344], "notion": [75, 267, 344], "medv": [75, 267, 344], "intoform": [76, 268], "poini": [76, 268], "otherpoint": [76, 268], "inf": [76, 100, 107, 268, 318], "witin": [76, 268], "imatch": [76, 268], "xymatch": [76, 268], "closestmatch": [76, 268], "z1": [76, 268], "z2": [76, 268], "xypoint": [77, 270, 346], "\u00b2": [77, 270, 346], "ntriangl": [78, 271, 347], "indec": [78, 271, 347], "delaunai": [78, 271, 347], "simplic": [78, 271, 347], "nedg": [78, 271, 347], "iz": [78, 271, 347], "microd": [78, 271, 347], "edgelist": [78, 271, 347], "join": [78, 103, 271, 321, 347], "centroid": [78, 271, 347], "keword": [78, 271, 347], "train": [80, 81, 82, 83, 88, 274, 275, 276, 280, 294, 349, 350, 354, 359], "t1": [80, 274, 349], "t2": [80, 274, 349], "maxlag": [80, 274, 349], "stand": [80, 274, 349], "sampleat": [80, 274, 349], "adapt": [80, 86, 274, 284, 349, 358], "xc": [80, 83, 274, 280, 349, 354], "raster": [80, 274, 349], "binsiz": [80, 274, 349], "snip": [81, 275, 350], "li": [81, 275, 350], "wf": [81, 275, 350], "vallei": [81, 275, 350], "trough": [81, 275, 350], "extrema": [81, 275, 350], "123": [81, 275, 350], "thin": [81, 275, 350], "amplituc": [81, 275, 350], "300": [81, 96, 275, 308, 350, 372], "isol": [81, 275, 350], "20160802_waveform_segment": [81, 275, 350], "0349055393": [81, 275, 350], "i_f": [81, 275, 350], "logpdf": [82, 87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "fwd": [82, 90, 276, 298, 362], "bwd": [82, 90, 276, 298, 362], "mvpoissonapproxim": [82, 90, 276, 298, 362], "estiamt": [82, 276], "nfold": [82, 276], "parrit": [82, 276], "crossvalid": [82, 88, 276, 294, 359], "partit": [82, 276], "xtrain": [82, 276], "ytrain": [82, 276], "xtest": [82, 276], "ytest": [82, 276], "ntimepoint": [82, 276], "ndatapoint": [82, 276], "xh": [82, 276], "l1": [82, 97, 276, 309, 373], "vali": [82, 276], "hx": [82, 276], "err": [82, 276], "errmethod": [82, 276], "fold": [82, 88, 276, 294, 359], "lstsq": [82, 276], "anoth": [82, 276], "penalti": [82, 88, 97, 276, 294, 309, 359, 373], "constand": [82, 276], "extra": [82, 93, 103, 276, 304, 321, 368], "bhat": [82, 90, 276, 298, 362], "traina": [82, 276], "trainb": [82, 276], "testa": [82, 276], "testb": [82, 276], "blocksiz": [82, 276], "blockshuffl": [82, 276], "integet": [82, 276], "prefix": [82, 102, 103, 105, 276, 320, 321, 323], "ndarari": [82, 90, 276, 298, 362], "halv": [82, 276], "kept": [82, 276], "n_keep": [82, 276], "rank_defici": [82, 276], "princip": [82, 276], "nyfeatur": [82, 276], "fewer": [82, 103, 276, 321], "covariac": [82, 276], "abbrevi": [82, 276], "colum": [82, 276], "nobserv": [82, 276], "regressor": [82, 276], "intercept": [82, 276], "auc": [82, 276], "preserv": [82, 276], "gini": [82, 276], "impur": [82, 276], "r\u00b2": [82, 276], "g\u00b2": [82, 276], "l0": [82, 276], "explain": [82, 276], "devianc": [82, 276], "likelihood": [82, 89, 90, 276, 296, 298, 362], "held": [82, 276], "averagind": [83, 280, 354], "apologi": [83, 280, 354], "nreplica": [83, 280, 354], "nneuron": [83, 280, 354], "ft": [83, 280, 354], "fftspike": [83, 280, 354], "shrinkag": [83, 280, 354], "strenth": [83, 280, 354], "prior_var": [83, 280, 354], "x_grid": [84, 281, 355], "gaussian_kd": [84, 86, 281, 284, 355, 358], "kde": [84, 86, 95, 281, 284, 306, 355, 358, 370], "input_unit": [84, 281, 355], "intens": [84, 281, 355], "divis": [84, 281, 355], "ngrid": [84, 281, 355], "histogram2d": [84, 281, 355], "counterpart": [85, 282, 356], "longdoubl": [85, 100, 107, 282, 318, 356], "whih": [85, 282, 356], "pobabl": [85, 90, 282, 298, 356, 362], "pick": [85, 90, 282, 298, 356, 362], "accord": [85, 90, 282, 298, 356, 362], "gist": [86, 284, 358], "joferkington": [86, 284, 358], "d95101a61a02e0ba63e5": [86, 284, 358], "joe": [86, 284, 358], "kington": [86, 284, 358], "gridsiz": [86, 284, 358], "400": [86, 284, 358], "1e7": [86, 284, 358], "essenti": [86, 284, 358], "coord": [86, 284, 358], "nx": [86, 284, 358], "ny": [86, 284, 358], "xmin": [86, 284, 358], "xmax": [86, 284, 358], "ymin": [86, 284, 358], "ymax": [86, 284, 358], "weigh": [86, 284, 358], "w_i": [86, 284, 358], "sampled_dens": [86, 284, 358], "applicationss": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "logp": [87, 90, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 362], "abstract": [87, 90, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 362], "kxn": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "OR": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "pinv": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "nxk": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "p1": [87, 90, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 362], "p2": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "handle_neg": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "unitari": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "entropi": [87, 91, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 363], "m0": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "p0": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "kl": [87, 91, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 363], "diverg": [87, 91, 285, 286, 287, 288, 289, 290, 291, 292, 293, 299, 363], "mgv_dkl": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "c0": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "joint": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "kalman": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "posterior": [87, 90, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 362], "inva": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "transit": [87, 90, 285, 286, 287, 288, 289, 290, 291, 292, 293, 298, 362], "aca": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "inv": [87, 285, 286, 287, 288, 289, 290, 291, 292, 293], "instal": [88, 294, 359], "sklearn": [88, 294, 359], "scikit": [88, 94, 294, 305, 359, 369], "stabl": [88, 90, 294, 298, 359, 362], "net": [88, 294, 359], "devel": [88, 294, 359], "hessian": [88, 93, 294, 304, 359, 368], "jacobian": [88, 93, 294, 304, 359, 368], "overflow": [88, 90, 294, 298, 359, 362], "penal": [88, 294, 359], "solver": [88, 93, 294, 304, 359, 368], "link": [88, 294, 359], "explicitli": [88, 294, 359], "n_observ": [88, 294, 359], "n_featur": [88, 294, 359], "l2penalti": [88, 294, 359], "mu0": [88, 90, 94, 294, 298, 305, 359, 362, 369], "b0": [88, 294, 359], "descent": [88, 294, 359], "nxval": [88, 294, 359], "roc": [88, 294, 359], "mu_hat": [88, 294, 359], "b_hat": [88, 294, 359], "tfrac": [88, 294, 359], "1920929e": [88, 294, 359], "07": [88, 294, 359], "jac": [88, 93, 294, 304, 359, 368], "climb": [89, 296], "pargrid": [89, 296], "hyperparamet": [89, 296], "qualiti": [89, 296], "par": [89, 296], "allresult": [89, 296], "hidden": [90, 298, 362], "markov": [90, 298, 362], "loga": [90, 298, 362], "logb": [90, 298, 362], "param": [90, 93, 298, 304, 362, 368], "p01": [90, 298, 362], "p10": [90, 298, 362], "mu1": [90, 94, 298, 305, 362, 369], "maxim": [90, 298, 362], "latent": [90, 298, 362], "em": [90, 298, 362], "asymmetr": [90, 298, 362], "viterbi_algorithm": [90, 298, 362], "nstate": [90, 298, 362], "emiss": [90, 298, 362], "probabilti": [90, 298, 362], "maxit": [90, 92, 298, 303, 362, 367], "overal": [90, 298, 362], "baum": [90, 298, 362], "welch": [90, 298, 362], "algoirthm": [90, 298, 362], "n_timepoint": [90, 298, 362], "n_hidden_st": [90, 298, 362], "n_observable_st": [90, 298, 362], "pr": [90, 298, 362], "n_state": [90, 298, 362], "n_hid": [90, 298, 362], "converg": [90, 92, 93, 298, 303, 304, 362, 367, 368], "0001": [90, 298, 362], "minit": [90, 298, 362], "x0hat": [90, 298, 362], "llikelihood": [90, 298, 362], "tranisit": [90, 298, 362], "go": [90, 298, 362], "diffus": [90, 298, 362], "quadratur": [90, 298, 362], "\u03bb": [90, 298, 362], "cox": [90, 298, 362], "a\u00b2x\u00b2": [90, 298, 362], "2abx": [90, 298, 362], "b\u00b2": [90, 298, 362], "tm": [90, 298, 362], "evolv": [90, 298, 362], "px": [90, 298, 362], "concern": [91, 299, 363], "dkl": [91, 299, 363], "nat": [91, 299, 363], "shannon": [91, 299, 363], "minp": [91, 299, 363], "mayb": [91, 299, 363], "extrapol": [91, 299, 363], "mont": [92, 303, 367], "carlo": [92, 303, 367], "simplicit": [92, 303, 367], "slowli": [92, 303, 367], "ex": [92, 303, 367], "ask": [92, 104, 303, 322, 367], "exx": [92, 303, 367], "runtimeerror": [93, 304, 368], "distinguish": [93, 304, 368], "hess": [93, 304, 368], "printerror": [93, 304, 368], "failthrough": [93, 304, 368], "simplex_onli": [93, 304, 368], "dontus": [93, 304, 368], "maxfev": [93, 304, 368], "maxgev": [93, 304, 368], "retri": [93, 304, 368], "few": [93, 304, 368], "doesn": [93, 104, 304, 322, 368], "unresolv": [93, 304, 368], "upon": [93, 304, 368], "robus": [93, 304, 368], "ultim": [93, 304, 368], "nelder": [93, 304, 368], "mead": [93, 304, 368], "simplex": [93, 304, 368], "provided": [93, 304, 368], "simple_onli": [93, 304, 368], "dure": [93, 304, 368], "toi": [94, 106, 305, 324, 369], "presum": [94, 104, 305, 322, 369], "mistur": [94, 305, 369], "pr0": [94, 305, 369], "obsrev": [94, 305, 369], "belong": [94, 305, 369], "pr1": [94, 305, 369], "burst": [95, 306, 370], "refractori": [95, 306, 370], "mainli": [95, 306, 370], "isi": [95, 306, 370], "st": [95, 306, 370], "py": [96, 308, 372], "wilson": [96, 308, 372], "pid": [96, 308, 372], "pn": [96, 308, 372], "nonparametr": [96, 308, 372], "societi": [96, 308, 372], "methodolog": [96, 308, 372], "1995": [96, 308, 372], "289": [96, 308, 372], "_____________________________________________________________________________": [96, 308, 372], "tom": [96, 308, 372], "nichol": [96, 308, 372], "02": [96, 308, 372], "2007": [96, 308, 372], "cvid": [96, 308, 372], "cvn": [96, 308, 372], "pvalue_dictionari": [96, 308, 372], "test_popul": [96, 308, 372], "null_popul": [96, 308, 372], "bootstrap": [96, 308, 372], "resampl": [96, 308, 372], "cure": [96, 308, 372], "suffici": [96, 308, 372], "popa": [96, 308, 372], "popb": [96, 308, 372], "na": [96, 308, 372], "nb": [96, 308, 372], "task": [97, 309, 373], "constrain": [97, 309, 373], "lamb": [97, 309, 373], "dc": [97, 309, 373], "mx": [97, 309, 373], "7433921782255195601e": [100, 107, 318], "returntyp": [100, 107, 318], "641747557046326023": [100, 107, 318], "fist": [100, 107, 318], "factori": [100, 107, 318], "secretli": [102, 320], "hdf": [102, 320], "squeez": [102, 320], "detectstr": [102, 320], "detectscalar": [102, 320], "unpack": [102, 320], "subpath": [102, 320], "sep": [102, 103, 320, 321], "hfdf5": [102, 320], "outbut": [102, 320], "tabwidth": [103, 321], "suffix": [103, 321], "newlin": [103, 321], "columnd": [103, 321], "weird": [103, 321], "collat": [103, 321], "decim": [103, 321], "prec": [103, 321], "shortest": [103, 321], "viabl": [103, 321], "notat": [103, 321], "exp_digit": [103, 321], "separtor": [103, 321], "4f": [103, 321], "ncol": [103, 321], "1265665": [103, 321], "filepath": [104, 322], "436198": [104, 322], "ye": [104, 322], "raw_input": [104, 322], "3041986": [104, 322], "apt": [104, 322], "hit": [104, 322], "enter": [104, 106, 322, 324], "yymmdd": [105, 323], "d_": [105, 323], "doprint": [105, 323], "5849800": [105, 323], "elaps": [105, 323], "timestamp": [105, 323], "varnam": [106, 324], "someth": [106, 324], "kw": [106, 324], "prompt": [106, 324], "matlabpath": [106, 324], "concept": [106, 324], "dector": [106, 324], "extend": [106, 324], "emit": [106, 324], "infix": [106, 324], "foo": [106, 324], "pip": [106, 324], "krg": [106, 324], "matfil": [106, 324], "matfilecach": [106, 324], "ext": [106, 324], "png": [106, 324], "dirnam": [106, 324], "944536": [106, 324], "member": [106, 324], "449560": [106, 324], "1175208": [106, 324], "eleg": [106, 324], "camelcas": [106, 324], "camel": [106, 324], "4303492": [106, 324], "underscor": [106, 324], "lost": [106, 324], "synonym": [106, 324], "neurotool": [132, 138, 142, 325], "rbm": [144, 155, 202, 213], "linenois": 327, "morlet_coher": 327, "signalnum": 327, "handler": [327, 337], "action": [327, 337], "sig_dfl": [327, 337], "sig_ign": [327, 337], "getsign": [327, 337], "notic": [327, 337], "interrupt": [327, 337], "stack": [327, 337], "pthread_sigmask": 327, "fetch": 327, "sigpend": 327, "pend": 327, "deliveri": 327, "sigwait": 327, "sigset": 327, "suspend": 327, "valid_sign": 327, "intenum": 327, "itimererror": 327, "itimer_error": 327, "sigmask": 327, "sig_block": 327, "sig_unblock": 327, "sig_setmask": 327, "sighup": 327, "sigint": 327, "sigquit": 327, "sigil": 327, "sigtrap": 327, "sigabrt": 327, "sigiot": 327, "sigbu": 327, "sigfp": 327, "sigkil": 327, "sigusr1": 327, "sigsegv": 327, "sigusr2": 327, "sigpip": 327, "sigalrm": 327, "sigterm": 327, "sigchld": 327, "sigcld": 327, "sigcont": 327, "sigstop": 327, "sigtstp": 327, "sigttin": 327, "sigttou": 327, "sigurg": 327, "sigxcpu": 327, "sigxfsz": 327, "sigvtalrm": 327, "sigprof": 327, "sigwinch": 327, "sigio": 327, "sigpol": 327, "sigpwr": 327, "sigsi": 327, "sigrtmin": 327, "sigrtmax": 327, "struct_siginfo": 327, "sigwaitinfo": 327, "sigtimedwait": 327, "si_signo": 327, "si_cod": 327, "si_errno": 327, "si_pid": 327, "si_uid": 327, "si_statu": 327, "si_band": 327, "n_field": 327, "n_sequence_field": 327, "n_unnamed_field": 327, "errno": 327, "exit": 327, "spatialpsd": 338, "wave_parametric_model": 338}, "objects": {"": [[107, 0, 0, "-", "functions"], [108, 0, 0, "-", "getfftw"], [109, 0, 0, "-", "gpu"], [127, 0, 0, "-", "graphics"], [133, 0, 0, "-", "jobs"], [140, 0, 0, "-", "linalg"], [144, 0, 0, "-", "models"], [155, 0, 0, "-", "neurotools"], [325, 0, 0, "-", "nlab"], [327, 0, 0, "-", "signal"], [338, 0, 0, "-", "spatial"]], "functions": [[107, 1, 1, "", "dsigmoid"], [107, 1, 1, "", "f"], [107, 1, 1, "", "f1"], [107, 1, 1, "", "f2"], [107, 1, 1, "", "g"], [107, 1, 1, "", "inversesigmoid"], [107, 1, 1, "", "log_factorial"], [107, 1, 1, "", "npdf"], [107, 1, 1, "", "sexp"], [107, 1, 1, "", "sigmoid"], [107, 1, 1, "", "slog"]], "getfftw": [[108, 1, 1, "", "ftwthr"]], "gpu": [[110, 0, 0, "-", "cl"], [114, 0, 0, "-", "cpu"], [116, 0, 0, "-", "cu"]], "gpu.cl": [[110, 1, 1, "", "missing"]], "gpu.cpu": [[115, 0, 0, "-", "util"]], "gpu.cpu.util": [[115, 1, 1, "", "cmap"], [115, 1, 1, "", "compose"], [115, 1, 1, "", "corr"], [115, 1, 1, "", "cov"], [115, 1, 1, "", "cut"], [115, 1, 1, "", "document"], [115, 1, 1, "", "dot"], [115, 1, 1, "", "elem"], [115, 1, 1, "", "fancy"], [115, 1, 1, "", "flat"], [115, 1, 1, "", "idivup"], [115, 1, 1, "", "ldif"], [115, 1, 1, "", "ldif2"], [115, 1, 1, "", "ldiv"], [115, 1, 1, "", "ldiv2"], [115, 1, 1, "", "length"], [115, 1, 1, "", "lmul"], [115, 1, 1, "", "lmul2"], [115, 1, 1, "", "lpow"], [115, 1, 1, "", "lpow2"], [115, 1, 1, "", "lsum"], [115, 1, 1, "", "lsum2"], [115, 1, 1, "", "mdif"], [115, 1, 1, "", "mdiv"], [115, 1, 1, "", "mean"], [115, 1, 1, "", "mmap"], [115, 1, 1, "", "mmean"], [115, 1, 1, "", "mmul"], [115, 1, 1, "", "mpow"], [115, 1, 1, "", "mstd"], [115, 1, 1, "", "msum"], [115, 1, 1, "", "mu"], [115, 1, 1, "", "mvar"], [115, 1, 1, "", "norm"], [115, 1, 1, "", "rnorm"], [115, 1, 1, "", "scale"], [115, 1, 1, "", "sem"], [115, 1, 1, "", "shift"], [115, 1, 1, "", "sigma"], [115, 1, 1, "", "sstd"], [115, 1, 1, "", "std"], [115, 1, 1, "", "svar"], [115, 1, 1, "", "var"]], "gpu.cu": [[117, 0, 0, "-", "convolution"], [118, 0, 0, "-", "device"], [119, 0, 0, "-", "function"], [120, 0, 0, "-", "gpufun"], [121, 0, 0, "-", "graph"], [122, 0, 0, "-", "logic"], [124, 0, 0, "-", "plot"], [125, 0, 0, "-", "sequence"]], "gpu.cu.convolution": [[117, 1, 1, "", "gpuboxconv"], [117, 1, 1, "", "gpuboxconv_core"]], "gpu.cu.device": [[118, 1, 1, "", "card_info"], [118, 1, 1, "", "estimateBlocks"], [118, 1, 1, "", "estimateLoop"], [118, 1, 1, "", "estimateThreadsPerBlock"], [118, 1, 1, "", "missing"]], "gpu.cu.function": [[119, 1, 1, "", "cpu"], [119, 1, 1, "", "expsub"], [119, 1, 1, "", "ezkern"], [119, 1, 1, "", "format"], [119, 1, 1, "", "gpubin"], [119, 1, 1, "", "gpubinaryeq"], [119, 1, 1, "", "gpufloat"], [119, 1, 1, "", "gpufloatmat"], [119, 1, 1, "", "gpufloatred"], [119, 1, 1, "", "gpuint"], [119, 1, 1, "", "gpuintmap"], [119, 1, 1, "", "gpuintmat"], [119, 1, 1, "", "gpuintred"], [119, 1, 1, "", "gpumap"], [119, 1, 1, "", "gpumapeq"], [119, 1, 1, "", "gpupointer"], [119, 1, 1, "", "gpuscalar"], [119, 1, 1, "", "guessGPUType"], [119, 1, 1, "", "kernel"], [119, 1, 1, "", "printKernel"], [119, 1, 1, "", "toGPUType"]], "gpu.cu.gpufun": [[120, 1, 1, "", "gpuhill"], [120, 1, 1, "", "gpulcomb"], [120, 1, 1, "", "gpulogpdf"], [120, 1, 1, "", "gpumean"], [120, 1, 1, "", "gpunpdf"], [120, 1, 1, "", "gpurandexp"], [120, 1, 1, "", "gpurandf"], [120, 1, 1, "", "gpuuniform"]], "gpu.cu.graph": [[121, 1, 1, "", "connect_gaussian"], [121, 1, 1, "", "random_point_sheet"], [121, 1, 1, "", "spherepoints"], [121, 1, 1, "", "uniform_point_sheet"]], "gpu.cu.logic": [[122, 1, 1, "", "gpuand"], [122, 1, 1, "", "gpueq"], [122, 1, 1, "", "gpugt"], [122, 1, 1, "", "gpugteq"], [122, 1, 1, "", "gpuhzero"], [122, 1, 1, "", "gpult"], [122, 1, 1, "", "gpulteq"], [122, 1, 1, "", "gpuneq"], [122, 1, 1, "", "gpunor"], [122, 1, 1, "", "gpunot"], [122, 1, 1, "", "gpurange"], [122, 1, 1, "", "gpuyes"]], "gpu.cu.plot": [[124, 1, 1, "", "ElementwiseKernel"], [124, 1, 1, "", "gpubarlinedata"], [124, 1, 1, "", "gpuhistogram"], [124, 1, 1, "", "missing"], [124, 1, 1, "", "sebarline"], [124, 1, 1, "", "sebarline2"]], "gpu.cu.sequence": [[125, 1, 1, "", "FrameEater"], [125, 1, 1, "", "GPUAutometric"], [125, 1, 1, "", "GPUDotmetric"], [125, 1, 1, "", "GPUMagmetric"], [125, 1, 1, "", "GPUPointAutoDistance"], [125, 1, 1, "", "GPUSequenceAutoDetect"], [125, 1, 1, "", "deltamag"], [125, 1, 1, "", "fitgaussbimodal"], [125, 1, 1, "", "fitgausstrimodal"], [125, 1, 1, "", "gpuderivative"], [125, 1, 1, "", "gpulognpdf"], [125, 1, 1, "", "gpunpdf"], [125, 1, 1, "", "gpusmooth"], [125, 1, 1, "", "gpusubsetgfit"], [125, 1, 1, "", "gpusubsetmean"], [125, 1, 1, "", "gputhing"], [125, 1, 1, "", "mulmag"], [125, 1, 1, "", "summag"]], "graphics": [[128, 0, 0, "-", "color"], [129, 0, 0, "-", "image"], [130, 0, 0, "-", "matplotlib"], [131, 0, 0, "-", "plot"], [132, 0, 0, "-", "pygame"]], "graphics.color": [[128, 1, 1, "", "RGBtoHCL"], [128, 1, 1, "", "bit16_RGB_to_tuple"], [128, 1, 1, "", "bit16_print_color"], [128, 1, 1, "", "circularly_smooth_colormap"], [128, 1, 1, "", "code_to_16bit"], [128, 1, 1, "", "color_boxplot"], [128, 1, 1, "", "complexHLArr2RGB"], [128, 1, 1, "", "darkhues"], [128, 1, 1, "", "enumerate_fast_colors"], [128, 1, 1, "", "hcl2rgb"], [128, 1, 1, "", "hex2rgb"], [128, 1, 1, "", "hex_pack_BGR"], [128, 1, 1, "", "hsv2rgb"], [128, 1, 1, "", "hue_angle"], [128, 1, 1, "", "isoluminance1"], [128, 1, 1, "", "isoluminance2"], [128, 1, 1, "", "isoluminance3"], [128, 1, 1, "", "isoluminance4"], [128, 1, 1, "", "lighthues"], [128, 1, 1, "", "lightness"], [128, 1, 1, "", "luminance_matrix"], [128, 1, 1, "", "match_luminance"], [128, 1, 1, "", "medhues"], [128, 1, 1, "", "radl2rgb"], [128, 1, 1, "", "radl2rgbLUT"], [128, 1, 1, "", "rgb2hex"], [128, 1, 1, "", "rotate"], [128, 1, 1, "", "show_complete_fast_pallet"], [128, 1, 1, "", "show_complete_fastest_pallet"], [128, 1, 1, "", "show_fast_pallet"], [128, 1, 1, "", "show_hex_pallet"], [128, 1, 1, "", "tuple_to_bit16"], [128, 1, 1, "", "tuple_to_bit24"]], "graphics.image": [[129, 1, 1, "", "mean_center"], [129, 1, 1, "", "median_center"], [129, 1, 1, "", "unitize"], [129, 1, 1, "", "visualize_derivatives"]], "graphics.matplotlib": [[130, 1, 1, "", "draw_array"], [130, 1, 1, "", "hide_toolbar"], [130, 1, 1, "", "start"]], "graphics.plot": [[131, 1, 1, "", "Gaussian2D_covellipse"], [131, 2, 1, "", "HandlerSquare"], [131, 1, 1, "", "addspikes"], [131, 1, 1, "", "adjust_axis_height_pixels"], [131, 1, 1, "", "adjust_xlabel_space"], [131, 1, 1, "", "adjust_ylabel_space"], [131, 1, 1, "", "adjustmap"], [131, 1, 1, "", "animate_complex"], [131, 1, 1, "", "arrow_between"], [131, 1, 1, "", "axvbands"], [131, 1, 1, "", "axvstripe"], [131, 1, 1, "", "barcompare"], [131, 1, 1, "", "base_legend"], [131, 1, 1, "", "border_width"], [131, 1, 1, "", "boxplot_significance"], [131, 1, 1, "", "broken_step"], [131, 1, 1, "", "ceil_to_precision"], [131, 1, 1, "", "centers"], [131, 1, 1, "", "clean_y_range"], [131, 1, 1, "", "cleartop"], [131, 1, 1, "", "colored_boxplot"], [131, 1, 1, "", "complex_axis"], [131, 1, 1, "", "covariance_crosshairs"], [131, 1, 1, "", "darken"], [131, 1, 1, "", "domask"], [131, 1, 1, "", "draw_circle"], [131, 1, 1, "", "expand_axis_x"], [131, 1, 1, "", "expand_axis_y"], [131, 1, 1, "", "expand_y_range"], [131, 1, 1, "", "figurebox"], [131, 1, 1, "", "flathist"], [131, 1, 1, "", "floor_to_precision"], [131, 1, 1, "", "force_aspect"], [131, 1, 1, "", "fsize"], [131, 1, 1, "", "fudgex"], [131, 1, 1, "", "fudgexy"], [131, 1, 1, "", "fudgey"], [131, 1, 1, "", "get_aspect"], [131, 1, 1, "", "get_ax_pixel"], [131, 1, 1, "", "get_ax_pixel_ratio"], [131, 1, 1, "", "get_ax_size"], [131, 1, 1, "", "get_bbox"], [131, 1, 1, "", "good_colorbar"], [131, 1, 1, "", "hsigbar"], [131, 1, 1, "", "inhibition_arrow"], [131, 1, 1, "", "label"], [131, 1, 1, "", "left_legend"], [131, 1, 1, "", "lighten"], [131, 1, 1, "", "match_image_aspect"], [131, 1, 1, "", "mock_legend"], [131, 1, 1, "", "more_xticks"], [131, 1, 1, "", "more_yticks"], [131, 1, 1, "", "nice_legend"], [131, 1, 1, "", "nicebp"], [131, 1, 1, "", "nicex"], [131, 1, 1, "", "nicexy"], [131, 1, 1, "", "nicey"], [131, 1, 1, "", "noaxis"], [131, 1, 1, "", "noclip"], [131, 1, 1, "", "nolabels"], [131, 1, 1, "", "notick"], [131, 1, 1, "", "nox"], [131, 1, 1, "", "noxlabels"], [131, 1, 1, "", "noxyaxes"], [131, 1, 1, "", "noy"], [131, 1, 1, "", "noylabels"], [131, 1, 1, "", "nudge_axis_baseline"], [131, 1, 1, "", "nudge_axis_left"], [131, 1, 1, "", "nudge_axis_x"], [131, 1, 1, "", "nudge_axis_y"], [131, 1, 1, "", "nudge_axis_y_pixels"], [131, 1, 1, "", "pikeplot"], [131, 1, 1, "", "pixels_to_xfigureunits"], [131, 1, 1, "", "pixels_to_xunits"], [131, 1, 1, "", "pixels_to_yfigureunits"], [131, 1, 1, "", "pixels_to_yunits"], [131, 1, 1, "", "plotCWT"], [131, 1, 1, "", "plotWTPhase"], [131, 1, 1, "", "plotWTPhaseFig"], [131, 1, 1, "", "plot_complex"], [131, 1, 1, "", "plotz"], [131, 1, 1, "", "positivex"], [131, 1, 1, "", "positivexy"], [131, 1, 1, "", "positivey"], [131, 1, 1, "", "px2x"], [131, 1, 1, "", "px2y"], [131, 1, 1, "", "rangeover"], [131, 1, 1, "", "rangeto"], [131, 1, 1, "", "restore_limits"], [131, 1, 1, "", "right_legend"], [131, 1, 1, "", "rightaxis"], [131, 1, 1, "", "righty"], [131, 1, 1, "", "round_to_precision"], [131, 1, 1, "", "save_limits"], [131, 1, 1, "", "savefigure"], [131, 1, 1, "", "shade_edges"], [131, 1, 1, "", "shellmean"], [131, 1, 1, "", "shellplot"], [131, 1, 1, "", "sigbar"], [131, 1, 1, "", "simple_arrow"], [131, 1, 1, "", "simpleaxis"], [131, 1, 1, "", "simpleraxis"], [131, 1, 1, "", "simplerright"], [131, 1, 1, "", "splitz"], [131, 1, 1, "", "stderrplot"], [131, 1, 1, "", "subfigurelabel"], [131, 1, 1, "", "trendline"], [131, 1, 1, "", "unit_crosshairs"], [131, 1, 1, "", "unitaxes"], [131, 1, 1, "", "unitx"], [131, 1, 1, "", "unity"], [131, 1, 1, "", "widths_to_centers"], [131, 1, 1, "", "widths_to_edges"], [131, 1, 1, "", "wtpshow"], [131, 1, 1, "", "xbartext"], [131, 1, 1, "", "xfigureunits_to_pixels"], [131, 1, 1, "", "xin"], [131, 1, 1, "", "xscalebar"], [131, 1, 1, "", "xticklen"], [131, 1, 1, "", "xtickpad"], [131, 1, 1, "", "xunits_to_pixels"], [131, 1, 1, "", "xylim"], [131, 1, 1, "", "ybartext"], [131, 1, 1, "", "yfigureunits_to_pixels"], [131, 1, 1, "", "yin"], [131, 1, 1, "", "yscalebar"], [131, 1, 1, "", "yticklen"], [131, 1, 1, "", "ytickpad"], [131, 1, 1, "", "yunits_to_pixels"], [131, 1, 1, "", "zerohline"], [131, 1, 1, "", "zerovline"], [131, 1, 1, "", "zoombox"]], "graphics.plot.HandlerSquare": [[131, 3, 1, "", "create_artists"]], "graphics.pygame": [[132, 1, 1, "", "draw_array"], [132, 1, 1, "", "enable_vsync"], [132, 1, 1, "", "start"]], "jobs": [[134, 0, 0, "-", "cache"], [135, 0, 0, "-", "closure"], [137, 0, 0, "-", "filenames"], [138, 0, 0, "-", "initialize_system_cache"], [139, 0, 0, "-", "parallel"]], "jobs.cache": [[134, 1, 1, "", "base64hash"], [134, 1, 1, "", "base64hash2byte"], [134, 1, 1, "", "disk_cacher"], [134, 1, 1, "", "file_string_to_signature"], [134, 1, 1, "", "function_hash_no_subroutines"], [134, 1, 1, "", "function_hash_with_subroutines"], [134, 1, 1, "", "function_signature"], [134, 1, 1, "", "get_cache_path"], [134, 1, 1, "", "get_source"], [134, 1, 1, "", "hierarchical_cacher"], [134, 1, 1, "", "human_decode"], [134, 1, 1, "", "human_encode"], [134, 1, 1, "", "locate_cached"], [134, 1, 1, "", "read_cache_entry"], [134, 1, 1, "", "signature_to_file_string"], [134, 1, 1, "", "validate_for_matfile"], [134, 1, 1, "", "validate_for_numpy"]], "jobs.closure": [[135, 1, 1, "", "csv"], [135, 1, 1, "", "get_subroutines"], [135, 1, 1, "", "inspect_function_closure"], [135, 1, 1, "", "is_immutable"], [135, 1, 1, "", "is_probably_safe"], [135, 1, 1, "", "verify_function_closure"]], "jobs.filenames": [[137, 1, 1, "", "check_filename"], [137, 1, 1, "", "is_dangerous_filename"], [137, 1, 1, "", "validate_argument_signature"]], "jobs.initialize_system_cache": [[138, 1, 1, "", "cache_test"], [138, 1, 1, "", "du"], [138, 1, 1, "", "initialize_caches"], [138, 1, 1, "", "launch_cache_synchronizers"], [138, 1, 1, "", "purge_ram_cache"], [138, 1, 1, "", "purge_ssd_cache"], [138, 1, 1, "", "reset_ramdisk"]], "jobs.parallel": [[139, 1, 1, "", "close_pool"], [139, 1, 1, "", "eval_from_cached"], [139, 1, 1, "", "function_fingerprint"], [139, 1, 1, "", "parallel_cached_wrapper"], [139, 1, 1, "", "parallel_error_handling"], [139, 1, 1, "", "parallel_indirect_wrapper"], [139, 1, 1, "", "pararraymap"], [139, 1, 1, "", "parimap"], [139, 1, 1, "", "parmap"], [139, 1, 1, "", "parmap_dict"], [139, 1, 1, "", "reset_pool"]], "linalg": [[141, 0, 0, "-", "arguments"], [142, 0, 0, "-", "matrix"], [143, 0, 0, "-", "operators"]], "linalg.arguments": [[141, 1, 1, "", "ascolumn"], [141, 1, 1, "", "asrow"], [141, 1, 1, "", "assertcolumn"], [141, 1, 1, "", "assertfinite"], [141, 1, 1, "", "assertfinitereal"], [141, 1, 1, "", "assertreal"], [141, 1, 1, "", "assertrow"], [141, 1, 1, "", "assertshape"], [141, 1, 1, "", "assertsquare"], [141, 1, 1, "", "assertvector"], [141, 1, 1, "", "assquare"], [141, 1, 1, "", "asvector"], [141, 1, 1, "", "iscolumn"], [141, 1, 1, "", "isrow"], [141, 1, 1, "", "issquare"], [141, 1, 1, "", "scalar"]], "linalg.matrix": [[142, 1, 1, "", "Ldistance"], [142, 1, 1, "", "Llasso"], [142, 1, 1, "", "abserr"], [142, 1, 1, "", "autopredict"], [142, 1, 1, "", "cartesian_product"], [142, 1, 1, "", "check_covmat"], [142, 1, 1, "", "check_covmat_fast"], [142, 1, 1, "", "check_finite_real"], [142, 1, 1, "", "cholupdate"], [142, 1, 1, "", "cholupdate_eye"], [142, 1, 1, "", "cinv"], [142, 1, 1, "", "column"], [142, 1, 1, "", "csolve"], [142, 1, 1, "", "errmx"], [142, 1, 1, "", "kronsum"], [142, 1, 1, "", "laplace_kernel"], [142, 1, 1, "", "ldiv"], [142, 1, 1, "", "logdet"], [142, 1, 1, "", "match_covariance"], [142, 1, 1, "", "maxeig"], [142, 1, 1, "", "nearPDHigham"], [142, 1, 1, "", "nearPSDRebonatoJackel"], [142, 1, 1, "", "normedcovariance"], [142, 1, 1, "", "psd_eig"], [142, 1, 1, "", "qf"], [142, 1, 1, "", "rcond"], [142, 1, 1, "", "rdiv"], [142, 1, 1, "", "real_eig"], [142, 1, 1, "", "reglstsq"], [142, 1, 1, "", "rmatrix"], [142, 1, 1, "", "row"], [142, 1, 1, "", "rsolt"], [142, 1, 1, "", "rsolve"], [142, 1, 1, "", "selector_matrix"], [142, 1, 1, "", "solt"], [142, 1, 1, "", "top_v"], [142, 1, 1, "", "tril_elements"], [142, 1, 1, "", "triu_elements"], [142, 1, 1, "", "wheremax"], [142, 1, 1, "", "wheremin"]], "linalg.operators": [[143, 1, 1, "", "adjacency1D"], [143, 1, 1, "", "adjacency2D"], [143, 1, 1, "", "adjacency2D_circular"], [143, 1, 1, "", "adjacency2d_rotational"], [143, 1, 1, "", "circular1DblurOperator"], [143, 1, 1, "", "cosine_kernel"], [143, 1, 1, "", "covfrom"], [143, 1, 1, "", "delta"], [143, 1, 1, "", "differentiator"], [143, 1, 1, "", "diffuseFT1D"], [143, 1, 1, "", "flatcov"], [143, 1, 1, "", "gaussian1DblurOperator"], [143, 1, 1, "", "gaussian2DblurOperator"], [143, 1, 1, "", "integrator"], [143, 1, 1, "", "laplacian1D"], [143, 1, 1, "", "laplacian1D_circular"], [143, 1, 1, "", "laplacian2D"], [143, 1, 1, "", "laplacianFT1D"], [143, 1, 1, "", "log_cosine_basis"], [143, 1, 1, "", "make_cosine_basis"], [143, 1, 1, "", "oucov"], [143, 1, 1, "", "separable_guassian_blur"], [143, 1, 1, "", "wienerFT1D"]], "models": [[145, 0, 0, "-", "izh"], [146, 0, 0, "-", "lif"]], "models.izh": [[145, 1, 1, "", "du_izh"], [145, 1, 1, "", "dv_izh"], [145, 1, 1, "", "sim_izh"], [145, 1, 1, "", "update_izh"]], "models.lif": [[146, 1, 1, "", "euler_integrate_LIF"], [146, 1, 1, "", "exponential_integrate_LIF"], [146, 1, 1, "", "exponential_moving_average"]], "neurotools": [[180, 0, 0, "-", "graphics"], [191, 0, 0, "-", "jobs"], [198, 0, 0, "-", "linalg"], [212, 0, 0, "-", "nlab"], [213, 0, 0, "-", "obsolete"], [247, 0, 0, "-", "signal"], [259, 0, 0, "-", "spatial"], [273, 0, 0, "-", "spikes"], [276, 0, 0, "-", "stats"], [316, 0, 0, "-", "util"]], "neurotools.graphics": [[181, 0, 0, "-", "color"], [182, 0, 0, "-", "colormaps"], [183, 0, 0, "-", "dendron"], [184, 0, 0, "-", "fabio_maps"], [185, 0, 0, "-", "image"], [186, 0, 0, "-", "matplotlib"], [187, 0, 0, "-", "plot"], [188, 0, 0, "-", "pygame"]], "neurotools.graphics.color": [[181, 1, 1, "", "RGBtoHCL"], [181, 1, 1, "", "bit16_RGB_to_tuple"], [181, 1, 1, "", "bit16_print_color"], [181, 1, 1, "", "circularly_smooth_colormap"], [181, 1, 1, "", "code_to_16bit"], [181, 1, 1, "", "color_boxplot"], [181, 1, 1, "", "complexHLArr2RGB"], [181, 1, 1, "", "darkhues"], [181, 1, 1, "", "enumerate_fast_colors"], [181, 1, 1, "", "hcl2rgb"], [181, 1, 1, "", "hex2rgb"], [181, 1, 1, "", "hex_pack_BGR"], [181, 1, 1, "", "hsv2rgb"], [181, 1, 1, "", "hue_angle"], [181, 1, 1, "", "isoluminance1"], [181, 1, 1, "", "isoluminance2"], [181, 1, 1, "", "isoluminance3"], [181, 1, 1, "", "isoluminance4"], [181, 1, 1, "", "lighthues"], [181, 1, 1, "", "lightness"], [181, 1, 1, "", "luminance_matrix"], [181, 1, 1, "", "match_luminance"], [181, 1, 1, "", "medhues"], [181, 1, 1, "", "radl2rgb"], [181, 1, 1, "", "radl2rgbLUT"], [181, 1, 1, "", "rgb2hex"], [181, 1, 1, "", "rotate"], [181, 1, 1, "", "show_complete_fast_pallet"], [181, 1, 1, "", "show_complete_fastest_pallet"], [181, 1, 1, "", "show_fast_pallet"], [181, 1, 1, "", "show_hex_pallet"], [181, 1, 1, "", "tuple_to_bit16"], [181, 1, 1, "", "tuple_to_bit24"]], "neurotools.graphics.colormaps": [[182, 1, 1, "", "test_colormaps"]], "neurotools.graphics.dendron": [[183, 1, 1, "", "count_nodes"], [183, 1, 1, "", "get_depth"], [183, 1, 1, "", "inorder_traversal"], [183, 1, 1, "", "list_like"], [183, 1, 1, "", "plot_brackets"], [183, 1, 1, "", "plot_brackets_polar"]], "neurotools.graphics.image": [[185, 1, 1, "", "mean_center"], [185, 1, 1, "", "median_center"], [185, 1, 1, "", "unitize"], [185, 1, 1, "", "visualize_derivatives"]], "neurotools.graphics.matplotlib": [[186, 1, 1, "", "draw_array"], [186, 1, 1, "", "hide_toolbar"], [186, 1, 1, "", "start"]], "neurotools.graphics.plot": [[187, 1, 1, "", "Gaussian2D_covellipse"], [187, 2, 1, "", "HandlerSquare"], [187, 1, 1, "", "addspikes"], [187, 1, 1, "", "adjust_axis_height_pixels"], [187, 1, 1, "", "adjust_xlabel_space"], [187, 1, 1, "", "adjust_ylabel_space"], [187, 1, 1, "", "adjustmap"], [187, 1, 1, "", "animate_complex"], [187, 1, 1, "", "arrow_between"], [187, 1, 1, "", "axvbands"], [187, 1, 1, "", "axvstripe"], [187, 1, 1, "", "barcompare"], [187, 1, 1, "", "base_legend"], [187, 1, 1, "", "border_width"], [187, 1, 1, "", "boxplot_significance"], [187, 1, 1, "", "broken_step"], [187, 1, 1, "", "ceil_to_precision"], [187, 1, 1, "", "centers"], [187, 1, 1, "", "clean_y_range"], [187, 1, 1, "", "cleartop"], [187, 1, 1, "", "colored_boxplot"], [187, 1, 1, "", "complex_axis"], [187, 1, 1, "", "covariance_crosshairs"], [187, 1, 1, "", "darken"], [187, 1, 1, "", "domask"], [187, 1, 1, "", "draw_circle"], [187, 1, 1, "", "expand_axis_x"], [187, 1, 1, "", "expand_axis_y"], [187, 1, 1, "", "expand_y_range"], [187, 1, 1, "", "figurebox"], [187, 1, 1, "", "flathist"], [187, 1, 1, "", "floor_to_precision"], [187, 1, 1, "", "force_aspect"], [187, 1, 1, "", "fsize"], [187, 1, 1, "", "fudgex"], [187, 1, 1, "", "fudgexy"], [187, 1, 1, "", "fudgey"], [187, 1, 1, "", "get_aspect"], [187, 1, 1, "", "get_ax_pixel"], [187, 1, 1, "", "get_ax_pixel_ratio"], [187, 1, 1, "", "get_ax_size"], [187, 1, 1, "", "get_bbox"], [187, 1, 1, "", "good_colorbar"], [187, 1, 1, "", "hsigbar"], [187, 1, 1, "", "inhibition_arrow"], [187, 1, 1, "", "label"], [187, 1, 1, "", "left_legend"], [187, 1, 1, "", "lighten"], [187, 1, 1, "", "match_image_aspect"], [187, 1, 1, "", "mock_legend"], [187, 1, 1, "", "more_xticks"], [187, 1, 1, "", "more_yticks"], [187, 1, 1, "", "nice_legend"], [187, 1, 1, "", "nicebp"], [187, 1, 1, "", "nicex"], [187, 1, 1, "", "nicexy"], [187, 1, 1, "", "nicey"], [187, 1, 1, "", "noaxis"], [187, 1, 1, "", "noclip"], [187, 1, 1, "", "nolabels"], [187, 1, 1, "", "notick"], [187, 1, 1, "", "nox"], [187, 1, 1, "", "noxlabels"], [187, 1, 1, "", "noxyaxes"], [187, 1, 1, "", "noy"], [187, 1, 1, "", "noylabels"], [187, 1, 1, "", "nudge_axis_baseline"], [187, 1, 1, "", "nudge_axis_left"], [187, 1, 1, "", "nudge_axis_x"], [187, 1, 1, "", "nudge_axis_y"], [187, 1, 1, "", "nudge_axis_y_pixels"], [187, 1, 1, "", "pikeplot"], [187, 1, 1, "", "pixels_to_xfigureunits"], [187, 1, 1, "", "pixels_to_xunits"], [187, 1, 1, "", "pixels_to_yfigureunits"], [187, 1, 1, "", "pixels_to_yunits"], [187, 1, 1, "", "plotCWT"], [187, 1, 1, "", "plotWTPhase"], [187, 1, 1, "", "plotWTPhaseFig"], [187, 1, 1, "", "plot_complex"], [187, 1, 1, "", "plotz"], [187, 1, 1, "", "positivex"], [187, 1, 1, "", "positivexy"], [187, 1, 1, "", "positivey"], [187, 1, 1, "", "px2x"], [187, 1, 1, "", "px2y"], [187, 1, 1, "", "rangeover"], [187, 1, 1, "", "rangeto"], [187, 1, 1, "", "restore_limits"], [187, 1, 1, "", "right_legend"], [187, 1, 1, "", "rightaxis"], [187, 1, 1, "", "righty"], [187, 1, 1, "", "round_to_precision"], [187, 1, 1, "", "save_limits"], [187, 1, 1, "", "savefigure"], [187, 1, 1, "", "shade_edges"], [187, 1, 1, "", "shellmean"], [187, 1, 1, "", "shellplot"], [187, 1, 1, "", "sigbar"], [187, 1, 1, "", "simple_arrow"], [187, 1, 1, "", "simpleaxis"], [187, 1, 1, "", "simpleraxis"], [187, 1, 1, "", "simplerright"], [187, 1, 1, "", "splitz"], [187, 1, 1, "", "stderrplot"], [187, 1, 1, "", "subfigurelabel"], [187, 1, 1, "", "trendline"], [187, 1, 1, "", "unit_crosshairs"], [187, 1, 1, "", "unitaxes"], [187, 1, 1, "", "unitx"], [187, 1, 1, "", "unity"], [187, 1, 1, "", "widths_to_centers"], [187, 1, 1, "", "widths_to_edges"], [187, 1, 1, "", "wtpshow"], [187, 1, 1, "", "xbartext"], [187, 1, 1, "", "xfigureunits_to_pixels"], [187, 1, 1, "", "xin"], [187, 1, 1, "", "xscalebar"], [187, 1, 1, "", "xticklen"], [187, 1, 1, "", "xtickpad"], [187, 1, 1, "", "xunits_to_pixels"], [187, 1, 1, "", "xylim"], [187, 1, 1, "", "ybartext"], [187, 1, 1, "", "yfigureunits_to_pixels"], [187, 1, 1, "", "yin"], [187, 1, 1, "", "yscalebar"], [187, 1, 1, "", "yticklen"], [187, 1, 1, "", "ytickpad"], [187, 1, 1, "", "yunits_to_pixels"], [187, 1, 1, "", "zerohline"], [187, 1, 1, "", "zerovline"], [187, 1, 1, "", "zoombox"]], "neurotools.graphics.plot.HandlerSquare": [[187, 3, 1, "", "create_artists"]], "neurotools.graphics.pygame": [[188, 1, 1, "", "draw_array"], [188, 1, 1, "", "enable_vsync"], [188, 1, 1, "", "start"]], "neurotools.jobs": [[192, 0, 0, "-", "cache"], [193, 0, 0, "-", "closure"], [194, 0, 0, "-", "filenames"], [195, 0, 0, "-", "initialize_system_cache"], [196, 0, 0, "-", "ndecorator"], [197, 0, 0, "-", "parallel"]], "neurotools.jobs.cache": [[192, 1, 1, "", "base64hash"], [192, 1, 1, "", "base64hash2byte"], [192, 1, 1, "", "disk_cacher"], [192, 1, 1, "", "file_string_to_signature"], [192, 1, 1, "", "function_hash_no_subroutines"], [192, 1, 1, "", "function_hash_with_subroutines"], [192, 1, 1, "", "function_signature"], [192, 1, 1, "", "get_cache_path"], [192, 1, 1, "", "get_source"], [192, 1, 1, "", "hierarchical_cacher"], [192, 1, 1, "", "human_decode"], [192, 1, 1, "", "human_encode"], [192, 1, 1, "", "locate_cached"], [192, 1, 1, "", "read_cache_entry"], [192, 1, 1, "", "signature_to_file_string"], [192, 1, 1, "", "validate_for_matfile"], [192, 1, 1, "", "validate_for_numpy"]], "neurotools.jobs.closure": [[193, 1, 1, "", "csv"], [193, 1, 1, "", "get_subroutines"], [193, 1, 1, "", "inspect_function_closure"], [193, 1, 1, "", "is_immutable"], [193, 1, 1, "", "is_probably_safe"], [193, 1, 1, "", "verify_function_closure"]], "neurotools.jobs.filenames": [[194, 1, 1, "", "check_filename"], [194, 1, 1, "", "is_dangerous_filename"], [194, 1, 1, "", "validate_argument_signature"]], "neurotools.jobs.initialize_system_cache": [[195, 1, 1, "", "cache_test"], [195, 1, 1, "", "du"], [195, 1, 1, "", "initialize_caches"], [195, 1, 1, "", "launch_cache_synchronizers"], [195, 1, 1, "", "purge_ram_cache"], [195, 1, 1, "", "purge_ssd_cache"], [195, 1, 1, "", "reset_ramdisk"]], "neurotools.jobs.ndecorator": [[196, 1, 1, "", "argument_signature"], [196, 1, 1, "", "clear_memoized"], [196, 1, 1, "", "listit"], [196, 1, 1, "", "memoize"], [196, 1, 1, "", "print_signature"], [196, 1, 1, "", "sanitize"], [196, 1, 1, "", "summarize_function"], [196, 1, 1, "", "timed"], [196, 1, 1, "", "tupleit"], [196, 1, 1, "", "unwrap"]], "neurotools.jobs.parallel": [[197, 1, 1, "", "close_pool"], [197, 1, 1, "", "eval_from_cached"], [197, 1, 1, "", "function_fingerprint"], [197, 1, 1, "", "parallel_cached_wrapper"], [197, 1, 1, "", "parallel_error_handling"], [197, 1, 1, "", "parallel_indirect_wrapper"], [197, 1, 1, "", "pararraymap"], [197, 1, 1, "", "parimap"], [197, 1, 1, "", "parmap"], [197, 1, 1, "", "parmap_dict"], [197, 1, 1, "", "reset_pool"]], "neurotools.linalg": [[199, 0, 0, "-", "arguments"], [200, 0, 0, "-", "matrix"], [201, 0, 0, "-", "operators"]], "neurotools.linalg.arguments": [[199, 1, 1, "", "ascolumn"], [199, 1, 1, "", "asrow"], [199, 1, 1, "", "assertcolumn"], [199, 1, 1, "", "assertfinite"], [199, 1, 1, "", "assertfinitereal"], [199, 1, 1, "", "assertreal"], [199, 1, 1, "", "assertrow"], [199, 1, 1, "", "assertshape"], [199, 1, 1, "", "assertsquare"], [199, 1, 1, "", "assertvector"], [199, 1, 1, "", "assquare"], [199, 1, 1, "", "asvector"], [199, 1, 1, "", "iscolumn"], [199, 1, 1, "", "isrow"], [199, 1, 1, "", "issquare"], [199, 1, 1, "", "scalar"]], "neurotools.linalg.matrix": [[200, 1, 1, "", "Ldistance"], [200, 1, 1, "", "Llasso"], [200, 1, 1, "", "abserr"], [200, 1, 1, "", "autopredict"], [200, 1, 1, "", "cartesian_product"], [200, 1, 1, "", "check_covmat"], [200, 1, 1, "", "check_covmat_fast"], [200, 1, 1, "", "check_finite_real"], [200, 1, 1, "", "cholupdate"], [200, 1, 1, "", "cholupdate_eye"], [200, 1, 1, "", "cinv"], [200, 1, 1, "", "column"], [200, 1, 1, "", "csolve"], [200, 1, 1, "", "errmx"], [200, 1, 1, "", "kronsum"], [200, 1, 1, "", "laplace_kernel"], [200, 1, 1, "", "ldiv"], [200, 1, 1, "", "logdet"], [200, 1, 1, "", "match_covariance"], [200, 1, 1, "", "maxeig"], [200, 1, 1, "", "nearPDHigham"], [200, 1, 1, "", "nearPSDRebonatoJackel"], [200, 1, 1, "", "normedcovariance"], [200, 1, 1, "", "psd_eig"], [200, 1, 1, "", "qf"], [200, 1, 1, "", "rcond"], [200, 1, 1, "", "rdiv"], [200, 1, 1, "", "real_eig"], [200, 1, 1, "", "reglstsq"], [200, 1, 1, "", "rmatrix"], [200, 1, 1, "", "row"], [200, 1, 1, "", "rsolt"], [200, 1, 1, "", "rsolve"], [200, 1, 1, "", "selector_matrix"], [200, 1, 1, "", "solt"], [200, 1, 1, "", "top_v"], [200, 1, 1, "", "tril_elements"], [200, 1, 1, "", "triu_elements"], [200, 1, 1, "", "wheremax"], [200, 1, 1, "", "wheremin"]], "neurotools.linalg.operators": [[201, 1, 1, "", "adjacency1D"], [201, 1, 1, "", "adjacency2D"], [201, 1, 1, "", "adjacency2D_circular"], [201, 1, 1, "", "adjacency2d_rotational"], [201, 1, 1, "", "circular1DblurOperator"], [201, 1, 1, "", "cosine_kernel"], [201, 1, 1, "", "covfrom"], [201, 1, 1, "", "delta"], [201, 1, 1, "", "differentiator"], [201, 1, 1, "", "diffuseFT1D"], [201, 1, 1, "", "flatcov"], [201, 1, 1, "", "gaussian1DblurOperator"], [201, 1, 1, "", "gaussian2DblurOperator"], [201, 1, 1, "", "integrator"], [201, 1, 1, "", "laplacian1D"], [201, 1, 1, "", "laplacian1D_circular"], [201, 1, 1, "", "laplacian2D"], [201, 1, 1, "", "laplacianFT1D"], [201, 1, 1, "", "log_cosine_basis"], [201, 1, 1, "", "make_cosine_basis"], [201, 1, 1, "", "oucov"], [201, 1, 1, "", "separable_guassian_blur"], [201, 1, 1, "", "wienerFT1D"]], "neurotools.nlab": [[212, 1, 1, "", "beta"], [212, 1, 1, "", "binomial"], [212, 1, 1, "", "chisquare"], [212, 1, 1, "", "choice"], [212, 1, 1, "", "dirichlet"], [212, 1, 1, "", "exponential"], [212, 1, 1, "", "f"], [212, 1, 1, "", "gamma"], [212, 1, 1, "", "geometric"], [212, 1, 1, "", "get_state"], [212, 1, 1, "", "gumbel"], [212, 1, 1, "", "hypergeometric"], [212, 1, 1, "", "laplace"], [212, 1, 1, "", "logistic"], [212, 1, 1, "", "lognormal"], [212, 1, 1, "", "logseries"], [212, 1, 1, "", "multinomial"], [212, 1, 1, "", "multivariate_normal"], [212, 1, 1, "", "negative_binomial"], [212, 1, 1, "", "noncentral_chisquare"], [212, 1, 1, "", "noncentral_f"], [212, 1, 1, "", "normal"], [212, 1, 1, "", "pareto"], [212, 1, 1, "", "permutation"], [212, 1, 1, "", "poisson"], [212, 1, 1, "", "power"], [212, 1, 1, "", "rand"], [212, 1, 1, "", "randint"], [212, 1, 1, "", "randn"], [212, 1, 1, "", "random"], [212, 1, 1, "", "random_integers"], [212, 1, 1, "", "random_sample"], [212, 1, 1, "", "rayleigh"], [212, 1, 1, "", "seed"], [212, 1, 1, "", "set_state"], [212, 1, 1, "", "shuffle"], [212, 1, 1, "", "standard_cauchy"], [212, 1, 1, "", "standard_exponential"], [212, 1, 1, "", "standard_gamma"], [212, 1, 1, "", "standard_normal"], [212, 1, 1, "", "standard_t"], [212, 1, 1, "", "triangular"], [212, 1, 1, "", "uniform"], [212, 1, 1, "", "vonmises"], [212, 1, 1, "", "wald"], [212, 1, 1, "", "weibull"], [212, 1, 1, "", "zipf"]], "neurotools.obsolete": [[214, 0, 0, "-", "encoding"], [217, 0, 0, "-", "gpu"], [235, 0, 0, "-", "models"]], "neurotools.obsolete.encoding": [[215, 0, 0, "-", "Huffman"], [216, 0, 0, "-", "NaryHuffman"]], "neurotools.obsolete.encoding.Huffman": [[215, 2, 1, "", "Huffman"]], "neurotools.obsolete.encoding.Huffman.Huffman": [[215, 2, 1, "", "Leaf"], [215, 2, 1, "", "Node"], [215, 3, 1, "", "decode"], [215, 3, 1, "", "encode"], [215, 3, 1, "", "encode_packets"]], "neurotools.obsolete.encoding.Huffman.Huffman.Node": [[215, 3, 1, "", "walk"]], "neurotools.obsolete.encoding.NaryHuffman": [[216, 2, 1, "", "NaryHuffman"]], "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman": [[216, 2, 1, "", "Leaf"], [216, 2, 1, "", "Node"], [216, 3, 1, "", "decode"], [216, 3, 1, "", "encode"], [216, 3, 1, "", "encode_packets"]], "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Node": [[216, 3, 1, "", "walk"]], "neurotools.obsolete.gpu": [[218, 0, 0, "-", "cl"], [222, 0, 0, "-", "cpu"], [224, 0, 0, "-", "cu"]], "neurotools.obsolete.gpu.cl": [[218, 1, 1, "", "missing"]], "neurotools.obsolete.gpu.cpu": [[223, 0, 0, "-", "util"]], "neurotools.obsolete.gpu.cpu.util": [[223, 1, 1, "", "cmap"], [223, 1, 1, "", "compose"], [223, 1, 1, "", "corr"], [223, 1, 1, "", "cov"], [223, 1, 1, "", "cut"], [223, 1, 1, "", "document"], [223, 1, 1, "", "dot"], [223, 1, 1, "", "elem"], [223, 1, 1, "", "fancy"], [223, 1, 1, "", "flat"], [223, 1, 1, "", "idivup"], [223, 1, 1, "", "ldif"], [223, 1, 1, "", "ldif2"], [223, 1, 1, "", "ldiv"], [223, 1, 1, "", "ldiv2"], [223, 1, 1, "", "length"], [223, 1, 1, "", "lmul"], [223, 1, 1, "", "lmul2"], [223, 1, 1, "", "lpow"], [223, 1, 1, "", "lpow2"], [223, 1, 1, "", "lsum"], [223, 1, 1, "", "lsum2"], [223, 1, 1, "", "mdif"], [223, 1, 1, "", "mdiv"], [223, 1, 1, "", "mean"], [223, 1, 1, "", "mmap"], [223, 1, 1, "", "mmean"], [223, 1, 1, "", "mmul"], [223, 1, 1, "", "mpow"], [223, 1, 1, "", "mstd"], [223, 1, 1, "", "msum"], [223, 1, 1, "", "mu"], [223, 1, 1, "", "mvar"], [223, 1, 1, "", "norm"], [223, 1, 1, "", "rnorm"], [223, 1, 1, "", "scale"], [223, 1, 1, "", "sem"], [223, 1, 1, "", "shift"], [223, 1, 1, "", "sigma"], [223, 1, 1, "", "sstd"], [223, 1, 1, "", "std"], [223, 1, 1, "", "svar"], [223, 1, 1, "", "var"]], "neurotools.obsolete.gpu.cu": [[225, 0, 0, "-", "convolution"], [226, 0, 0, "-", "device"], [227, 0, 0, "-", "function"], [228, 0, 0, "-", "gpufun"], [229, 0, 0, "-", "graph"], [230, 0, 0, "-", "logic"], [232, 0, 0, "-", "plot"], [233, 0, 0, "-", "sequence"]], "neurotools.obsolete.gpu.cu.convolution": [[225, 1, 1, "", "gpuboxconv"], [225, 1, 1, "", "gpuboxconv_core"]], "neurotools.obsolete.gpu.cu.device": [[226, 1, 1, "", "card_info"], [226, 1, 1, "", "estimateBlocks"], [226, 1, 1, "", "estimateLoop"], [226, 1, 1, "", "estimateThreadsPerBlock"], [226, 1, 1, "", "missing"]], "neurotools.obsolete.gpu.cu.function": [[227, 1, 1, "", "cpu"], [227, 1, 1, "", "expsub"], [227, 1, 1, "", "ezkern"], [227, 1, 1, "", "format"], [227, 1, 1, "", "gpubin"], [227, 1, 1, "", "gpubinaryeq"], [227, 1, 1, "", "gpufloat"], [227, 1, 1, "", "gpufloatmat"], [227, 1, 1, "", "gpufloatred"], [227, 1, 1, "", "gpuint"], [227, 1, 1, "", "gpuintmap"], [227, 1, 1, "", "gpuintmat"], [227, 1, 1, "", "gpuintred"], [227, 1, 1, "", "gpumap"], [227, 1, 1, "", "gpumapeq"], [227, 1, 1, "", "gpupointer"], [227, 1, 1, "", "gpuscalar"], [227, 1, 1, "", "guessGPUType"], [227, 1, 1, "", "kernel"], [227, 1, 1, "", "printKernel"], [227, 1, 1, "", "toGPUType"]], "neurotools.obsolete.gpu.cu.gpufun": [[228, 1, 1, "", "gpuhill"], [228, 1, 1, "", "gpulcomb"], [228, 1, 1, "", "gpulogpdf"], [228, 1, 1, "", "gpumean"], [228, 1, 1, "", "gpunpdf"], [228, 1, 1, "", "gpurandexp"], [228, 1, 1, "", "gpurandf"], [228, 1, 1, "", "gpuuniform"]], "neurotools.obsolete.gpu.cu.graph": [[229, 1, 1, "", "connect_gaussian"], [229, 1, 1, "", "random_point_sheet"], [229, 1, 1, "", "spherepoints"], [229, 1, 1, "", "uniform_point_sheet"]], "neurotools.obsolete.gpu.cu.logic": [[230, 1, 1, "", "gpuand"], [230, 1, 1, "", "gpueq"], [230, 1, 1, "", "gpugt"], [230, 1, 1, "", "gpugteq"], [230, 1, 1, "", "gpuhzero"], [230, 1, 1, "", "gpult"], [230, 1, 1, "", "gpulteq"], [230, 1, 1, "", "gpuneq"], [230, 1, 1, "", "gpunor"], [230, 1, 1, "", "gpunot"], [230, 1, 1, "", "gpurange"], [230, 1, 1, "", "gpuyes"]], "neurotools.obsolete.gpu.cu.plot": [[232, 1, 1, "", "ElementwiseKernel"], [232, 1, 1, "", "gpubarlinedata"], [232, 1, 1, "", "gpuhistogram"], [232, 1, 1, "", "missing"], [232, 1, 1, "", "sebarline"], [232, 1, 1, "", "sebarline2"]], "neurotools.obsolete.gpu.cu.sequence": [[233, 1, 1, "", "FrameEater"], [233, 1, 1, "", "GPUAutometric"], [233, 1, 1, "", "GPUDotmetric"], [233, 1, 1, "", "GPUMagmetric"], [233, 1, 1, "", "GPUPointAutoDistance"], [233, 1, 1, "", "GPUSequenceAutoDetect"], [233, 1, 1, "", "deltamag"], [233, 1, 1, "", "fitgaussbimodal"], [233, 1, 1, "", "fitgausstrimodal"], [233, 1, 1, "", "gpuderivative"], [233, 1, 1, "", "gpulognpdf"], [233, 1, 1, "", "gpunpdf"], [233, 1, 1, "", "gpusmooth"], [233, 1, 1, "", "gpusubsetgfit"], [233, 1, 1, "", "gpusubsetmean"], [233, 1, 1, "", "gputhing"], [233, 1, 1, "", "mulmag"], [233, 1, 1, "", "summag"]], "neurotools.obsolete.models": [[236, 0, 0, "-", "izh"], [237, 0, 0, "-", "lif"]], "neurotools.obsolete.models.izh": [[236, 1, 1, "", "du_izh"], [236, 1, 1, "", "dv_izh"], [236, 1, 1, "", "sim_izh"], [236, 1, 1, "", "update_izh"]], "neurotools.obsolete.models.lif": [[237, 1, 1, "", "euler_integrate_LIF"], [237, 1, 1, "", "exponential_integrate_LIF"], [237, 1, 1, "", "exponential_moving_average"]], "neurotools.signal": [[247, 1, 1, "", "amp"], [247, 1, 1, "", "ang"], [247, 1, 1, "", "arenear"], [247, 1, 1, "", "aresafe"], [247, 1, 1, "", "autocorrelation"], [247, 1, 1, "", "band_stop_line_noise_removal"], [247, 1, 1, "", "bandpass_filter"], [247, 1, 1, "", "box_filter"], [247, 1, 1, "", "circular_cosine_basis"], [247, 1, 1, "", "circular_gaussian_smooth"], [247, 1, 1, "", "circular_gaussian_smooth_2D"], [247, 1, 1, "", "complex_to_nan"], [249, 0, 0, "-", "conv"], [247, 1, 1, "", "deltaovermean"], [247, 1, 1, "", "drop_nonfinite"], [247, 1, 1, "", "estimate_padding"], [247, 1, 1, "", "fdiff"], [247, 1, 1, "", "fftacorr1d"], [247, 1, 1, "", "fftsta"], [247, 1, 1, "", "fm_mod"], [247, 1, 1, "", "fudge_derivative"], [247, 1, 1, "", "gaussian_kernel"], [247, 1, 1, "", "gaussian_smooth"], [247, 1, 1, "", "gaussianize"], [247, 1, 1, "", "geometric_window"], [247, 1, 1, "", "get_edges"], [247, 1, 1, "", "get_snips"], [247, 1, 1, "", "get_triggered_stats"], [247, 1, 1, "", "highpass_filter"], [247, 1, 1, "", "ifreq"], [247, 1, 1, "", "interpmax1d"], [247, 1, 1, "", "interpolate_NaN"], [247, 1, 1, "", "interpolate_NaN_quadratic"], [247, 1, 1, "", "invert_uniformize"], [247, 1, 1, "", "killSpikes"], [247, 1, 1, "", "linear_cosine_basis"], [247, 1, 1, "", "linfilter"], [247, 1, 1, "", "local_maxima"], [247, 1, 1, "", "local_minima"], [247, 1, 1, "", "local_peak_within"], [247, 1, 1, "", "lowpass_filter"], [247, 1, 1, "", "make_lagged"], [247, 1, 1, "", "make_rebroadcast_slice"], [247, 1, 1, "", "mean_block"], [247, 1, 1, "", "median_block"], [247, 1, 1, "", "median_filter"], [251, 0, 0, "-", "morlet"], [253, 0, 0, "-", "multitaper"], [247, 1, 1, "", "ndargmax"], [247, 1, 1, "", "nice_interp"], [247, 1, 1, "", "nonnegative_bandpass_filter"], [247, 1, 1, "", "pad_signal"], [247, 1, 1, "", "padin"], [247, 1, 1, "", "padout"], [247, 1, 1, "", "pdiff"], [247, 1, 1, "", "peak_within"], [247, 1, 1, "", "percentile_filter"], [247, 1, 1, "", "pghilbert"], [247, 1, 1, "", "phase_randomize"], [247, 1, 1, "", "phase_randomize_from_amplitudes"], [247, 1, 1, "", "phase_rotate"], [247, 1, 1, "", "pieces"], [254, 0, 0, "-", "ppc"], [247, 1, 1, "", "randband"], [247, 1, 1, "", "remove_gaps"], [247, 1, 1, "", "remove_short"], [247, 1, 1, "", "rewrap"], [256, 0, 0, "-", "savitskygolay"], [257, 0, 0, "-", "sde"], [247, 1, 1, "", "set_edges"], [247, 1, 1, "", "sign_preserving_amplitude_demodulate"], [247, 1, 1, "", "spaced_derivative"], [247, 1, 1, "", "span"], [247, 1, 1, "", "split_into_groups"], [247, 1, 1, "", "stats_block"], [247, 1, 1, "", "topercentiles"], [247, 1, 1, "", "triggered_average"], [247, 1, 1, "", "uniformize"], [247, 1, 1, "", "unit_length"], [247, 1, 1, "", "unitscale"], [247, 1, 1, "", "unwrap"], [247, 1, 1, "", "upsample"], [247, 1, 1, "", "var_block"], [247, 1, 1, "", "variance_filter"], [247, 1, 1, "", "virtual_reference_line_noise_removal"], [247, 1, 1, "", "zeromean"], [247, 1, 1, "", "zgrid"], [247, 1, 1, "", "zscore"]], "neurotools.signal.conv": [[249, 1, 1, "", "convolve2dct"], [249, 1, 1, "", "gausskern1d"], [249, 1, 1, "", "gausskern2d"], [249, 1, 1, "", "mirror2d"], [249, 1, 1, "", "reflect2D"], [249, 1, 1, "", "reflect2D_1"], [249, 1, 1, "", "separable2d"]], "neurotools.signal.morlet": [[251, 1, 1, "", "fft_cwt"], [251, 1, 1, "", "fft_cwt_transposed"], [251, 1, 1, "", "fft_cwt_transposed_logspaced"], [251, 1, 1, "", "logfreqs"], [251, 1, 1, "", "normalized_morlet"], [251, 1, 1, "", "population_synchrony_spectrum"], [251, 1, 1, "", "prepare_wavelet_fft_basis"], [251, 1, 1, "", "prepare_wavelet_fft_basis_logspace"]], "neurotools.signal.multitaper": [[253, 1, 1, "", "dpss_cached"], [253, 1, 1, "", "multitaper_population_eigencoherence"], [253, 1, 1, "", "multitaper_spectrum"], [253, 1, 1, "", "multitaper_squared_spectrum"], [253, 1, 1, "", "sliding_multitaper_spectrum"]], "neurotools.signal.ppc": [[254, 1, 1, "", "discard_spikes_closer_than_delta"], [254, 1, 1, "", "estimate_bias_in_uncorrected_ppc"], [254, 1, 1, "", "fftppc"], [254, 1, 1, "", "fftppc_biased"], [254, 1, 1, "", "fftppc_biased_multitaper"], [254, 1, 1, "", "fftppc_multitaper"], [254, 1, 1, "", "pairwise_phase_consistancy"], [254, 1, 1, "", "phase_randomize"], [254, 1, 1, "", "phase_randomized_bias_correction"], [254, 1, 1, "", "ppc_chance_level"], [254, 1, 1, "", "ppc_phase_randomize_chance_level_sample"]], "neurotools.signal.savitskygolay": [[256, 1, 1, "", "SGKern"], [256, 1, 1, "", "SGKernA"], [256, 1, 1, "", "SGKernJ"], [256, 1, 1, "", "SGKernV"], [256, 1, 1, "", "SGOrd"], [256, 1, 1, "", "SGaccelerate"], [256, 1, 1, "", "SGdifferentiate"], [256, 1, 1, "", "SGfilt"], [256, 1, 1, "", "SGfiltA"], [256, 1, 1, "", "SGfiltJ"], [256, 1, 1, "", "SGfiltV"], [256, 1, 1, "", "SGjerk"], [256, 1, 1, "", "SGsmooth"]], "neurotools.signal.sde": [[257, 1, 1, "", "sample_ou_process"], [257, 1, 1, "", "sample_wiener_process"]], "neurotools.spatial": [[260, 0, 0, "-", "array"], [259, 1, 1, "", "brute_force_local_2d_maxima"], [261, 0, 0, "-", "dct"], [262, 0, 0, "-", "distance"], [263, 0, 0, "-", "fftzeros"], [265, 0, 0, "-", "kernels"], [267, 0, 0, "-", "phase"], [268, 0, 0, "-", "points"], [270, 0, 0, "-", "spiking"], [271, 0, 0, "-", "triangulation"]], "neurotools.spatial.array": [[260, 1, 1, "", "array_average_amplitude"], [260, 1, 1, "", "array_count_centers"], [260, 1, 1, "", "array_count_critical"], [260, 1, 1, "", "array_kuramoto"], [260, 1, 1, "", "array_kuramoto_pgd"], [260, 1, 1, "", "array_kuramoto_pgd_standard_deviation"], [260, 1, 1, "", "array_kuramoto_standard_deviation"], [260, 1, 1, "", "array_phase_gradient"], [260, 1, 1, "", "array_phasegradient_local"], [260, 1, 1, "", "array_phasegradient_magnitude_cv"], [260, 1, 1, "", "array_phasegradient_magnitude_sigma"], [260, 1, 1, "", "array_phasegradient_pgd_threshold"], [260, 1, 1, "", "array_phasegradient_planar"], [260, 1, 1, "", "array_speed_local"], [260, 1, 1, "", "array_speed_pgd_threshold"], [260, 1, 1, "", "array_synchrony"], [260, 1, 1, "", "array_synchrony_pgd"], [260, 1, 1, "", "array_synchrony_pgd_standard_deviation"], [260, 1, 1, "", "array_synchrony_standard_deviation"], [260, 1, 1, "", "array_wavelength_local"], [260, 1, 1, "", "array_wavelength_local_pgd_threshold"], [260, 1, 1, "", "array_wavelength_pgd_threshold"], [260, 1, 1, "", "array_wavelength_planar"], [260, 1, 1, "", "pack_array_data"], [260, 1, 1, "", "trim_array"], [260, 1, 1, "", "trim_array_as_if"]], "neurotools.spatial.dct": [[261, 1, 1, "", "dct_cut"], [261, 1, 1, "", "dct_cut_antialias"], [261, 1, 1, "", "dct_cut_downsampled"], [261, 1, 1, "", "dct_upsample"], [261, 1, 1, "", "dct_upsample_notrim"], [261, 1, 1, "", "get_mask"], [261, 1, 1, "", "get_mask_antialiased"], [261, 1, 1, "", "iterated_upsample"], [261, 1, 1, "", "outer_complex"]], "neurotools.spatial.distance": [[262, 1, 1, "", "distance_angular_deviation"], [262, 1, 1, "", "get_average_synchrony_length_constant_parallel"], [262, 1, 1, "", "get_averaged_angular_distance"], [262, 1, 1, "", "get_length_constant_trial"], [262, 1, 1, "", "get_pair_distance"], [262, 1, 1, "", "synchrony_length_constant_areas_summary"]], "neurotools.spatial.fftzeros": [[263, 1, 1, "", "coalesce"], [263, 1, 1, "", "coalesce_points"], [263, 1, 1, "", "cut_array_data"], [263, 1, 1, "", "dPhidx"], [263, 1, 1, "", "dPhidy"], [263, 1, 1, "", "find_critical_points"], [263, 1, 1, "", "find_critical_potential_points"], [263, 1, 1, "", "get_critical_spectra"], [263, 1, 1, "", "get_phase_gradient_as_complex"], [263, 1, 1, "", "getp"], [263, 1, 1, "", "getpeaks2d"], [263, 1, 1, "", "grad"], [263, 1, 1, "", "mirror2D"], [263, 1, 1, "", "plot_critical_points"], [263, 1, 1, "", "plot_critical_spectra"], [263, 1, 1, "", "plot_phase_direction"], [263, 1, 1, "", "plot_phase_gradient"], [263, 1, 1, "", "quickgrad"]], "neurotools.spatial.kernels": [[265, 1, 1, "", "absorbing_gaussian"], [265, 1, 1, "", "absorbing_laplacian"], [265, 1, 1, "", "continuum_kernel"], [265, 1, 1, "", "cosine_kernel"], [265, 1, 1, "", "diffusion_basis"], [265, 1, 1, "", "exponential_basis"], [265, 1, 1, "", "gaussian_2D_kernel"], [265, 1, 1, "", "iterative_orthogonalize_basis"], [265, 1, 1, "", "laplace_kernel"], [265, 1, 1, "", "laplacian"], [265, 1, 1, "", "log_cosine_basis"], [265, 1, 1, "", "log_spline_basis"], [265, 1, 1, "", "magickernel"], [265, 1, 1, "", "magicsharp"], [265, 1, 1, "", "make_cosine_basis"]], "neurotools.spatial.phase": [[267, 1, 1, "", "analytic_signal_coherence"], [267, 1, 1, "", "population_average_amplitude"], [267, 1, 1, "", "population_kuramoto"], [267, 1, 1, "", "population_median_frequency"], [267, 1, 1, "", "population_median_phase_velocity"], [267, 1, 1, "", "population_normalized_sliding_signal_coherence"], [267, 1, 1, "", "population_phase_coherence"], [267, 1, 1, "", "population_phase_relative_sliding_kuramoto"], [267, 1, 1, "", "population_polar_std"], [267, 1, 1, "", "population_signal_amplitude_dispersion"], [267, 1, 1, "", "population_signal_amplitude_precision"], [267, 1, 1, "", "population_signal_amplitude_std"], [267, 1, 1, "", "population_signal_concentration"], [267, 1, 1, "", "population_signal_description"], [267, 1, 1, "", "population_signal_dispersion"], [267, 1, 1, "", "population_signal_phase_dispersion"], [267, 1, 1, "", "population_signal_phase_precision"], [267, 1, 1, "", "population_signal_phase_std"], [267, 1, 1, "", "population_signal_precision"], [267, 1, 1, "", "population_sliding_signal_coherence"], [267, 1, 1, "", "population_synchrony"], [267, 1, 1, "", "population_synchrony_linear"], [267, 1, 1, "", "sliding_population_signal_coherence"]], "neurotools.spatial.points": [[268, 1, 1, "", "c2p"], [268, 1, 1, "", "closest"], [268, 1, 1, "", "p2c"], [268, 1, 1, "", "pair_neighbors"], [268, 1, 1, "", "paired_distances"], [268, 1, 1, "", "to_xypoint"]], "neurotools.spatial.spiking": [[270, 1, 1, "", "interp_bin"]], "neurotools.spatial.triangulation": [[271, 1, 1, "", "coalesce"], [271, 1, 1, "", "edgesNearby"], [271, 1, 1, "", "mergeNearby"], [271, 1, 1, "", "plot_edges"], [271, 1, 1, "", "plot_triangles"], [271, 1, 1, "", "trianglesToEdges"], [271, 1, 1, "", "uniquerow"], [271, 1, 1, "", "z2xy"]], "neurotools.spikes": [[274, 0, 0, "-", "spikes"], [275, 0, 0, "-", "waveform"]], "neurotools.spikes.spikes": [[274, 1, 1, "", "bin_spike_times"], [274, 1, 1, "", "bin_spikes_raster"], [274, 1, 1, "", "cut_spikes"], [274, 1, 1, "", "pack_cross_correlation_matrix"], [274, 1, 1, "", "pp_xcorr"], [274, 1, 1, "", "times_to_raster"], [274, 1, 1, "", "txcorr"]], "neurotools.spikes.waveform": [[275, 1, 1, "", "getFWHM"], [275, 1, 1, "", "getPHP"], [275, 1, 1, "", "getPT"], [275, 1, 1, "", "getPTHW"], [275, 1, 1, "", "getPVT"], [275, 1, 1, "", "getWAHP"], [275, 1, 1, "", "is_thin"], [275, 1, 1, "", "is_thin_pvt"], [275, 1, 1, "", "minmax"], [275, 1, 1, "", "normalized_waveform"], [275, 1, 1, "", "process"], [275, 1, 1, "", "realign"]], "neurotools.stats": [[276, 2, 1, "", "Description"], [276, 1, 1, "", "add_constant"], [276, 1, 1, "", "auc_to_g2"], [276, 1, 1, "", "block_shuffle"], [280, 0, 0, "-", "convolutional"], [276, 1, 1, "", "covariance"], [276, 1, 1, "", "crossvalidated_least_squares"], [281, 0, 0, "-", "density"], [282, 0, 0, "-", "distributions"], [284, 0, 0, "-", "fast_kde"], [276, 1, 1, "", "fraction_explained_deviance"], [293, 0, 0, "-", "gaussian"], [294, 0, 0, "-", "glm"], [276, 1, 1, "", "glmfit"], [296, 0, 0, "-", "grid_search"], [298, 0, 0, "-", "hmm"], [299, 0, 0, "-", "information"], [303, 0, 0, "-", "mcint"], [304, 0, 0, "-", "minimize"], [305, 0, 0, "-", "mixtures"], [306, 0, 0, "-", "modefind"], [276, 1, 1, "", "nrmse"], [276, 1, 1, "", "outliers"], [276, 1, 1, "", "partition_data"], [276, 1, 1, "", "partition_data_for_crossvalidation"], [276, 1, 1, "", "partition_trials_for_crossvalidation"], [276, 1, 1, "", "pca"], [276, 1, 1, "", "polar_error"], [276, 1, 1, "", "print_stats"], [308, 0, 0, "-", "pvalues"], [309, 0, 0, "-", "regressions"], [276, 1, 1, "", "reject_outliers"], [276, 1, 1, "", "trial_crossvalidated_least_squares"], [276, 1, 1, "", "weighted_avg_and_std"]], "neurotools.stats.Description": [[276, 3, 1, "", "short"]], "neurotools.stats.convolutional": [[280, 1, 1, "", "autocorrelation_bayes"], [280, 1, 1, "", "blockccm"], [280, 1, 1, "", "blocksta"], [280, 1, 1, "", "ccm"], [280, 1, 1, "", "ccor"], [280, 1, 1, "", "construct_lowpass_operator"], [280, 1, 1, "", "create_spectral_model"], [280, 1, 1, "", "cspect"], [280, 1, 1, "", "cspectm"], [280, 1, 1, "", "reconstruct"], [280, 1, 1, "", "spectreconstruct"], [280, 1, 1, "", "spike_lfp_filters"], [280, 1, 1, "", "sta"]], "neurotools.stats.density": [[281, 1, 1, "", "adaptive_density_grid"], [281, 1, 1, "", "gridhist"], [281, 1, 1, "", "kdepeak"], [281, 1, 1, "", "knn_1d_density"]], "neurotools.stats.distributions": [[282, 1, 1, "", "explogpdf"], [282, 1, 1, "", "gaussian_logpdf"], [282, 1, 1, "", "gaussian_pdf"], [282, 1, 1, "", "poisson_logpdf"], [282, 1, 1, "", "poisson_pdf"], [282, 1, 1, "", "sample_categorical"]], "neurotools.stats.fast_kde": [[284, 1, 1, "", "fast_kde"], [284, 1, 1, "", "image_cov"]], "neurotools.stats.gaussian": [[293, 2, 1, "", "Gaussian"], [293, 1, 1, "", "MVG_DKL"], [293, 1, 1, "", "MVG_DKL_CP"], [293, 1, 1, "", "MVG_PDF"], [293, 1, 1, "", "MVG_check"], [293, 1, 1, "", "MVG_conditional"], [293, 1, 1, "", "MVG_divide"], [293, 1, 1, "", "MVG_entropy"], [293, 1, 1, "", "MVG_kalman"], [293, 1, 1, "", "MVG_kalman_P_inverseA"], [293, 1, 1, "", "MVG_kalman_joint"], [293, 1, 1, "", "MVG_kalman_joint_P"], [293, 1, 1, "", "MVG_logPDF"], [293, 1, 1, "", "MVG_multiply"], [293, 1, 1, "", "MVG_multiply_C"], [293, 1, 1, "", "MVG_projection"], [293, 1, 1, "", "MVG_sample"], [293, 1, 1, "", "gaussian_quadrature"], [293, 1, 1, "", "gaussian_quadrature_logarithmic"]], "neurotools.stats.gaussian.Gaussian": [[293, 3, 1, "", "logpdf"], [293, 4, 1, "", "m"], [293, 4, 1, "", "t"]], "neurotools.stats.glm": [[294, 1, 1, "", "GLMPenaltyBernoulli"], [294, 1, 1, "", "GLMPenaltyL2"], [294, 1, 1, "", "GLMPenaltyPoisson"], [294, 1, 1, "", "cosine_kernel"], [294, 1, 1, "", "crossvalidatedAUC"], [294, 1, 1, "", "fitGLM"], [294, 1, 1, "", "gradientglmfit"], [294, 1, 1, "", "log_cosine_basis"], [294, 1, 1, "", "make_cosine_basis"], [294, 1, 1, "", "numeric_grad"], [294, 1, 1, "", "numeric_hess"], [294, 1, 1, "", "ppglmfit"], [294, 1, 1, "", "sexp"], [294, 1, 1, "", "sigmoid"]], "neurotools.stats.grid_search": [[296, 1, 1, "", "grid_search"]], "neurotools.stats.hmm": [[298, 2, 1, "", "BernoulliObservationApproximator"], [298, 2, 1, "", "BernoulliObservationModel"], [298, 2, 1, "", "ChisquareCoxApproximator"], [298, 2, 1, "", "ChisquareCoxModel"], [298, 2, 1, "", "DiffusionGaussian"], [298, 2, 1, "", "GaussianCoxApproximator"], [298, 2, 1, "", "GaussianCoxModel"], [298, 2, 1, "", "LogGaussianCoxApproximator"], [298, 2, 1, "", "LogGaussianCoxModel"], [298, 2, 1, "", "MVGOUUpdate"], [298, 2, 1, "", "MVGUpdate"], [298, 2, 1, "", "MVGaussian"], [298, 2, 1, "", "MVLogGaussianCox"], [298, 2, 1, "", "OUGaussian"], [298, 2, 1, "", "PoissonObservationApproximator"], [298, 2, 1, "", "PoissonObservationModel"], [298, 2, 1, "", "TruncatedLogGaussianCoxApproximator"], [298, 2, 1, "", "TruncatedLogGaussianCoxModel"], [298, 2, 1, "", "TruncatedPoissonObservationApproximator"], [298, 2, 1, "", "TruncatedPoissonObservationModel"], [298, 1, 1, "", "backward_abstract"], [298, 1, 1, "", "baum_welch"], [298, 1, 1, "", "forward_abstract"], [298, 1, 1, "", "forward_backward"], [298, 1, 1, "", "forward_backward_abstract"], [298, 1, 1, "", "hasNaN"], [298, 1, 1, "", "jump"], [298, 1, 1, "", "lgcp_observation_minimizer"], [298, 1, 1, "", "log_likelihood"], [298, 1, 1, "", "poisson_baum_welch"], [298, 1, 1, "", "poisson_parameter_guess"], [298, 1, 1, "", "poisson_viterbi_state_infer"], [298, 1, 1, "", "sample"], [298, 1, 1, "", "viterbi"], [298, 1, 1, "", "viterbi_log"]], "neurotools.stats.hmm.DiffusionGaussian": [[298, 3, 1, "", "bwd"], [298, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVGOUUpdate": [[298, 3, 1, "", "bwd"], [298, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVGUpdate": [[298, 3, 1, "", "bwd"], [298, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVLogGaussianCox": [[298, 2, 1, "", "MVPoissonApproximator"]], "neurotools.stats.hmm.OUGaussian": [[298, 3, 1, "", "bwd"], [298, 3, 1, "", "fwd"]], "neurotools.stats.information": [[299, 1, 1, "", "DKL_discrete"], [299, 1, 1, "", "discrete_entropy_distribution"], [299, 1, 1, "", "discrete_entropy_samples"], [299, 1, 1, "", "poisson_entropy_nats"], [299, 1, 1, "", "regularized_discrete_entropy"]], "neurotools.stats.mcint": [[303, 1, 1, "", "monte_carlo_expectation"], [303, 1, 1, "", "monte_carlo_moments"]], "neurotools.stats.minimize": [[304, 5, 1, "", "FailureError"], [304, 1, 1, "", "minimize_retry"]], "neurotools.stats.mixtures": [[305, 1, 1, "", "two_class_poisson_mixture_model"]], "neurotools.stats.modefind": [[306, 1, 1, "", "logmode"], [306, 1, 1, "", "logmodeplot"], [306, 1, 1, "", "modefind"], [306, 1, 1, "", "peakfinder5"]], "neurotools.stats.pvalues": [[308, 1, 1, "", "benjamini_hochberg_positive_correlations"], [308, 1, 1, "", "bootstrap_compare_mean"], [308, 1, 1, "", "bootstrap_compare_median"], [308, 1, 1, "", "bootstrap_compare_statistic_two_sided"], [308, 1, 1, "", "bootstrap_compare_statistic_two_sided_parallel"], [308, 1, 1, "", "bootstrap_mean"], [308, 1, 1, "", "bootstrap_median"], [308, 1, 1, "", "bootstrap_statistic_two_sided"], [308, 1, 1, "", "correct_pvalues"], [308, 1, 1, "", "correct_pvalues_positive_dependent"]], "neurotools.stats.regressions": [[309, 1, 1, "", "damped_cosine"], [309, 1, 1, "", "exponential_decay"], [309, 1, 1, "", "gaussian_function"], [309, 1, 1, "", "half_gaussian_function"], [309, 1, 1, "", "power_law"], [309, 1, 1, "", "robust_line"], [309, 1, 1, "", "weighted_least_squares"]], "neurotools.util": [[318, 0, 0, "-", "functions"], [319, 0, 0, "-", "getfftw"], [320, 0, 0, "-", "hdfmat"], [321, 0, 0, "-", "string"], [322, 0, 0, "-", "system"], [323, 0, 0, "-", "time"], [324, 0, 0, "-", "tools"]], "neurotools.util.functions": [[318, 1, 1, "", "dsigmoid"], [318, 1, 1, "", "f"], [318, 1, 1, "", "f1"], [318, 1, 1, "", "f2"], [318, 1, 1, "", "g"], [318, 1, 1, "", "inversesigmoid"], [318, 1, 1, "", "log_factorial"], [318, 1, 1, "", "npdf"], [318, 1, 1, "", "sexp"], [318, 1, 1, "", "sigmoid"], [318, 1, 1, "", "slog"]], "neurotools.util.getfftw": [[319, 1, 1, "", "ftwthr"]], "neurotools.util.hdfmat": [[320, 1, 1, "", "getHDF"], [320, 1, 1, "", "getHDFvalue"], [320, 1, 1, "", "hdf2dict"], [320, 1, 1, "", "printmatHDF5"], [320, 1, 1, "", "recursive_printmatHDF5"]], "neurotools.util.string": [[321, 1, 1, "", "eformat"], [321, 1, 1, "", "hcat"], [321, 1, 1, "", "incolumns"], [321, 1, 1, "", "isInt"], [321, 1, 1, "", "nicetable"], [321, 1, 1, "", "percent"], [321, 1, 1, "", "shortscientific"], [321, 1, 1, "", "v2str"], [321, 1, 1, "", "v2str_long"], [321, 1, 1, "", "wordwrap"]], "neurotools.util.system": [[322, 1, 1, "", "execfile"], [322, 1, 1, "", "query_yes_no"]], "neurotools.util.time": [[323, 1, 1, "", "current_milli_time"], [323, 1, 1, "", "now"], [323, 1, 1, "", "tic"], [323, 1, 1, "", "toc"], [323, 1, 1, "", "today"], [323, 1, 1, "", "waitfor"]], "neurotools.util.tools": [[324, 1, 1, "", "aap"], [324, 1, 1, "", "amap"], [324, 1, 1, "", "arraymap"], [324, 1, 1, "", "asiterable"], [324, 1, 1, "", "c2p"], [324, 1, 1, "", "camel2underscore"], [324, 1, 1, "", "clear"], [324, 1, 1, "", "debug"], [324, 1, 1, "", "dowarn"], [324, 2, 1, "", "emitter"], [324, 1, 1, "", "ensure_dir"], [324, 1, 1, "", "exists"], [324, 1, 1, "", "ezip"], [324, 1, 1, "", "find"], [324, 1, 1, "", "find_all_extension"], [324, 1, 1, "", "getVariable"], [324, 1, 1, "", "getdict"], [324, 1, 1, "", "getsize"], [324, 1, 1, "", "globalize"], [324, 1, 1, "", "history"], [324, 1, 1, "", "invert_permutation"], [324, 1, 1, "", "lap"], [324, 1, 1, "", "lmap"], [324, 1, 1, "", "mapdict"], [324, 1, 1, "", "matlab"], [324, 1, 1, "", "metaloadmat"], [324, 1, 1, "", "nowarn"], [324, 1, 1, "", "okwarn"], [324, 1, 1, "", "oneslike"], [324, 1, 1, "", "p2c"], [324, 2, 1, "", "piper"], [324, 1, 1, "", "restoreContext"], [324, 1, 1, "", "saveContext"], [324, 1, 1, "", "setinrange"], [324, 1, 1, "", "slist"], [324, 1, 1, "", "sls"], [324, 2, 1, "", "stuff"], [324, 1, 1, "", "underscore2camel"], [324, 1, 1, "", "varexists"], [324, 1, 1, "", "wait"], [324, 1, 1, "", "warn"], [324, 1, 1, "", "zeroslike"]], "neurotools.util.tools.stuff": [[324, 3, 1, "", "add"]], "nlab": [[325, 1, 1, "", "beta"], [325, 1, 1, "", "binomial"], [325, 1, 1, "", "chisquare"], [325, 1, 1, "", "choice"], [325, 1, 1, "", "dirichlet"], [325, 1, 1, "", "exponential"], [325, 1, 1, "", "f"], [325, 1, 1, "", "gamma"], [325, 1, 1, "", "geometric"], [325, 1, 1, "", "get_state"], [325, 1, 1, "", "gumbel"], [325, 1, 1, "", "hypergeometric"], [325, 1, 1, "", "laplace"], [325, 1, 1, "", "logistic"], [325, 1, 1, "", "lognormal"], [325, 1, 1, "", "logseries"], [325, 1, 1, "", "multinomial"], [325, 1, 1, "", "multivariate_normal"], [325, 1, 1, "", "negative_binomial"], [325, 1, 1, "", "noncentral_chisquare"], [325, 1, 1, "", "noncentral_f"], [325, 1, 1, "", "normal"], [325, 1, 1, "", "pareto"], [325, 1, 1, "", "permutation"], [325, 1, 1, "", "poisson"], [325, 1, 1, "", "power"], [325, 1, 1, "", "rand"], [325, 1, 1, "", "randint"], [325, 1, 1, "", "randn"], [325, 1, 1, "", "random"], [325, 1, 1, "", "random_integers"], [325, 1, 1, "", "random_sample"], [325, 1, 1, "", "rayleigh"], [325, 1, 1, "", "seed"], [325, 1, 1, "", "set_state"], [325, 1, 1, "", "shuffle"], [325, 1, 1, "", "standard_cauchy"], [325, 1, 1, "", "standard_exponential"], [325, 1, 1, "", "standard_gamma"], [325, 1, 1, "", "standard_normal"], [325, 1, 1, "", "standard_t"], [325, 1, 1, "", "triangular"], [325, 1, 1, "", "uniform"], [325, 1, 1, "", "vonmises"], [325, 1, 1, "", "wald"], [325, 1, 1, "", "weibull"], [325, 1, 1, "", "zipf"]], "signal": [[327, 2, 1, "", "Handlers"], [327, 4, 1, "", "ItimerError"], [327, 2, 1, "", "Sigmasks"], [327, 2, 1, "", "Signals"], [327, 1, 1, "", "getsignal"], [327, 1, 1, "", "pthread_sigmask"], [337, 0, 0, "-", "signal"], [327, 1, 1, "", "sigpending"], [327, 1, 1, "", "sigwait"], [327, 2, 1, "", "struct_siginfo"], [327, 1, 1, "", "valid_signals"]], "signal.Handlers": [[327, 4, 1, "", "SIG_DFL"], [327, 4, 1, "", "SIG_IGN"]], "signal.Sigmasks": [[327, 4, 1, "", "SIG_BLOCK"], [327, 4, 1, "", "SIG_SETMASK"], [327, 4, 1, "", "SIG_UNBLOCK"]], "signal.Signals": [[327, 4, 1, "", "SIGABRT"], [327, 4, 1, "", "SIGALRM"], [327, 4, 1, "", "SIGBUS"], [327, 4, 1, "", "SIGCHLD"], [327, 4, 1, "", "SIGCLD"], [327, 4, 1, "", "SIGCONT"], [327, 4, 1, "", "SIGFPE"], [327, 4, 1, "", "SIGHUP"], [327, 4, 1, "", "SIGILL"], [327, 4, 1, "", "SIGINT"], [327, 4, 1, "", "SIGIO"], [327, 4, 1, "", "SIGIOT"], [327, 4, 1, "", "SIGKILL"], [327, 4, 1, "", "SIGPIPE"], [327, 4, 1, "", "SIGPOLL"], [327, 4, 1, "", "SIGPROF"], [327, 4, 1, "", "SIGPWR"], [327, 4, 1, "", "SIGQUIT"], [327, 4, 1, "", "SIGRTMAX"], [327, 4, 1, "", "SIGRTMIN"], [327, 4, 1, "", "SIGSEGV"], [327, 4, 1, "", "SIGSTOP"], [327, 4, 1, "", "SIGSYS"], [327, 4, 1, "", "SIGTERM"], [327, 4, 1, "", "SIGTRAP"], [327, 4, 1, "", "SIGTSTP"], [327, 4, 1, "", "SIGTTIN"], [327, 4, 1, "", "SIGTTOU"], [327, 4, 1, "", "SIGURG"], [327, 4, 1, "", "SIGUSR1"], [327, 4, 1, "", "SIGUSR2"], [327, 4, 1, "", "SIGVTALRM"], [327, 4, 1, "", "SIGWINCH"], [327, 4, 1, "", "SIGXCPU"], [327, 4, 1, "", "SIGXFSZ"]], "signal.struct_siginfo": [[327, 4, 1, "", "n_fields"], [327, 4, 1, "", "n_sequence_fields"], [327, 4, 1, "", "n_unnamed_fields"], [327, 4, 1, "", "si_band"], [327, 4, 1, "", "si_code"], [327, 4, 1, "", "si_errno"], [327, 4, 1, "", "si_pid"], [327, 4, 1, "", "si_signo"], [327, 4, 1, "", "si_status"], [327, 4, 1, "", "si_uid"]], "spatial": [[339, 0, 0, "-", "array"], [338, 1, 1, "", "brute_force_local_2d_maxima"], [340, 0, 0, "-", "dct"], [341, 0, 0, "-", "distance"], [342, 0, 0, "-", "fftzeros"], [343, 0, 0, "-", "kernels"], [344, 0, 0, "-", "phase"], [346, 0, 0, "-", "spiking"], [347, 0, 0, "-", "triangulation"]], "spatial.array": [[339, 1, 1, "", "array_average_amplitude"], [339, 1, 1, "", "array_count_centers"], [339, 1, 1, "", "array_count_critical"], [339, 1, 1, "", "array_kuramoto"], [339, 1, 1, "", "array_kuramoto_pgd"], [339, 1, 1, "", "array_kuramoto_pgd_standard_deviation"], [339, 1, 1, "", "array_kuramoto_standard_deviation"], [339, 1, 1, "", "array_phase_gradient"], [339, 1, 1, "", "array_phasegradient_local"], [339, 1, 1, "", "array_phasegradient_magnitude_cv"], [339, 1, 1, "", "array_phasegradient_magnitude_sigma"], [339, 1, 1, "", "array_phasegradient_pgd_threshold"], [339, 1, 1, "", "array_phasegradient_planar"], [339, 1, 1, "", "array_speed_local"], [339, 1, 1, "", "array_speed_pgd_threshold"], [339, 1, 1, "", "array_synchrony"], [339, 1, 1, "", "array_synchrony_pgd"], [339, 1, 1, "", "array_synchrony_pgd_standard_deviation"], [339, 1, 1, "", "array_synchrony_standard_deviation"], [339, 1, 1, "", "array_wavelength_local"], [339, 1, 1, "", "array_wavelength_local_pgd_threshold"], [339, 1, 1, "", "array_wavelength_pgd_threshold"], [339, 1, 1, "", "array_wavelength_planar"], [339, 1, 1, "", "pack_array_data"], [339, 1, 1, "", "trim_array"], [339, 1, 1, "", "trim_array_as_if"]], "spatial.dct": [[340, 1, 1, "", "dct_cut"], [340, 1, 1, "", "dct_cut_antialias"], [340, 1, 1, "", "dct_cut_downsampled"], [340, 1, 1, "", "dct_upsample"], [340, 1, 1, "", "dct_upsample_notrim"], [340, 1, 1, "", "get_mask"], [340, 1, 1, "", "get_mask_antialiased"], [340, 1, 1, "", "iterated_upsample"], [340, 1, 1, "", "outer_complex"]], "spatial.distance": [[341, 1, 1, "", "distance_angular_deviation"], [341, 1, 1, "", "get_average_synchrony_length_constant_parallel"], [341, 1, 1, "", "get_averaged_angular_distance"], [341, 1, 1, "", "get_length_constant_trial"], [341, 1, 1, "", "get_pair_distance"], [341, 1, 1, "", "synchrony_length_constant_areas_summary"]], "spatial.fftzeros": [[342, 1, 1, "", "coalesce"], [342, 1, 1, "", "coalesce_points"], [342, 1, 1, "", "cut_array_data"], [342, 1, 1, "", "dPhidx"], [342, 1, 1, "", "dPhidy"], [342, 1, 1, "", "find_critical_points"], [342, 1, 1, "", "find_critical_potential_points"], [342, 1, 1, "", "get_critical_spectra"], [342, 1, 1, "", "get_phase_gradient_as_complex"], [342, 1, 1, "", "getp"], [342, 1, 1, "", "getpeaks2d"], [342, 1, 1, "", "grad"], [342, 1, 1, "", "mirror2D"], [342, 1, 1, "", "plot_critical_points"], [342, 1, 1, "", "plot_critical_spectra"], [342, 1, 1, "", "plot_phase_direction"], [342, 1, 1, "", "plot_phase_gradient"], [342, 1, 1, "", "quickgrad"]], "spatial.kernels": [[343, 1, 1, "", "absorbing_gaussian"], [343, 1, 1, "", "absorbing_laplacian"], [343, 1, 1, "", "continuum_kernel"], [343, 1, 1, "", "cosine_kernel"], [343, 1, 1, "", "diffusion_basis"], [343, 1, 1, "", "exponential_basis"], [343, 1, 1, "", "gaussian_2D_kernel"], [343, 1, 1, "", "iterative_orthogonalize_basis"], [343, 1, 1, "", "laplace_kernel"], [343, 1, 1, "", "laplacian"], [343, 1, 1, "", "log_cosine_basis"], [343, 1, 1, "", "log_spline_basis"], [343, 1, 1, "", "magickernel"], [343, 1, 1, "", "magicsharp"], [343, 1, 1, "", "make_cosine_basis"]], "spatial.phase": [[344, 1, 1, "", "analytic_signal_coherence"], [344, 1, 1, "", "population_average_amplitude"], [344, 1, 1, "", "population_kuramoto"], [344, 1, 1, "", "population_median_frequency"], [344, 1, 1, "", "population_median_phase_velocity"], [344, 1, 1, "", "population_normalized_sliding_signal_coherence"], [344, 1, 1, "", "population_phase_coherence"], [344, 1, 1, "", "population_phase_relative_sliding_kuramoto"], [344, 1, 1, "", "population_polar_std"], [344, 1, 1, "", "population_signal_amplitude_dispersion"], [344, 1, 1, "", "population_signal_amplitude_precision"], [344, 1, 1, "", "population_signal_amplitude_std"], [344, 1, 1, "", "population_signal_concentration"], [344, 1, 1, "", "population_signal_description"], [344, 1, 1, "", "population_signal_dispersion"], [344, 1, 1, "", "population_signal_phase_dispersion"], [344, 1, 1, "", "population_signal_phase_precision"], [344, 1, 1, "", "population_signal_phase_std"], [344, 1, 1, "", "population_signal_precision"], [344, 1, 1, "", "population_sliding_signal_coherence"], [344, 1, 1, "", "population_synchrony"], [344, 1, 1, "", "population_synchrony_linear"], [344, 1, 1, "", "sliding_population_signal_coherence"]], "spatial.spiking": [[346, 1, 1, "", "interp_bin"]], "spatial.triangulation": [[347, 1, 1, "", "coalesce"], [347, 1, 1, "", "edgesNearby"], [347, 1, 1, "", "mergeNearby"], [347, 1, 1, "", "plot_edges"], [347, 1, 1, "", "plot_triangles"], [347, 1, 1, "", "trianglesToEdges"], [347, 1, 1, "", "uniquerow"], [347, 1, 1, "", "z2xy"]], "spikes": [[349, 0, 0, "-", "spikes"], [350, 0, 0, "-", "waveform"]], "spikes.spikes": [[349, 1, 1, "", "bin_spike_times"], [349, 1, 1, "", "bin_spikes_raster"], [349, 1, 1, "", "cut_spikes"], [349, 1, 1, "", "pack_cross_correlation_matrix"], [349, 1, 1, "", "pp_xcorr"], [349, 1, 1, "", "times_to_raster"], [349, 1, 1, "", "txcorr"]], "spikes.waveform": [[350, 1, 1, "", "getFWHM"], [350, 1, 1, "", "getPHP"], [350, 1, 1, "", "getPT"], [350, 1, 1, "", "getPTHW"], [350, 1, 1, "", "getPVT"], [350, 1, 1, "", "getWAHP"], [350, 1, 1, "", "is_thin"], [350, 1, 1, "", "is_thin_pvt"], [350, 1, 1, "", "minmax"], [350, 1, 1, "", "normalized_waveform"], [350, 1, 1, "", "process"], [350, 1, 1, "", "realign"]], "stats": [[354, 0, 0, "-", "convolutional"], [355, 0, 0, "-", "density"], [356, 0, 0, "-", "distributions"], [358, 0, 0, "-", "fast_kde"], [359, 0, 0, "-", "glm"], [362, 0, 0, "-", "hmm"], [363, 0, 0, "-", "information"], [367, 0, 0, "-", "mcint"], [368, 0, 0, "-", "minimize"], [369, 0, 0, "-", "mixtures"], [370, 0, 0, "-", "modefind"], [372, 0, 0, "-", "pvalues"], [373, 0, 0, "-", "regressions"]], "stats.convolutional": [[354, 1, 1, "", "autocorrelation_bayes"], [354, 1, 1, "", "blockccm"], [354, 1, 1, "", "blocksta"], [354, 1, 1, "", "ccm"], [354, 1, 1, "", "ccor"], [354, 1, 1, "", "construct_lowpass_operator"], [354, 1, 1, "", "create_spectral_model"], [354, 1, 1, "", "cspect"], [354, 1, 1, "", "cspectm"], [354, 1, 1, "", "reconstruct"], [354, 1, 1, "", "spectreconstruct"], [354, 1, 1, "", "spike_lfp_filters"], [354, 1, 1, "", "sta"]], "stats.density": [[355, 1, 1, "", "adaptive_density_grid"], [355, 1, 1, "", "gridhist"], [355, 1, 1, "", "kdepeak"], [355, 1, 1, "", "knn_1d_density"]], "stats.distributions": [[356, 1, 1, "", "explogpdf"], [356, 1, 1, "", "gaussian_logpdf"], [356, 1, 1, "", "gaussian_pdf"], [356, 1, 1, "", "poisson_logpdf"], [356, 1, 1, "", "poisson_pdf"], [356, 1, 1, "", "sample_categorical"]], "stats.fast_kde": [[358, 1, 1, "", "fast_kde"], [358, 1, 1, "", "image_cov"]], "stats.glm": [[359, 1, 1, "", "GLMPenaltyBernoulli"], [359, 1, 1, "", "GLMPenaltyL2"], [359, 1, 1, "", "GLMPenaltyPoisson"], [359, 1, 1, "", "cosine_kernel"], [359, 1, 1, "", "crossvalidatedAUC"], [359, 1, 1, "", "fitGLM"], [359, 1, 1, "", "gradientglmfit"], [359, 1, 1, "", "log_cosine_basis"], [359, 1, 1, "", "make_cosine_basis"], [359, 1, 1, "", "numeric_grad"], [359, 1, 1, "", "numeric_hess"], [359, 1, 1, "", "ppglmfit"], [359, 1, 1, "", "sexp"], [359, 1, 1, "", "sigmoid"]], "stats.hmm": [[362, 2, 1, "", "BernoulliObservationApproximator"], [362, 2, 1, "", "BernoulliObservationModel"], [362, 2, 1, "", "ChisquareCoxApproximator"], [362, 2, 1, "", "ChisquareCoxModel"], [362, 2, 1, "", "DiffusionGaussian"], [362, 2, 1, "", "GaussianCoxApproximator"], [362, 2, 1, "", "GaussianCoxModel"], [362, 2, 1, "", "LogGaussianCoxApproximator"], [362, 2, 1, "", "LogGaussianCoxModel"], [362, 2, 1, "", "MVGOUUpdate"], [362, 2, 1, "", "MVGUpdate"], [362, 2, 1, "", "MVGaussian"], [362, 2, 1, "", "MVLogGaussianCox"], [362, 2, 1, "", "OUGaussian"], [362, 2, 1, "", "PoissonObservationApproximator"], [362, 2, 1, "", "PoissonObservationModel"], [362, 2, 1, "", "TruncatedLogGaussianCoxApproximator"], [362, 2, 1, "", "TruncatedLogGaussianCoxModel"], [362, 2, 1, "", "TruncatedPoissonObservationApproximator"], [362, 2, 1, "", "TruncatedPoissonObservationModel"], [362, 1, 1, "", "backward_abstract"], [362, 1, 1, "", "baum_welch"], [362, 1, 1, "", "forward_abstract"], [362, 1, 1, "", "forward_backward"], [362, 1, 1, "", "forward_backward_abstract"], [362, 1, 1, "", "hasNaN"], [362, 1, 1, "", "jump"], [362, 1, 1, "", "lgcp_observation_minimizer"], [362, 1, 1, "", "log_likelihood"], [362, 1, 1, "", "poisson_baum_welch"], [362, 1, 1, "", "poisson_parameter_guess"], [362, 1, 1, "", "poisson_viterbi_state_infer"], [362, 1, 1, "", "sample"], [362, 1, 1, "", "viterbi"], [362, 1, 1, "", "viterbi_log"]], "stats.hmm.DiffusionGaussian": [[362, 3, 1, "", "bwd"], [362, 3, 1, "", "fwd"]], "stats.hmm.MVGOUUpdate": [[362, 3, 1, "", "bwd"], [362, 3, 1, "", "fwd"]], "stats.hmm.MVGUpdate": [[362, 3, 1, "", "bwd"], [362, 3, 1, "", "fwd"]], "stats.hmm.MVLogGaussianCox": [[362, 2, 1, "", "MVPoissonApproximator"]], "stats.hmm.OUGaussian": [[362, 3, 1, "", "bwd"], [362, 3, 1, "", "fwd"]], "stats.information": [[363, 1, 1, "", "DKL_discrete"], [363, 1, 1, "", "discrete_entropy_distribution"], [363, 1, 1, "", "discrete_entropy_samples"], [363, 1, 1, "", "poisson_entropy_nats"], [363, 1, 1, "", "regularized_discrete_entropy"]], "stats.mcint": [[367, 1, 1, "", "monte_carlo_expectation"], [367, 1, 1, "", "monte_carlo_moments"]], "stats.minimize": [[368, 5, 1, "", "FailureError"], [368, 1, 1, "", "minimize_retry"]], "stats.mixtures": [[369, 1, 1, "", "two_class_poisson_mixture_model"]], "stats.modefind": [[370, 1, 1, "", "logmode"], [370, 1, 1, "", "logmodeplot"], [370, 1, 1, "", "modefind"], [370, 1, 1, "", "peakfinder5"]], "stats.pvalues": [[372, 1, 1, "", "benjamini_hochberg_positive_correlations"], [372, 1, 1, "", "bootstrap_compare_mean"], [372, 1, 1, "", "bootstrap_compare_median"], [372, 1, 1, "", "bootstrap_compare_statistic_two_sided"], [372, 1, 1, "", "bootstrap_compare_statistic_two_sided_parallel"], [372, 1, 1, "", "bootstrap_mean"], [372, 1, 1, "", "bootstrap_median"], [372, 1, 1, "", "bootstrap_statistic_two_sided"], [372, 1, 1, "", "correct_pvalues"], [372, 1, 1, "", "correct_pvalues_positive_dependent"]], "stats.regressions": [[373, 1, 1, "", "damped_cosine"], [373, 1, 1, "", "exponential_decay"], [373, 1, 1, "", "gaussian_function"], [373, 1, 1, "", "half_gaussian_function"], [373, 1, 1, "", "power_law"], [373, 1, 1, "", "robust_line"], [373, 1, 1, "", "weighted_least_squares"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"depend": [0, 99, 156, 317], "modul": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "neurotool": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "indic": 1, "tabl": 1, "subpackag": [1, 3, 26, 30, 52, 109, 144, 147, 155, 162, 202, 205, 213, 217, 239], "packag": [3, 4, 14, 21, 26, 27, 30, 31, 35, 37, 48, 52, 56, 59, 67, 79, 82, 98, 109, 110, 114, 116, 127, 133, 140, 144, 147, 151, 155, 157, 162, 163, 167, 169, 180, 191, 198, 202, 205, 209, 213, 214, 217, 218, 222, 224, 235, 239, 243, 247, 259, 273, 276, 316, 327, 338], "submodul": [3, 4, 14, 21, 26, 27, 31, 35, 37, 48, 52, 56, 59, 67, 79, 82, 98, 110, 114, 116, 127, 133, 140, 144, 147, 151, 155, 157, 163, 167, 169, 180, 191, 198, 202, 205, 209, 213, 214, 218, 222, 224, 235, 239, 243, 247, 259, 273, 276, 316, 327, 338], "content": [3, 4, 14, 21, 26, 27, 30, 31, 35, 37, 48, 52, 56, 59, 67, 79, 82, 98, 109, 110, 114, 116, 127, 133, 140, 144, 147, 151, 155, 157, 162, 163, 167, 169, 180, 191, 198, 202, 205, 209, 213, 214, 217, 218, 222, 224, 235, 239, 243, 247, 259, 273, 276, 316, 327, 338], "graphic": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 127, 128, 129, 130, 131, 132, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "color": [5, 128, 181], "colormap": [6, 182], "dendron": [7, 183], "fabio_map": [8, 184], "imag": [9, 129, 185], "matplotlib": [10, 130, 186], "plot": [11, 45, 124, 131, 177, 187, 232], "pygam": [12, 132, 188], "ztransform_plot_help": [13, 189], "job": [14, 15, 16, 17, 18, 19, 20, 133, 134, 135, 136, 137, 138, 139, 191, 192, 193, 194, 195, 196, 197], "cach": [15, 134, 192], "closur": [16, 135, 193], "filenam": [17, 137, 194], "initialize_system_cach": [18, 138, 195], "ndecor": [19, 196], "parallel": [20, 139, 197], "linalg": [21, 22, 23, 24, 140, 141, 142, 143, 198, 199, 200, 201], "argument": [22, 141, 199], "matrix": [23, 34, 44, 113, 123, 142, 166, 176, 200, 221, 231], "oper": [24, 143, 201], "nlab": [25, 212, 325], "obsolet": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "encod": [27, 28, 29, 157, 158, 159, 214, 215, 216], "huffman": [28, 158, 215], "naryhuffman": [29, 159, 216], "gpu": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "cl": [31, 32, 33, 34, 110, 111, 112, 113, 163, 164, 165, 166, 218, 219, 220, 221], "devic": [32, 39, 111, 118, 164, 171, 219, 226], "function": [33, 40, 100, 107, 112, 119, 160, 165, 172, 220, 227, 318], "cpu": [35, 36, 114, 115, 167, 168, 222, 223], "util": [36, 98, 99, 100, 101, 102, 103, 104, 105, 106, 115, 168, 223, 316, 317, 318, 319, 320, 321, 322, 323, 324], "cu": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "convolut": [38, 83, 117, 170, 225, 280, 354], "gpufun": [41, 120, 173, 228], "graph": [42, 121, 174, 229], "logic": [43, 122, 175, 230], "sequenc": [46, 125, 178, 233], "statist": [47, 126, 179, 234], "model": [48, 49, 50, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 235, 236, 237], "izh": [49, 145, 203, 236], "lif": [50, 146, 204, 237], "opto": [51, 238, 246, 326], "rbm": [52, 53, 54, 55, 56, 57, 58, 147, 148, 149, 150, 151, 152, 153, 205, 206, 207, 208, 209, 210, 211, 239, 240, 241, 242, 243, 244, 245], "rbm_helper": [54, 149, 207, 241], "rbm_sampl": [55, 150, 208, 242], "rbm_util": [56, 57, 58, 151, 152, 153, 209, 210, 211, 243, 244, 245], "stutil": [58, 153, 211, 245], "signal": [59, 60, 61, 62, 63, 64, 65, 66, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337], "coher": [60, 248, 328], "conv": [61, 249, 329], "morlet": [62, 251, 331], "multitap": [63, 253, 333], "ppc": [64, 254, 334], "savitskygolai": [65, 256, 336], "sde": [66, 257, 310, 374], "spatial": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348], "arrai": [68, 260, 339], "dct": [69, 261, 340], "distanc": [70, 262, 341], "fftzero": [71, 263, 342], "geometri": [72, 264], "kernel": [73, 265, 343], "mask": [74, 266], "phase": [75, 267, 344], "point": [76, 268], "spike": [77, 79, 80, 81, 270, 273, 274, 275, 346, 349, 350], "triangul": [78, 271, 347], "waveform": [81, 275, 350], "stat": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376], "densiti": [84, 281, 355], "distribut": [85, 282, 356], "fast_kd": [86, 284, 358], "gaussian": [87, 278, 285, 286, 287, 288, 289, 290, 291, 292, 293, 352], "glm": [88, 294, 359], "grid_search": [89, 296], "hmm": [90, 298, 362], "inform": [91, 299, 363], "mcint": [92, 303, 367], "minim": [93, 304, 368], "mixtur": [94, 305, 369], "modefind": [95, 306, 370], "pvalu": [96, 308, 372], "regress": [97, 309, 373], "getfftw": [101, 108, 161, 319], "hdfmat": [102, 190, 320], "string": [103, 321], "system": [104, 313, 322], "time": [105, 323], "tool": [106, 315, 324], "decor": 136, "linenois": [250, 330], "morlet_coher": [252, 332], "reson": [255, 335], "spatialpsd": [269, 345], "wave_parametric_model": [272, 348], "glmfit": [277, 351], "circular": [279, 353], "entropi": [283, 357], "gmm": [295, 360], "history_basi": [297, 361], "kent_reimann": [300, 364], "lesson": [301, 365], "matzner_bar": [302, 366], "gad_plos_2015": [302, 366], "mvg": [307, 371], "spatiotemporal_glm_util": [311, 375], "text": 314}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"dependencies module": [[0, "dependencies-module"]], "Neurotools": [[1, "neurotools"]], "Indices and tables": [[1, "indices-and-tables"]], "Subpackages:": [[1, null]], "neurotools": [[2, "neurotools"], [154, "neurotools"]], "neurotools package": [[3, "neurotools-package"], [155, "neurotools-package"]], "Subpackages": [[3, "subpackages"], [26, "subpackages"], [30, "subpackages"], [52, "subpackages"], [109, "subpackages"], [144, "subpackages"], [147, "subpackages"], [155, "subpackages"], [162, "subpackages"], [202, "subpackages"], [205, "subpackages"], [213, "subpackages"], [217, "subpackages"], [239, "subpackages"]], "Submodules": [[3, "submodules"], [4, "submodules"], [14, "submodules"], [21, "submodules"], [26, "submodules"], [27, "submodules"], [31, "submodules"], [35, "submodules"], [37, "submodules"], [48, "submodules"], [52, "submodules"], [56, "submodules"], [59, "submodules"], [67, "submodules"], [79, "submodules"], [82, "submodules"], [98, "submodules"], [110, "submodules"], [114, "submodules"], [116, "submodules"], [127, "submodules"], [133, "submodules"], [140, "submodules"], [144, "submodules"], [147, "submodules"], [151, "submodules"], [155, "submodules"], [157, "submodules"], [163, "submodules"], [167, "submodules"], [169, "submodules"], [180, "submodules"], [191, "submodules"], [198, "submodules"], [202, "submodules"], [205, "submodules"], [209, "submodules"], [213, "submodules"], [214, "submodules"], [218, "submodules"], [222, "submodules"], [224, "submodules"], [235, "submodules"], [239, "submodules"], [243, "submodules"], [247, "submodules"], [259, "submodules"], [273, "submodules"], [276, "submodules"], [316, "submodules"], [327, "submodules"], [338, "submodules"]], "Module contents": [[3, "module-neurotools"], [4, "module-neurotools.graphics"], [14, "module-neurotools.jobs"], [21, "module-neurotools.linalg"], [26, "module-neurotools.obsolete"], [27, "module-neurotools.obsolete.encoding"], [30, "module-neurotools.obsolete.gpu"], [31, "module-neurotools.obsolete.gpu.cl"], [35, "module-neurotools.obsolete.gpu.cpu"], [37, "module-neurotools.obsolete.gpu.cu"], [48, "module-neurotools.obsolete.models"], [52, "module-contents"], [56, "module-contents"], [59, "module-neurotools.signal"], [67, "module-neurotools.spatial"], [79, "module-neurotools.spikes"], [82, "module-neurotools.stats"], [98, "module-neurotools.util"], [109, "module-gpu"], [110, "module-gpu.cl"], [114, "module-gpu.cpu"], [116, "module-gpu.cu"], [127, "module-graphics"], [133, "module-jobs"], [140, "module-linalg"], [144, "module-models"], [147, "module-contents"], [151, "module-contents"], [155, "module-neurotools"], [157, "module-contents"], [162, "module-contents"], [163, "module-contents"], [167, "module-contents"], [169, "module-contents"], [180, "module-neurotools.graphics"], [191, "module-neurotools.jobs"], [198, "module-neurotools.linalg"], [202, "module-contents"], [205, "module-contents"], [209, "module-contents"], [213, "module-neurotools.obsolete"], [214, "module-neurotools.obsolete.encoding"], [217, "module-neurotools.obsolete.gpu"], [218, "module-neurotools.obsolete.gpu.cl"], [222, "module-neurotools.obsolete.gpu.cpu"], [224, "module-neurotools.obsolete.gpu.cu"], [235, "module-neurotools.obsolete.models"], [239, "module-contents"], [243, "module-contents"], [247, "module-neurotools.signal"], [259, "module-neurotools.spatial"], [273, "module-neurotools.spikes"], [276, "module-neurotools.stats"], [316, "module-neurotools.util"], [327, "module-signal"], [338, "module-spatial"]], "neurotools.graphics package": [[4, "neurotools-graphics-package"], [180, "neurotools-graphics-package"]], "neurotools.graphics.color module": [[5, "module-neurotools.graphics.color"], [181, "module-neurotools.graphics.color"]], "neurotools.graphics.colormaps module": [[6, "module-neurotools.graphics.colormaps"], [182, "module-neurotools.graphics.colormaps"]], "neurotools.graphics.dendron module": [[7, "module-neurotools.graphics.dendron"], [183, "module-neurotools.graphics.dendron"]], "neurotools.graphics.fabio_maps module": [[8, "module-neurotools.graphics.fabio_maps"], [184, "module-neurotools.graphics.fabio_maps"]], "neurotools.graphics.image module": [[9, "module-neurotools.graphics.image"], [185, "module-neurotools.graphics.image"]], "neurotools.graphics.matplotlib module": [[10, "module-neurotools.graphics.matplotlib"], [186, "module-neurotools.graphics.matplotlib"]], "neurotools.graphics.plot module": [[11, "module-neurotools.graphics.plot"], [187, "module-neurotools.graphics.plot"]], "neurotools.graphics.pygame module": [[12, "module-neurotools.graphics.pygame"], [188, "module-neurotools.graphics.pygame"]], "neurotools.graphics.ztransform_plot_helpers module": [[13, "neurotools-graphics-ztransform-plot-helpers-module"], [189, "neurotools-graphics-ztransform-plot-helpers-module"]], "neurotools.jobs package": [[14, "neurotools-jobs-package"], [191, "neurotools-jobs-package"]], "neurotools.jobs.cache module": [[15, "module-neurotools.jobs.cache"], [192, "module-neurotools.jobs.cache"]], "neurotools.jobs.closure module": [[16, "module-neurotools.jobs.closure"], [193, "module-neurotools.jobs.closure"]], "neurotools.jobs.filenames module": [[17, "module-neurotools.jobs.filenames"], [194, "module-neurotools.jobs.filenames"]], "neurotools.jobs.initialize_system_cache module": [[18, "module-neurotools.jobs.initialize_system_cache"], [195, "module-neurotools.jobs.initialize_system_cache"]], "neurotools.jobs.ndecorator module": [[19, "module-neurotools.jobs.ndecorator"], [196, "module-neurotools.jobs.ndecorator"]], "neurotools.jobs.parallel module": [[20, "module-neurotools.jobs.parallel"], [197, "module-neurotools.jobs.parallel"]], "neurotools.linalg package": [[21, "neurotools-linalg-package"], [198, "neurotools-linalg-package"]], "neurotools.linalg.arguments module": [[22, "module-neurotools.linalg.arguments"], [199, "module-neurotools.linalg.arguments"]], "neurotools.linalg.matrix module": [[23, "module-neurotools.linalg.matrix"], [200, "module-neurotools.linalg.matrix"]], "neurotools.linalg.operators module": [[24, "module-neurotools.linalg.operators"], [201, "module-neurotools.linalg.operators"]], "neurotools.nlab module": [[25, "module-neurotools.nlab"], [212, "module-neurotools.nlab"]], "neurotools.obsolete package": [[26, "neurotools-obsolete-package"], [213, "neurotools-obsolete-package"]], "neurotools.obsolete.encoding package": [[27, "neurotools-obsolete-encoding-package"], [214, "neurotools-obsolete-encoding-package"]], "neurotools.obsolete.encoding.Huffman module": [[28, "module-neurotools.obsolete.encoding.Huffman"], [215, "module-neurotools.obsolete.encoding.Huffman"]], "neurotools.obsolete.encoding.NaryHuffman module": [[29, "module-neurotools.obsolete.encoding.NaryHuffman"], [216, "module-neurotools.obsolete.encoding.NaryHuffman"]], "neurotools.obsolete.gpu package": [[30, "neurotools-obsolete-gpu-package"], [217, "neurotools-obsolete-gpu-package"]], "neurotools.obsolete.gpu.cl package": [[31, "neurotools-obsolete-gpu-cl-package"], [218, "neurotools-obsolete-gpu-cl-package"]], "neurotools.obsolete.gpu.cl.device module": [[32, "neurotools-obsolete-gpu-cl-device-module"], [219, "neurotools-obsolete-gpu-cl-device-module"]], "neurotools.obsolete.gpu.cl.function module": [[33, "neurotools-obsolete-gpu-cl-function-module"], [220, "neurotools-obsolete-gpu-cl-function-module"]], "neurotools.obsolete.gpu.cl.matrix module": [[34, "neurotools-obsolete-gpu-cl-matrix-module"], [221, "neurotools-obsolete-gpu-cl-matrix-module"]], "neurotools.obsolete.gpu.cpu package": [[35, "neurotools-obsolete-gpu-cpu-package"], [222, "neurotools-obsolete-gpu-cpu-package"]], "neurotools.obsolete.gpu.cpu.util module": [[36, "module-neurotools.obsolete.gpu.cpu.util"], [223, "module-neurotools.obsolete.gpu.cpu.util"]], "neurotools.obsolete.gpu.cu package": [[37, "neurotools-obsolete-gpu-cu-package"], [224, "neurotools-obsolete-gpu-cu-package"]], "neurotools.obsolete.gpu.cu.convolution module": [[38, "module-neurotools.obsolete.gpu.cu.convolution"], [225, "module-neurotools.obsolete.gpu.cu.convolution"]], "neurotools.obsolete.gpu.cu.device module": [[39, "module-neurotools.obsolete.gpu.cu.device"], [226, "module-neurotools.obsolete.gpu.cu.device"]], "neurotools.obsolete.gpu.cu.function module": [[40, "module-neurotools.obsolete.gpu.cu.function"], [227, "module-neurotools.obsolete.gpu.cu.function"]], "neurotools.obsolete.gpu.cu.gpufun module": [[41, "module-neurotools.obsolete.gpu.cu.gpufun"], [228, "module-neurotools.obsolete.gpu.cu.gpufun"]], "neurotools.obsolete.gpu.cu.graph module": [[42, "module-neurotools.obsolete.gpu.cu.graph"], [229, "module-neurotools.obsolete.gpu.cu.graph"]], "neurotools.obsolete.gpu.cu.logic module": [[43, "module-neurotools.obsolete.gpu.cu.logic"], [230, "module-neurotools.obsolete.gpu.cu.logic"]], "neurotools.obsolete.gpu.cu.matrix module": [[44, "neurotools-obsolete-gpu-cu-matrix-module"], [231, "neurotools-obsolete-gpu-cu-matrix-module"]], "neurotools.obsolete.gpu.cu.plot module": [[45, "module-neurotools.obsolete.gpu.cu.plot"], [232, "module-neurotools.obsolete.gpu.cu.plot"]], "neurotools.obsolete.gpu.cu.sequence module": [[46, "module-neurotools.obsolete.gpu.cu.sequence"], [233, "module-neurotools.obsolete.gpu.cu.sequence"]], "neurotools.obsolete.gpu.cu.statistics module": [[47, "neurotools-obsolete-gpu-cu-statistics-module"], [234, "neurotools-obsolete-gpu-cu-statistics-module"]], "neurotools.obsolete.models package": [[48, "neurotools-obsolete-models-package"], [235, "neurotools-obsolete-models-package"]], "neurotools.obsolete.models.izh module": [[49, "module-neurotools.obsolete.models.izh"], [236, "module-neurotools.obsolete.models.izh"]], "neurotools.obsolete.models.lif module": [[50, "module-neurotools.obsolete.models.lif"], [237, "module-neurotools.obsolete.models.lif"]], "neurotools.obsolete.opto module": [[51, "neurotools-obsolete-opto-module"], [238, "neurotools-obsolete-opto-module"]], "neurotools.obsolete.rbm package": [[52, "neurotools-obsolete-rbm-package"], [239, "neurotools-obsolete-rbm-package"]], "neurotools.obsolete.rbm.rbm module": [[53, "neurotools-obsolete-rbm-rbm-module"], [240, "neurotools-obsolete-rbm-rbm-module"]], "neurotools.obsolete.rbm.rbm_helper module": [[54, "neurotools-obsolete-rbm-rbm-helper-module"], [241, "neurotools-obsolete-rbm-rbm-helper-module"]], "neurotools.obsolete.rbm.rbm_sample module": [[55, "neurotools-obsolete-rbm-rbm-sample-module"], [242, "neurotools-obsolete-rbm-rbm-sample-module"]], "neurotools.obsolete.rbm.rbm_utils package": [[56, "neurotools-obsolete-rbm-rbm-utils-package"], [243, "neurotools-obsolete-rbm-rbm-utils-package"]], "neurotools.obsolete.rbm.rbm_utils.rbm module": [[57, "neurotools-obsolete-rbm-rbm-utils-rbm-module"], [244, "neurotools-obsolete-rbm-rbm-utils-rbm-module"]], "neurotools.obsolete.rbm.rbm_utils.stutils module": [[58, "neurotools-obsolete-rbm-rbm-utils-stutils-module"], [245, "neurotools-obsolete-rbm-rbm-utils-stutils-module"]], "neurotools.signal package": [[59, "neurotools-signal-package"], [247, "neurotools-signal-package"]], "neurotools.signal.coherence module": [[60, "neurotools-signal-coherence-module"], [248, "neurotools-signal-coherence-module"]], "neurotools.signal.conv module": [[61, "module-neurotools.signal.conv"], [249, "module-neurotools.signal.conv"]], "neurotools.signal.morlet module": [[62, "module-neurotools.signal.morlet"], [251, "module-neurotools.signal.morlet"]], "neurotools.signal.multitaper module": [[63, "module-neurotools.signal.multitaper"], [253, "module-neurotools.signal.multitaper"]], "neurotools.signal.ppc module": [[64, "module-neurotools.signal.ppc"], [254, "module-neurotools.signal.ppc"]], "neurotools.signal.savitskygolay module": [[65, "module-neurotools.signal.savitskygolay"], [256, "module-neurotools.signal.savitskygolay"]], "neurotools.signal.sde module": [[66, "module-neurotools.signal.sde"], [257, "module-neurotools.signal.sde"]], "neurotools.spatial package": [[67, "neurotools-spatial-package"], [259, "neurotools-spatial-package"]], "neurotools.spatial.array module": [[68, "module-neurotools.spatial.array"], [260, "module-neurotools.spatial.array"]], "neurotools.spatial.dct module": [[69, "module-neurotools.spatial.dct"], [261, "module-neurotools.spatial.dct"]], "neurotools.spatial.distance module": [[70, "module-neurotools.spatial.distance"], [262, "module-neurotools.spatial.distance"]], "neurotools.spatial.fftzeros module": [[71, "module-neurotools.spatial.fftzeros"], [263, "module-neurotools.spatial.fftzeros"]], "neurotools.spatial.geometry module": [[72, "neurotools-spatial-geometry-module"], [264, "neurotools-spatial-geometry-module"]], "neurotools.spatial.kernels module": [[73, "module-neurotools.spatial.kernels"], [265, "module-neurotools.spatial.kernels"]], "neurotools.spatial.masking module": [[74, "neurotools-spatial-masking-module"], [266, "neurotools-spatial-masking-module"]], "neurotools.spatial.phase module": [[75, "module-neurotools.spatial.phase"], [267, "module-neurotools.spatial.phase"]], "neurotools.spatial.points module": [[76, "module-neurotools.spatial.points"], [268, "module-neurotools.spatial.points"]], "neurotools.spatial.spiking module": [[77, "module-neurotools.spatial.spiking"], [270, "module-neurotools.spatial.spiking"]], "neurotools.spatial.triangulation module": [[78, "module-neurotools.spatial.triangulation"], [271, "module-neurotools.spatial.triangulation"]], "neurotools.spikes package": [[79, "neurotools-spikes-package"], [273, "neurotools-spikes-package"]], "neurotools.spikes.spikes module": [[80, "module-neurotools.spikes.spikes"], [274, "module-neurotools.spikes.spikes"]], "neurotools.spikes.waveform module": [[81, "module-neurotools.spikes.waveform"], [275, "module-neurotools.spikes.waveform"]], "neurotools.stats package": [[82, "neurotools-stats-package"], [276, "neurotools-stats-package"]], "neurotools.stats.convolutional module": [[83, "module-neurotools.stats.convolutional"], [280, "module-neurotools.stats.convolutional"]], "neurotools.stats.density module": [[84, "module-neurotools.stats.density"], [281, "module-neurotools.stats.density"]], "neurotools.stats.distributions module": [[85, "module-neurotools.stats.distributions"], [282, "module-neurotools.stats.distributions"]], "neurotools.stats.fast_kde module": [[86, "module-neurotools.stats.fast_kde"], [284, "module-neurotools.stats.fast_kde"]], "neurotools.stats.gaussian module": [[87, "module-neurotools.stats.gaussian"], [285, "module-neurotools.stats.gaussian"], [286, "module-neurotools.stats.gaussian"], [287, "module-neurotools.stats.gaussian"], [288, "module-neurotools.stats.gaussian"], [289, "module-neurotools.stats.gaussian"], [290, "module-neurotools.stats.gaussian"], [291, "module-neurotools.stats.gaussian"], [292, "module-neurotools.stats.gaussian"], [293, "module-neurotools.stats.gaussian"]], "neurotools.stats.glm module": [[88, "module-neurotools.stats.glm"], [294, "module-neurotools.stats.glm"]], "neurotools.stats.grid_search module": [[89, "module-neurotools.stats.grid_search"], [296, "module-neurotools.stats.grid_search"]], "neurotools.stats.hmm module": [[90, "module-neurotools.stats.hmm"], [298, "module-neurotools.stats.hmm"]], "neurotools.stats.information module": [[91, "module-neurotools.stats.information"], [299, "module-neurotools.stats.information"]], "neurotools.stats.mcint module": [[92, "module-neurotools.stats.mcint"], [303, "module-neurotools.stats.mcint"]], "neurotools.stats.minimize module": [[93, "module-neurotools.stats.minimize"], [304, "module-neurotools.stats.minimize"]], "neurotools.stats.mixtures module": [[94, "module-neurotools.stats.mixtures"], [305, "module-neurotools.stats.mixtures"]], "neurotools.stats.modefind module": [[95, "module-neurotools.stats.modefind"], [306, "module-neurotools.stats.modefind"]], "neurotools.stats.pvalues module": [[96, "module-neurotools.stats.pvalues"], [308, "module-neurotools.stats.pvalues"]], "neurotools.stats.regressions module": [[97, "module-neurotools.stats.regressions"], [309, "module-neurotools.stats.regressions"]], "neurotools.util package": [[98, "neurotools-util-package"], [316, "neurotools-util-package"]], "neurotools.util.dependencies module": [[99, "neurotools-util-dependencies-module"], [317, "neurotools-util-dependencies-module"]], "neurotools.util.functions module": [[100, "module-neurotools.util.functions"], [318, "module-neurotools.util.functions"]], "neurotools.util.getfftw module": [[101, "module-neurotools.util.getfftw"], [319, "module-neurotools.util.getfftw"]], "neurotools.util.hdfmat module": [[102, "module-neurotools.util.hdfmat"], [320, "module-neurotools.util.hdfmat"]], "neurotools.util.string module": [[103, "module-neurotools.util.string"], [321, "module-neurotools.util.string"]], "neurotools.util.system module": [[104, "module-neurotools.util.system"], [322, "module-neurotools.util.system"]], "neurotools.util.time module": [[105, "module-neurotools.util.time"], [323, "module-neurotools.util.time"]], "neurotools.util.tools module": [[106, "module-neurotools.util.tools"], [324, "module-neurotools.util.tools"]], "functions module": [[107, "module-functions"]], "getfftw module": [[108, "module-getfftw"]], "gpu package": [[109, "gpu-package"]], "gpu.cl package": [[110, "gpu-cl-package"]], "gpu.cl.device module": [[111, "gpu-cl-device-module"]], "gpu.cl.function module": [[112, "gpu-cl-function-module"]], "gpu.cl.matrix module": [[113, "gpu-cl-matrix-module"]], "gpu.cpu package": [[114, "gpu-cpu-package"]], "gpu.cpu.util module": [[115, "module-gpu.cpu.util"]], "gpu.cu package": [[116, "gpu-cu-package"]], "gpu.cu.convolution module": [[117, "module-gpu.cu.convolution"]], "gpu.cu.device module": [[118, "module-gpu.cu.device"]], "gpu.cu.function module": [[119, "module-gpu.cu.function"]], "gpu.cu.gpufun module": [[120, "module-gpu.cu.gpufun"]], "gpu.cu.graph module": [[121, "module-gpu.cu.graph"]], "gpu.cu.logic module": [[122, "module-gpu.cu.logic"]], "gpu.cu.matrix module": [[123, "gpu-cu-matrix-module"]], "gpu.cu.plot module": [[124, "module-gpu.cu.plot"]], "gpu.cu.sequence module": [[125, "module-gpu.cu.sequence"]], "gpu.cu.statistics module": [[126, "gpu-cu-statistics-module"]], "graphics package": [[127, "graphics-package"]], "graphics.color module": [[128, "module-graphics.color"]], "graphics.image module": [[129, "module-graphics.image"]], "graphics.matplotlib module": [[130, "module-graphics.matplotlib"]], "graphics.plot module": [[131, "module-graphics.plot"]], "graphics.pygame module": [[132, "module-graphics.pygame"]], "jobs package": [[133, "jobs-package"]], "jobs.cache module": [[134, "module-jobs.cache"]], "jobs.closure module": [[135, "module-jobs.closure"]], "jobs.decorator module": [[136, "jobs-decorator-module"]], "jobs.filenames module": [[137, "module-jobs.filenames"]], "jobs.initialize_system_cache module": [[138, "module-jobs.initialize_system_cache"]], "jobs.parallel module": [[139, "module-jobs.parallel"]], "linalg package": [[140, "linalg-package"]], "linalg.arguments module": [[141, "module-linalg.arguments"]], "linalg.matrix module": [[142, "module-linalg.matrix"]], "linalg.operators module": [[143, "module-linalg.operators"]], "models package": [[144, "models-package"]], "models.izh module": [[145, "module-models.izh"]], "models.lif module": [[146, "module-models.lif"]], "models.rbm package": [[147, "models-rbm-package"]], "models.rbm.rbm module": [[148, "models-rbm-rbm-module"]], "models.rbm.rbm_helper module": [[149, "models-rbm-rbm-helper-module"]], "models.rbm.rbm_sample module": [[150, "models-rbm-rbm-sample-module"]], "models.rbm.rbm_utils package": [[151, "models-rbm-rbm-utils-package"]], "models.rbm.rbm_utils.rbm module": [[152, "models-rbm-rbm-utils-rbm-module"]], "models.rbm.rbm_utils.stutils module": [[153, "models-rbm-rbm-utils-stutils-module"]], "neurotools.dependencies module": [[156, "neurotools-dependencies-module"]], "neurotools.encoding package": [[157, "neurotools-encoding-package"]], "neurotools.encoding.Huffman module": [[158, "neurotools-encoding-huffman-module"]], "neurotools.encoding.NaryHuffman module": [[159, "neurotools-encoding-naryhuffman-module"]], "neurotools.functions module": [[160, "neurotools-functions-module"]], "neurotools.getfftw module": [[161, "neurotools-getfftw-module"]], "neurotools.gpu package": [[162, "neurotools-gpu-package"]], "neurotools.gpu.cl package": [[163, "neurotools-gpu-cl-package"]], "neurotools.gpu.cl.device module": [[164, "neurotools-gpu-cl-device-module"]], "neurotools.gpu.cl.function module": [[165, "neurotools-gpu-cl-function-module"]], "neurotools.gpu.cl.matrix module": [[166, "neurotools-gpu-cl-matrix-module"]], "neurotools.gpu.cpu package": [[167, "neurotools-gpu-cpu-package"]], "neurotools.gpu.cpu.util module": [[168, "neurotools-gpu-cpu-util-module"]], "neurotools.gpu.cu package": [[169, "neurotools-gpu-cu-package"]], "neurotools.gpu.cu.convolution module": [[170, "neurotools-gpu-cu-convolution-module"]], "neurotools.gpu.cu.device module": [[171, "neurotools-gpu-cu-device-module"]], "neurotools.gpu.cu.function module": [[172, "neurotools-gpu-cu-function-module"]], "neurotools.gpu.cu.gpufun module": [[173, "neurotools-gpu-cu-gpufun-module"]], "neurotools.gpu.cu.graph module": [[174, "neurotools-gpu-cu-graph-module"]], "neurotools.gpu.cu.logic module": [[175, "neurotools-gpu-cu-logic-module"]], "neurotools.gpu.cu.matrix module": [[176, "neurotools-gpu-cu-matrix-module"]], "neurotools.gpu.cu.plot module": [[177, "neurotools-gpu-cu-plot-module"]], "neurotools.gpu.cu.sequence module": [[178, "neurotools-gpu-cu-sequence-module"]], "neurotools.gpu.cu.statistics module": [[179, "neurotools-gpu-cu-statistics-module"]], "neurotools.hdfmat module": [[190, "neurotools-hdfmat-module"]], "neurotools.models package": [[202, "neurotools-models-package"]], "neurotools.models.izh module": [[203, "neurotools-models-izh-module"]], "neurotools.models.lif module": [[204, "neurotools-models-lif-module"]], "neurotools.models.rbm package": [[205, "neurotools-models-rbm-package"]], "neurotools.models.rbm.rbm module": [[206, "neurotools-models-rbm-rbm-module"]], "neurotools.models.rbm.rbm_helper module": [[207, "neurotools-models-rbm-rbm-helper-module"]], "neurotools.models.rbm.rbm_sample module": [[208, "neurotools-models-rbm-rbm-sample-module"]], "neurotools.models.rbm.rbm_utils package": [[209, "neurotools-models-rbm-rbm-utils-package"]], "neurotools.models.rbm.rbm_utils.rbm module": [[210, "neurotools-models-rbm-rbm-utils-rbm-module"]], "neurotools.models.rbm.rbm_utils.stutils module": [[211, "neurotools-models-rbm-rbm-utils-stutils-module"]], "neurotools.opto module": [[246, "neurotools-opto-module"]], "neurotools.signal.linenoise module": [[250, "neurotools-signal-linenoise-module"]], "neurotools.signal.morlet_coherence module": [[252, "neurotools-signal-morlet-coherence-module"]], "neurotools.signal.resonator module": [[255, "neurotools-signal-resonator-module"]], "neurotools.signal.signal module": [[258, "neurotools-signal-signal-module"]], "neurotools.spatial.spatialPSD module": [[269, "neurotools-spatial-spatialpsd-module"]], "neurotools.spatial.wave_parametric_models module": [[272, "neurotools-spatial-wave-parametric-models-module"]], "neurotools.stats.GLMFit module": [[277, "neurotools-stats-glmfit-module"]], "neurotools.stats.Gaussian module": [[278, "neurotools-stats-gaussian-module"]], "neurotools.stats.circular module": [[279, "neurotools-stats-circular-module"]], "neurotools.stats.entropy module": [[283, "neurotools-stats-entropy-module"]], "neurotools.stats.gmm module": [[295, "neurotools-stats-gmm-module"]], "neurotools.stats.history_basis module": [[297, "neurotools-stats-history-basis-module"]], "neurotools.stats.kent_reimann module": [[300, "neurotools-stats-kent-reimann-module"]], "neurotools.stats.lessons module": [[301, "neurotools-stats-lessons-module"]], "neurotools.stats.matzner_bar-gad_PLoS_2015 module": [[302, "neurotools-stats-matzner-bar-gad-plos-2015-module"]], "neurotools.stats.mvg module": [[307, "neurotools-stats-mvg-module"]], "neurotools.stats.sde module": [[310, "neurotools-stats-sde-module"]], "neurotools.stats.spatiotemporal_glm_utils module": [[311, "neurotools-stats-spatiotemporal-glm-utils-module"]], "neurotools.stats.stats module": [[312, "neurotools-stats-stats-module"]], "neurotools.system module": [[313, "neurotools-system-module"]], "neurotools.text module": [[314, "neurotools-text-module"]], "neurotools.tools module": [[315, "neurotools-tools-module"]], "nlab module": [[325, "module-nlab"]], "opto module": [[326, "opto-module"]], "signal package": [[327, "signal-package"]], "signal.coherence module": [[328, "signal-coherence-module"]], "signal.conv module": [[329, "signal-conv-module"]], "signal.linenoise module": [[330, "signal-linenoise-module"]], "signal.morlet module": [[331, "signal-morlet-module"]], "signal.morlet_coherence module": [[332, "signal-morlet-coherence-module"]], "signal.multitaper module": [[333, "signal-multitaper-module"]], "signal.ppc module": [[334, "signal-ppc-module"]], "signal.resonator module": [[335, "signal-resonator-module"]], "signal.savitskygolay module": [[336, "signal-savitskygolay-module"]], "signal.signal module": [[337, "module-signal.signal"]], "spatial package": [[338, "spatial-package"]], "spatial.array module": [[339, "module-spatial.array"]], "spatial.dct module": [[340, "module-spatial.dct"]], "spatial.distance module": [[341, "module-spatial.distance"]], "spatial.fftzeros module": [[342, "module-spatial.fftzeros"]], "spatial.kernels module": [[343, "module-spatial.kernels"]], "spatial.phase module": [[344, "module-spatial.phase"]], "spatial.spatialPSD module": [[345, "spatial-spatialpsd-module"]], "spatial.spiking module": [[346, "module-spatial.spiking"]], "spatial.triangulation module": [[347, "module-spatial.triangulation"]], "spatial.wave_parametric_models module": [[348, "spatial-wave-parametric-models-module"]], "spikes.spikes module": [[349, "module-spikes.spikes"]], "spikes.waveform module": [[350, "module-spikes.waveform"]], "stats.GLMFit module": [[351, "stats-glmfit-module"]], "stats.Gaussian module": [[352, "stats-gaussian-module"]], "stats.circular module": [[353, "stats-circular-module"]], "stats.convolutional module": [[354, "module-stats.convolutional"]], "stats.density module": [[355, "module-stats.density"]], "stats.distributions module": [[356, "module-stats.distributions"]], "stats.entropy module": [[357, "stats-entropy-module"]], "stats.fast_kde module": [[358, "module-stats.fast_kde"]], "stats.glm module": [[359, "module-stats.glm"]], "stats.gmm module": [[360, "stats-gmm-module"]], "stats.history_basis module": [[361, "stats-history-basis-module"]], "stats.hmm module": [[362, "module-stats.hmm"]], "stats.information module": [[363, "module-stats.information"]], "stats.kent_reimann module": [[364, "stats-kent-reimann-module"]], "stats.lessons module": [[365, "stats-lessons-module"]], "stats.matzner_bar-gad_PLoS_2015 module": [[366, "stats-matzner-bar-gad-plos-2015-module"]], "stats.mcint module": [[367, "module-stats.mcint"]], "stats.minimize module": [[368, "module-stats.minimize"]], "stats.mixtures module": [[369, "module-stats.mixtures"]], "stats.modefind module": [[370, "module-stats.modefind"]], "stats.mvg module": [[371, "stats-mvg-module"]], "stats.pvalues module": [[372, "module-stats.pvalues"]], "stats.regressions module": [[373, "module-stats.regressions"]], "stats.sde module": [[374, "stats-sde-module"]], "stats.spatiotemporal_glm_utils module": [[375, "stats-spatiotemporal-glm-utils-module"]], "stats.stats module": [[376, "stats-stats-module"]]}, "indexentries": {"module": [[3, "module-neurotools"], [4, "module-neurotools.graphics"], [5, "module-neurotools.graphics.color"], [6, "module-neurotools.graphics.colormaps"], [7, "module-neurotools.graphics.dendron"], [8, "module-neurotools.graphics.fabio_maps"], [9, "module-neurotools.graphics.image"], [10, "module-neurotools.graphics.matplotlib"], [11, "module-neurotools.graphics.plot"], [12, "module-neurotools.graphics.pygame"], [14, "module-neurotools.jobs"], [15, "module-neurotools.jobs.cache"], [16, "module-neurotools.jobs.closure"], [17, "module-neurotools.jobs.filenames"], [18, "module-neurotools.jobs.initialize_system_cache"], [19, "module-neurotools.jobs.ndecorator"], [20, "module-neurotools.jobs.parallel"], [21, "module-neurotools.linalg"], [22, "module-neurotools.linalg.arguments"], [23, "module-neurotools.linalg.matrix"], [24, "module-neurotools.linalg.operators"], [25, "module-neurotools.nlab"], [26, "module-neurotools.obsolete"], [27, "module-neurotools.obsolete.encoding"], [28, "module-neurotools.obsolete.encoding.Huffman"], [29, "module-neurotools.obsolete.encoding.NaryHuffman"], [30, "module-neurotools.obsolete.gpu"], [31, "module-neurotools.obsolete.gpu.cl"], [35, "module-neurotools.obsolete.gpu.cpu"], [36, "module-neurotools.obsolete.gpu.cpu.util"], [37, "module-neurotools.obsolete.gpu.cu"], [38, "module-neurotools.obsolete.gpu.cu.convolution"], [39, "module-neurotools.obsolete.gpu.cu.device"], [40, "module-neurotools.obsolete.gpu.cu.function"], [41, "module-neurotools.obsolete.gpu.cu.gpufun"], [42, "module-neurotools.obsolete.gpu.cu.graph"], [43, "module-neurotools.obsolete.gpu.cu.logic"], [45, "module-neurotools.obsolete.gpu.cu.plot"], [46, "module-neurotools.obsolete.gpu.cu.sequence"], [48, "module-neurotools.obsolete.models"], [49, "module-neurotools.obsolete.models.izh"], [50, "module-neurotools.obsolete.models.lif"], [59, "module-neurotools.signal"], [61, "module-neurotools.signal.conv"], [62, "module-neurotools.signal.morlet"], [63, "module-neurotools.signal.multitaper"], [64, "module-neurotools.signal.ppc"], [65, "module-neurotools.signal.savitskygolay"], [66, "module-neurotools.signal.sde"], [67, "module-neurotools.spatial"], [68, "module-neurotools.spatial.array"], [69, "module-neurotools.spatial.dct"], [70, "module-neurotools.spatial.distance"], [71, "module-neurotools.spatial.fftzeros"], [73, "module-neurotools.spatial.kernels"], [75, "module-neurotools.spatial.phase"], [76, "module-neurotools.spatial.points"], [77, "module-neurotools.spatial.spiking"], [78, "module-neurotools.spatial.triangulation"], [79, "module-neurotools.spikes"], [80, "module-neurotools.spikes.spikes"], [81, "module-neurotools.spikes.waveform"], [82, "module-neurotools.stats"], [83, "module-neurotools.stats.convolutional"], [84, "module-neurotools.stats.density"], [85, "module-neurotools.stats.distributions"], [86, "module-neurotools.stats.fast_kde"], [87, "module-neurotools.stats.gaussian"], [88, "module-neurotools.stats.glm"], [89, "module-neurotools.stats.grid_search"], [90, "module-neurotools.stats.hmm"], [91, "module-neurotools.stats.information"], [92, "module-neurotools.stats.mcint"], [93, "module-neurotools.stats.minimize"], [94, "module-neurotools.stats.mixtures"], [95, "module-neurotools.stats.modefind"], [96, "module-neurotools.stats.pvalues"], [97, "module-neurotools.stats.regressions"], [98, "module-neurotools.util"], [100, "module-neurotools.util.functions"], [101, "module-neurotools.util.getfftw"], [102, "module-neurotools.util.hdfmat"], [103, "module-neurotools.util.string"], [104, "module-neurotools.util.system"], [105, "module-neurotools.util.time"], [106, "module-neurotools.util.tools"], [107, "module-functions"], [108, "module-getfftw"], [109, "module-gpu"], [110, "module-gpu.cl"], [114, "module-gpu.cpu"], [115, "module-gpu.cpu.util"], [116, "module-gpu.cu"], [117, "module-gpu.cu.convolution"], [118, "module-gpu.cu.device"], [119, "module-gpu.cu.function"], [120, "module-gpu.cu.gpufun"], [121, "module-gpu.cu.graph"], [122, "module-gpu.cu.logic"], [124, "module-gpu.cu.plot"], [125, "module-gpu.cu.sequence"], [127, "module-graphics"], [128, "module-graphics.color"], [129, "module-graphics.image"], [130, "module-graphics.matplotlib"], [131, "module-graphics.plot"], [132, "module-graphics.pygame"], [133, "module-jobs"], [134, "module-jobs.cache"], [135, "module-jobs.closure"], [137, "module-jobs.filenames"], [138, "module-jobs.initialize_system_cache"], [139, "module-jobs.parallel"], [140, "module-linalg"], [141, "module-linalg.arguments"], [142, "module-linalg.matrix"], [143, "module-linalg.operators"], [144, "module-models"], [145, "module-models.izh"], [146, "module-models.lif"], [155, "module-neurotools"], [180, "module-neurotools.graphics"], [181, "module-neurotools.graphics.color"], [182, "module-neurotools.graphics.colormaps"], [183, "module-neurotools.graphics.dendron"], [184, "module-neurotools.graphics.fabio_maps"], [185, "module-neurotools.graphics.image"], [186, "module-neurotools.graphics.matplotlib"], [187, "module-neurotools.graphics.plot"], [188, "module-neurotools.graphics.pygame"], [191, "module-neurotools.jobs"], [192, "module-neurotools.jobs.cache"], [193, "module-neurotools.jobs.closure"], [194, "module-neurotools.jobs.filenames"], [195, "module-neurotools.jobs.initialize_system_cache"], [196, "module-neurotools.jobs.ndecorator"], [197, "module-neurotools.jobs.parallel"], [198, "module-neurotools.linalg"], [199, "module-neurotools.linalg.arguments"], [200, "module-neurotools.linalg.matrix"], [201, "module-neurotools.linalg.operators"], [212, "module-neurotools.nlab"], [213, "module-neurotools.obsolete"], [214, "module-neurotools.obsolete.encoding"], [215, "module-neurotools.obsolete.encoding.Huffman"], [216, "module-neurotools.obsolete.encoding.NaryHuffman"], [217, "module-neurotools.obsolete.gpu"], [218, "module-neurotools.obsolete.gpu.cl"], [222, "module-neurotools.obsolete.gpu.cpu"], [223, "module-neurotools.obsolete.gpu.cpu.util"], [224, "module-neurotools.obsolete.gpu.cu"], [225, "module-neurotools.obsolete.gpu.cu.convolution"], [226, "module-neurotools.obsolete.gpu.cu.device"], [227, "module-neurotools.obsolete.gpu.cu.function"], [228, "module-neurotools.obsolete.gpu.cu.gpufun"], [229, "module-neurotools.obsolete.gpu.cu.graph"], [230, "module-neurotools.obsolete.gpu.cu.logic"], [232, "module-neurotools.obsolete.gpu.cu.plot"], [233, "module-neurotools.obsolete.gpu.cu.sequence"], [235, "module-neurotools.obsolete.models"], [236, "module-neurotools.obsolete.models.izh"], [237, "module-neurotools.obsolete.models.lif"], [247, "module-neurotools.signal"], [249, "module-neurotools.signal.conv"], [251, "module-neurotools.signal.morlet"], [253, "module-neurotools.signal.multitaper"], [254, "module-neurotools.signal.ppc"], [256, "module-neurotools.signal.savitskygolay"], [257, "module-neurotools.signal.sde"], [259, "module-neurotools.spatial"], [260, "module-neurotools.spatial.array"], [261, "module-neurotools.spatial.dct"], [262, "module-neurotools.spatial.distance"], [263, "module-neurotools.spatial.fftzeros"], [265, "module-neurotools.spatial.kernels"], [267, "module-neurotools.spatial.phase"], [268, "module-neurotools.spatial.points"], [270, "module-neurotools.spatial.spiking"], [271, "module-neurotools.spatial.triangulation"], [273, "module-neurotools.spikes"], [274, "module-neurotools.spikes.spikes"], [275, "module-neurotools.spikes.waveform"], [276, "module-neurotools.stats"], [280, "module-neurotools.stats.convolutional"], [281, "module-neurotools.stats.density"], [282, "module-neurotools.stats.distributions"], [284, "module-neurotools.stats.fast_kde"], [285, "module-neurotools.stats.gaussian"], [286, "module-neurotools.stats.gaussian"], [287, "module-neurotools.stats.gaussian"], [288, "module-neurotools.stats.gaussian"], [289, "module-neurotools.stats.gaussian"], [290, "module-neurotools.stats.gaussian"], [291, "module-neurotools.stats.gaussian"], [292, "module-neurotools.stats.gaussian"], [293, "module-neurotools.stats.gaussian"], [294, "module-neurotools.stats.glm"], [296, "module-neurotools.stats.grid_search"], [298, "module-neurotools.stats.hmm"], [299, "module-neurotools.stats.information"], [303, "module-neurotools.stats.mcint"], [304, "module-neurotools.stats.minimize"], [305, "module-neurotools.stats.mixtures"], [306, "module-neurotools.stats.modefind"], [308, "module-neurotools.stats.pvalues"], [309, "module-neurotools.stats.regressions"], [316, "module-neurotools.util"], [318, "module-neurotools.util.functions"], [319, "module-neurotools.util.getfftw"], [320, "module-neurotools.util.hdfmat"], [321, "module-neurotools.util.string"], [322, "module-neurotools.util.system"], [323, "module-neurotools.util.time"], [324, "module-neurotools.util.tools"], [325, "module-nlab"], [327, "module-signal"], [337, "module-signal.signal"], [338, "module-spatial"], [339, "module-spatial.array"], [340, "module-spatial.dct"], [341, "module-spatial.distance"], [342, "module-spatial.fftzeros"], [343, "module-spatial.kernels"], [344, "module-spatial.phase"], [346, "module-spatial.spiking"], [347, "module-spatial.triangulation"], [349, "module-spikes.spikes"], [350, "module-spikes.waveform"], [354, "module-stats.convolutional"], [355, "module-stats.density"], [356, "module-stats.distributions"], [358, "module-stats.fast_kde"], [359, "module-stats.glm"], [362, "module-stats.hmm"], [363, "module-stats.information"], [367, "module-stats.mcint"], [368, "module-stats.minimize"], [369, "module-stats.mixtures"], [370, "module-stats.modefind"], [372, "module-stats.pvalues"], [373, "module-stats.regressions"]], "neurotools": [[3, "module-neurotools"], [155, "module-neurotools"]], "neurotools.graphics": [[4, "module-neurotools.graphics"], [180, "module-neurotools.graphics"]], "rgbtohcl() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.RGBtoHCL"], [181, "neurotools.graphics.color.RGBtoHCL"]], "bit16_rgb_to_tuple() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.bit16_RGB_to_tuple"], [181, "neurotools.graphics.color.bit16_RGB_to_tuple"]], "bit16_print_color() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.bit16_print_color"], [181, "neurotools.graphics.color.bit16_print_color"]], "circularly_smooth_colormap() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.circularly_smooth_colormap"], [181, "neurotools.graphics.color.circularly_smooth_colormap"]], "code_to_16bit() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.code_to_16bit"], [181, "neurotools.graphics.color.code_to_16bit"]], "color_boxplot() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.color_boxplot"], [181, "neurotools.graphics.color.color_boxplot"]], "complexhlarr2rgb() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.complexHLArr2RGB"], [181, "neurotools.graphics.color.complexHLArr2RGB"]], "darkhues() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.darkhues"], [181, "neurotools.graphics.color.darkhues"]], "enumerate_fast_colors() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.enumerate_fast_colors"], [181, "neurotools.graphics.color.enumerate_fast_colors"]], "hcl2rgb() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.hcl2rgb"], [181, "neurotools.graphics.color.hcl2rgb"]], "hex2rgb() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.hex2rgb"], [181, "neurotools.graphics.color.hex2rgb"]], "hex_pack_bgr() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.hex_pack_BGR"], [181, "neurotools.graphics.color.hex_pack_BGR"]], "hsv2rgb() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.hsv2rgb"], [181, "neurotools.graphics.color.hsv2rgb"]], "hue_angle() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.hue_angle"], [181, "neurotools.graphics.color.hue_angle"]], "isoluminance1() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.isoluminance1"], [181, "neurotools.graphics.color.isoluminance1"]], "isoluminance2() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.isoluminance2"], [181, "neurotools.graphics.color.isoluminance2"]], "isoluminance3() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.isoluminance3"], [181, "neurotools.graphics.color.isoluminance3"]], "isoluminance4() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.isoluminance4"], [181, "neurotools.graphics.color.isoluminance4"]], "lighthues() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.lighthues"], [181, "neurotools.graphics.color.lighthues"]], "lightness() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.lightness"], [181, "neurotools.graphics.color.lightness"]], "luminance_matrix() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.luminance_matrix"], [181, "neurotools.graphics.color.luminance_matrix"]], "match_luminance() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.match_luminance"], [181, "neurotools.graphics.color.match_luminance"]], "medhues() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.medhues"], [181, "neurotools.graphics.color.medhues"]], "neurotools.graphics.color": [[5, "module-neurotools.graphics.color"], [181, "module-neurotools.graphics.color"]], "radl2rgb() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.radl2rgb"], [181, "neurotools.graphics.color.radl2rgb"]], "radl2rgblut() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.radl2rgbLUT"], [181, "neurotools.graphics.color.radl2rgbLUT"]], "rgb2hex() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.rgb2hex"], [181, "neurotools.graphics.color.rgb2hex"]], "rotate() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.rotate"], [181, "neurotools.graphics.color.rotate"]], "show_complete_fast_pallet() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.show_complete_fast_pallet"], [181, "neurotools.graphics.color.show_complete_fast_pallet"]], "show_complete_fastest_pallet() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.show_complete_fastest_pallet"], [181, "neurotools.graphics.color.show_complete_fastest_pallet"]], "show_fast_pallet() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.show_fast_pallet"], [181, "neurotools.graphics.color.show_fast_pallet"]], "show_hex_pallet() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.show_hex_pallet"], [181, "neurotools.graphics.color.show_hex_pallet"]], "tuple_to_bit16() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.tuple_to_bit16"], [181, "neurotools.graphics.color.tuple_to_bit16"]], "tuple_to_bit24() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.tuple_to_bit24"], [181, "neurotools.graphics.color.tuple_to_bit24"]], "neurotools.graphics.colormaps": [[6, "module-neurotools.graphics.colormaps"], [182, "module-neurotools.graphics.colormaps"]], "test_colormaps() (in module neurotools.graphics.colormaps)": [[6, "neurotools.graphics.colormaps.test_colormaps"], [182, "neurotools.graphics.colormaps.test_colormaps"]], "count_nodes() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.count_nodes"], [183, "neurotools.graphics.dendron.count_nodes"]], "get_depth() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.get_depth"], [183, "neurotools.graphics.dendron.get_depth"]], "inorder_traversal() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.inorder_traversal"], [183, "neurotools.graphics.dendron.inorder_traversal"]], "list_like() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.list_like"], [183, "neurotools.graphics.dendron.list_like"]], "neurotools.graphics.dendron": [[7, "module-neurotools.graphics.dendron"], [183, "module-neurotools.graphics.dendron"]], "plot_brackets() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.plot_brackets"], [183, "neurotools.graphics.dendron.plot_brackets"]], "plot_brackets_polar() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.plot_brackets_polar"], [183, "neurotools.graphics.dendron.plot_brackets_polar"]], "neurotools.graphics.fabio_maps": [[8, "module-neurotools.graphics.fabio_maps"], [184, "module-neurotools.graphics.fabio_maps"]], "mean_center() (in module neurotools.graphics.image)": [[9, "neurotools.graphics.image.mean_center"], [185, "neurotools.graphics.image.mean_center"]], "median_center() (in module neurotools.graphics.image)": [[9, "neurotools.graphics.image.median_center"], [185, "neurotools.graphics.image.median_center"]], "neurotools.graphics.image": [[9, "module-neurotools.graphics.image"], [185, "module-neurotools.graphics.image"]], "unitize() (in module neurotools.graphics.image)": [[9, "neurotools.graphics.image.unitize"], [185, "neurotools.graphics.image.unitize"]], "visualize_derivatives() (in module neurotools.graphics.image)": [[9, "neurotools.graphics.image.visualize_derivatives"], [185, "neurotools.graphics.image.visualize_derivatives"]], "draw_array() (in module neurotools.graphics.matplotlib)": [[10, "neurotools.graphics.matplotlib.draw_array"], [186, "neurotools.graphics.matplotlib.draw_array"]], "hide_toolbar() (in module neurotools.graphics.matplotlib)": [[10, "neurotools.graphics.matplotlib.hide_toolbar"], [186, "neurotools.graphics.matplotlib.hide_toolbar"]], "neurotools.graphics.matplotlib": [[10, "module-neurotools.graphics.matplotlib"], [186, "module-neurotools.graphics.matplotlib"]], "start() (in module neurotools.graphics.matplotlib)": [[10, "neurotools.graphics.matplotlib.start"], [186, "neurotools.graphics.matplotlib.start"]], "gaussian2d_covellipse() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.Gaussian2D_covellipse"], [187, "neurotools.graphics.plot.Gaussian2D_covellipse"]], "handlersquare (class in neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.HandlerSquare"], [187, "neurotools.graphics.plot.HandlerSquare"]], "addspikes() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.addspikes"], [187, "neurotools.graphics.plot.addspikes"]], "adjust_axis_height_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.adjust_axis_height_pixels"], [187, "neurotools.graphics.plot.adjust_axis_height_pixels"]], "adjust_xlabel_space() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.adjust_xlabel_space"], [187, "neurotools.graphics.plot.adjust_xlabel_space"]], "adjust_ylabel_space() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.adjust_ylabel_space"], [187, "neurotools.graphics.plot.adjust_ylabel_space"]], "adjustmap() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.adjustmap"], [187, "neurotools.graphics.plot.adjustmap"]], "animate_complex() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.animate_complex"], [187, "neurotools.graphics.plot.animate_complex"]], "arrow_between() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.arrow_between"], [187, "neurotools.graphics.plot.arrow_between"]], "axvbands() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.axvbands"], [187, "neurotools.graphics.plot.axvbands"]], "axvstripe() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.axvstripe"], [187, "neurotools.graphics.plot.axvstripe"]], "barcompare() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.barcompare"], [187, "neurotools.graphics.plot.barcompare"]], "base_legend() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.base_legend"], [187, "neurotools.graphics.plot.base_legend"]], "border_width() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.border_width"], [187, "neurotools.graphics.plot.border_width"]], "boxplot_significance() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.boxplot_significance"], [187, "neurotools.graphics.plot.boxplot_significance"]], "broken_step() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.broken_step"], [187, "neurotools.graphics.plot.broken_step"]], "ceil_to_precision() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.ceil_to_precision"], [187, "neurotools.graphics.plot.ceil_to_precision"]], "centers() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.centers"], [187, "neurotools.graphics.plot.centers"]], "clean_y_range() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.clean_y_range"], [187, "neurotools.graphics.plot.clean_y_range"]], "cleartop() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.cleartop"], [187, "neurotools.graphics.plot.cleartop"]], "colored_boxplot() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.colored_boxplot"], [187, "neurotools.graphics.plot.colored_boxplot"]], "complex_axis() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.complex_axis"], [187, "neurotools.graphics.plot.complex_axis"]], "covariance_crosshairs() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.covariance_crosshairs"], [187, "neurotools.graphics.plot.covariance_crosshairs"]], "create_artists() (neurotools.graphics.plot.handlersquare method)": [[11, "neurotools.graphics.plot.HandlerSquare.create_artists"], [187, "neurotools.graphics.plot.HandlerSquare.create_artists"]], "darken() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.darken"], [187, "neurotools.graphics.plot.darken"]], "domask() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.domask"], [187, "neurotools.graphics.plot.domask"]], "draw_circle() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.draw_circle"], [187, "neurotools.graphics.plot.draw_circle"]], "expand_axis_x() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.expand_axis_x"], [187, "neurotools.graphics.plot.expand_axis_x"]], "expand_axis_y() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.expand_axis_y"], [187, "neurotools.graphics.plot.expand_axis_y"]], "expand_y_range() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.expand_y_range"], [187, "neurotools.graphics.plot.expand_y_range"]], "figurebox() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.figurebox"], [187, "neurotools.graphics.plot.figurebox"]], "flathist() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.flathist"], [187, "neurotools.graphics.plot.flathist"]], "floor_to_precision() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.floor_to_precision"], [187, "neurotools.graphics.plot.floor_to_precision"]], "force_aspect() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.force_aspect"], [187, "neurotools.graphics.plot.force_aspect"]], "fsize() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.fsize"], [187, "neurotools.graphics.plot.fsize"]], "fudgex() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.fudgex"], [187, "neurotools.graphics.plot.fudgex"]], "fudgexy() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.fudgexy"], [187, "neurotools.graphics.plot.fudgexy"]], "fudgey() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.fudgey"], [187, "neurotools.graphics.plot.fudgey"]], "get_aspect() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.get_aspect"], [187, "neurotools.graphics.plot.get_aspect"]], "get_ax_pixel() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.get_ax_pixel"], [187, "neurotools.graphics.plot.get_ax_pixel"]], "get_ax_pixel_ratio() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.get_ax_pixel_ratio"], [187, "neurotools.graphics.plot.get_ax_pixel_ratio"]], "get_ax_size() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.get_ax_size"], [187, "neurotools.graphics.plot.get_ax_size"]], "get_bbox() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.get_bbox"], [187, "neurotools.graphics.plot.get_bbox"]], "good_colorbar() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.good_colorbar"], [187, "neurotools.graphics.plot.good_colorbar"]], "hsigbar() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.hsigbar"], [187, "neurotools.graphics.plot.hsigbar"]], "inhibition_arrow() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.inhibition_arrow"], [187, "neurotools.graphics.plot.inhibition_arrow"]], "label() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.label"], [187, "neurotools.graphics.plot.label"]], "left_legend() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.left_legend"], [187, "neurotools.graphics.plot.left_legend"]], "lighten() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.lighten"], [187, "neurotools.graphics.plot.lighten"]], "match_image_aspect() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.match_image_aspect"], [187, "neurotools.graphics.plot.match_image_aspect"]], "mock_legend() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.mock_legend"], [187, "neurotools.graphics.plot.mock_legend"]], "more_xticks() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.more_xticks"], [187, "neurotools.graphics.plot.more_xticks"]], "more_yticks() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.more_yticks"], [187, "neurotools.graphics.plot.more_yticks"]], "neurotools.graphics.plot": [[11, "module-neurotools.graphics.plot"], [187, "module-neurotools.graphics.plot"]], "nice_legend() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nice_legend"], [187, "neurotools.graphics.plot.nice_legend"]], "nicebp() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nicebp"], [187, "neurotools.graphics.plot.nicebp"]], "nicex() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nicex"], [187, "neurotools.graphics.plot.nicex"]], "nicexy() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nicexy"], [187, "neurotools.graphics.plot.nicexy"]], "nicey() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nicey"], [187, "neurotools.graphics.plot.nicey"]], "noaxis() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noaxis"], [187, "neurotools.graphics.plot.noaxis"]], "noclip() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noclip"], [187, "neurotools.graphics.plot.noclip"]], "nolabels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nolabels"], [187, "neurotools.graphics.plot.nolabels"]], "notick() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.notick"], [187, "neurotools.graphics.plot.notick"]], "nox() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nox"], [187, "neurotools.graphics.plot.nox"]], "noxlabels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noxlabels"], [187, "neurotools.graphics.plot.noxlabels"]], "noxyaxes() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noxyaxes"], [187, "neurotools.graphics.plot.noxyaxes"]], "noy() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noy"], [187, "neurotools.graphics.plot.noy"]], "noylabels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noylabels"], [187, "neurotools.graphics.plot.noylabels"]], "nudge_axis_baseline() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nudge_axis_baseline"], [187, "neurotools.graphics.plot.nudge_axis_baseline"]], "nudge_axis_left() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nudge_axis_left"], [187, "neurotools.graphics.plot.nudge_axis_left"]], "nudge_axis_x() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nudge_axis_x"], [187, "neurotools.graphics.plot.nudge_axis_x"]], "nudge_axis_y() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nudge_axis_y"], [187, "neurotools.graphics.plot.nudge_axis_y"]], "nudge_axis_y_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nudge_axis_y_pixels"], [187, "neurotools.graphics.plot.nudge_axis_y_pixels"]], "pikeplot() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.pikeplot"], [187, "neurotools.graphics.plot.pikeplot"]], "pixels_to_xfigureunits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.pixels_to_xfigureunits"], [187, "neurotools.graphics.plot.pixels_to_xfigureunits"]], "pixels_to_xunits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.pixels_to_xunits"], [187, "neurotools.graphics.plot.pixels_to_xunits"]], "pixels_to_yfigureunits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.pixels_to_yfigureunits"], [187, "neurotools.graphics.plot.pixels_to_yfigureunits"]], "pixels_to_yunits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.pixels_to_yunits"], [187, "neurotools.graphics.plot.pixels_to_yunits"]], "plotcwt() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.plotCWT"], [187, "neurotools.graphics.plot.plotCWT"]], "plotwtphase() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.plotWTPhase"], [187, "neurotools.graphics.plot.plotWTPhase"]], "plotwtphasefig() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.plotWTPhaseFig"], [187, "neurotools.graphics.plot.plotWTPhaseFig"]], "plot_complex() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.plot_complex"], [187, "neurotools.graphics.plot.plot_complex"]], "plotz() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.plotz"], [187, "neurotools.graphics.plot.plotz"]], "positivex() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.positivex"], [187, "neurotools.graphics.plot.positivex"]], "positivexy() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.positivexy"], [187, "neurotools.graphics.plot.positivexy"]], "positivey() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.positivey"], [187, "neurotools.graphics.plot.positivey"]], "px2x() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.px2x"], [187, "neurotools.graphics.plot.px2x"]], "px2y() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.px2y"], [187, "neurotools.graphics.plot.px2y"]], "rangeover() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.rangeover"], [187, "neurotools.graphics.plot.rangeover"]], "rangeto() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.rangeto"], [187, "neurotools.graphics.plot.rangeto"]], "restore_limits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.restore_limits"], [187, "neurotools.graphics.plot.restore_limits"]], "right_legend() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.right_legend"], [187, "neurotools.graphics.plot.right_legend"]], "rightaxis() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.rightaxis"], [187, "neurotools.graphics.plot.rightaxis"]], "righty() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.righty"], [187, "neurotools.graphics.plot.righty"]], "round_to_precision() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.round_to_precision"], [187, "neurotools.graphics.plot.round_to_precision"]], "save_limits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.save_limits"], [187, "neurotools.graphics.plot.save_limits"]], "savefigure() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.savefigure"], [187, "neurotools.graphics.plot.savefigure"]], "shade_edges() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.shade_edges"], [187, "neurotools.graphics.plot.shade_edges"]], "shellmean() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.shellmean"], [187, "neurotools.graphics.plot.shellmean"]], "shellplot() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.shellplot"], [187, "neurotools.graphics.plot.shellplot"]], "sigbar() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.sigbar"], [187, "neurotools.graphics.plot.sigbar"]], "simple_arrow() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.simple_arrow"], [187, "neurotools.graphics.plot.simple_arrow"]], "simpleaxis() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.simpleaxis"], [187, "neurotools.graphics.plot.simpleaxis"]], "simpleraxis() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.simpleraxis"], [187, "neurotools.graphics.plot.simpleraxis"]], "simplerright() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.simplerright"], [187, "neurotools.graphics.plot.simplerright"]], "splitz() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.splitz"], [187, "neurotools.graphics.plot.splitz"]], "stderrplot() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.stderrplot"], [187, "neurotools.graphics.plot.stderrplot"]], "subfigurelabel() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.subfigurelabel"], [187, "neurotools.graphics.plot.subfigurelabel"]], "trendline() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.trendline"], [187, "neurotools.graphics.plot.trendline"]], "unit_crosshairs() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.unit_crosshairs"], [187, "neurotools.graphics.plot.unit_crosshairs"]], "unitaxes() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.unitaxes"], [187, "neurotools.graphics.plot.unitaxes"]], "unitx() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.unitx"], [187, "neurotools.graphics.plot.unitx"]], "unity() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.unity"], [187, "neurotools.graphics.plot.unity"]], "widths_to_centers() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.widths_to_centers"], [187, "neurotools.graphics.plot.widths_to_centers"]], "widths_to_edges() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.widths_to_edges"], [187, "neurotools.graphics.plot.widths_to_edges"]], "wtpshow() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.wtpshow"], [187, "neurotools.graphics.plot.wtpshow"]], "xbartext() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xbartext"], [187, "neurotools.graphics.plot.xbartext"]], "xfigureunits_to_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xfigureunits_to_pixels"], [187, "neurotools.graphics.plot.xfigureunits_to_pixels"]], "xin() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xin"], [187, "neurotools.graphics.plot.xin"]], "xscalebar() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xscalebar"], [187, "neurotools.graphics.plot.xscalebar"]], "xticklen() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xticklen"], [187, "neurotools.graphics.plot.xticklen"]], "xtickpad() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xtickpad"], [187, "neurotools.graphics.plot.xtickpad"]], "xunits_to_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xunits_to_pixels"], [187, "neurotools.graphics.plot.xunits_to_pixels"]], "xylim() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xylim"], [187, "neurotools.graphics.plot.xylim"]], "ybartext() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.ybartext"], [187, "neurotools.graphics.plot.ybartext"]], "yfigureunits_to_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.yfigureunits_to_pixels"], [187, "neurotools.graphics.plot.yfigureunits_to_pixels"]], "yin() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.yin"], [187, "neurotools.graphics.plot.yin"]], "yscalebar() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.yscalebar"], [187, "neurotools.graphics.plot.yscalebar"]], "yticklen() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.yticklen"], [187, "neurotools.graphics.plot.yticklen"]], "ytickpad() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.ytickpad"], [187, "neurotools.graphics.plot.ytickpad"]], "yunits_to_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.yunits_to_pixels"], [187, "neurotools.graphics.plot.yunits_to_pixels"]], "zerohline() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.zerohline"], [187, "neurotools.graphics.plot.zerohline"]], "zerovline() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.zerovline"], [187, "neurotools.graphics.plot.zerovline"]], "zoombox() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.zoombox"], [187, "neurotools.graphics.plot.zoombox"]], "draw_array() (in module neurotools.graphics.pygame)": [[12, "neurotools.graphics.pygame.draw_array"], [188, "neurotools.graphics.pygame.draw_array"]], "enable_vsync() (in module neurotools.graphics.pygame)": [[12, "neurotools.graphics.pygame.enable_vsync"], [188, "neurotools.graphics.pygame.enable_vsync"]], "neurotools.graphics.pygame": [[12, "module-neurotools.graphics.pygame"], [188, "module-neurotools.graphics.pygame"]], "start() (in module neurotools.graphics.pygame)": [[12, "neurotools.graphics.pygame.start"], [188, "neurotools.graphics.pygame.start"]], "neurotools.jobs": [[14, "module-neurotools.jobs"], [191, "module-neurotools.jobs"]], "base64hash() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.base64hash"], [192, "neurotools.jobs.cache.base64hash"]], "base64hash2byte() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.base64hash2byte"], [192, "neurotools.jobs.cache.base64hash2byte"]], "disk_cacher() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.disk_cacher"], [192, "neurotools.jobs.cache.disk_cacher"]], "file_string_to_signature() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.file_string_to_signature"], [192, "neurotools.jobs.cache.file_string_to_signature"]], "function_hash_no_subroutines() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.function_hash_no_subroutines"], [192, "neurotools.jobs.cache.function_hash_no_subroutines"]], "function_hash_with_subroutines() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.function_hash_with_subroutines"], [192, "neurotools.jobs.cache.function_hash_with_subroutines"]], "function_signature() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.function_signature"], [192, "neurotools.jobs.cache.function_signature"]], "get_cache_path() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.get_cache_path"], [192, "neurotools.jobs.cache.get_cache_path"]], "get_source() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.get_source"], [192, "neurotools.jobs.cache.get_source"]], "hierarchical_cacher() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.hierarchical_cacher"], [192, "neurotools.jobs.cache.hierarchical_cacher"]], "human_decode() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.human_decode"], [192, "neurotools.jobs.cache.human_decode"]], "human_encode() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.human_encode"], [192, "neurotools.jobs.cache.human_encode"]], "locate_cached() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.locate_cached"], [192, "neurotools.jobs.cache.locate_cached"]], "neurotools.jobs.cache": [[15, "module-neurotools.jobs.cache"], [192, "module-neurotools.jobs.cache"]], "read_cache_entry() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.read_cache_entry"], [192, "neurotools.jobs.cache.read_cache_entry"]], "signature_to_file_string() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.signature_to_file_string"], [192, "neurotools.jobs.cache.signature_to_file_string"]], "validate_for_matfile() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.validate_for_matfile"], [192, "neurotools.jobs.cache.validate_for_matfile"]], "validate_for_numpy() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.validate_for_numpy"], [192, "neurotools.jobs.cache.validate_for_numpy"]], "csv() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.csv"], [193, "neurotools.jobs.closure.csv"]], "get_subroutines() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.get_subroutines"], [193, "neurotools.jobs.closure.get_subroutines"]], "inspect_function_closure() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.inspect_function_closure"], [193, "neurotools.jobs.closure.inspect_function_closure"]], "is_immutable() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.is_immutable"], [193, "neurotools.jobs.closure.is_immutable"]], "is_probably_safe() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.is_probably_safe"], [193, "neurotools.jobs.closure.is_probably_safe"]], "neurotools.jobs.closure": [[16, "module-neurotools.jobs.closure"], [193, "module-neurotools.jobs.closure"]], "verify_function_closure() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.verify_function_closure"], [193, "neurotools.jobs.closure.verify_function_closure"]], "check_filename() (in module neurotools.jobs.filenames)": [[17, "neurotools.jobs.filenames.check_filename"], [194, "neurotools.jobs.filenames.check_filename"]], "is_dangerous_filename() (in module neurotools.jobs.filenames)": [[17, "neurotools.jobs.filenames.is_dangerous_filename"], [194, "neurotools.jobs.filenames.is_dangerous_filename"]], "neurotools.jobs.filenames": [[17, "module-neurotools.jobs.filenames"], [194, "module-neurotools.jobs.filenames"]], "validate_argument_signature() (in module neurotools.jobs.filenames)": [[17, "neurotools.jobs.filenames.validate_argument_signature"], [194, "neurotools.jobs.filenames.validate_argument_signature"]], "cache_test() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.cache_test"], [195, "neurotools.jobs.initialize_system_cache.cache_test"]], "du() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.du"], [195, "neurotools.jobs.initialize_system_cache.du"]], "initialize_caches() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.initialize_caches"], [195, "neurotools.jobs.initialize_system_cache.initialize_caches"]], "launch_cache_synchronizers() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.launch_cache_synchronizers"], [195, "neurotools.jobs.initialize_system_cache.launch_cache_synchronizers"]], "neurotools.jobs.initialize_system_cache": [[18, "module-neurotools.jobs.initialize_system_cache"], [195, "module-neurotools.jobs.initialize_system_cache"]], "purge_ram_cache() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.purge_ram_cache"], [195, "neurotools.jobs.initialize_system_cache.purge_ram_cache"]], "purge_ssd_cache() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.purge_ssd_cache"], [195, "neurotools.jobs.initialize_system_cache.purge_ssd_cache"]], "reset_ramdisk() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.reset_ramdisk"], [195, "neurotools.jobs.initialize_system_cache.reset_ramdisk"]], "argument_signature() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.argument_signature"], [196, "neurotools.jobs.ndecorator.argument_signature"]], "clear_memoized() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.clear_memoized"], [196, "neurotools.jobs.ndecorator.clear_memoized"]], "listit() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.listit"], [196, "neurotools.jobs.ndecorator.listit"]], "memoize() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.memoize"], [196, "neurotools.jobs.ndecorator.memoize"]], "neurotools.jobs.ndecorator": [[19, "module-neurotools.jobs.ndecorator"], [196, "module-neurotools.jobs.ndecorator"]], "print_signature() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.print_signature"], [196, "neurotools.jobs.ndecorator.print_signature"]], "sanitize() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.sanitize"], [196, "neurotools.jobs.ndecorator.sanitize"]], "summarize_function() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.summarize_function"], [196, "neurotools.jobs.ndecorator.summarize_function"]], "timed() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.timed"], [196, "neurotools.jobs.ndecorator.timed"]], "tupleit() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.tupleit"], [196, "neurotools.jobs.ndecorator.tupleit"]], "unwrap() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.unwrap"], [196, "neurotools.jobs.ndecorator.unwrap"]], "close_pool() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.close_pool"], [197, "neurotools.jobs.parallel.close_pool"]], "eval_from_cached() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.eval_from_cached"], [197, "neurotools.jobs.parallel.eval_from_cached"]], "function_fingerprint() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.function_fingerprint"], [197, "neurotools.jobs.parallel.function_fingerprint"]], "neurotools.jobs.parallel": [[20, "module-neurotools.jobs.parallel"], [197, "module-neurotools.jobs.parallel"]], "parallel_cached_wrapper() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parallel_cached_wrapper"], [197, "neurotools.jobs.parallel.parallel_cached_wrapper"]], "parallel_error_handling() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parallel_error_handling"], [197, "neurotools.jobs.parallel.parallel_error_handling"]], "parallel_indirect_wrapper() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parallel_indirect_wrapper"], [197, "neurotools.jobs.parallel.parallel_indirect_wrapper"]], "pararraymap() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.pararraymap"], [197, "neurotools.jobs.parallel.pararraymap"]], "parimap() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parimap"], [197, "neurotools.jobs.parallel.parimap"]], "parmap() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parmap"], [197, "neurotools.jobs.parallel.parmap"]], "parmap_dict() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parmap_dict"], [197, "neurotools.jobs.parallel.parmap_dict"]], "reset_pool() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.reset_pool"], [197, "neurotools.jobs.parallel.reset_pool"]], "neurotools.linalg": [[21, "module-neurotools.linalg"], [198, "module-neurotools.linalg"]], "ascolumn() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.ascolumn"], [199, "neurotools.linalg.arguments.ascolumn"]], "asrow() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.asrow"], [199, "neurotools.linalg.arguments.asrow"]], "assertcolumn() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertcolumn"], [199, "neurotools.linalg.arguments.assertcolumn"]], "assertfinite() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertfinite"], [199, "neurotools.linalg.arguments.assertfinite"]], "assertfinitereal() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertfinitereal"], [199, "neurotools.linalg.arguments.assertfinitereal"]], "assertreal() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertreal"], [199, "neurotools.linalg.arguments.assertreal"]], "assertrow() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertrow"], [199, "neurotools.linalg.arguments.assertrow"]], "assertshape() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertshape"], [199, "neurotools.linalg.arguments.assertshape"]], "assertsquare() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertsquare"], [199, "neurotools.linalg.arguments.assertsquare"]], "assertvector() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertvector"], [199, "neurotools.linalg.arguments.assertvector"]], "assquare() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assquare"], [199, "neurotools.linalg.arguments.assquare"]], "asvector() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.asvector"], [199, "neurotools.linalg.arguments.asvector"]], "iscolumn() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.iscolumn"], [199, "neurotools.linalg.arguments.iscolumn"]], "isrow() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.isrow"], [199, "neurotools.linalg.arguments.isrow"]], "issquare() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.issquare"], [199, "neurotools.linalg.arguments.issquare"]], "neurotools.linalg.arguments": [[22, "module-neurotools.linalg.arguments"], [199, "module-neurotools.linalg.arguments"]], "scalar() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.scalar"], [199, "neurotools.linalg.arguments.scalar"]], "ldistance() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.Ldistance"], [200, "neurotools.linalg.matrix.Ldistance"]], "llasso() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.Llasso"], [200, "neurotools.linalg.matrix.Llasso"]], "abserr() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.abserr"], [200, "neurotools.linalg.matrix.abserr"]], "autopredict() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.autopredict"], [200, "neurotools.linalg.matrix.autopredict"]], "cartesian_product() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.cartesian_product"], [200, "neurotools.linalg.matrix.cartesian_product"]], "check_covmat() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.check_covmat"], [200, "neurotools.linalg.matrix.check_covmat"]], "check_covmat_fast() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.check_covmat_fast"], [200, "neurotools.linalg.matrix.check_covmat_fast"]], "check_finite_real() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.check_finite_real"], [200, "neurotools.linalg.matrix.check_finite_real"]], "cholupdate() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.cholupdate"], [200, "neurotools.linalg.matrix.cholupdate"]], "cholupdate_eye() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.cholupdate_eye"], [200, "neurotools.linalg.matrix.cholupdate_eye"]], "cinv() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.cinv"], [200, "neurotools.linalg.matrix.cinv"]], "column() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.column"], [200, "neurotools.linalg.matrix.column"]], "csolve() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.csolve"], [200, "neurotools.linalg.matrix.csolve"]], "errmx() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.errmx"], [200, "neurotools.linalg.matrix.errmx"]], "kronsum() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.kronsum"], [200, "neurotools.linalg.matrix.kronsum"]], "laplace_kernel() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.laplace_kernel"], [200, "neurotools.linalg.matrix.laplace_kernel"]], "ldiv() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.ldiv"], [200, "neurotools.linalg.matrix.ldiv"]], "logdet() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.logdet"], [200, "neurotools.linalg.matrix.logdet"]], "match_covariance() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.match_covariance"], [200, "neurotools.linalg.matrix.match_covariance"]], "maxeig() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.maxeig"], [200, "neurotools.linalg.matrix.maxeig"]], "nearpdhigham() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.nearPDHigham"], [200, "neurotools.linalg.matrix.nearPDHigham"]], "nearpsdrebonatojackel() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.nearPSDRebonatoJackel"], [200, "neurotools.linalg.matrix.nearPSDRebonatoJackel"]], "neurotools.linalg.matrix": [[23, "module-neurotools.linalg.matrix"], [200, "module-neurotools.linalg.matrix"]], "normedcovariance() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.normedcovariance"], [200, "neurotools.linalg.matrix.normedcovariance"]], "psd_eig() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.psd_eig"], [200, "neurotools.linalg.matrix.psd_eig"]], "qf() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.qf"], [200, "neurotools.linalg.matrix.qf"]], "rcond() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.rcond"], [200, "neurotools.linalg.matrix.rcond"]], "rdiv() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.rdiv"], [200, "neurotools.linalg.matrix.rdiv"]], "real_eig() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.real_eig"], [200, "neurotools.linalg.matrix.real_eig"]], "reglstsq() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.reglstsq"], [200, "neurotools.linalg.matrix.reglstsq"]], "rmatrix() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.rmatrix"], [200, "neurotools.linalg.matrix.rmatrix"]], "row() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.row"], [200, "neurotools.linalg.matrix.row"]], "rsolt() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.rsolt"], [200, "neurotools.linalg.matrix.rsolt"]], "rsolve() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.rsolve"], [200, "neurotools.linalg.matrix.rsolve"]], "selector_matrix() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.selector_matrix"], [200, "neurotools.linalg.matrix.selector_matrix"]], "solt() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.solt"], [200, "neurotools.linalg.matrix.solt"]], "top_v() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.top_v"], [200, "neurotools.linalg.matrix.top_v"]], "tril_elements() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.tril_elements"], [200, "neurotools.linalg.matrix.tril_elements"]], "triu_elements() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.triu_elements"], [200, "neurotools.linalg.matrix.triu_elements"]], "wheremax() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.wheremax"], [200, "neurotools.linalg.matrix.wheremax"]], "wheremin() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.wheremin"], [200, "neurotools.linalg.matrix.wheremin"]], "adjacency1d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.adjacency1D"], [201, "neurotools.linalg.operators.adjacency1D"]], "adjacency2d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.adjacency2D"], [201, "neurotools.linalg.operators.adjacency2D"]], "adjacency2d_circular() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.adjacency2D_circular"], [201, "neurotools.linalg.operators.adjacency2D_circular"]], "adjacency2d_rotational() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.adjacency2d_rotational"], [201, "neurotools.linalg.operators.adjacency2d_rotational"]], "circular1dbluroperator() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.circular1DblurOperator"], [201, "neurotools.linalg.operators.circular1DblurOperator"]], "cosine_kernel() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.cosine_kernel"], [201, "neurotools.linalg.operators.cosine_kernel"]], "covfrom() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.covfrom"], [201, "neurotools.linalg.operators.covfrom"]], "delta() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.delta"], [201, "neurotools.linalg.operators.delta"]], "differentiator() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.differentiator"], [201, "neurotools.linalg.operators.differentiator"]], "diffuseft1d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.diffuseFT1D"], [201, "neurotools.linalg.operators.diffuseFT1D"]], "flatcov() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.flatcov"], [201, "neurotools.linalg.operators.flatcov"]], "gaussian1dbluroperator() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.gaussian1DblurOperator"], [201, "neurotools.linalg.operators.gaussian1DblurOperator"]], "gaussian2dbluroperator() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.gaussian2DblurOperator"], [201, "neurotools.linalg.operators.gaussian2DblurOperator"]], "integrator() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.integrator"], [201, "neurotools.linalg.operators.integrator"]], "laplacian1d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.laplacian1D"], [201, "neurotools.linalg.operators.laplacian1D"]], "laplacian1d_circular() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.laplacian1D_circular"], [201, "neurotools.linalg.operators.laplacian1D_circular"]], "laplacian2d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.laplacian2D"], [201, "neurotools.linalg.operators.laplacian2D"]], "laplacianft1d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.laplacianFT1D"], [201, "neurotools.linalg.operators.laplacianFT1D"]], "log_cosine_basis() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.log_cosine_basis"], [201, "neurotools.linalg.operators.log_cosine_basis"]], "make_cosine_basis() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.make_cosine_basis"], [201, "neurotools.linalg.operators.make_cosine_basis"]], "neurotools.linalg.operators": [[24, "module-neurotools.linalg.operators"], [201, "module-neurotools.linalg.operators"]], "oucov() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.oucov"], [201, "neurotools.linalg.operators.oucov"]], "separable_guassian_blur() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.separable_guassian_blur"], [201, "neurotools.linalg.operators.separable_guassian_blur"]], "wienerft1d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.wienerFT1D"], [201, "neurotools.linalg.operators.wienerFT1D"]], "beta() (in module neurotools.nlab)": [[25, "neurotools.nlab.beta"], [212, "neurotools.nlab.beta"]], "binomial() (in module neurotools.nlab)": [[25, "neurotools.nlab.binomial"], [212, "neurotools.nlab.binomial"]], "chisquare() (in module neurotools.nlab)": [[25, "neurotools.nlab.chisquare"], [212, "neurotools.nlab.chisquare"]], "choice() (in module neurotools.nlab)": [[25, "neurotools.nlab.choice"], [212, "neurotools.nlab.choice"]], "dirichlet() (in module neurotools.nlab)": [[25, "neurotools.nlab.dirichlet"], [212, "neurotools.nlab.dirichlet"]], "exponential() (in module neurotools.nlab)": [[25, "neurotools.nlab.exponential"], [212, "neurotools.nlab.exponential"]], "f() (in module neurotools.nlab)": [[25, "neurotools.nlab.f"], [212, "neurotools.nlab.f"]], "gamma() (in module neurotools.nlab)": [[25, "neurotools.nlab.gamma"], [212, "neurotools.nlab.gamma"]], "geometric() (in module neurotools.nlab)": [[25, "neurotools.nlab.geometric"], [212, "neurotools.nlab.geometric"]], "get_state() (in module neurotools.nlab)": [[25, "neurotools.nlab.get_state"], [212, "neurotools.nlab.get_state"]], "gumbel() (in module neurotools.nlab)": [[25, "neurotools.nlab.gumbel"], [212, "neurotools.nlab.gumbel"]], "hypergeometric() (in module neurotools.nlab)": [[25, "neurotools.nlab.hypergeometric"], [212, "neurotools.nlab.hypergeometric"]], "laplace() (in module neurotools.nlab)": [[25, "neurotools.nlab.laplace"], [212, "neurotools.nlab.laplace"]], "logistic() (in module neurotools.nlab)": [[25, "neurotools.nlab.logistic"], [212, "neurotools.nlab.logistic"]], "lognormal() (in module neurotools.nlab)": [[25, "neurotools.nlab.lognormal"], [212, "neurotools.nlab.lognormal"]], "logseries() (in module neurotools.nlab)": [[25, "neurotools.nlab.logseries"], [212, "neurotools.nlab.logseries"]], "multinomial() (in module neurotools.nlab)": [[25, "neurotools.nlab.multinomial"], [212, "neurotools.nlab.multinomial"]], "multivariate_normal() (in module neurotools.nlab)": [[25, "neurotools.nlab.multivariate_normal"], [212, "neurotools.nlab.multivariate_normal"]], "negative_binomial() (in module neurotools.nlab)": [[25, "neurotools.nlab.negative_binomial"], [212, "neurotools.nlab.negative_binomial"]], "neurotools.nlab": [[25, "module-neurotools.nlab"], [212, "module-neurotools.nlab"]], "noncentral_chisquare() (in module neurotools.nlab)": [[25, "neurotools.nlab.noncentral_chisquare"], [212, "neurotools.nlab.noncentral_chisquare"]], "noncentral_f() (in module neurotools.nlab)": [[25, "neurotools.nlab.noncentral_f"], [212, "neurotools.nlab.noncentral_f"]], "normal() (in module neurotools.nlab)": [[25, "neurotools.nlab.normal"], [212, "neurotools.nlab.normal"]], "pareto() (in module neurotools.nlab)": [[25, "neurotools.nlab.pareto"], [212, "neurotools.nlab.pareto"]], "permutation() (in module neurotools.nlab)": [[25, "neurotools.nlab.permutation"], [212, "neurotools.nlab.permutation"]], "poisson() (in module neurotools.nlab)": [[25, "neurotools.nlab.poisson"], [212, "neurotools.nlab.poisson"]], "power() (in module neurotools.nlab)": [[25, "neurotools.nlab.power"], [212, "neurotools.nlab.power"]], "rand() (in module neurotools.nlab)": [[25, "neurotools.nlab.rand"], [212, "neurotools.nlab.rand"]], "randint() (in module neurotools.nlab)": [[25, "neurotools.nlab.randint"], [212, "neurotools.nlab.randint"]], "randn() (in module neurotools.nlab)": [[25, "neurotools.nlab.randn"], [212, "neurotools.nlab.randn"]], "random() (in module neurotools.nlab)": [[25, "neurotools.nlab.random"], [212, "neurotools.nlab.random"]], "random_integers() (in module neurotools.nlab)": [[25, "neurotools.nlab.random_integers"], [212, "neurotools.nlab.random_integers"]], "random_sample() (in module neurotools.nlab)": [[25, "neurotools.nlab.random_sample"], [212, "neurotools.nlab.random_sample"]], "rayleigh() (in module neurotools.nlab)": [[25, "neurotools.nlab.rayleigh"], [212, "neurotools.nlab.rayleigh"]], "seed() (in module neurotools.nlab)": [[25, "neurotools.nlab.seed"], [212, "neurotools.nlab.seed"]], "set_state() (in module neurotools.nlab)": [[25, "neurotools.nlab.set_state"], [212, "neurotools.nlab.set_state"]], "shuffle() (in module neurotools.nlab)": [[25, "neurotools.nlab.shuffle"], [212, "neurotools.nlab.shuffle"]], "standard_cauchy() (in module neurotools.nlab)": [[25, "neurotools.nlab.standard_cauchy"], [212, "neurotools.nlab.standard_cauchy"]], "standard_exponential() (in module neurotools.nlab)": [[25, "neurotools.nlab.standard_exponential"], [212, "neurotools.nlab.standard_exponential"]], "standard_gamma() (in module neurotools.nlab)": [[25, "neurotools.nlab.standard_gamma"], [212, "neurotools.nlab.standard_gamma"]], "standard_normal() (in module neurotools.nlab)": [[25, "neurotools.nlab.standard_normal"], [212, "neurotools.nlab.standard_normal"]], "standard_t() (in module neurotools.nlab)": [[25, "neurotools.nlab.standard_t"], [212, "neurotools.nlab.standard_t"]], "triangular() (in module neurotools.nlab)": [[25, "neurotools.nlab.triangular"], [212, "neurotools.nlab.triangular"]], "uniform() (in module neurotools.nlab)": [[25, "neurotools.nlab.uniform"], [212, "neurotools.nlab.uniform"]], "vonmises() (in module neurotools.nlab)": [[25, "neurotools.nlab.vonmises"], [212, "neurotools.nlab.vonmises"]], "wald() (in module neurotools.nlab)": [[25, "neurotools.nlab.wald"], [212, "neurotools.nlab.wald"]], "weibull() (in module neurotools.nlab)": [[25, "neurotools.nlab.weibull"], [212, "neurotools.nlab.weibull"]], "zipf() (in module neurotools.nlab)": [[25, "neurotools.nlab.zipf"], [212, "neurotools.nlab.zipf"]], "neurotools.obsolete": [[26, "module-neurotools.obsolete"], [213, "module-neurotools.obsolete"]], "neurotools.obsolete.encoding": [[27, "module-neurotools.obsolete.encoding"], [214, "module-neurotools.obsolete.encoding"]], "huffman (class in neurotools.obsolete.encoding.huffman)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman"], [215, "neurotools.obsolete.encoding.Huffman.Huffman"]], "huffman.leaf (class in neurotools.obsolete.encoding.huffman)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.Leaf"], [215, "neurotools.obsolete.encoding.Huffman.Huffman.Leaf"]], "huffman.node (class in neurotools.obsolete.encoding.huffman)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.Node"], [215, "neurotools.obsolete.encoding.Huffman.Huffman.Node"]], "decode() (neurotools.obsolete.encoding.huffman.huffman method)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.decode"], [215, "neurotools.obsolete.encoding.Huffman.Huffman.decode"]], "encode() (neurotools.obsolete.encoding.huffman.huffman method)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.encode"], [215, "neurotools.obsolete.encoding.Huffman.Huffman.encode"]], "encode_packets() (neurotools.obsolete.encoding.huffman.huffman method)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.encode_packets"], [215, "neurotools.obsolete.encoding.Huffman.Huffman.encode_packets"]], "neurotools.obsolete.encoding.huffman": [[28, "module-neurotools.obsolete.encoding.Huffman"], [215, "module-neurotools.obsolete.encoding.Huffman"]], "walk() (neurotools.obsolete.encoding.huffman.huffman.node method)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.Node.walk"], [215, "neurotools.obsolete.encoding.Huffman.Huffman.Node.walk"]], "naryhuffman (class in neurotools.obsolete.encoding.naryhuffman)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman"], [216, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman"]], "naryhuffman.leaf (class in neurotools.obsolete.encoding.naryhuffman)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Leaf"], [216, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Leaf"]], "naryhuffman.node (class in neurotools.obsolete.encoding.naryhuffman)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Node"], [216, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Node"]], "decode() (neurotools.obsolete.encoding.naryhuffman.naryhuffman method)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.decode"], [216, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.decode"]], "encode() (neurotools.obsolete.encoding.naryhuffman.naryhuffman method)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.encode"], [216, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.encode"]], "encode_packets() (neurotools.obsolete.encoding.naryhuffman.naryhuffman method)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.encode_packets"], [216, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.encode_packets"]], "neurotools.obsolete.encoding.naryhuffman": [[29, "module-neurotools.obsolete.encoding.NaryHuffman"], [216, "module-neurotools.obsolete.encoding.NaryHuffman"]], "walk() (neurotools.obsolete.encoding.naryhuffman.naryhuffman.node method)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Node.walk"], [216, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Node.walk"]], "neurotools.obsolete.gpu": [[30, "module-neurotools.obsolete.gpu"], [217, "module-neurotools.obsolete.gpu"]], "missing() (in module neurotools.obsolete.gpu.cl)": [[31, "neurotools.obsolete.gpu.cl.missing"], [218, "neurotools.obsolete.gpu.cl.missing"]], "neurotools.obsolete.gpu.cl": [[31, "module-neurotools.obsolete.gpu.cl"], [218, "module-neurotools.obsolete.gpu.cl"]], "neurotools.obsolete.gpu.cpu": [[35, "module-neurotools.obsolete.gpu.cpu"], [222, "module-neurotools.obsolete.gpu.cpu"]], "cmap() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.cmap"], [223, "neurotools.obsolete.gpu.cpu.util.cmap"]], "compose() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.compose"], [223, "neurotools.obsolete.gpu.cpu.util.compose"]], "corr() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.corr"], [223, "neurotools.obsolete.gpu.cpu.util.corr"]], "cov() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.cov"], [223, "neurotools.obsolete.gpu.cpu.util.cov"]], "cut() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.cut"], [223, "neurotools.obsolete.gpu.cpu.util.cut"]], "document() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.document"], [223, "neurotools.obsolete.gpu.cpu.util.document"]], "dot() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.dot"], [223, "neurotools.obsolete.gpu.cpu.util.dot"]], "elem() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.elem"], [223, "neurotools.obsolete.gpu.cpu.util.elem"]], "fancy() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.fancy"], [223, "neurotools.obsolete.gpu.cpu.util.fancy"]], "flat() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.flat"], [223, "neurotools.obsolete.gpu.cpu.util.flat"]], "idivup() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.idivup"], [223, "neurotools.obsolete.gpu.cpu.util.idivup"]], "ldif() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.ldif"], [223, "neurotools.obsolete.gpu.cpu.util.ldif"]], "ldif2() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.ldif2"], [223, "neurotools.obsolete.gpu.cpu.util.ldif2"]], "ldiv() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.ldiv"], [223, "neurotools.obsolete.gpu.cpu.util.ldiv"]], "ldiv2() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.ldiv2"], [223, "neurotools.obsolete.gpu.cpu.util.ldiv2"]], "length() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.length"], [223, "neurotools.obsolete.gpu.cpu.util.length"]], "lmul() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lmul"], [223, "neurotools.obsolete.gpu.cpu.util.lmul"]], "lmul2() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lmul2"], [223, "neurotools.obsolete.gpu.cpu.util.lmul2"]], "lpow() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lpow"], [223, "neurotools.obsolete.gpu.cpu.util.lpow"]], "lpow2() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lpow2"], [223, "neurotools.obsolete.gpu.cpu.util.lpow2"]], "lsum() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lsum"], [223, "neurotools.obsolete.gpu.cpu.util.lsum"]], "lsum2() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lsum2"], [223, "neurotools.obsolete.gpu.cpu.util.lsum2"]], "mdif() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mdif"], [223, "neurotools.obsolete.gpu.cpu.util.mdif"]], "mdiv() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mdiv"], [223, "neurotools.obsolete.gpu.cpu.util.mdiv"]], "mean() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mean"], [223, "neurotools.obsolete.gpu.cpu.util.mean"]], "mmap() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mmap"], [223, "neurotools.obsolete.gpu.cpu.util.mmap"]], "mmean() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mmean"], [223, "neurotools.obsolete.gpu.cpu.util.mmean"]], "mmul() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mmul"], [223, "neurotools.obsolete.gpu.cpu.util.mmul"]], "mpow() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mpow"], [223, "neurotools.obsolete.gpu.cpu.util.mpow"]], "mstd() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mstd"], [223, "neurotools.obsolete.gpu.cpu.util.mstd"]], "msum() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.msum"], [223, "neurotools.obsolete.gpu.cpu.util.msum"]], "mu() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mu"], [223, "neurotools.obsolete.gpu.cpu.util.mu"]], "mvar() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mvar"], [223, "neurotools.obsolete.gpu.cpu.util.mvar"]], "neurotools.obsolete.gpu.cpu.util": [[36, "module-neurotools.obsolete.gpu.cpu.util"], [223, "module-neurotools.obsolete.gpu.cpu.util"]], "norm() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.norm"], [223, "neurotools.obsolete.gpu.cpu.util.norm"]], "rnorm() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.rnorm"], [223, "neurotools.obsolete.gpu.cpu.util.rnorm"]], "scale() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.scale"], [223, "neurotools.obsolete.gpu.cpu.util.scale"]], "sem() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.sem"], [223, "neurotools.obsolete.gpu.cpu.util.sem"]], "shift() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.shift"], [223, "neurotools.obsolete.gpu.cpu.util.shift"]], "sigma() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.sigma"], [223, "neurotools.obsolete.gpu.cpu.util.sigma"]], "sstd() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.sstd"], [223, "neurotools.obsolete.gpu.cpu.util.sstd"]], "std() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.std"], [223, "neurotools.obsolete.gpu.cpu.util.std"]], "svar() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.svar"], [223, "neurotools.obsolete.gpu.cpu.util.svar"]], "var() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.var"], [223, "neurotools.obsolete.gpu.cpu.util.var"]], "neurotools.obsolete.gpu.cu": [[37, "module-neurotools.obsolete.gpu.cu"], [224, "module-neurotools.obsolete.gpu.cu"]], "gpuboxconv() (in module neurotools.obsolete.gpu.cu.convolution)": [[38, "neurotools.obsolete.gpu.cu.convolution.gpuboxconv"], [225, "neurotools.obsolete.gpu.cu.convolution.gpuboxconv"]], "gpuboxconv_core() (in module neurotools.obsolete.gpu.cu.convolution)": [[38, "neurotools.obsolete.gpu.cu.convolution.gpuboxconv_core"], [225, "neurotools.obsolete.gpu.cu.convolution.gpuboxconv_core"]], "neurotools.obsolete.gpu.cu.convolution": [[38, "module-neurotools.obsolete.gpu.cu.convolution"], [225, "module-neurotools.obsolete.gpu.cu.convolution"]], "card_info() (in module neurotools.obsolete.gpu.cu.device)": [[39, "neurotools.obsolete.gpu.cu.device.card_info"], [226, "neurotools.obsolete.gpu.cu.device.card_info"]], "estimateblocks() (in module neurotools.obsolete.gpu.cu.device)": [[39, "neurotools.obsolete.gpu.cu.device.estimateBlocks"], [226, "neurotools.obsolete.gpu.cu.device.estimateBlocks"]], "estimateloop() (in module neurotools.obsolete.gpu.cu.device)": [[39, "neurotools.obsolete.gpu.cu.device.estimateLoop"], [226, "neurotools.obsolete.gpu.cu.device.estimateLoop"]], "estimatethreadsperblock() (in module neurotools.obsolete.gpu.cu.device)": [[39, "neurotools.obsolete.gpu.cu.device.estimateThreadsPerBlock"], [226, "neurotools.obsolete.gpu.cu.device.estimateThreadsPerBlock"]], "missing() (in module neurotools.obsolete.gpu.cu.device)": [[39, "neurotools.obsolete.gpu.cu.device.missing"], [226, "neurotools.obsolete.gpu.cu.device.missing"]], "neurotools.obsolete.gpu.cu.device": [[39, "module-neurotools.obsolete.gpu.cu.device"], [226, "module-neurotools.obsolete.gpu.cu.device"]], "cpu() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.cpu"], [227, "neurotools.obsolete.gpu.cu.function.cpu"]], "expsub() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.expsub"], [227, "neurotools.obsolete.gpu.cu.function.expsub"]], "ezkern() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.ezkern"], [227, "neurotools.obsolete.gpu.cu.function.ezkern"]], "format() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.format"], [227, "neurotools.obsolete.gpu.cu.function.format"]], "gpubin() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpubin"], [227, "neurotools.obsolete.gpu.cu.function.gpubin"]], "gpubinaryeq() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpubinaryeq"], [227, "neurotools.obsolete.gpu.cu.function.gpubinaryeq"]], "gpufloat() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpufloat"], [227, "neurotools.obsolete.gpu.cu.function.gpufloat"]], "gpufloatmat() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpufloatmat"], [227, "neurotools.obsolete.gpu.cu.function.gpufloatmat"]], "gpufloatred() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpufloatred"], [227, "neurotools.obsolete.gpu.cu.function.gpufloatred"]], "gpuint() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpuint"], [227, "neurotools.obsolete.gpu.cu.function.gpuint"]], "gpuintmap() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpuintmap"], [227, "neurotools.obsolete.gpu.cu.function.gpuintmap"]], "gpuintmat() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpuintmat"], [227, "neurotools.obsolete.gpu.cu.function.gpuintmat"]], "gpuintred() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpuintred"], [227, "neurotools.obsolete.gpu.cu.function.gpuintred"]], "gpumap() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpumap"], [227, "neurotools.obsolete.gpu.cu.function.gpumap"]], "gpumapeq() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpumapeq"], [227, "neurotools.obsolete.gpu.cu.function.gpumapeq"]], "gpupointer() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpupointer"], [227, "neurotools.obsolete.gpu.cu.function.gpupointer"]], "gpuscalar() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpuscalar"], [227, "neurotools.obsolete.gpu.cu.function.gpuscalar"]], "guessgputype() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.guessGPUType"], [227, "neurotools.obsolete.gpu.cu.function.guessGPUType"]], "kernel() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.kernel"], [227, "neurotools.obsolete.gpu.cu.function.kernel"]], "neurotools.obsolete.gpu.cu.function": [[40, "module-neurotools.obsolete.gpu.cu.function"], [227, "module-neurotools.obsolete.gpu.cu.function"]], "printkernel() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.printKernel"], [227, "neurotools.obsolete.gpu.cu.function.printKernel"]], "togputype() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.toGPUType"], [227, "neurotools.obsolete.gpu.cu.function.toGPUType"]], "gpuhill() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpuhill"], [228, "neurotools.obsolete.gpu.cu.gpufun.gpuhill"]], "gpulcomb() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpulcomb"], [228, "neurotools.obsolete.gpu.cu.gpufun.gpulcomb"]], "gpulogpdf() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpulogpdf"], [228, "neurotools.obsolete.gpu.cu.gpufun.gpulogpdf"]], "gpumean() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpumean"], [228, "neurotools.obsolete.gpu.cu.gpufun.gpumean"]], "gpunpdf() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpunpdf"], [228, "neurotools.obsolete.gpu.cu.gpufun.gpunpdf"]], "gpurandexp() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpurandexp"], [228, "neurotools.obsolete.gpu.cu.gpufun.gpurandexp"]], "gpurandf() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpurandf"], [228, "neurotools.obsolete.gpu.cu.gpufun.gpurandf"]], "gpuuniform() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpuuniform"], [228, "neurotools.obsolete.gpu.cu.gpufun.gpuuniform"]], "neurotools.obsolete.gpu.cu.gpufun": [[41, "module-neurotools.obsolete.gpu.cu.gpufun"], [228, "module-neurotools.obsolete.gpu.cu.gpufun"]], "connect_gaussian() (in module neurotools.obsolete.gpu.cu.graph)": [[42, "neurotools.obsolete.gpu.cu.graph.connect_gaussian"], [229, "neurotools.obsolete.gpu.cu.graph.connect_gaussian"]], "neurotools.obsolete.gpu.cu.graph": [[42, "module-neurotools.obsolete.gpu.cu.graph"], [229, "module-neurotools.obsolete.gpu.cu.graph"]], "random_point_sheet() (in module neurotools.obsolete.gpu.cu.graph)": [[42, "neurotools.obsolete.gpu.cu.graph.random_point_sheet"], [229, "neurotools.obsolete.gpu.cu.graph.random_point_sheet"]], "spherepoints() (in module neurotools.obsolete.gpu.cu.graph)": [[42, "neurotools.obsolete.gpu.cu.graph.spherepoints"], [229, "neurotools.obsolete.gpu.cu.graph.spherepoints"]], "uniform_point_sheet() (in module neurotools.obsolete.gpu.cu.graph)": [[42, "neurotools.obsolete.gpu.cu.graph.uniform_point_sheet"], [229, "neurotools.obsolete.gpu.cu.graph.uniform_point_sheet"]], "gpuand() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpuand"], [230, "neurotools.obsolete.gpu.cu.logic.gpuand"]], "gpueq() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpueq"], [230, "neurotools.obsolete.gpu.cu.logic.gpueq"]], "gpugt() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpugt"], [230, "neurotools.obsolete.gpu.cu.logic.gpugt"]], "gpugteq() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpugteq"], [230, "neurotools.obsolete.gpu.cu.logic.gpugteq"]], "gpuhzero() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpuhzero"], [230, "neurotools.obsolete.gpu.cu.logic.gpuhzero"]], "gpult() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpult"], [230, "neurotools.obsolete.gpu.cu.logic.gpult"]], "gpulteq() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpulteq"], [230, "neurotools.obsolete.gpu.cu.logic.gpulteq"]], "gpuneq() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpuneq"], [230, "neurotools.obsolete.gpu.cu.logic.gpuneq"]], "gpunor() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpunor"], [230, "neurotools.obsolete.gpu.cu.logic.gpunor"]], "gpunot() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpunot"], [230, "neurotools.obsolete.gpu.cu.logic.gpunot"]], "gpurange() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpurange"], [230, "neurotools.obsolete.gpu.cu.logic.gpurange"]], "gpuyes() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpuyes"], [230, "neurotools.obsolete.gpu.cu.logic.gpuyes"]], "neurotools.obsolete.gpu.cu.logic": [[43, "module-neurotools.obsolete.gpu.cu.logic"], [230, "module-neurotools.obsolete.gpu.cu.logic"]], "elementwisekernel() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.ElementwiseKernel"], [232, "neurotools.obsolete.gpu.cu.plot.ElementwiseKernel"]], "gpubarlinedata() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.gpubarlinedata"], [232, "neurotools.obsolete.gpu.cu.plot.gpubarlinedata"]], "gpuhistogram() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.gpuhistogram"], [232, "neurotools.obsolete.gpu.cu.plot.gpuhistogram"]], "missing() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.missing"], [232, "neurotools.obsolete.gpu.cu.plot.missing"]], "neurotools.obsolete.gpu.cu.plot": [[45, "module-neurotools.obsolete.gpu.cu.plot"], [232, "module-neurotools.obsolete.gpu.cu.plot"]], "sebarline() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.sebarline"], [232, "neurotools.obsolete.gpu.cu.plot.sebarline"]], "sebarline2() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.sebarline2"], [232, "neurotools.obsolete.gpu.cu.plot.sebarline2"]], "frameeater() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.FrameEater"], [233, "neurotools.obsolete.gpu.cu.sequence.FrameEater"]], "gpuautometric() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.GPUAutometric"], [233, "neurotools.obsolete.gpu.cu.sequence.GPUAutometric"]], "gpudotmetric() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.GPUDotmetric"], [233, "neurotools.obsolete.gpu.cu.sequence.GPUDotmetric"]], "gpumagmetric() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.GPUMagmetric"], [233, "neurotools.obsolete.gpu.cu.sequence.GPUMagmetric"]], "gpupointautodistance() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.GPUPointAutoDistance"], [233, "neurotools.obsolete.gpu.cu.sequence.GPUPointAutoDistance"]], "gpusequenceautodetect() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.GPUSequenceAutoDetect"], [233, "neurotools.obsolete.gpu.cu.sequence.GPUSequenceAutoDetect"]], "deltamag() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.deltamag"], [233, "neurotools.obsolete.gpu.cu.sequence.deltamag"]], "fitgaussbimodal() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.fitgaussbimodal"], [233, "neurotools.obsolete.gpu.cu.sequence.fitgaussbimodal"]], "fitgausstrimodal() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.fitgausstrimodal"], [233, "neurotools.obsolete.gpu.cu.sequence.fitgausstrimodal"]], "gpuderivative() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpuderivative"], [233, "neurotools.obsolete.gpu.cu.sequence.gpuderivative"]], "gpulognpdf() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpulognpdf"], [233, "neurotools.obsolete.gpu.cu.sequence.gpulognpdf"]], "gpunpdf() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpunpdf"], [233, "neurotools.obsolete.gpu.cu.sequence.gpunpdf"]], "gpusmooth() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpusmooth"], [233, "neurotools.obsolete.gpu.cu.sequence.gpusmooth"]], "gpusubsetgfit() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpusubsetgfit"], [233, "neurotools.obsolete.gpu.cu.sequence.gpusubsetgfit"]], "gpusubsetmean() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpusubsetmean"], [233, "neurotools.obsolete.gpu.cu.sequence.gpusubsetmean"]], "gputhing() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gputhing"], [233, "neurotools.obsolete.gpu.cu.sequence.gputhing"]], "mulmag() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.mulmag"], [233, "neurotools.obsolete.gpu.cu.sequence.mulmag"]], "neurotools.obsolete.gpu.cu.sequence": [[46, "module-neurotools.obsolete.gpu.cu.sequence"], [233, "module-neurotools.obsolete.gpu.cu.sequence"]], "summag() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.summag"], [233, "neurotools.obsolete.gpu.cu.sequence.summag"]], "neurotools.obsolete.models": [[48, "module-neurotools.obsolete.models"], [235, "module-neurotools.obsolete.models"]], "du_izh() (in module neurotools.obsolete.models.izh)": [[49, "neurotools.obsolete.models.izh.du_izh"], [236, "neurotools.obsolete.models.izh.du_izh"]], "dv_izh() (in module neurotools.obsolete.models.izh)": [[49, "neurotools.obsolete.models.izh.dv_izh"], [236, "neurotools.obsolete.models.izh.dv_izh"]], "neurotools.obsolete.models.izh": [[49, "module-neurotools.obsolete.models.izh"], [236, "module-neurotools.obsolete.models.izh"]], "sim_izh() (in module neurotools.obsolete.models.izh)": [[49, "neurotools.obsolete.models.izh.sim_izh"], [236, "neurotools.obsolete.models.izh.sim_izh"]], "update_izh() (in module neurotools.obsolete.models.izh)": [[49, "neurotools.obsolete.models.izh.update_izh"], [236, "neurotools.obsolete.models.izh.update_izh"]], "euler_integrate_lif() (in module neurotools.obsolete.models.lif)": [[50, "neurotools.obsolete.models.lif.euler_integrate_LIF"], [237, "neurotools.obsolete.models.lif.euler_integrate_LIF"]], "exponential_integrate_lif() (in module neurotools.obsolete.models.lif)": [[50, "neurotools.obsolete.models.lif.exponential_integrate_LIF"], [237, "neurotools.obsolete.models.lif.exponential_integrate_LIF"]], "exponential_moving_average() (in module neurotools.obsolete.models.lif)": [[50, "neurotools.obsolete.models.lif.exponential_moving_average"], [237, "neurotools.obsolete.models.lif.exponential_moving_average"]], "neurotools.obsolete.models.lif": [[50, "module-neurotools.obsolete.models.lif"], [237, "module-neurotools.obsolete.models.lif"]], "amp() (in module neurotools.signal)": [[59, "neurotools.signal.amp"], [247, "neurotools.signal.amp"]], "ang() (in module neurotools.signal)": [[59, "neurotools.signal.ang"], [247, "neurotools.signal.ang"]], "arenear() (in module neurotools.signal)": [[59, "neurotools.signal.arenear"], [247, "neurotools.signal.arenear"]], "aresafe() (in module neurotools.signal)": [[59, "neurotools.signal.aresafe"], [247, "neurotools.signal.aresafe"]], "autocorrelation() (in module neurotools.signal)": [[59, "neurotools.signal.autocorrelation"], [247, "neurotools.signal.autocorrelation"]], "band_stop_line_noise_removal() (in module neurotools.signal)": [[59, "neurotools.signal.band_stop_line_noise_removal"], [247, "neurotools.signal.band_stop_line_noise_removal"]], "bandpass_filter() (in module neurotools.signal)": [[59, "neurotools.signal.bandpass_filter"], [247, "neurotools.signal.bandpass_filter"]], "box_filter() (in module neurotools.signal)": [[59, "neurotools.signal.box_filter"], [247, "neurotools.signal.box_filter"]], "circular_cosine_basis() (in module neurotools.signal)": [[59, "neurotools.signal.circular_cosine_basis"], [247, "neurotools.signal.circular_cosine_basis"]], "circular_gaussian_smooth() (in module neurotools.signal)": [[59, "neurotools.signal.circular_gaussian_smooth"], [247, "neurotools.signal.circular_gaussian_smooth"]], "circular_gaussian_smooth_2d() (in module neurotools.signal)": [[59, "neurotools.signal.circular_gaussian_smooth_2D"], [247, "neurotools.signal.circular_gaussian_smooth_2D"]], "complex_to_nan() (in module neurotools.signal)": [[59, "neurotools.signal.complex_to_nan"], [247, "neurotools.signal.complex_to_nan"]], "deltaovermean() (in module neurotools.signal)": [[59, "neurotools.signal.deltaovermean"], [247, "neurotools.signal.deltaovermean"]], "drop_nonfinite() (in module neurotools.signal)": [[59, "neurotools.signal.drop_nonfinite"], [247, "neurotools.signal.drop_nonfinite"]], "estimate_padding() (in module neurotools.signal)": [[59, "neurotools.signal.estimate_padding"], [247, "neurotools.signal.estimate_padding"]], "fdiff() (in module neurotools.signal)": [[59, "neurotools.signal.fdiff"], [247, "neurotools.signal.fdiff"]], "fftacorr1d() (in module neurotools.signal)": [[59, "neurotools.signal.fftacorr1d"], [247, "neurotools.signal.fftacorr1d"]], "fftsta() (in module neurotools.signal)": [[59, "neurotools.signal.fftsta"], [247, "neurotools.signal.fftsta"]], "fm_mod() (in module neurotools.signal)": [[59, "neurotools.signal.fm_mod"], [247, "neurotools.signal.fm_mod"]], "fudge_derivative() (in module neurotools.signal)": [[59, "neurotools.signal.fudge_derivative"], [247, "neurotools.signal.fudge_derivative"]], "gaussian_kernel() (in module neurotools.signal)": [[59, "neurotools.signal.gaussian_kernel"], [247, "neurotools.signal.gaussian_kernel"]], "gaussian_smooth() (in module neurotools.signal)": [[59, "neurotools.signal.gaussian_smooth"], [247, "neurotools.signal.gaussian_smooth"]], "gaussianize() (in module neurotools.signal)": [[59, "neurotools.signal.gaussianize"], [247, "neurotools.signal.gaussianize"]], "geometric_window() (in module neurotools.signal)": [[59, "neurotools.signal.geometric_window"], [247, "neurotools.signal.geometric_window"]], "get_edges() (in module neurotools.signal)": [[59, "neurotools.signal.get_edges"], [247, "neurotools.signal.get_edges"]], "get_snips() (in module neurotools.signal)": [[59, "neurotools.signal.get_snips"], [247, "neurotools.signal.get_snips"]], "get_triggered_stats() (in module neurotools.signal)": [[59, "neurotools.signal.get_triggered_stats"], [247, "neurotools.signal.get_triggered_stats"]], "highpass_filter() (in module neurotools.signal)": [[59, "neurotools.signal.highpass_filter"], [247, "neurotools.signal.highpass_filter"]], "ifreq() (in module neurotools.signal)": [[59, "neurotools.signal.ifreq"], [247, "neurotools.signal.ifreq"]], "interpmax1d() (in module neurotools.signal)": [[59, "neurotools.signal.interpmax1d"], [247, "neurotools.signal.interpmax1d"]], "interpolate_nan() (in module neurotools.signal)": [[59, "neurotools.signal.interpolate_NaN"], [247, "neurotools.signal.interpolate_NaN"]], "interpolate_nan_quadratic() (in module neurotools.signal)": [[59, "neurotools.signal.interpolate_NaN_quadratic"], [247, "neurotools.signal.interpolate_NaN_quadratic"]], "invert_uniformize() (in module neurotools.signal)": [[59, "neurotools.signal.invert_uniformize"], [247, "neurotools.signal.invert_uniformize"]], "killspikes() (in module neurotools.signal)": [[59, "neurotools.signal.killSpikes"], [247, "neurotools.signal.killSpikes"]], "linear_cosine_basis() (in module neurotools.signal)": [[59, "neurotools.signal.linear_cosine_basis"], [247, "neurotools.signal.linear_cosine_basis"]], "linfilter() (in module neurotools.signal)": [[59, "neurotools.signal.linfilter"], [247, "neurotools.signal.linfilter"]], "local_maxima() (in module neurotools.signal)": [[59, "neurotools.signal.local_maxima"], [247, "neurotools.signal.local_maxima"]], "local_minima() (in module neurotools.signal)": [[59, "neurotools.signal.local_minima"], [247, "neurotools.signal.local_minima"]], "local_peak_within() (in module neurotools.signal)": [[59, "neurotools.signal.local_peak_within"], [247, "neurotools.signal.local_peak_within"]], "lowpass_filter() (in module neurotools.signal)": [[59, "neurotools.signal.lowpass_filter"], [247, "neurotools.signal.lowpass_filter"]], "make_lagged() (in module neurotools.signal)": [[59, "neurotools.signal.make_lagged"], [247, "neurotools.signal.make_lagged"]], "make_rebroadcast_slice() (in module neurotools.signal)": [[59, "neurotools.signal.make_rebroadcast_slice"], [247, "neurotools.signal.make_rebroadcast_slice"]], "mean_block() (in module neurotools.signal)": [[59, "neurotools.signal.mean_block"], [247, "neurotools.signal.mean_block"]], "median_block() (in module neurotools.signal)": [[59, "neurotools.signal.median_block"], [247, "neurotools.signal.median_block"]], "median_filter() (in module neurotools.signal)": [[59, "neurotools.signal.median_filter"], [247, "neurotools.signal.median_filter"]], "ndargmax() (in module neurotools.signal)": [[59, "neurotools.signal.ndargmax"], [247, "neurotools.signal.ndargmax"]], "neurotools.signal": [[59, "module-neurotools.signal"], [247, "module-neurotools.signal"]], "nice_interp() (in module neurotools.signal)": [[59, "neurotools.signal.nice_interp"], [247, "neurotools.signal.nice_interp"]], "nonnegative_bandpass_filter() (in module neurotools.signal)": [[59, "neurotools.signal.nonnegative_bandpass_filter"], [247, "neurotools.signal.nonnegative_bandpass_filter"]], "pad_signal() (in module neurotools.signal)": [[59, "neurotools.signal.pad_signal"], [247, "neurotools.signal.pad_signal"]], "padin() (in module neurotools.signal)": [[59, "neurotools.signal.padin"], [247, "neurotools.signal.padin"]], "padout() (in module neurotools.signal)": [[59, "neurotools.signal.padout"], [247, "neurotools.signal.padout"]], "pdiff() (in module neurotools.signal)": [[59, "neurotools.signal.pdiff"], [247, "neurotools.signal.pdiff"]], "peak_within() (in module neurotools.signal)": [[59, "neurotools.signal.peak_within"], [247, "neurotools.signal.peak_within"]], "percentile_filter() (in module neurotools.signal)": [[59, "neurotools.signal.percentile_filter"], [247, "neurotools.signal.percentile_filter"]], "pghilbert() (in module neurotools.signal)": [[59, "neurotools.signal.pghilbert"], [247, "neurotools.signal.pghilbert"]], "phase_randomize() (in module neurotools.signal)": [[59, "neurotools.signal.phase_randomize"], [247, "neurotools.signal.phase_randomize"]], "phase_randomize_from_amplitudes() (in module neurotools.signal)": [[59, "neurotools.signal.phase_randomize_from_amplitudes"], [247, "neurotools.signal.phase_randomize_from_amplitudes"]], "phase_rotate() (in module neurotools.signal)": [[59, "neurotools.signal.phase_rotate"], [247, "neurotools.signal.phase_rotate"]], "pieces() (in module neurotools.signal)": [[59, "neurotools.signal.pieces"], [247, "neurotools.signal.pieces"]], "randband() (in module neurotools.signal)": [[59, "neurotools.signal.randband"], [247, "neurotools.signal.randband"]], "remove_gaps() (in module neurotools.signal)": [[59, "neurotools.signal.remove_gaps"], [247, "neurotools.signal.remove_gaps"]], "remove_short() (in module neurotools.signal)": [[59, "neurotools.signal.remove_short"], [247, "neurotools.signal.remove_short"]], "rewrap() (in module neurotools.signal)": [[59, "neurotools.signal.rewrap"], [247, "neurotools.signal.rewrap"]], "set_edges() (in module neurotools.signal)": [[59, "neurotools.signal.set_edges"], [247, "neurotools.signal.set_edges"]], "sign_preserving_amplitude_demodulate() (in module neurotools.signal)": [[59, "neurotools.signal.sign_preserving_amplitude_demodulate"], [247, "neurotools.signal.sign_preserving_amplitude_demodulate"]], "spaced_derivative() (in module neurotools.signal)": [[59, "neurotools.signal.spaced_derivative"], [247, "neurotools.signal.spaced_derivative"]], "span() (in module neurotools.signal)": [[59, "neurotools.signal.span"], [247, "neurotools.signal.span"]], "split_into_groups() (in module neurotools.signal)": [[59, "neurotools.signal.split_into_groups"], [247, "neurotools.signal.split_into_groups"]], "stats_block() (in module neurotools.signal)": [[59, "neurotools.signal.stats_block"], [247, "neurotools.signal.stats_block"]], "topercentiles() (in module neurotools.signal)": [[59, "neurotools.signal.topercentiles"], [247, "neurotools.signal.topercentiles"]], "triggered_average() (in module neurotools.signal)": [[59, "neurotools.signal.triggered_average"], [247, "neurotools.signal.triggered_average"]], "uniformize() (in module neurotools.signal)": [[59, "neurotools.signal.uniformize"], [247, "neurotools.signal.uniformize"]], "unit_length() (in module neurotools.signal)": [[59, "neurotools.signal.unit_length"], [247, "neurotools.signal.unit_length"]], "unitscale() (in module neurotools.signal)": [[59, "neurotools.signal.unitscale"], [247, "neurotools.signal.unitscale"]], "unwrap() (in module neurotools.signal)": [[59, "neurotools.signal.unwrap"], [247, "neurotools.signal.unwrap"]], "upsample() (in module neurotools.signal)": [[59, "neurotools.signal.upsample"], [247, "neurotools.signal.upsample"]], "var_block() (in module neurotools.signal)": [[59, "neurotools.signal.var_block"], [247, "neurotools.signal.var_block"]], "variance_filter() (in module neurotools.signal)": [[59, "neurotools.signal.variance_filter"], [247, "neurotools.signal.variance_filter"]], "virtual_reference_line_noise_removal() (in module neurotools.signal)": [[59, "neurotools.signal.virtual_reference_line_noise_removal"], [247, "neurotools.signal.virtual_reference_line_noise_removal"]], "zeromean() (in module neurotools.signal)": [[59, "neurotools.signal.zeromean"], [247, "neurotools.signal.zeromean"]], "zgrid() (in module neurotools.signal)": [[59, "neurotools.signal.zgrid"], [247, "neurotools.signal.zgrid"]], "zscore() (in module neurotools.signal)": [[59, "neurotools.signal.zscore"], [247, "neurotools.signal.zscore"]], "convolve2dct() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.convolve2dct"], [249, "neurotools.signal.conv.convolve2dct"]], "gausskern1d() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.gausskern1d"], [249, "neurotools.signal.conv.gausskern1d"]], "gausskern2d() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.gausskern2d"], [249, "neurotools.signal.conv.gausskern2d"]], "mirror2d() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.mirror2d"], [249, "neurotools.signal.conv.mirror2d"]], "neurotools.signal.conv": [[61, "module-neurotools.signal.conv"], [249, "module-neurotools.signal.conv"]], "reflect2d() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.reflect2D"], [249, "neurotools.signal.conv.reflect2D"]], "reflect2d_1() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.reflect2D_1"], [249, "neurotools.signal.conv.reflect2D_1"]], "separable2d() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.separable2d"], [249, "neurotools.signal.conv.separable2d"]], "fft_cwt() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.fft_cwt"], [251, "neurotools.signal.morlet.fft_cwt"]], "fft_cwt_transposed() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.fft_cwt_transposed"], [251, "neurotools.signal.morlet.fft_cwt_transposed"]], "fft_cwt_transposed_logspaced() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.fft_cwt_transposed_logspaced"], [251, "neurotools.signal.morlet.fft_cwt_transposed_logspaced"]], "logfreqs() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.logfreqs"], [251, "neurotools.signal.morlet.logfreqs"]], "neurotools.signal.morlet": [[62, "module-neurotools.signal.morlet"], [251, "module-neurotools.signal.morlet"]], "normalized_morlet() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.normalized_morlet"], [251, "neurotools.signal.morlet.normalized_morlet"]], "population_synchrony_spectrum() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.population_synchrony_spectrum"], [251, "neurotools.signal.morlet.population_synchrony_spectrum"]], "prepare_wavelet_fft_basis() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.prepare_wavelet_fft_basis"], [251, "neurotools.signal.morlet.prepare_wavelet_fft_basis"]], "prepare_wavelet_fft_basis_logspace() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.prepare_wavelet_fft_basis_logspace"], [251, "neurotools.signal.morlet.prepare_wavelet_fft_basis_logspace"]], "dpss_cached() (in module neurotools.signal.multitaper)": [[63, "neurotools.signal.multitaper.dpss_cached"], [253, "neurotools.signal.multitaper.dpss_cached"]], "multitaper_population_eigencoherence() (in module neurotools.signal.multitaper)": [[63, "neurotools.signal.multitaper.multitaper_population_eigencoherence"], [253, "neurotools.signal.multitaper.multitaper_population_eigencoherence"]], "multitaper_spectrum() (in module neurotools.signal.multitaper)": [[63, "neurotools.signal.multitaper.multitaper_spectrum"], [253, "neurotools.signal.multitaper.multitaper_spectrum"]], "multitaper_squared_spectrum() (in module neurotools.signal.multitaper)": [[63, "neurotools.signal.multitaper.multitaper_squared_spectrum"], [253, "neurotools.signal.multitaper.multitaper_squared_spectrum"]], "neurotools.signal.multitaper": [[63, "module-neurotools.signal.multitaper"], [253, "module-neurotools.signal.multitaper"]], "sliding_multitaper_spectrum() (in module neurotools.signal.multitaper)": [[63, "neurotools.signal.multitaper.sliding_multitaper_spectrum"], [253, "neurotools.signal.multitaper.sliding_multitaper_spectrum"]], "discard_spikes_closer_than_delta() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.discard_spikes_closer_than_delta"], [254, "neurotools.signal.ppc.discard_spikes_closer_than_delta"]], "estimate_bias_in_uncorrected_ppc() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.estimate_bias_in_uncorrected_ppc"], [254, "neurotools.signal.ppc.estimate_bias_in_uncorrected_ppc"]], "fftppc() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.fftppc"], [254, "neurotools.signal.ppc.fftppc"]], "fftppc_biased() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.fftppc_biased"], [254, "neurotools.signal.ppc.fftppc_biased"]], "fftppc_biased_multitaper() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.fftppc_biased_multitaper"], [254, "neurotools.signal.ppc.fftppc_biased_multitaper"]], "fftppc_multitaper() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.fftppc_multitaper"], [254, "neurotools.signal.ppc.fftppc_multitaper"]], "neurotools.signal.ppc": [[64, "module-neurotools.signal.ppc"], [254, "module-neurotools.signal.ppc"]], "pairwise_phase_consistancy() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.pairwise_phase_consistancy"], [254, "neurotools.signal.ppc.pairwise_phase_consistancy"]], "phase_randomize() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.phase_randomize"], [254, "neurotools.signal.ppc.phase_randomize"]], "phase_randomized_bias_correction() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.phase_randomized_bias_correction"], [254, "neurotools.signal.ppc.phase_randomized_bias_correction"]], "ppc_chance_level() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.ppc_chance_level"], [254, "neurotools.signal.ppc.ppc_chance_level"]], "ppc_phase_randomize_chance_level_sample() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.ppc_phase_randomize_chance_level_sample"], [254, "neurotools.signal.ppc.ppc_phase_randomize_chance_level_sample"]], "sgkern() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGKern"], [256, "neurotools.signal.savitskygolay.SGKern"]], "sgkerna() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGKernA"], [256, "neurotools.signal.savitskygolay.SGKernA"]], "sgkernj() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGKernJ"], [256, "neurotools.signal.savitskygolay.SGKernJ"]], "sgkernv() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGKernV"], [256, "neurotools.signal.savitskygolay.SGKernV"]], "sgord() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGOrd"], [256, "neurotools.signal.savitskygolay.SGOrd"]], "sgaccelerate() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGaccelerate"], [256, "neurotools.signal.savitskygolay.SGaccelerate"]], "sgdifferentiate() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGdifferentiate"], [256, "neurotools.signal.savitskygolay.SGdifferentiate"]], "sgfilt() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGfilt"], [256, "neurotools.signal.savitskygolay.SGfilt"]], "sgfilta() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGfiltA"], [256, "neurotools.signal.savitskygolay.SGfiltA"]], "sgfiltj() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGfiltJ"], [256, "neurotools.signal.savitskygolay.SGfiltJ"]], "sgfiltv() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGfiltV"], [256, "neurotools.signal.savitskygolay.SGfiltV"]], "sgjerk() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGjerk"], [256, "neurotools.signal.savitskygolay.SGjerk"]], "sgsmooth() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGsmooth"], [256, "neurotools.signal.savitskygolay.SGsmooth"]], "neurotools.signal.savitskygolay": [[65, "module-neurotools.signal.savitskygolay"], [256, "module-neurotools.signal.savitskygolay"]], "neurotools.signal.sde": [[66, "module-neurotools.signal.sde"], [257, "module-neurotools.signal.sde"]], "sample_ou_process() (in module neurotools.signal.sde)": [[66, "neurotools.signal.sde.sample_ou_process"], [257, "neurotools.signal.sde.sample_ou_process"]], "sample_wiener_process() (in module neurotools.signal.sde)": [[66, "neurotools.signal.sde.sample_wiener_process"], [257, "neurotools.signal.sde.sample_wiener_process"]], "brute_force_local_2d_maxima() (in module neurotools.spatial)": [[67, "neurotools.spatial.brute_force_local_2d_maxima"], [259, "neurotools.spatial.brute_force_local_2d_maxima"]], "neurotools.spatial": [[67, "module-neurotools.spatial"], [259, "module-neurotools.spatial"]], "array_average_amplitude() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_average_amplitude"], [260, "neurotools.spatial.array.array_average_amplitude"]], "array_count_centers() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_count_centers"], [260, "neurotools.spatial.array.array_count_centers"]], "array_count_critical() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_count_critical"], [260, "neurotools.spatial.array.array_count_critical"]], "array_kuramoto() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_kuramoto"], [260, "neurotools.spatial.array.array_kuramoto"]], "array_kuramoto_pgd() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_kuramoto_pgd"], [260, "neurotools.spatial.array.array_kuramoto_pgd"]], "array_kuramoto_pgd_standard_deviation() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_kuramoto_pgd_standard_deviation"], [260, "neurotools.spatial.array.array_kuramoto_pgd_standard_deviation"]], "array_kuramoto_standard_deviation() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_kuramoto_standard_deviation"], [260, "neurotools.spatial.array.array_kuramoto_standard_deviation"]], "array_phase_gradient() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phase_gradient"], [260, "neurotools.spatial.array.array_phase_gradient"]], "array_phasegradient_local() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phasegradient_local"], [260, "neurotools.spatial.array.array_phasegradient_local"]], "array_phasegradient_magnitude_cv() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phasegradient_magnitude_cv"], [260, "neurotools.spatial.array.array_phasegradient_magnitude_cv"]], "array_phasegradient_magnitude_sigma() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phasegradient_magnitude_sigma"], [260, "neurotools.spatial.array.array_phasegradient_magnitude_sigma"]], "array_phasegradient_pgd_threshold() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phasegradient_pgd_threshold"], [260, "neurotools.spatial.array.array_phasegradient_pgd_threshold"]], "array_phasegradient_planar() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phasegradient_planar"], [260, "neurotools.spatial.array.array_phasegradient_planar"]], "array_speed_local() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_speed_local"], [260, "neurotools.spatial.array.array_speed_local"]], "array_speed_pgd_threshold() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_speed_pgd_threshold"], [260, "neurotools.spatial.array.array_speed_pgd_threshold"]], "array_synchrony() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_synchrony"], [260, "neurotools.spatial.array.array_synchrony"]], "array_synchrony_pgd() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_synchrony_pgd"], [260, "neurotools.spatial.array.array_synchrony_pgd"]], "array_synchrony_pgd_standard_deviation() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_synchrony_pgd_standard_deviation"], [260, "neurotools.spatial.array.array_synchrony_pgd_standard_deviation"]], "array_synchrony_standard_deviation() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_synchrony_standard_deviation"], [260, "neurotools.spatial.array.array_synchrony_standard_deviation"]], "array_wavelength_local() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_wavelength_local"], [260, "neurotools.spatial.array.array_wavelength_local"]], "array_wavelength_local_pgd_threshold() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_wavelength_local_pgd_threshold"], [260, "neurotools.spatial.array.array_wavelength_local_pgd_threshold"]], "array_wavelength_pgd_threshold() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_wavelength_pgd_threshold"], [260, "neurotools.spatial.array.array_wavelength_pgd_threshold"]], "array_wavelength_planar() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_wavelength_planar"], [260, "neurotools.spatial.array.array_wavelength_planar"]], "neurotools.spatial.array": [[68, "module-neurotools.spatial.array"], [260, "module-neurotools.spatial.array"]], "pack_array_data() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.pack_array_data"], [260, "neurotools.spatial.array.pack_array_data"]], "trim_array() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.trim_array"], [260, "neurotools.spatial.array.trim_array"]], "trim_array_as_if() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.trim_array_as_if"], [260, "neurotools.spatial.array.trim_array_as_if"]], "dct_cut() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.dct_cut"], [261, "neurotools.spatial.dct.dct_cut"]], "dct_cut_antialias() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.dct_cut_antialias"], [261, "neurotools.spatial.dct.dct_cut_antialias"]], "dct_cut_downsampled() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.dct_cut_downsampled"], [261, "neurotools.spatial.dct.dct_cut_downsampled"]], "dct_upsample() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.dct_upsample"], [261, "neurotools.spatial.dct.dct_upsample"]], "dct_upsample_notrim() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.dct_upsample_notrim"], [261, "neurotools.spatial.dct.dct_upsample_notrim"]], "get_mask() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.get_mask"], [261, "neurotools.spatial.dct.get_mask"]], "get_mask_antialiased() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.get_mask_antialiased"], [261, "neurotools.spatial.dct.get_mask_antialiased"]], "iterated_upsample() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.iterated_upsample"], [261, "neurotools.spatial.dct.iterated_upsample"]], "neurotools.spatial.dct": [[69, "module-neurotools.spatial.dct"], [261, "module-neurotools.spatial.dct"]], "outer_complex() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.outer_complex"], [261, "neurotools.spatial.dct.outer_complex"]], "distance_angular_deviation() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.distance_angular_deviation"], [262, "neurotools.spatial.distance.distance_angular_deviation"]], "get_average_synchrony_length_constant_parallel() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.get_average_synchrony_length_constant_parallel"], [262, "neurotools.spatial.distance.get_average_synchrony_length_constant_parallel"]], "get_averaged_angular_distance() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.get_averaged_angular_distance"], [262, "neurotools.spatial.distance.get_averaged_angular_distance"]], "get_length_constant_trial() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.get_length_constant_trial"], [262, "neurotools.spatial.distance.get_length_constant_trial"]], "get_pair_distance() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.get_pair_distance"], [262, "neurotools.spatial.distance.get_pair_distance"]], "neurotools.spatial.distance": [[70, "module-neurotools.spatial.distance"], [262, "module-neurotools.spatial.distance"]], "synchrony_length_constant_areas_summary() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.synchrony_length_constant_areas_summary"], [262, "neurotools.spatial.distance.synchrony_length_constant_areas_summary"]], "coalesce() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.coalesce"], [263, "neurotools.spatial.fftzeros.coalesce"]], "coalesce_points() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.coalesce_points"], [263, "neurotools.spatial.fftzeros.coalesce_points"]], "cut_array_data() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.cut_array_data"], [263, "neurotools.spatial.fftzeros.cut_array_data"]], "dphidx() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.dPhidx"], [263, "neurotools.spatial.fftzeros.dPhidx"]], "dphidy() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.dPhidy"], [263, "neurotools.spatial.fftzeros.dPhidy"]], "find_critical_points() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.find_critical_points"], [263, "neurotools.spatial.fftzeros.find_critical_points"]], "find_critical_potential_points() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.find_critical_potential_points"], [263, "neurotools.spatial.fftzeros.find_critical_potential_points"]], "get_critical_spectra() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.get_critical_spectra"], [263, "neurotools.spatial.fftzeros.get_critical_spectra"]], "get_phase_gradient_as_complex() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.get_phase_gradient_as_complex"], [263, "neurotools.spatial.fftzeros.get_phase_gradient_as_complex"]], "getp() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.getp"], [263, "neurotools.spatial.fftzeros.getp"]], "getpeaks2d() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.getpeaks2d"], [263, "neurotools.spatial.fftzeros.getpeaks2d"]], "grad() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.grad"], [263, "neurotools.spatial.fftzeros.grad"]], "mirror2d() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.mirror2D"], [263, "neurotools.spatial.fftzeros.mirror2D"]], "neurotools.spatial.fftzeros": [[71, "module-neurotools.spatial.fftzeros"], [263, "module-neurotools.spatial.fftzeros"]], "plot_critical_points() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.plot_critical_points"], [263, "neurotools.spatial.fftzeros.plot_critical_points"]], "plot_critical_spectra() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.plot_critical_spectra"], [263, "neurotools.spatial.fftzeros.plot_critical_spectra"]], "plot_phase_direction() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.plot_phase_direction"], [263, "neurotools.spatial.fftzeros.plot_phase_direction"]], "plot_phase_gradient() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.plot_phase_gradient"], [263, "neurotools.spatial.fftzeros.plot_phase_gradient"]], "quickgrad() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.quickgrad"], [263, "neurotools.spatial.fftzeros.quickgrad"]], "absorbing_gaussian() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.absorbing_gaussian"], [265, "neurotools.spatial.kernels.absorbing_gaussian"]], "absorbing_laplacian() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.absorbing_laplacian"], [265, "neurotools.spatial.kernels.absorbing_laplacian"]], "continuum_kernel() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.continuum_kernel"], [265, "neurotools.spatial.kernels.continuum_kernel"]], "cosine_kernel() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.cosine_kernel"], [265, "neurotools.spatial.kernels.cosine_kernel"]], "diffusion_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.diffusion_basis"], [265, "neurotools.spatial.kernels.diffusion_basis"]], "exponential_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.exponential_basis"], [265, "neurotools.spatial.kernels.exponential_basis"]], "gaussian_2d_kernel() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.gaussian_2D_kernel"], [265, "neurotools.spatial.kernels.gaussian_2D_kernel"]], "iterative_orthogonalize_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.iterative_orthogonalize_basis"], [265, "neurotools.spatial.kernels.iterative_orthogonalize_basis"]], "laplace_kernel() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.laplace_kernel"], [265, "neurotools.spatial.kernels.laplace_kernel"]], "laplacian() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.laplacian"], [265, "neurotools.spatial.kernels.laplacian"]], "log_cosine_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.log_cosine_basis"], [265, "neurotools.spatial.kernels.log_cosine_basis"]], "log_spline_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.log_spline_basis"], [265, "neurotools.spatial.kernels.log_spline_basis"]], "magickernel() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.magickernel"], [265, "neurotools.spatial.kernels.magickernel"]], "magicsharp() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.magicsharp"], [265, "neurotools.spatial.kernels.magicsharp"]], "make_cosine_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.make_cosine_basis"], [265, "neurotools.spatial.kernels.make_cosine_basis"]], "neurotools.spatial.kernels": [[73, "module-neurotools.spatial.kernels"], [265, "module-neurotools.spatial.kernels"]], "analytic_signal_coherence() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.analytic_signal_coherence"], [267, "neurotools.spatial.phase.analytic_signal_coherence"]], "neurotools.spatial.phase": [[75, "module-neurotools.spatial.phase"], [267, "module-neurotools.spatial.phase"]], "population_average_amplitude() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_average_amplitude"], [267, "neurotools.spatial.phase.population_average_amplitude"]], "population_kuramoto() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_kuramoto"], [267, "neurotools.spatial.phase.population_kuramoto"]], "population_median_frequency() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_median_frequency"], [267, "neurotools.spatial.phase.population_median_frequency"]], "population_median_phase_velocity() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_median_phase_velocity"], [267, "neurotools.spatial.phase.population_median_phase_velocity"]], "population_normalized_sliding_signal_coherence() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_normalized_sliding_signal_coherence"], [267, "neurotools.spatial.phase.population_normalized_sliding_signal_coherence"]], "population_phase_coherence() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_phase_coherence"], [267, "neurotools.spatial.phase.population_phase_coherence"]], "population_phase_relative_sliding_kuramoto() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_phase_relative_sliding_kuramoto"], [267, "neurotools.spatial.phase.population_phase_relative_sliding_kuramoto"]], "population_polar_std() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_polar_std"], [267, "neurotools.spatial.phase.population_polar_std"]], "population_signal_amplitude_dispersion() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_amplitude_dispersion"], [267, "neurotools.spatial.phase.population_signal_amplitude_dispersion"]], "population_signal_amplitude_precision() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_amplitude_precision"], [267, "neurotools.spatial.phase.population_signal_amplitude_precision"]], "population_signal_amplitude_std() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_amplitude_std"], [267, "neurotools.spatial.phase.population_signal_amplitude_std"]], "population_signal_concentration() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_concentration"], [267, "neurotools.spatial.phase.population_signal_concentration"]], "population_signal_description() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_description"], [267, "neurotools.spatial.phase.population_signal_description"]], "population_signal_dispersion() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_dispersion"], [267, "neurotools.spatial.phase.population_signal_dispersion"]], "population_signal_phase_dispersion() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_phase_dispersion"], [267, "neurotools.spatial.phase.population_signal_phase_dispersion"]], "population_signal_phase_precision() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_phase_precision"], [267, "neurotools.spatial.phase.population_signal_phase_precision"]], "population_signal_phase_std() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_phase_std"], [267, "neurotools.spatial.phase.population_signal_phase_std"]], "population_signal_precision() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_precision"], [267, "neurotools.spatial.phase.population_signal_precision"]], "population_sliding_signal_coherence() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_sliding_signal_coherence"], [267, "neurotools.spatial.phase.population_sliding_signal_coherence"]], "population_synchrony() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_synchrony"], [267, "neurotools.spatial.phase.population_synchrony"]], "population_synchrony_linear() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_synchrony_linear"], [267, "neurotools.spatial.phase.population_synchrony_linear"]], "sliding_population_signal_coherence() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.sliding_population_signal_coherence"], [267, "neurotools.spatial.phase.sliding_population_signal_coherence"]], "c2p() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.c2p"], [268, "neurotools.spatial.points.c2p"]], "closest() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.closest"], [268, "neurotools.spatial.points.closest"]], "neurotools.spatial.points": [[76, "module-neurotools.spatial.points"], [268, "module-neurotools.spatial.points"]], "p2c() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.p2c"], [268, "neurotools.spatial.points.p2c"]], "pair_neighbors() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.pair_neighbors"], [268, "neurotools.spatial.points.pair_neighbors"]], "paired_distances() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.paired_distances"], [268, "neurotools.spatial.points.paired_distances"]], "to_xypoint() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.to_xypoint"], [268, "neurotools.spatial.points.to_xypoint"]], "interp_bin() (in module neurotools.spatial.spiking)": [[77, "neurotools.spatial.spiking.interp_bin"], [270, "neurotools.spatial.spiking.interp_bin"]], "neurotools.spatial.spiking": [[77, "module-neurotools.spatial.spiking"], [270, "module-neurotools.spatial.spiking"]], "coalesce() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.coalesce"], [271, "neurotools.spatial.triangulation.coalesce"]], "edgesnearby() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.edgesNearby"], [271, "neurotools.spatial.triangulation.edgesNearby"]], "mergenearby() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.mergeNearby"], [271, "neurotools.spatial.triangulation.mergeNearby"]], "neurotools.spatial.triangulation": [[78, "module-neurotools.spatial.triangulation"], [271, "module-neurotools.spatial.triangulation"]], "plot_edges() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.plot_edges"], [271, "neurotools.spatial.triangulation.plot_edges"]], "plot_triangles() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.plot_triangles"], [271, "neurotools.spatial.triangulation.plot_triangles"]], "trianglestoedges() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.trianglesToEdges"], [271, "neurotools.spatial.triangulation.trianglesToEdges"]], "uniquerow() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.uniquerow"], [271, "neurotools.spatial.triangulation.uniquerow"]], "z2xy() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.z2xy"], [271, "neurotools.spatial.triangulation.z2xy"]], "neurotools.spikes": [[79, "module-neurotools.spikes"], [273, "module-neurotools.spikes"]], "bin_spike_times() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.bin_spike_times"], [274, "neurotools.spikes.spikes.bin_spike_times"]], "bin_spikes_raster() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.bin_spikes_raster"], [274, "neurotools.spikes.spikes.bin_spikes_raster"]], "cut_spikes() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.cut_spikes"], [274, "neurotools.spikes.spikes.cut_spikes"]], "neurotools.spikes.spikes": [[80, "module-neurotools.spikes.spikes"], [274, "module-neurotools.spikes.spikes"]], "pack_cross_correlation_matrix() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.pack_cross_correlation_matrix"], [274, "neurotools.spikes.spikes.pack_cross_correlation_matrix"]], "pp_xcorr() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.pp_xcorr"], [274, "neurotools.spikes.spikes.pp_xcorr"]], "times_to_raster() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.times_to_raster"], [274, "neurotools.spikes.spikes.times_to_raster"]], "txcorr() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.txcorr"], [274, "neurotools.spikes.spikes.txcorr"]], "getfwhm() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getFWHM"], [275, "neurotools.spikes.waveform.getFWHM"]], "getphp() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getPHP"], [275, "neurotools.spikes.waveform.getPHP"]], "getpt() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getPT"], [275, "neurotools.spikes.waveform.getPT"]], "getpthw() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getPTHW"], [275, "neurotools.spikes.waveform.getPTHW"]], "getpvt() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getPVT"], [275, "neurotools.spikes.waveform.getPVT"]], "getwahp() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getWAHP"], [275, "neurotools.spikes.waveform.getWAHP"]], "is_thin() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.is_thin"], [275, "neurotools.spikes.waveform.is_thin"]], "is_thin_pvt() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.is_thin_pvt"], [275, "neurotools.spikes.waveform.is_thin_pvt"]], "minmax() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.minmax"], [275, "neurotools.spikes.waveform.minmax"]], "neurotools.spikes.waveform": [[81, "module-neurotools.spikes.waveform"], [275, "module-neurotools.spikes.waveform"]], "normalized_waveform() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.normalized_waveform"], [275, "neurotools.spikes.waveform.normalized_waveform"]], "process() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.process"], [275, "neurotools.spikes.waveform.process"]], "realign() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.realign"], [275, "neurotools.spikes.waveform.realign"]], "description (class in neurotools.stats)": [[82, "neurotools.stats.Description"], [276, "neurotools.stats.Description"]], "add_constant() (in module neurotools.stats)": [[82, "neurotools.stats.add_constant"], [276, "neurotools.stats.add_constant"]], "auc_to_g2() (in module neurotools.stats)": [[82, "neurotools.stats.auc_to_g2"], [276, "neurotools.stats.auc_to_g2"]], "block_shuffle() (in module neurotools.stats)": [[82, "neurotools.stats.block_shuffle"], [276, "neurotools.stats.block_shuffle"]], "covariance() (in module neurotools.stats)": [[82, "neurotools.stats.covariance"], [276, "neurotools.stats.covariance"]], "crossvalidated_least_squares() (in module neurotools.stats)": [[82, "neurotools.stats.crossvalidated_least_squares"], [276, "neurotools.stats.crossvalidated_least_squares"]], "fraction_explained_deviance() (in module neurotools.stats)": [[82, "neurotools.stats.fraction_explained_deviance"], [276, "neurotools.stats.fraction_explained_deviance"]], "glmfit() (in module neurotools.stats)": [[82, "neurotools.stats.glmfit"], [276, "neurotools.stats.glmfit"]], "neurotools.stats": [[82, "module-neurotools.stats"], [276, "module-neurotools.stats"]], "nrmse() (in module neurotools.stats)": [[82, "neurotools.stats.nrmse"], [276, "neurotools.stats.nrmse"]], "outliers() (in module neurotools.stats)": [[82, "neurotools.stats.outliers"], [276, "neurotools.stats.outliers"]], "partition_data() (in module neurotools.stats)": [[82, "neurotools.stats.partition_data"], [276, "neurotools.stats.partition_data"]], "partition_data_for_crossvalidation() (in module neurotools.stats)": [[82, "neurotools.stats.partition_data_for_crossvalidation"], [276, "neurotools.stats.partition_data_for_crossvalidation"]], "partition_trials_for_crossvalidation() (in module neurotools.stats)": [[82, "neurotools.stats.partition_trials_for_crossvalidation"], [276, "neurotools.stats.partition_trials_for_crossvalidation"]], "pca() (in module neurotools.stats)": [[82, "neurotools.stats.pca"], [276, "neurotools.stats.pca"]], "polar_error() (in module neurotools.stats)": [[82, "neurotools.stats.polar_error"], [276, "neurotools.stats.polar_error"]], "print_stats() (in module neurotools.stats)": [[82, "neurotools.stats.print_stats"], [276, "neurotools.stats.print_stats"]], "reject_outliers() (in module neurotools.stats)": [[82, "neurotools.stats.reject_outliers"], [276, "neurotools.stats.reject_outliers"]], "short() (neurotools.stats.description method)": [[82, "neurotools.stats.Description.short"], [276, "neurotools.stats.Description.short"]], "trial_crossvalidated_least_squares() (in module neurotools.stats)": [[82, "neurotools.stats.trial_crossvalidated_least_squares"], [276, "neurotools.stats.trial_crossvalidated_least_squares"]], "weighted_avg_and_std() (in module neurotools.stats)": [[82, "neurotools.stats.weighted_avg_and_std"], [276, "neurotools.stats.weighted_avg_and_std"]], "autocorrelation_bayes() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.autocorrelation_bayes"], [280, "neurotools.stats.convolutional.autocorrelation_bayes"]], "blockccm() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.blockccm"], [280, "neurotools.stats.convolutional.blockccm"]], "blocksta() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.blocksta"], [280, "neurotools.stats.convolutional.blocksta"]], "ccm() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.ccm"], [280, "neurotools.stats.convolutional.ccm"]], "ccor() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.ccor"], [280, "neurotools.stats.convolutional.ccor"]], "construct_lowpass_operator() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.construct_lowpass_operator"], [280, "neurotools.stats.convolutional.construct_lowpass_operator"]], "create_spectral_model() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.create_spectral_model"], [280, "neurotools.stats.convolutional.create_spectral_model"]], "cspect() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.cspect"], [280, "neurotools.stats.convolutional.cspect"]], "cspectm() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.cspectm"], [280, "neurotools.stats.convolutional.cspectm"]], "neurotools.stats.convolutional": [[83, "module-neurotools.stats.convolutional"], [280, "module-neurotools.stats.convolutional"]], "reconstruct() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.reconstruct"], [280, "neurotools.stats.convolutional.reconstruct"]], "spectreconstruct() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.spectreconstruct"], [280, "neurotools.stats.convolutional.spectreconstruct"]], "spike_lfp_filters() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.spike_lfp_filters"], [280, "neurotools.stats.convolutional.spike_lfp_filters"]], "sta() (in module neurotools.stats.convolutional)": [[83, "neurotools.stats.convolutional.sta"], [280, "neurotools.stats.convolutional.sta"]], "adaptive_density_grid() (in module neurotools.stats.density)": [[84, "neurotools.stats.density.adaptive_density_grid"], [281, "neurotools.stats.density.adaptive_density_grid"]], "gridhist() (in module neurotools.stats.density)": [[84, "neurotools.stats.density.gridhist"], [281, "neurotools.stats.density.gridhist"]], "kdepeak() (in module neurotools.stats.density)": [[84, "neurotools.stats.density.kdepeak"], [281, "neurotools.stats.density.kdepeak"]], "knn_1d_density() (in module neurotools.stats.density)": [[84, "neurotools.stats.density.knn_1d_density"], [281, "neurotools.stats.density.knn_1d_density"]], "neurotools.stats.density": [[84, "module-neurotools.stats.density"], [281, "module-neurotools.stats.density"]], "explogpdf() (in module neurotools.stats.distributions)": [[85, "neurotools.stats.distributions.explogpdf"], [282, "neurotools.stats.distributions.explogpdf"]], "gaussian_logpdf() (in module neurotools.stats.distributions)": [[85, "neurotools.stats.distributions.gaussian_logpdf"], [282, "neurotools.stats.distributions.gaussian_logpdf"]], "gaussian_pdf() (in module neurotools.stats.distributions)": [[85, "neurotools.stats.distributions.gaussian_pdf"], [282, "neurotools.stats.distributions.gaussian_pdf"]], "neurotools.stats.distributions": [[85, "module-neurotools.stats.distributions"], [282, "module-neurotools.stats.distributions"]], "poisson_logpdf() (in module neurotools.stats.distributions)": [[85, "neurotools.stats.distributions.poisson_logpdf"], [282, "neurotools.stats.distributions.poisson_logpdf"]], "poisson_pdf() (in module neurotools.stats.distributions)": [[85, "neurotools.stats.distributions.poisson_pdf"], [282, "neurotools.stats.distributions.poisson_pdf"]], "sample_categorical() (in module neurotools.stats.distributions)": [[85, "neurotools.stats.distributions.sample_categorical"], [282, "neurotools.stats.distributions.sample_categorical"]], "fast_kde() (in module neurotools.stats.fast_kde)": [[86, "neurotools.stats.fast_kde.fast_kde"], [284, "neurotools.stats.fast_kde.fast_kde"]], "image_cov() (in module neurotools.stats.fast_kde)": [[86, "neurotools.stats.fast_kde.image_cov"], [284, "neurotools.stats.fast_kde.image_cov"]], "neurotools.stats.fast_kde": [[86, "module-neurotools.stats.fast_kde"], [284, "module-neurotools.stats.fast_kde"]], "gaussian (class in neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.Gaussian"], [285, "neurotools.stats.gaussian.Gaussian"], [286, "neurotools.stats.gaussian.Gaussian"], [287, "neurotools.stats.gaussian.Gaussian"], [288, "neurotools.stats.gaussian.Gaussian"], [289, "neurotools.stats.gaussian.Gaussian"], [290, "neurotools.stats.gaussian.Gaussian"], [291, "neurotools.stats.gaussian.Gaussian"], [292, "neurotools.stats.gaussian.Gaussian"], [293, "neurotools.stats.gaussian.Gaussian"]], "mvg_dkl() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_DKL"], [285, "neurotools.stats.gaussian.MVG_DKL"], [286, "neurotools.stats.gaussian.MVG_DKL"], [287, "neurotools.stats.gaussian.MVG_DKL"], [288, "neurotools.stats.gaussian.MVG_DKL"], [289, "neurotools.stats.gaussian.MVG_DKL"], [290, "neurotools.stats.gaussian.MVG_DKL"], [291, "neurotools.stats.gaussian.MVG_DKL"], [292, "neurotools.stats.gaussian.MVG_DKL"], [293, "neurotools.stats.gaussian.MVG_DKL"]], "mvg_dkl_cp() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_DKL_CP"], [285, "neurotools.stats.gaussian.MVG_DKL_CP"], [286, "neurotools.stats.gaussian.MVG_DKL_CP"], [287, "neurotools.stats.gaussian.MVG_DKL_CP"], [288, "neurotools.stats.gaussian.MVG_DKL_CP"], [289, "neurotools.stats.gaussian.MVG_DKL_CP"], [290, "neurotools.stats.gaussian.MVG_DKL_CP"], [291, "neurotools.stats.gaussian.MVG_DKL_CP"], [292, "neurotools.stats.gaussian.MVG_DKL_CP"], [293, "neurotools.stats.gaussian.MVG_DKL_CP"]], "mvg_pdf() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_PDF"], [285, "neurotools.stats.gaussian.MVG_PDF"], [286, "neurotools.stats.gaussian.MVG_PDF"], [287, "neurotools.stats.gaussian.MVG_PDF"], [288, "neurotools.stats.gaussian.MVG_PDF"], [289, "neurotools.stats.gaussian.MVG_PDF"], [290, "neurotools.stats.gaussian.MVG_PDF"], [291, "neurotools.stats.gaussian.MVG_PDF"], [292, "neurotools.stats.gaussian.MVG_PDF"], [293, "neurotools.stats.gaussian.MVG_PDF"]], "mvg_check() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_check"], [285, "neurotools.stats.gaussian.MVG_check"], [286, "neurotools.stats.gaussian.MVG_check"], [287, "neurotools.stats.gaussian.MVG_check"], [288, "neurotools.stats.gaussian.MVG_check"], [289, "neurotools.stats.gaussian.MVG_check"], [290, "neurotools.stats.gaussian.MVG_check"], [291, "neurotools.stats.gaussian.MVG_check"], [292, "neurotools.stats.gaussian.MVG_check"], [293, "neurotools.stats.gaussian.MVG_check"]], "mvg_conditional() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_conditional"], [285, "neurotools.stats.gaussian.MVG_conditional"], [286, "neurotools.stats.gaussian.MVG_conditional"], [287, "neurotools.stats.gaussian.MVG_conditional"], [288, "neurotools.stats.gaussian.MVG_conditional"], [289, "neurotools.stats.gaussian.MVG_conditional"], [290, "neurotools.stats.gaussian.MVG_conditional"], [291, "neurotools.stats.gaussian.MVG_conditional"], [292, "neurotools.stats.gaussian.MVG_conditional"], [293, "neurotools.stats.gaussian.MVG_conditional"]], "mvg_divide() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_divide"], [285, "neurotools.stats.gaussian.MVG_divide"], [286, "neurotools.stats.gaussian.MVG_divide"], [287, "neurotools.stats.gaussian.MVG_divide"], [288, "neurotools.stats.gaussian.MVG_divide"], [289, "neurotools.stats.gaussian.MVG_divide"], [290, "neurotools.stats.gaussian.MVG_divide"], [291, "neurotools.stats.gaussian.MVG_divide"], [292, "neurotools.stats.gaussian.MVG_divide"], [293, "neurotools.stats.gaussian.MVG_divide"]], "mvg_entropy() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_entropy"], [285, "neurotools.stats.gaussian.MVG_entropy"], [286, "neurotools.stats.gaussian.MVG_entropy"], [287, "neurotools.stats.gaussian.MVG_entropy"], [288, "neurotools.stats.gaussian.MVG_entropy"], [289, "neurotools.stats.gaussian.MVG_entropy"], [290, "neurotools.stats.gaussian.MVG_entropy"], [291, "neurotools.stats.gaussian.MVG_entropy"], [292, "neurotools.stats.gaussian.MVG_entropy"], [293, "neurotools.stats.gaussian.MVG_entropy"]], "mvg_kalman() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_kalman"], [285, "neurotools.stats.gaussian.MVG_kalman"], [286, "neurotools.stats.gaussian.MVG_kalman"], [287, "neurotools.stats.gaussian.MVG_kalman"], [288, "neurotools.stats.gaussian.MVG_kalman"], [289, "neurotools.stats.gaussian.MVG_kalman"], [290, "neurotools.stats.gaussian.MVG_kalman"], [291, "neurotools.stats.gaussian.MVG_kalman"], [292, "neurotools.stats.gaussian.MVG_kalman"], [293, "neurotools.stats.gaussian.MVG_kalman"]], "mvg_kalman_p_inversea() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [285, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [286, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [287, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [288, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [289, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [290, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [291, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [292, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [293, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"]], "mvg_kalman_joint() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_kalman_joint"], [285, "neurotools.stats.gaussian.MVG_kalman_joint"], [286, "neurotools.stats.gaussian.MVG_kalman_joint"], [287, "neurotools.stats.gaussian.MVG_kalman_joint"], [288, "neurotools.stats.gaussian.MVG_kalman_joint"], [289, "neurotools.stats.gaussian.MVG_kalman_joint"], [290, "neurotools.stats.gaussian.MVG_kalman_joint"], [291, "neurotools.stats.gaussian.MVG_kalman_joint"], [292, "neurotools.stats.gaussian.MVG_kalman_joint"], [293, "neurotools.stats.gaussian.MVG_kalman_joint"]], "mvg_kalman_joint_p() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [285, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [286, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [287, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [288, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [289, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [290, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [291, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [292, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [293, "neurotools.stats.gaussian.MVG_kalman_joint_P"]], "mvg_logpdf() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_logPDF"], [285, "neurotools.stats.gaussian.MVG_logPDF"], [286, "neurotools.stats.gaussian.MVG_logPDF"], [287, "neurotools.stats.gaussian.MVG_logPDF"], [288, "neurotools.stats.gaussian.MVG_logPDF"], [289, "neurotools.stats.gaussian.MVG_logPDF"], [290, "neurotools.stats.gaussian.MVG_logPDF"], [291, "neurotools.stats.gaussian.MVG_logPDF"], [292, "neurotools.stats.gaussian.MVG_logPDF"], [293, "neurotools.stats.gaussian.MVG_logPDF"]], "mvg_multiply() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_multiply"], [285, "neurotools.stats.gaussian.MVG_multiply"], [286, "neurotools.stats.gaussian.MVG_multiply"], [287, "neurotools.stats.gaussian.MVG_multiply"], [288, "neurotools.stats.gaussian.MVG_multiply"], [289, "neurotools.stats.gaussian.MVG_multiply"], [290, "neurotools.stats.gaussian.MVG_multiply"], [291, "neurotools.stats.gaussian.MVG_multiply"], [292, "neurotools.stats.gaussian.MVG_multiply"], [293, "neurotools.stats.gaussian.MVG_multiply"]], "mvg_multiply_c() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_multiply_C"], [285, "neurotools.stats.gaussian.MVG_multiply_C"], [286, "neurotools.stats.gaussian.MVG_multiply_C"], [287, "neurotools.stats.gaussian.MVG_multiply_C"], [288, "neurotools.stats.gaussian.MVG_multiply_C"], [289, "neurotools.stats.gaussian.MVG_multiply_C"], [290, "neurotools.stats.gaussian.MVG_multiply_C"], [291, "neurotools.stats.gaussian.MVG_multiply_C"], [292, "neurotools.stats.gaussian.MVG_multiply_C"], [293, "neurotools.stats.gaussian.MVG_multiply_C"]], "mvg_projection() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_projection"], [285, "neurotools.stats.gaussian.MVG_projection"], [286, "neurotools.stats.gaussian.MVG_projection"], [287, "neurotools.stats.gaussian.MVG_projection"], [288, "neurotools.stats.gaussian.MVG_projection"], [289, "neurotools.stats.gaussian.MVG_projection"], [290, "neurotools.stats.gaussian.MVG_projection"], [291, "neurotools.stats.gaussian.MVG_projection"], [292, "neurotools.stats.gaussian.MVG_projection"], [293, "neurotools.stats.gaussian.MVG_projection"]], "mvg_sample() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.MVG_sample"], [285, "neurotools.stats.gaussian.MVG_sample"], [286, "neurotools.stats.gaussian.MVG_sample"], [287, "neurotools.stats.gaussian.MVG_sample"], [288, "neurotools.stats.gaussian.MVG_sample"], [289, "neurotools.stats.gaussian.MVG_sample"], [290, "neurotools.stats.gaussian.MVG_sample"], [291, "neurotools.stats.gaussian.MVG_sample"], [292, "neurotools.stats.gaussian.MVG_sample"], [293, "neurotools.stats.gaussian.MVG_sample"]], "gaussian_quadrature() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.gaussian_quadrature"], [285, "neurotools.stats.gaussian.gaussian_quadrature"], [286, "neurotools.stats.gaussian.gaussian_quadrature"], [287, "neurotools.stats.gaussian.gaussian_quadrature"], [288, "neurotools.stats.gaussian.gaussian_quadrature"], [289, "neurotools.stats.gaussian.gaussian_quadrature"], [290, "neurotools.stats.gaussian.gaussian_quadrature"], [291, "neurotools.stats.gaussian.gaussian_quadrature"], [292, "neurotools.stats.gaussian.gaussian_quadrature"], [293, "neurotools.stats.gaussian.gaussian_quadrature"]], "gaussian_quadrature_logarithmic() (in module neurotools.stats.gaussian)": [[87, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [285, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [286, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [287, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [288, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [289, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [290, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [291, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [292, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [293, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"]], "logpdf() (neurotools.stats.gaussian.gaussian method)": [[87, "neurotools.stats.gaussian.Gaussian.logpdf"], [285, "neurotools.stats.gaussian.Gaussian.logpdf"], [286, "neurotools.stats.gaussian.Gaussian.logpdf"], [287, "neurotools.stats.gaussian.Gaussian.logpdf"], [288, "neurotools.stats.gaussian.Gaussian.logpdf"], [289, "neurotools.stats.gaussian.Gaussian.logpdf"], [290, "neurotools.stats.gaussian.Gaussian.logpdf"], [291, "neurotools.stats.gaussian.Gaussian.logpdf"], [292, "neurotools.stats.gaussian.Gaussian.logpdf"], [293, "neurotools.stats.gaussian.Gaussian.logpdf"]], "m (neurotools.stats.gaussian.gaussian attribute)": [[87, "neurotools.stats.gaussian.Gaussian.m"], [285, "neurotools.stats.gaussian.Gaussian.m"], [286, "neurotools.stats.gaussian.Gaussian.m"], [287, "neurotools.stats.gaussian.Gaussian.m"], [288, "neurotools.stats.gaussian.Gaussian.m"], [289, "neurotools.stats.gaussian.Gaussian.m"], [290, "neurotools.stats.gaussian.Gaussian.m"], [291, "neurotools.stats.gaussian.Gaussian.m"], [292, "neurotools.stats.gaussian.Gaussian.m"], [293, "neurotools.stats.gaussian.Gaussian.m"]], "neurotools.stats.gaussian": [[87, "module-neurotools.stats.gaussian"], [285, "module-neurotools.stats.gaussian"], [286, "module-neurotools.stats.gaussian"], [287, "module-neurotools.stats.gaussian"], [288, "module-neurotools.stats.gaussian"], [289, "module-neurotools.stats.gaussian"], [290, "module-neurotools.stats.gaussian"], [291, "module-neurotools.stats.gaussian"], [292, "module-neurotools.stats.gaussian"], [293, "module-neurotools.stats.gaussian"]], "t (neurotools.stats.gaussian.gaussian attribute)": [[87, "neurotools.stats.gaussian.Gaussian.t"], [285, "neurotools.stats.gaussian.Gaussian.t"], [286, "neurotools.stats.gaussian.Gaussian.t"], [287, "neurotools.stats.gaussian.Gaussian.t"], [288, "neurotools.stats.gaussian.Gaussian.t"], [289, "neurotools.stats.gaussian.Gaussian.t"], [290, "neurotools.stats.gaussian.Gaussian.t"], [291, "neurotools.stats.gaussian.Gaussian.t"], [292, "neurotools.stats.gaussian.Gaussian.t"], [293, "neurotools.stats.gaussian.Gaussian.t"]], "glmpenaltybernoulli() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.GLMPenaltyBernoulli"], [294, "neurotools.stats.glm.GLMPenaltyBernoulli"]], "glmpenaltyl2() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.GLMPenaltyL2"], [294, "neurotools.stats.glm.GLMPenaltyL2"]], "glmpenaltypoisson() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.GLMPenaltyPoisson"], [294, "neurotools.stats.glm.GLMPenaltyPoisson"]], "cosine_kernel() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.cosine_kernel"], [294, "neurotools.stats.glm.cosine_kernel"]], "crossvalidatedauc() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.crossvalidatedAUC"], [294, "neurotools.stats.glm.crossvalidatedAUC"]], "fitglm() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.fitGLM"], [294, "neurotools.stats.glm.fitGLM"]], "gradientglmfit() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.gradientglmfit"], [294, "neurotools.stats.glm.gradientglmfit"]], "log_cosine_basis() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.log_cosine_basis"], [294, "neurotools.stats.glm.log_cosine_basis"]], "make_cosine_basis() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.make_cosine_basis"], [294, "neurotools.stats.glm.make_cosine_basis"]], "neurotools.stats.glm": [[88, "module-neurotools.stats.glm"], [294, "module-neurotools.stats.glm"]], "numeric_grad() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.numeric_grad"], [294, "neurotools.stats.glm.numeric_grad"]], "numeric_hess() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.numeric_hess"], [294, "neurotools.stats.glm.numeric_hess"]], "ppglmfit() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.ppglmfit"], [294, "neurotools.stats.glm.ppglmfit"]], "sexp() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.sexp"], [294, "neurotools.stats.glm.sexp"]], "sigmoid() (in module neurotools.stats.glm)": [[88, "neurotools.stats.glm.sigmoid"], [294, "neurotools.stats.glm.sigmoid"]], "grid_search() (in module neurotools.stats.grid_search)": [[89, "neurotools.stats.grid_search.grid_search"], [296, "neurotools.stats.grid_search.grid_search"]], "neurotools.stats.grid_search": [[89, "module-neurotools.stats.grid_search"], [296, "module-neurotools.stats.grid_search"]], "bernoulliobservationapproximator (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.BernoulliObservationApproximator"], [298, "neurotools.stats.hmm.BernoulliObservationApproximator"]], "bernoulliobservationmodel (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.BernoulliObservationModel"], [298, "neurotools.stats.hmm.BernoulliObservationModel"]], "chisquarecoxapproximator (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.ChisquareCoxApproximator"], [298, "neurotools.stats.hmm.ChisquareCoxApproximator"]], "chisquarecoxmodel (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.ChisquareCoxModel"], [298, "neurotools.stats.hmm.ChisquareCoxModel"]], "diffusiongaussian (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.DiffusionGaussian"], [298, "neurotools.stats.hmm.DiffusionGaussian"]], "gaussiancoxapproximator (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.GaussianCoxApproximator"], [298, "neurotools.stats.hmm.GaussianCoxApproximator"]], "gaussiancoxmodel (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.GaussianCoxModel"], [298, "neurotools.stats.hmm.GaussianCoxModel"]], "loggaussiancoxapproximator (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.LogGaussianCoxApproximator"], [298, "neurotools.stats.hmm.LogGaussianCoxApproximator"]], "loggaussiancoxmodel (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.LogGaussianCoxModel"], [298, "neurotools.stats.hmm.LogGaussianCoxModel"]], "mvgouupdate (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.MVGOUUpdate"], [298, "neurotools.stats.hmm.MVGOUUpdate"]], "mvgupdate (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.MVGUpdate"], [298, "neurotools.stats.hmm.MVGUpdate"]], "mvgaussian (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.MVGaussian"], [298, "neurotools.stats.hmm.MVGaussian"]], "mvloggaussiancox (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.MVLogGaussianCox"], [298, "neurotools.stats.hmm.MVLogGaussianCox"]], "mvloggaussiancox.mvpoissonapproximator (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.MVLogGaussianCox.MVPoissonApproximator"], [298, "neurotools.stats.hmm.MVLogGaussianCox.MVPoissonApproximator"]], "ougaussian (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.OUGaussian"], [298, "neurotools.stats.hmm.OUGaussian"]], "poissonobservationapproximator (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.PoissonObservationApproximator"], [298, "neurotools.stats.hmm.PoissonObservationApproximator"]], "poissonobservationmodel (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.PoissonObservationModel"], [298, "neurotools.stats.hmm.PoissonObservationModel"]], "truncatedloggaussiancoxapproximator (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.TruncatedLogGaussianCoxApproximator"], [298, "neurotools.stats.hmm.TruncatedLogGaussianCoxApproximator"]], "truncatedloggaussiancoxmodel (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.TruncatedLogGaussianCoxModel"], [298, "neurotools.stats.hmm.TruncatedLogGaussianCoxModel"]], "truncatedpoissonobservationapproximator (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.TruncatedPoissonObservationApproximator"], [298, "neurotools.stats.hmm.TruncatedPoissonObservationApproximator"]], "truncatedpoissonobservationmodel (class in neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.TruncatedPoissonObservationModel"], [298, "neurotools.stats.hmm.TruncatedPoissonObservationModel"]], "backward_abstract() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.backward_abstract"], [298, "neurotools.stats.hmm.backward_abstract"]], "baum_welch() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.baum_welch"], [298, "neurotools.stats.hmm.baum_welch"]], "bwd() (neurotools.stats.hmm.diffusiongaussian method)": [[90, "neurotools.stats.hmm.DiffusionGaussian.bwd"], [298, "neurotools.stats.hmm.DiffusionGaussian.bwd"]], "bwd() (neurotools.stats.hmm.mvgouupdate method)": [[90, "neurotools.stats.hmm.MVGOUUpdate.bwd"], [298, "neurotools.stats.hmm.MVGOUUpdate.bwd"]], "bwd() (neurotools.stats.hmm.mvgupdate method)": [[90, "neurotools.stats.hmm.MVGUpdate.bwd"], [298, "neurotools.stats.hmm.MVGUpdate.bwd"]], "bwd() (neurotools.stats.hmm.ougaussian method)": [[90, "neurotools.stats.hmm.OUGaussian.bwd"], [298, "neurotools.stats.hmm.OUGaussian.bwd"]], "forward_abstract() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.forward_abstract"], [298, "neurotools.stats.hmm.forward_abstract"]], "forward_backward() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.forward_backward"], [298, "neurotools.stats.hmm.forward_backward"]], "forward_backward_abstract() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.forward_backward_abstract"], [298, "neurotools.stats.hmm.forward_backward_abstract"]], "fwd() (neurotools.stats.hmm.diffusiongaussian method)": [[90, "neurotools.stats.hmm.DiffusionGaussian.fwd"], [298, "neurotools.stats.hmm.DiffusionGaussian.fwd"]], "fwd() (neurotools.stats.hmm.mvgouupdate method)": [[90, "neurotools.stats.hmm.MVGOUUpdate.fwd"], [298, "neurotools.stats.hmm.MVGOUUpdate.fwd"]], "fwd() (neurotools.stats.hmm.mvgupdate method)": [[90, "neurotools.stats.hmm.MVGUpdate.fwd"], [298, "neurotools.stats.hmm.MVGUpdate.fwd"]], "fwd() (neurotools.stats.hmm.ougaussian method)": [[90, "neurotools.stats.hmm.OUGaussian.fwd"], [298, "neurotools.stats.hmm.OUGaussian.fwd"]], "hasnan() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.hasNaN"], [298, "neurotools.stats.hmm.hasNaN"]], "jump() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.jump"], [298, "neurotools.stats.hmm.jump"]], "lgcp_observation_minimizer() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.lgcp_observation_minimizer"], [298, "neurotools.stats.hmm.lgcp_observation_minimizer"]], "log_likelihood() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.log_likelihood"], [298, "neurotools.stats.hmm.log_likelihood"]], "neurotools.stats.hmm": [[90, "module-neurotools.stats.hmm"], [298, "module-neurotools.stats.hmm"]], "poisson_baum_welch() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.poisson_baum_welch"], [298, "neurotools.stats.hmm.poisson_baum_welch"]], "poisson_parameter_guess() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.poisson_parameter_guess"], [298, "neurotools.stats.hmm.poisson_parameter_guess"]], "poisson_viterbi_state_infer() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.poisson_viterbi_state_infer"], [298, "neurotools.stats.hmm.poisson_viterbi_state_infer"]], "sample() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.sample"], [298, "neurotools.stats.hmm.sample"]], "viterbi() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.viterbi"], [298, "neurotools.stats.hmm.viterbi"]], "viterbi_log() (in module neurotools.stats.hmm)": [[90, "neurotools.stats.hmm.viterbi_log"], [298, "neurotools.stats.hmm.viterbi_log"]], "dkl_discrete() (in module neurotools.stats.information)": [[91, "neurotools.stats.information.DKL_discrete"], [299, "neurotools.stats.information.DKL_discrete"]], "discrete_entropy_distribution() (in module neurotools.stats.information)": [[91, "neurotools.stats.information.discrete_entropy_distribution"], [299, "neurotools.stats.information.discrete_entropy_distribution"]], "discrete_entropy_samples() (in module neurotools.stats.information)": [[91, "neurotools.stats.information.discrete_entropy_samples"], [299, "neurotools.stats.information.discrete_entropy_samples"]], "neurotools.stats.information": [[91, "module-neurotools.stats.information"], [299, "module-neurotools.stats.information"]], "poisson_entropy_nats() (in module neurotools.stats.information)": [[91, "neurotools.stats.information.poisson_entropy_nats"], [299, "neurotools.stats.information.poisson_entropy_nats"]], "regularized_discrete_entropy() (in module neurotools.stats.information)": [[91, "neurotools.stats.information.regularized_discrete_entropy"], [299, "neurotools.stats.information.regularized_discrete_entropy"]], "monte_carlo_expectation() (in module neurotools.stats.mcint)": [[92, "neurotools.stats.mcint.monte_carlo_expectation"], [303, "neurotools.stats.mcint.monte_carlo_expectation"]], "monte_carlo_moments() (in module neurotools.stats.mcint)": [[92, "neurotools.stats.mcint.monte_carlo_moments"], [303, "neurotools.stats.mcint.monte_carlo_moments"]], "neurotools.stats.mcint": [[92, "module-neurotools.stats.mcint"], [303, "module-neurotools.stats.mcint"]], "failureerror": [[93, "neurotools.stats.minimize.FailureError"], [304, "neurotools.stats.minimize.FailureError"], [368, "stats.minimize.FailureError"]], "minimize_retry() (in module neurotools.stats.minimize)": [[93, "neurotools.stats.minimize.minimize_retry"], [304, "neurotools.stats.minimize.minimize_retry"]], "neurotools.stats.minimize": [[93, "module-neurotools.stats.minimize"], [304, "module-neurotools.stats.minimize"]], "neurotools.stats.mixtures": [[94, "module-neurotools.stats.mixtures"], [305, "module-neurotools.stats.mixtures"]], "two_class_poisson_mixture_model() (in module neurotools.stats.mixtures)": [[94, "neurotools.stats.mixtures.two_class_poisson_mixture_model"], [305, "neurotools.stats.mixtures.two_class_poisson_mixture_model"]], "logmode() (in module neurotools.stats.modefind)": [[95, "neurotools.stats.modefind.logmode"], [306, "neurotools.stats.modefind.logmode"]], "logmodeplot() (in module neurotools.stats.modefind)": [[95, "neurotools.stats.modefind.logmodeplot"], [306, "neurotools.stats.modefind.logmodeplot"]], "modefind() (in module neurotools.stats.modefind)": [[95, "neurotools.stats.modefind.modefind"], [306, "neurotools.stats.modefind.modefind"]], "neurotools.stats.modefind": [[95, "module-neurotools.stats.modefind"], [306, "module-neurotools.stats.modefind"]], "peakfinder5() (in module neurotools.stats.modefind)": [[95, "neurotools.stats.modefind.peakfinder5"], [306, "neurotools.stats.modefind.peakfinder5"]], "benjamini_hochberg_positive_correlations() (in module neurotools.stats.pvalues)": [[96, "neurotools.stats.pvalues.benjamini_hochberg_positive_correlations"], [308, "neurotools.stats.pvalues.benjamini_hochberg_positive_correlations"]], "bootstrap_compare_mean() (in module neurotools.stats.pvalues)": [[96, "neurotools.stats.pvalues.bootstrap_compare_mean"], [308, "neurotools.stats.pvalues.bootstrap_compare_mean"]], "bootstrap_compare_median() (in module neurotools.stats.pvalues)": [[96, "neurotools.stats.pvalues.bootstrap_compare_median"], [308, "neurotools.stats.pvalues.bootstrap_compare_median"]], "bootstrap_compare_statistic_two_sided() (in module neurotools.stats.pvalues)": [[96, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided"], [308, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided"]], "bootstrap_compare_statistic_two_sided_parallel() (in module neurotools.stats.pvalues)": [[96, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided_parallel"], [308, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided_parallel"]], "bootstrap_mean() (in module neurotools.stats.pvalues)": [[96, "neurotools.stats.pvalues.bootstrap_mean"], [308, "neurotools.stats.pvalues.bootstrap_mean"]], "bootstrap_median() (in module neurotools.stats.pvalues)": [[96, "neurotools.stats.pvalues.bootstrap_median"], [308, "neurotools.stats.pvalues.bootstrap_median"]], "bootstrap_statistic_two_sided() (in module neurotools.stats.pvalues)": [[96, "neurotools.stats.pvalues.bootstrap_statistic_two_sided"], [308, "neurotools.stats.pvalues.bootstrap_statistic_two_sided"]], "correct_pvalues() (in module neurotools.stats.pvalues)": [[96, "neurotools.stats.pvalues.correct_pvalues"], [308, "neurotools.stats.pvalues.correct_pvalues"]], "correct_pvalues_positive_dependent() (in module neurotools.stats.pvalues)": [[96, "neurotools.stats.pvalues.correct_pvalues_positive_dependent"], [308, "neurotools.stats.pvalues.correct_pvalues_positive_dependent"]], "neurotools.stats.pvalues": [[96, "module-neurotools.stats.pvalues"], [308, "module-neurotools.stats.pvalues"]], "damped_cosine() (in module neurotools.stats.regressions)": [[97, "neurotools.stats.regressions.damped_cosine"], [309, "neurotools.stats.regressions.damped_cosine"]], "exponential_decay() (in module neurotools.stats.regressions)": [[97, "neurotools.stats.regressions.exponential_decay"], [309, "neurotools.stats.regressions.exponential_decay"]], "gaussian_function() (in module neurotools.stats.regressions)": [[97, "neurotools.stats.regressions.gaussian_function"], [309, "neurotools.stats.regressions.gaussian_function"]], "half_gaussian_function() (in module neurotools.stats.regressions)": [[97, "neurotools.stats.regressions.half_gaussian_function"], [309, "neurotools.stats.regressions.half_gaussian_function"]], "neurotools.stats.regressions": [[97, "module-neurotools.stats.regressions"], [309, "module-neurotools.stats.regressions"]], "power_law() (in module neurotools.stats.regressions)": [[97, "neurotools.stats.regressions.power_law"], [309, "neurotools.stats.regressions.power_law"]], "robust_line() (in module neurotools.stats.regressions)": [[97, "neurotools.stats.regressions.robust_line"], [309, "neurotools.stats.regressions.robust_line"]], "weighted_least_squares() (in module neurotools.stats.regressions)": [[97, "neurotools.stats.regressions.weighted_least_squares"], [309, "neurotools.stats.regressions.weighted_least_squares"]], "neurotools.util": [[98, "module-neurotools.util"], [316, "module-neurotools.util"]], "dsigmoid() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.dsigmoid"], [318, "neurotools.util.functions.dsigmoid"]], "f() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.f"], [318, "neurotools.util.functions.f"]], "f1() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.f1"], [318, "neurotools.util.functions.f1"]], "f2() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.f2"], [318, "neurotools.util.functions.f2"]], "g() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.g"], [318, "neurotools.util.functions.g"]], "inversesigmoid() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.inversesigmoid"], [318, "neurotools.util.functions.inversesigmoid"]], "log_factorial() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.log_factorial"], [318, "neurotools.util.functions.log_factorial"]], "neurotools.util.functions": [[100, "module-neurotools.util.functions"], [318, "module-neurotools.util.functions"]], "npdf() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.npdf"], [318, "neurotools.util.functions.npdf"]], "sexp() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.sexp"], [318, "neurotools.util.functions.sexp"]], "sigmoid() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.sigmoid"], [318, "neurotools.util.functions.sigmoid"]], "slog() (in module neurotools.util.functions)": [[100, "neurotools.util.functions.slog"], [318, "neurotools.util.functions.slog"]], "ftwthr() (in module neurotools.util.getfftw)": [[101, "neurotools.util.getfftw.ftwthr"], [319, "neurotools.util.getfftw.ftwthr"]], "neurotools.util.getfftw": [[101, "module-neurotools.util.getfftw"], [319, "module-neurotools.util.getfftw"]], "gethdf() (in module neurotools.util.hdfmat)": [[102, "neurotools.util.hdfmat.getHDF"], [320, "neurotools.util.hdfmat.getHDF"]], "gethdfvalue() (in module neurotools.util.hdfmat)": [[102, "neurotools.util.hdfmat.getHDFvalue"], [320, "neurotools.util.hdfmat.getHDFvalue"]], "hdf2dict() (in module neurotools.util.hdfmat)": [[102, "neurotools.util.hdfmat.hdf2dict"], [320, "neurotools.util.hdfmat.hdf2dict"]], "neurotools.util.hdfmat": [[102, "module-neurotools.util.hdfmat"], [320, "module-neurotools.util.hdfmat"]], "printmathdf5() (in module neurotools.util.hdfmat)": [[102, "neurotools.util.hdfmat.printmatHDF5"], [320, "neurotools.util.hdfmat.printmatHDF5"]], "recursive_printmathdf5() (in module neurotools.util.hdfmat)": [[102, "neurotools.util.hdfmat.recursive_printmatHDF5"], [320, "neurotools.util.hdfmat.recursive_printmatHDF5"]], "eformat() (in module neurotools.util.string)": [[103, "neurotools.util.string.eformat"], [321, "neurotools.util.string.eformat"]], "hcat() (in module neurotools.util.string)": [[103, "neurotools.util.string.hcat"], [321, "neurotools.util.string.hcat"]], "incolumns() (in module neurotools.util.string)": [[103, "neurotools.util.string.incolumns"], [321, "neurotools.util.string.incolumns"]], "isint() (in module neurotools.util.string)": [[103, "neurotools.util.string.isInt"], [321, "neurotools.util.string.isInt"]], "neurotools.util.string": [[103, "module-neurotools.util.string"], [321, "module-neurotools.util.string"]], "nicetable() (in module neurotools.util.string)": [[103, "neurotools.util.string.nicetable"], [321, "neurotools.util.string.nicetable"]], "percent() (in module neurotools.util.string)": [[103, "neurotools.util.string.percent"], [321, "neurotools.util.string.percent"]], "shortscientific() (in module neurotools.util.string)": [[103, "neurotools.util.string.shortscientific"], [321, "neurotools.util.string.shortscientific"]], "v2str() (in module neurotools.util.string)": [[103, "neurotools.util.string.v2str"], [321, "neurotools.util.string.v2str"]], "v2str_long() (in module neurotools.util.string)": [[103, "neurotools.util.string.v2str_long"], [321, "neurotools.util.string.v2str_long"]], "wordwrap() (in module neurotools.util.string)": [[103, "neurotools.util.string.wordwrap"], [321, "neurotools.util.string.wordwrap"]], "execfile() (in module neurotools.util.system)": [[104, "neurotools.util.system.execfile"], [322, "neurotools.util.system.execfile"]], "neurotools.util.system": [[104, "module-neurotools.util.system"], [322, "module-neurotools.util.system"]], "query_yes_no() (in module neurotools.util.system)": [[104, "neurotools.util.system.query_yes_no"], [322, "neurotools.util.system.query_yes_no"]], "current_milli_time() (in module neurotools.util.time)": [[105, "neurotools.util.time.current_milli_time"], [323, "neurotools.util.time.current_milli_time"]], "neurotools.util.time": [[105, "module-neurotools.util.time"], [323, "module-neurotools.util.time"]], "now() (in module neurotools.util.time)": [[105, "neurotools.util.time.now"], [323, "neurotools.util.time.now"]], "tic() (in module neurotools.util.time)": [[105, "neurotools.util.time.tic"], [323, "neurotools.util.time.tic"]], "toc() (in module neurotools.util.time)": [[105, "neurotools.util.time.toc"], [323, "neurotools.util.time.toc"]], "today() (in module neurotools.util.time)": [[105, "neurotools.util.time.today"], [323, "neurotools.util.time.today"]], "waitfor() (in module neurotools.util.time)": [[105, "neurotools.util.time.waitfor"], [323, "neurotools.util.time.waitfor"]], "aap() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.aap"], [324, "neurotools.util.tools.aap"]], "add() (neurotools.util.tools.stuff method)": [[106, "neurotools.util.tools.stuff.add"], [324, "neurotools.util.tools.stuff.add"]], "amap() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.amap"], [324, "neurotools.util.tools.amap"]], "arraymap() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.arraymap"], [324, "neurotools.util.tools.arraymap"]], "asiterable() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.asiterable"], [324, "neurotools.util.tools.asiterable"]], "c2p() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.c2p"], [324, "neurotools.util.tools.c2p"]], "camel2underscore() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.camel2underscore"], [324, "neurotools.util.tools.camel2underscore"]], "clear() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.clear"], [324, "neurotools.util.tools.clear"]], "debug() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.debug"], [324, "neurotools.util.tools.debug"]], "dowarn() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.dowarn"], [324, "neurotools.util.tools.dowarn"]], "emitter (class in neurotools.util.tools)": [[106, "neurotools.util.tools.emitter"], [324, "neurotools.util.tools.emitter"]], "ensure_dir() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.ensure_dir"], [324, "neurotools.util.tools.ensure_dir"]], "exists() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.exists"], [324, "neurotools.util.tools.exists"]], "ezip() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.ezip"], [324, "neurotools.util.tools.ezip"]], "find() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.find"], [324, "neurotools.util.tools.find"]], "find_all_extension() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.find_all_extension"], [324, "neurotools.util.tools.find_all_extension"]], "getvariable() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.getVariable"], [324, "neurotools.util.tools.getVariable"]], "getdict() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.getdict"], [324, "neurotools.util.tools.getdict"]], "getsize() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.getsize"], [324, "neurotools.util.tools.getsize"]], "globalize() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.globalize"], [324, "neurotools.util.tools.globalize"]], "history() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.history"], [324, "neurotools.util.tools.history"]], "invert_permutation() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.invert_permutation"], [324, "neurotools.util.tools.invert_permutation"]], "lap() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.lap"], [324, "neurotools.util.tools.lap"]], "lmap() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.lmap"], [324, "neurotools.util.tools.lmap"]], "mapdict() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.mapdict"], [324, "neurotools.util.tools.mapdict"]], "matlab() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.matlab"], [324, "neurotools.util.tools.matlab"]], "metaloadmat() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.metaloadmat"], [324, "neurotools.util.tools.metaloadmat"]], "neurotools.util.tools": [[106, "module-neurotools.util.tools"], [324, "module-neurotools.util.tools"]], "nowarn() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.nowarn"], [324, "neurotools.util.tools.nowarn"]], "okwarn() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.okwarn"], [324, "neurotools.util.tools.okwarn"]], "oneslike() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.oneslike"], [324, "neurotools.util.tools.oneslike"]], "p2c() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.p2c"], [324, "neurotools.util.tools.p2c"]], "piper (class in neurotools.util.tools)": [[106, "neurotools.util.tools.piper"], [324, "neurotools.util.tools.piper"]], "restorecontext() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.restoreContext"], [324, "neurotools.util.tools.restoreContext"]], "savecontext() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.saveContext"], [324, "neurotools.util.tools.saveContext"]], "setinrange() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.setinrange"], [324, "neurotools.util.tools.setinrange"]], "slist() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.slist"], [324, "neurotools.util.tools.slist"]], "sls() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.sls"], [324, "neurotools.util.tools.sls"]], "stuff (class in neurotools.util.tools)": [[106, "neurotools.util.tools.stuff"], [324, "neurotools.util.tools.stuff"]], "underscore2camel() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.underscore2camel"], [324, "neurotools.util.tools.underscore2camel"]], "varexists() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.varexists"], [324, "neurotools.util.tools.varexists"]], "wait() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.wait"], [324, "neurotools.util.tools.wait"]], "warn() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.warn"], [324, "neurotools.util.tools.warn"]], "zeroslike() (in module neurotools.util.tools)": [[106, "neurotools.util.tools.zeroslike"], [324, "neurotools.util.tools.zeroslike"]], "dsigmoid() (in module functions)": [[107, "functions.dsigmoid"]], "f() (in module functions)": [[107, "functions.f"]], "f1() (in module functions)": [[107, "functions.f1"]], "f2() (in module functions)": [[107, "functions.f2"]], "functions": [[107, "module-functions"]], "g() (in module functions)": [[107, "functions.g"]], "inversesigmoid() (in module functions)": [[107, "functions.inversesigmoid"]], "log_factorial() (in module functions)": [[107, "functions.log_factorial"]], "npdf() (in module functions)": [[107, "functions.npdf"]], "sexp() (in module functions)": [[107, "functions.sexp"]], "sigmoid() (in module functions)": [[107, "functions.sigmoid"]], "slog() (in module functions)": [[107, "functions.slog"]], "ftwthr() (in module getfftw)": [[108, "getfftw.ftwthr"]], "getfftw": [[108, "module-getfftw"]], "gpu": [[109, "module-gpu"]], "gpu.cl": [[110, "module-gpu.cl"]], "missing() (in module gpu.cl)": [[110, "gpu.cl.missing"]], "gpu.cpu": [[114, "module-gpu.cpu"]], "cmap() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.cmap"]], "compose() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.compose"]], "corr() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.corr"]], "cov() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.cov"]], "cut() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.cut"]], "document() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.document"]], "dot() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.dot"]], "elem() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.elem"]], "fancy() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.fancy"]], "flat() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.flat"]], "gpu.cpu.util": [[115, "module-gpu.cpu.util"]], "idivup() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.idivup"]], "ldif() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.ldif"]], "ldif2() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.ldif2"]], "ldiv() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.ldiv"]], "ldiv2() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.ldiv2"]], "length() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.length"]], "lmul() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.lmul"]], "lmul2() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.lmul2"]], "lpow() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.lpow"]], "lpow2() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.lpow2"]], "lsum() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.lsum"]], "lsum2() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.lsum2"]], "mdif() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.mdif"]], "mdiv() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.mdiv"]], "mean() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.mean"]], "mmap() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.mmap"]], "mmean() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.mmean"]], "mmul() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.mmul"]], "mpow() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.mpow"]], "mstd() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.mstd"]], "msum() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.msum"]], "mu() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.mu"]], "mvar() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.mvar"]], "norm() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.norm"]], "rnorm() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.rnorm"]], "scale() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.scale"]], "sem() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.sem"]], "shift() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.shift"]], "sigma() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.sigma"]], "sstd() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.sstd"]], "std() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.std"]], "svar() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.svar"]], "var() (in module gpu.cpu.util)": [[115, "gpu.cpu.util.var"]], "gpu.cu": [[116, "module-gpu.cu"]], "gpu.cu.convolution": [[117, "module-gpu.cu.convolution"]], "gpuboxconv() (in module gpu.cu.convolution)": [[117, "gpu.cu.convolution.gpuboxconv"]], "gpuboxconv_core() (in module gpu.cu.convolution)": [[117, "gpu.cu.convolution.gpuboxconv_core"]], "card_info() (in module gpu.cu.device)": [[118, "gpu.cu.device.card_info"]], "estimateblocks() (in module gpu.cu.device)": [[118, "gpu.cu.device.estimateBlocks"]], "estimateloop() (in module gpu.cu.device)": [[118, "gpu.cu.device.estimateLoop"]], "estimatethreadsperblock() (in module gpu.cu.device)": [[118, "gpu.cu.device.estimateThreadsPerBlock"]], "gpu.cu.device": [[118, "module-gpu.cu.device"]], "missing() (in module gpu.cu.device)": [[118, "gpu.cu.device.missing"]], "cpu() (in module gpu.cu.function)": [[119, "gpu.cu.function.cpu"]], "expsub() (in module gpu.cu.function)": [[119, "gpu.cu.function.expsub"]], "ezkern() (in module gpu.cu.function)": [[119, "gpu.cu.function.ezkern"]], "format() (in module gpu.cu.function)": [[119, "gpu.cu.function.format"]], "gpu.cu.function": [[119, "module-gpu.cu.function"]], "gpubin() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpubin"]], "gpubinaryeq() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpubinaryeq"]], "gpufloat() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpufloat"]], "gpufloatmat() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpufloatmat"]], "gpufloatred() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpufloatred"]], "gpuint() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpuint"]], "gpuintmap() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpuintmap"]], "gpuintmat() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpuintmat"]], "gpuintred() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpuintred"]], "gpumap() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpumap"]], "gpumapeq() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpumapeq"]], "gpupointer() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpupointer"]], "gpuscalar() (in module gpu.cu.function)": [[119, "gpu.cu.function.gpuscalar"]], "guessgputype() (in module gpu.cu.function)": [[119, "gpu.cu.function.guessGPUType"]], "kernel() (in module gpu.cu.function)": [[119, "gpu.cu.function.kernel"]], "printkernel() (in module gpu.cu.function)": [[119, "gpu.cu.function.printKernel"]], "togputype() (in module gpu.cu.function)": [[119, "gpu.cu.function.toGPUType"]], "gpu.cu.gpufun": [[120, "module-gpu.cu.gpufun"]], "gpuhill() (in module gpu.cu.gpufun)": [[120, "gpu.cu.gpufun.gpuhill"]], "gpulcomb() (in module gpu.cu.gpufun)": [[120, "gpu.cu.gpufun.gpulcomb"]], "gpulogpdf() (in module gpu.cu.gpufun)": [[120, "gpu.cu.gpufun.gpulogpdf"]], "gpumean() (in module gpu.cu.gpufun)": [[120, "gpu.cu.gpufun.gpumean"]], "gpunpdf() (in module gpu.cu.gpufun)": [[120, "gpu.cu.gpufun.gpunpdf"]], "gpurandexp() (in module gpu.cu.gpufun)": [[120, "gpu.cu.gpufun.gpurandexp"]], "gpurandf() (in module gpu.cu.gpufun)": [[120, "gpu.cu.gpufun.gpurandf"]], "gpuuniform() (in module gpu.cu.gpufun)": [[120, "gpu.cu.gpufun.gpuuniform"]], "connect_gaussian() (in module gpu.cu.graph)": [[121, "gpu.cu.graph.connect_gaussian"]], "gpu.cu.graph": [[121, "module-gpu.cu.graph"]], "random_point_sheet() (in module gpu.cu.graph)": [[121, "gpu.cu.graph.random_point_sheet"]], "spherepoints() (in module gpu.cu.graph)": [[121, "gpu.cu.graph.spherepoints"]], "uniform_point_sheet() (in module gpu.cu.graph)": [[121, "gpu.cu.graph.uniform_point_sheet"]], "gpu.cu.logic": [[122, "module-gpu.cu.logic"]], "gpuand() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpuand"]], "gpueq() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpueq"]], "gpugt() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpugt"]], "gpugteq() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpugteq"]], "gpuhzero() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpuhzero"]], "gpult() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpult"]], "gpulteq() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpulteq"]], "gpuneq() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpuneq"]], "gpunor() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpunor"]], "gpunot() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpunot"]], "gpurange() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpurange"]], "gpuyes() (in module gpu.cu.logic)": [[122, "gpu.cu.logic.gpuyes"]], "elementwisekernel() (in module gpu.cu.plot)": [[124, "gpu.cu.plot.ElementwiseKernel"]], "gpu.cu.plot": [[124, "module-gpu.cu.plot"]], "gpubarlinedata() (in module gpu.cu.plot)": [[124, "gpu.cu.plot.gpubarlinedata"]], "gpuhistogram() (in module gpu.cu.plot)": [[124, "gpu.cu.plot.gpuhistogram"]], "missing() (in module gpu.cu.plot)": [[124, "gpu.cu.plot.missing"]], "sebarline() (in module gpu.cu.plot)": [[124, "gpu.cu.plot.sebarline"]], "sebarline2() (in module gpu.cu.plot)": [[124, "gpu.cu.plot.sebarline2"]], "frameeater() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.FrameEater"]], "gpuautometric() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.GPUAutometric"]], "gpudotmetric() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.GPUDotmetric"]], "gpumagmetric() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.GPUMagmetric"]], "gpupointautodistance() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.GPUPointAutoDistance"]], "gpusequenceautodetect() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.GPUSequenceAutoDetect"]], "deltamag() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.deltamag"]], "fitgaussbimodal() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.fitgaussbimodal"]], "fitgausstrimodal() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.fitgausstrimodal"]], "gpu.cu.sequence": [[125, "module-gpu.cu.sequence"]], "gpuderivative() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.gpuderivative"]], "gpulognpdf() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.gpulognpdf"]], "gpunpdf() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.gpunpdf"]], "gpusmooth() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.gpusmooth"]], "gpusubsetgfit() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.gpusubsetgfit"]], "gpusubsetmean() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.gpusubsetmean"]], "gputhing() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.gputhing"]], "mulmag() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.mulmag"]], "summag() (in module gpu.cu.sequence)": [[125, "gpu.cu.sequence.summag"]], "graphics": [[127, "module-graphics"]], "rgbtohcl() (in module graphics.color)": [[128, "graphics.color.RGBtoHCL"]], "bit16_rgb_to_tuple() (in module graphics.color)": [[128, "graphics.color.bit16_RGB_to_tuple"]], "bit16_print_color() (in module graphics.color)": [[128, "graphics.color.bit16_print_color"]], "circularly_smooth_colormap() (in module graphics.color)": [[128, "graphics.color.circularly_smooth_colormap"]], "code_to_16bit() (in module graphics.color)": [[128, "graphics.color.code_to_16bit"]], "color_boxplot() (in module graphics.color)": [[128, "graphics.color.color_boxplot"]], "complexhlarr2rgb() (in module graphics.color)": [[128, "graphics.color.complexHLArr2RGB"]], "darkhues() (in module graphics.color)": [[128, "graphics.color.darkhues"]], "enumerate_fast_colors() (in module graphics.color)": [[128, "graphics.color.enumerate_fast_colors"]], "graphics.color": [[128, "module-graphics.color"]], "hcl2rgb() (in module graphics.color)": [[128, "graphics.color.hcl2rgb"]], "hex2rgb() (in module graphics.color)": [[128, "graphics.color.hex2rgb"]], "hex_pack_bgr() (in module graphics.color)": [[128, "graphics.color.hex_pack_BGR"]], "hsv2rgb() (in module graphics.color)": [[128, "graphics.color.hsv2rgb"]], "hue_angle() (in module graphics.color)": [[128, "graphics.color.hue_angle"]], "isoluminance1() (in module graphics.color)": [[128, "graphics.color.isoluminance1"]], "isoluminance2() (in module graphics.color)": [[128, "graphics.color.isoluminance2"]], "isoluminance3() (in module graphics.color)": [[128, "graphics.color.isoluminance3"]], "isoluminance4() (in module graphics.color)": [[128, "graphics.color.isoluminance4"]], "lighthues() (in module graphics.color)": [[128, "graphics.color.lighthues"]], "lightness() (in module graphics.color)": [[128, "graphics.color.lightness"]], "luminance_matrix() (in module graphics.color)": [[128, "graphics.color.luminance_matrix"]], "match_luminance() (in module graphics.color)": [[128, "graphics.color.match_luminance"]], "medhues() (in module graphics.color)": [[128, "graphics.color.medhues"]], "radl2rgb() (in module graphics.color)": [[128, "graphics.color.radl2rgb"]], "radl2rgblut() (in module graphics.color)": [[128, "graphics.color.radl2rgbLUT"]], "rgb2hex() (in module graphics.color)": [[128, "graphics.color.rgb2hex"]], "rotate() (in module graphics.color)": [[128, "graphics.color.rotate"]], "show_complete_fast_pallet() (in module graphics.color)": [[128, "graphics.color.show_complete_fast_pallet"]], "show_complete_fastest_pallet() (in module graphics.color)": [[128, "graphics.color.show_complete_fastest_pallet"]], "show_fast_pallet() (in module graphics.color)": [[128, "graphics.color.show_fast_pallet"]], "show_hex_pallet() (in module graphics.color)": [[128, "graphics.color.show_hex_pallet"]], "tuple_to_bit16() (in module graphics.color)": [[128, "graphics.color.tuple_to_bit16"]], "tuple_to_bit24() (in module graphics.color)": [[128, "graphics.color.tuple_to_bit24"]], "graphics.image": [[129, "module-graphics.image"]], "mean_center() (in module graphics.image)": [[129, "graphics.image.mean_center"]], "median_center() (in module graphics.image)": [[129, "graphics.image.median_center"]], "unitize() (in module graphics.image)": [[129, "graphics.image.unitize"]], "visualize_derivatives() (in module graphics.image)": [[129, "graphics.image.visualize_derivatives"]], "draw_array() (in module graphics.matplotlib)": [[130, "graphics.matplotlib.draw_array"]], "graphics.matplotlib": [[130, "module-graphics.matplotlib"]], "hide_toolbar() (in module graphics.matplotlib)": [[130, "graphics.matplotlib.hide_toolbar"]], "start() (in module graphics.matplotlib)": [[130, "graphics.matplotlib.start"]], "gaussian2d_covellipse() (in module graphics.plot)": [[131, "graphics.plot.Gaussian2D_covellipse"]], "handlersquare (class in graphics.plot)": [[131, "graphics.plot.HandlerSquare"]], "addspikes() (in module graphics.plot)": [[131, "graphics.plot.addspikes"]], "adjust_axis_height_pixels() (in module graphics.plot)": [[131, "graphics.plot.adjust_axis_height_pixels"]], "adjust_xlabel_space() (in module graphics.plot)": [[131, "graphics.plot.adjust_xlabel_space"]], "adjust_ylabel_space() (in module graphics.plot)": [[131, "graphics.plot.adjust_ylabel_space"]], "adjustmap() (in module graphics.plot)": [[131, "graphics.plot.adjustmap"]], "animate_complex() (in module graphics.plot)": [[131, "graphics.plot.animate_complex"]], "arrow_between() (in module graphics.plot)": [[131, "graphics.plot.arrow_between"]], "axvbands() (in module graphics.plot)": [[131, "graphics.plot.axvbands"]], "axvstripe() (in module graphics.plot)": [[131, "graphics.plot.axvstripe"]], "barcompare() (in module graphics.plot)": [[131, "graphics.plot.barcompare"]], "base_legend() (in module graphics.plot)": [[131, "graphics.plot.base_legend"]], "border_width() (in module graphics.plot)": [[131, "graphics.plot.border_width"]], "boxplot_significance() (in module graphics.plot)": [[131, "graphics.plot.boxplot_significance"]], "broken_step() (in module graphics.plot)": [[131, "graphics.plot.broken_step"]], "ceil_to_precision() (in module graphics.plot)": [[131, "graphics.plot.ceil_to_precision"]], "centers() (in module graphics.plot)": [[131, "graphics.plot.centers"]], "clean_y_range() (in module graphics.plot)": [[131, "graphics.plot.clean_y_range"]], "cleartop() (in module graphics.plot)": [[131, "graphics.plot.cleartop"]], "colored_boxplot() (in module graphics.plot)": [[131, "graphics.plot.colored_boxplot"]], "complex_axis() (in module graphics.plot)": [[131, "graphics.plot.complex_axis"]], "covariance_crosshairs() (in module graphics.plot)": [[131, "graphics.plot.covariance_crosshairs"]], "create_artists() (graphics.plot.handlersquare method)": [[131, "graphics.plot.HandlerSquare.create_artists"]], "darken() (in module graphics.plot)": [[131, "graphics.plot.darken"]], "domask() (in module graphics.plot)": [[131, "graphics.plot.domask"]], "draw_circle() (in module graphics.plot)": [[131, "graphics.plot.draw_circle"]], "expand_axis_x() (in module graphics.plot)": [[131, "graphics.plot.expand_axis_x"]], "expand_axis_y() (in module graphics.plot)": [[131, "graphics.plot.expand_axis_y"]], "expand_y_range() (in module graphics.plot)": [[131, "graphics.plot.expand_y_range"]], "figurebox() (in module graphics.plot)": [[131, "graphics.plot.figurebox"]], "flathist() (in module graphics.plot)": [[131, "graphics.plot.flathist"]], "floor_to_precision() (in module graphics.plot)": [[131, "graphics.plot.floor_to_precision"]], "force_aspect() (in module graphics.plot)": [[131, "graphics.plot.force_aspect"]], "fsize() (in module graphics.plot)": [[131, "graphics.plot.fsize"]], "fudgex() (in module graphics.plot)": [[131, "graphics.plot.fudgex"]], "fudgexy() (in module graphics.plot)": [[131, "graphics.plot.fudgexy"]], "fudgey() (in module graphics.plot)": [[131, "graphics.plot.fudgey"]], "get_aspect() (in module graphics.plot)": [[131, "graphics.plot.get_aspect"]], "get_ax_pixel() (in module graphics.plot)": [[131, "graphics.plot.get_ax_pixel"]], "get_ax_pixel_ratio() (in module graphics.plot)": [[131, "graphics.plot.get_ax_pixel_ratio"]], "get_ax_size() (in module graphics.plot)": [[131, "graphics.plot.get_ax_size"]], "get_bbox() (in module graphics.plot)": [[131, "graphics.plot.get_bbox"]], "good_colorbar() (in module graphics.plot)": [[131, "graphics.plot.good_colorbar"]], "graphics.plot": [[131, "module-graphics.plot"]], "hsigbar() (in module graphics.plot)": [[131, "graphics.plot.hsigbar"]], "inhibition_arrow() (in module graphics.plot)": [[131, "graphics.plot.inhibition_arrow"]], "label() (in module graphics.plot)": [[131, "graphics.plot.label"]], "left_legend() (in module graphics.plot)": [[131, "graphics.plot.left_legend"]], "lighten() (in module graphics.plot)": [[131, "graphics.plot.lighten"]], "match_image_aspect() (in module graphics.plot)": [[131, "graphics.plot.match_image_aspect"]], "mock_legend() (in module graphics.plot)": [[131, "graphics.plot.mock_legend"]], "more_xticks() (in module graphics.plot)": [[131, "graphics.plot.more_xticks"]], "more_yticks() (in module graphics.plot)": [[131, "graphics.plot.more_yticks"]], "nice_legend() (in module graphics.plot)": [[131, "graphics.plot.nice_legend"]], "nicebp() (in module graphics.plot)": [[131, "graphics.plot.nicebp"]], "nicex() (in module graphics.plot)": [[131, "graphics.plot.nicex"]], "nicexy() (in module graphics.plot)": [[131, "graphics.plot.nicexy"]], "nicey() (in module graphics.plot)": [[131, "graphics.plot.nicey"]], "noaxis() (in module graphics.plot)": [[131, "graphics.plot.noaxis"]], "noclip() (in module graphics.plot)": [[131, "graphics.plot.noclip"]], "nolabels() (in module graphics.plot)": [[131, "graphics.plot.nolabels"]], "notick() (in module graphics.plot)": [[131, "graphics.plot.notick"]], "nox() (in module graphics.plot)": [[131, "graphics.plot.nox"]], "noxlabels() (in module graphics.plot)": [[131, "graphics.plot.noxlabels"]], "noxyaxes() (in module graphics.plot)": [[131, "graphics.plot.noxyaxes"]], "noy() (in module graphics.plot)": [[131, "graphics.plot.noy"]], "noylabels() (in module graphics.plot)": [[131, "graphics.plot.noylabels"]], "nudge_axis_baseline() (in module graphics.plot)": [[131, "graphics.plot.nudge_axis_baseline"]], "nudge_axis_left() (in module graphics.plot)": [[131, "graphics.plot.nudge_axis_left"]], "nudge_axis_x() (in module graphics.plot)": [[131, "graphics.plot.nudge_axis_x"]], "nudge_axis_y() (in module graphics.plot)": [[131, "graphics.plot.nudge_axis_y"]], "nudge_axis_y_pixels() (in module graphics.plot)": [[131, "graphics.plot.nudge_axis_y_pixels"]], "pikeplot() (in module graphics.plot)": [[131, "graphics.plot.pikeplot"]], "pixels_to_xfigureunits() (in module graphics.plot)": [[131, "graphics.plot.pixels_to_xfigureunits"]], "pixels_to_xunits() (in module graphics.plot)": [[131, "graphics.plot.pixels_to_xunits"]], "pixels_to_yfigureunits() (in module graphics.plot)": [[131, "graphics.plot.pixels_to_yfigureunits"]], "pixels_to_yunits() (in module graphics.plot)": [[131, "graphics.plot.pixels_to_yunits"]], "plotcwt() (in module graphics.plot)": [[131, "graphics.plot.plotCWT"]], "plotwtphase() (in module graphics.plot)": [[131, "graphics.plot.plotWTPhase"]], "plotwtphasefig() (in module graphics.plot)": [[131, "graphics.plot.plotWTPhaseFig"]], "plot_complex() (in module graphics.plot)": [[131, "graphics.plot.plot_complex"]], "plotz() (in module graphics.plot)": [[131, "graphics.plot.plotz"]], "positivex() (in module graphics.plot)": [[131, "graphics.plot.positivex"]], "positivexy() (in module graphics.plot)": [[131, "graphics.plot.positivexy"]], "positivey() (in module graphics.plot)": [[131, "graphics.plot.positivey"]], "px2x() (in module graphics.plot)": [[131, "graphics.plot.px2x"]], "px2y() (in module graphics.plot)": [[131, "graphics.plot.px2y"]], "rangeover() (in module graphics.plot)": [[131, "graphics.plot.rangeover"]], "rangeto() (in module graphics.plot)": [[131, "graphics.plot.rangeto"]], "restore_limits() (in module graphics.plot)": [[131, "graphics.plot.restore_limits"]], "right_legend() (in module graphics.plot)": [[131, "graphics.plot.right_legend"]], "rightaxis() (in module graphics.plot)": [[131, "graphics.plot.rightaxis"]], "righty() (in module graphics.plot)": [[131, "graphics.plot.righty"]], "round_to_precision() (in module graphics.plot)": [[131, "graphics.plot.round_to_precision"]], "save_limits() (in module graphics.plot)": [[131, "graphics.plot.save_limits"]], "savefigure() (in module graphics.plot)": [[131, "graphics.plot.savefigure"]], "shade_edges() (in module graphics.plot)": [[131, "graphics.plot.shade_edges"]], "shellmean() (in module graphics.plot)": [[131, "graphics.plot.shellmean"]], "shellplot() (in module graphics.plot)": [[131, "graphics.plot.shellplot"]], "sigbar() (in module graphics.plot)": [[131, "graphics.plot.sigbar"]], "simple_arrow() (in module graphics.plot)": [[131, "graphics.plot.simple_arrow"]], "simpleaxis() (in module graphics.plot)": [[131, "graphics.plot.simpleaxis"]], "simpleraxis() (in module graphics.plot)": [[131, "graphics.plot.simpleraxis"]], "simplerright() (in module graphics.plot)": [[131, "graphics.plot.simplerright"]], "splitz() (in module graphics.plot)": [[131, "graphics.plot.splitz"]], "stderrplot() (in module graphics.plot)": [[131, "graphics.plot.stderrplot"]], "subfigurelabel() (in module graphics.plot)": [[131, "graphics.plot.subfigurelabel"]], "trendline() (in module graphics.plot)": [[131, "graphics.plot.trendline"]], "unit_crosshairs() (in module graphics.plot)": [[131, "graphics.plot.unit_crosshairs"]], "unitaxes() (in module graphics.plot)": [[131, "graphics.plot.unitaxes"]], "unitx() (in module graphics.plot)": [[131, "graphics.plot.unitx"]], "unity() (in module graphics.plot)": [[131, "graphics.plot.unity"]], "widths_to_centers() (in module graphics.plot)": [[131, "graphics.plot.widths_to_centers"]], "widths_to_edges() (in module graphics.plot)": [[131, "graphics.plot.widths_to_edges"]], "wtpshow() (in module graphics.plot)": [[131, "graphics.plot.wtpshow"]], "xbartext() (in module graphics.plot)": [[131, "graphics.plot.xbartext"]], "xfigureunits_to_pixels() (in module graphics.plot)": [[131, "graphics.plot.xfigureunits_to_pixels"]], "xin() (in module graphics.plot)": [[131, "graphics.plot.xin"]], "xscalebar() (in module graphics.plot)": [[131, "graphics.plot.xscalebar"]], "xticklen() (in module graphics.plot)": [[131, "graphics.plot.xticklen"]], "xtickpad() (in module graphics.plot)": [[131, "graphics.plot.xtickpad"]], "xunits_to_pixels() (in module graphics.plot)": [[131, "graphics.plot.xunits_to_pixels"]], "xylim() (in module graphics.plot)": [[131, "graphics.plot.xylim"]], "ybartext() (in module graphics.plot)": [[131, "graphics.plot.ybartext"]], "yfigureunits_to_pixels() (in module graphics.plot)": [[131, "graphics.plot.yfigureunits_to_pixels"]], "yin() (in module graphics.plot)": [[131, "graphics.plot.yin"]], "yscalebar() (in module graphics.plot)": [[131, "graphics.plot.yscalebar"]], "yticklen() (in module graphics.plot)": [[131, "graphics.plot.yticklen"]], "ytickpad() (in module graphics.plot)": [[131, "graphics.plot.ytickpad"]], "yunits_to_pixels() (in module graphics.plot)": [[131, "graphics.plot.yunits_to_pixels"]], "zerohline() (in module graphics.plot)": [[131, "graphics.plot.zerohline"]], "zerovline() (in module graphics.plot)": [[131, "graphics.plot.zerovline"]], "zoombox() (in module graphics.plot)": [[131, "graphics.plot.zoombox"]], "draw_array() (in module graphics.pygame)": [[132, "graphics.pygame.draw_array"]], "enable_vsync() (in module graphics.pygame)": [[132, "graphics.pygame.enable_vsync"]], "graphics.pygame": [[132, "module-graphics.pygame"]], "start() (in module graphics.pygame)": [[132, "graphics.pygame.start"]], "jobs": [[133, "module-jobs"]], "base64hash() (in module jobs.cache)": [[134, "jobs.cache.base64hash"]], "base64hash2byte() (in module jobs.cache)": [[134, "jobs.cache.base64hash2byte"]], "disk_cacher() (in module jobs.cache)": [[134, "jobs.cache.disk_cacher"]], "file_string_to_signature() (in module jobs.cache)": [[134, "jobs.cache.file_string_to_signature"]], "function_hash_no_subroutines() (in module jobs.cache)": [[134, "jobs.cache.function_hash_no_subroutines"]], "function_hash_with_subroutines() (in module jobs.cache)": [[134, "jobs.cache.function_hash_with_subroutines"]], "function_signature() (in module jobs.cache)": [[134, "jobs.cache.function_signature"]], "get_cache_path() (in module jobs.cache)": [[134, "jobs.cache.get_cache_path"]], "get_source() (in module jobs.cache)": [[134, "jobs.cache.get_source"]], "hierarchical_cacher() (in module jobs.cache)": [[134, "jobs.cache.hierarchical_cacher"]], "human_decode() (in module jobs.cache)": [[134, "jobs.cache.human_decode"]], "human_encode() (in module jobs.cache)": [[134, "jobs.cache.human_encode"]], "jobs.cache": [[134, "module-jobs.cache"]], "locate_cached() (in module jobs.cache)": [[134, "jobs.cache.locate_cached"]], "read_cache_entry() (in module jobs.cache)": [[134, "jobs.cache.read_cache_entry"]], "signature_to_file_string() (in module jobs.cache)": [[134, "jobs.cache.signature_to_file_string"]], "validate_for_matfile() (in module jobs.cache)": [[134, "jobs.cache.validate_for_matfile"]], "validate_for_numpy() (in module jobs.cache)": [[134, "jobs.cache.validate_for_numpy"]], "csv() (in module jobs.closure)": [[135, "jobs.closure.csv"]], "get_subroutines() (in module jobs.closure)": [[135, "jobs.closure.get_subroutines"]], "inspect_function_closure() (in module jobs.closure)": [[135, "jobs.closure.inspect_function_closure"]], "is_immutable() (in module jobs.closure)": [[135, "jobs.closure.is_immutable"]], "is_probably_safe() (in module jobs.closure)": [[135, "jobs.closure.is_probably_safe"]], "jobs.closure": [[135, "module-jobs.closure"]], "verify_function_closure() (in module jobs.closure)": [[135, "jobs.closure.verify_function_closure"]], "check_filename() (in module jobs.filenames)": [[137, "jobs.filenames.check_filename"]], "is_dangerous_filename() (in module jobs.filenames)": [[137, "jobs.filenames.is_dangerous_filename"]], "jobs.filenames": [[137, "module-jobs.filenames"]], "validate_argument_signature() (in module jobs.filenames)": [[137, "jobs.filenames.validate_argument_signature"]], "cache_test() (in module jobs.initialize_system_cache)": [[138, "jobs.initialize_system_cache.cache_test"]], "du() (in module jobs.initialize_system_cache)": [[138, "jobs.initialize_system_cache.du"]], "initialize_caches() (in module jobs.initialize_system_cache)": [[138, "jobs.initialize_system_cache.initialize_caches"]], "jobs.initialize_system_cache": [[138, "module-jobs.initialize_system_cache"]], "launch_cache_synchronizers() (in module jobs.initialize_system_cache)": [[138, "jobs.initialize_system_cache.launch_cache_synchronizers"]], "purge_ram_cache() (in module jobs.initialize_system_cache)": [[138, "jobs.initialize_system_cache.purge_ram_cache"]], "purge_ssd_cache() (in module jobs.initialize_system_cache)": [[138, "jobs.initialize_system_cache.purge_ssd_cache"]], "reset_ramdisk() (in module jobs.initialize_system_cache)": [[138, "jobs.initialize_system_cache.reset_ramdisk"]], "close_pool() (in module jobs.parallel)": [[139, "jobs.parallel.close_pool"]], "eval_from_cached() (in module jobs.parallel)": [[139, "jobs.parallel.eval_from_cached"]], "function_fingerprint() (in module jobs.parallel)": [[139, "jobs.parallel.function_fingerprint"]], "jobs.parallel": [[139, "module-jobs.parallel"]], "parallel_cached_wrapper() (in module jobs.parallel)": [[139, "jobs.parallel.parallel_cached_wrapper"]], "parallel_error_handling() (in module jobs.parallel)": [[139, "jobs.parallel.parallel_error_handling"]], "parallel_indirect_wrapper() (in module jobs.parallel)": [[139, "jobs.parallel.parallel_indirect_wrapper"]], "pararraymap() (in module jobs.parallel)": [[139, "jobs.parallel.pararraymap"]], "parimap() (in module jobs.parallel)": [[139, "jobs.parallel.parimap"]], "parmap() (in module jobs.parallel)": [[139, "jobs.parallel.parmap"]], "parmap_dict() (in module jobs.parallel)": [[139, "jobs.parallel.parmap_dict"]], "reset_pool() (in module jobs.parallel)": [[139, "jobs.parallel.reset_pool"]], "linalg": [[140, "module-linalg"]], "ascolumn() (in module linalg.arguments)": [[141, "linalg.arguments.ascolumn"]], "asrow() (in module linalg.arguments)": [[141, "linalg.arguments.asrow"]], "assertcolumn() (in module linalg.arguments)": [[141, "linalg.arguments.assertcolumn"]], "assertfinite() (in module linalg.arguments)": [[141, "linalg.arguments.assertfinite"]], "assertfinitereal() (in module linalg.arguments)": [[141, "linalg.arguments.assertfinitereal"]], "assertreal() (in module linalg.arguments)": [[141, "linalg.arguments.assertreal"]], "assertrow() (in module linalg.arguments)": [[141, "linalg.arguments.assertrow"]], "assertshape() (in module linalg.arguments)": [[141, "linalg.arguments.assertshape"]], "assertsquare() (in module linalg.arguments)": [[141, "linalg.arguments.assertsquare"]], "assertvector() (in module linalg.arguments)": [[141, "linalg.arguments.assertvector"]], "assquare() (in module linalg.arguments)": [[141, "linalg.arguments.assquare"]], "asvector() (in module linalg.arguments)": [[141, "linalg.arguments.asvector"]], "iscolumn() (in module linalg.arguments)": [[141, "linalg.arguments.iscolumn"]], "isrow() (in module linalg.arguments)": [[141, "linalg.arguments.isrow"]], "issquare() (in module linalg.arguments)": [[141, "linalg.arguments.issquare"]], "linalg.arguments": [[141, "module-linalg.arguments"]], "scalar() (in module linalg.arguments)": [[141, "linalg.arguments.scalar"]], "ldistance() (in module linalg.matrix)": [[142, "linalg.matrix.Ldistance"]], "llasso() (in module linalg.matrix)": [[142, "linalg.matrix.Llasso"]], "abserr() (in module linalg.matrix)": [[142, "linalg.matrix.abserr"]], "autopredict() (in module linalg.matrix)": [[142, "linalg.matrix.autopredict"]], "cartesian_product() (in module linalg.matrix)": [[142, "linalg.matrix.cartesian_product"]], "check_covmat() (in module linalg.matrix)": [[142, "linalg.matrix.check_covmat"]], "check_covmat_fast() (in module linalg.matrix)": [[142, "linalg.matrix.check_covmat_fast"]], "check_finite_real() (in module linalg.matrix)": [[142, "linalg.matrix.check_finite_real"]], "cholupdate() (in module linalg.matrix)": [[142, "linalg.matrix.cholupdate"]], "cholupdate_eye() (in module linalg.matrix)": [[142, "linalg.matrix.cholupdate_eye"]], "cinv() (in module linalg.matrix)": [[142, "linalg.matrix.cinv"]], "column() (in module linalg.matrix)": [[142, "linalg.matrix.column"]], "csolve() (in module linalg.matrix)": [[142, "linalg.matrix.csolve"]], "errmx() (in module linalg.matrix)": [[142, "linalg.matrix.errmx"]], "kronsum() (in module linalg.matrix)": [[142, "linalg.matrix.kronsum"]], "laplace_kernel() (in module linalg.matrix)": [[142, "linalg.matrix.laplace_kernel"]], "ldiv() (in module linalg.matrix)": [[142, "linalg.matrix.ldiv"]], "linalg.matrix": [[142, "module-linalg.matrix"]], "logdet() (in module linalg.matrix)": [[142, "linalg.matrix.logdet"]], "match_covariance() (in module linalg.matrix)": [[142, "linalg.matrix.match_covariance"]], "maxeig() (in module linalg.matrix)": [[142, "linalg.matrix.maxeig"]], "nearpdhigham() (in module linalg.matrix)": [[142, "linalg.matrix.nearPDHigham"]], "nearpsdrebonatojackel() (in module linalg.matrix)": [[142, "linalg.matrix.nearPSDRebonatoJackel"]], "normedcovariance() (in module linalg.matrix)": [[142, "linalg.matrix.normedcovariance"]], "psd_eig() (in module linalg.matrix)": [[142, "linalg.matrix.psd_eig"]], "qf() (in module linalg.matrix)": [[142, "linalg.matrix.qf"]], "rcond() (in module linalg.matrix)": [[142, "linalg.matrix.rcond"]], "rdiv() (in module linalg.matrix)": [[142, "linalg.matrix.rdiv"]], "real_eig() (in module linalg.matrix)": [[142, "linalg.matrix.real_eig"]], "reglstsq() (in module linalg.matrix)": [[142, "linalg.matrix.reglstsq"]], "rmatrix() (in module linalg.matrix)": [[142, "linalg.matrix.rmatrix"]], "row() (in module linalg.matrix)": [[142, "linalg.matrix.row"]], "rsolt() (in module linalg.matrix)": [[142, "linalg.matrix.rsolt"]], "rsolve() (in module linalg.matrix)": [[142, "linalg.matrix.rsolve"]], "selector_matrix() (in module linalg.matrix)": [[142, "linalg.matrix.selector_matrix"]], "solt() (in module linalg.matrix)": [[142, "linalg.matrix.solt"]], "top_v() (in module linalg.matrix)": [[142, "linalg.matrix.top_v"]], "tril_elements() (in module linalg.matrix)": [[142, "linalg.matrix.tril_elements"]], "triu_elements() (in module linalg.matrix)": [[142, "linalg.matrix.triu_elements"]], "wheremax() (in module linalg.matrix)": [[142, "linalg.matrix.wheremax"]], "wheremin() (in module linalg.matrix)": [[142, "linalg.matrix.wheremin"]], "adjacency1d() (in module linalg.operators)": [[143, "linalg.operators.adjacency1D"]], "adjacency2d() (in module linalg.operators)": [[143, "linalg.operators.adjacency2D"]], "adjacency2d_circular() (in module linalg.operators)": [[143, "linalg.operators.adjacency2D_circular"]], "adjacency2d_rotational() (in module linalg.operators)": [[143, "linalg.operators.adjacency2d_rotational"]], "circular1dbluroperator() (in module linalg.operators)": [[143, "linalg.operators.circular1DblurOperator"]], "cosine_kernel() (in module linalg.operators)": [[143, "linalg.operators.cosine_kernel"]], "covfrom() (in module linalg.operators)": [[143, "linalg.operators.covfrom"]], "delta() (in module linalg.operators)": [[143, "linalg.operators.delta"]], "differentiator() (in module linalg.operators)": [[143, "linalg.operators.differentiator"]], "diffuseft1d() (in module linalg.operators)": [[143, "linalg.operators.diffuseFT1D"]], "flatcov() (in module linalg.operators)": [[143, "linalg.operators.flatcov"]], "gaussian1dbluroperator() (in module linalg.operators)": [[143, "linalg.operators.gaussian1DblurOperator"]], "gaussian2dbluroperator() (in module linalg.operators)": [[143, "linalg.operators.gaussian2DblurOperator"]], "integrator() (in module linalg.operators)": [[143, "linalg.operators.integrator"]], "laplacian1d() (in module linalg.operators)": [[143, "linalg.operators.laplacian1D"]], "laplacian1d_circular() (in module linalg.operators)": [[143, "linalg.operators.laplacian1D_circular"]], "laplacian2d() (in module linalg.operators)": [[143, "linalg.operators.laplacian2D"]], "laplacianft1d() (in module linalg.operators)": [[143, "linalg.operators.laplacianFT1D"]], "linalg.operators": [[143, "module-linalg.operators"]], "log_cosine_basis() (in module linalg.operators)": [[143, "linalg.operators.log_cosine_basis"]], "make_cosine_basis() (in module linalg.operators)": [[143, "linalg.operators.make_cosine_basis"]], "oucov() (in module linalg.operators)": [[143, "linalg.operators.oucov"]], "separable_guassian_blur() (in module linalg.operators)": [[143, "linalg.operators.separable_guassian_blur"]], "wienerft1d() (in module linalg.operators)": [[143, "linalg.operators.wienerFT1D"]], "models": [[144, "module-models"]], "du_izh() (in module models.izh)": [[145, "models.izh.du_izh"]], "dv_izh() (in module models.izh)": [[145, "models.izh.dv_izh"]], "models.izh": [[145, "module-models.izh"]], "sim_izh() (in module models.izh)": [[145, "models.izh.sim_izh"]], "update_izh() (in module models.izh)": [[145, "models.izh.update_izh"]], "euler_integrate_lif() (in module models.lif)": [[146, "models.lif.euler_integrate_LIF"]], "exponential_integrate_lif() (in module models.lif)": [[146, "models.lif.exponential_integrate_LIF"]], "exponential_moving_average() (in module models.lif)": [[146, "models.lif.exponential_moving_average"]], "models.lif": [[146, "module-models.lif"]], "beta() (in module nlab)": [[325, "nlab.beta"]], "binomial() (in module nlab)": [[325, "nlab.binomial"]], "chisquare() (in module nlab)": [[325, "nlab.chisquare"]], "choice() (in module nlab)": [[325, "nlab.choice"]], "dirichlet() (in module nlab)": [[325, "nlab.dirichlet"]], "exponential() (in module nlab)": [[325, "nlab.exponential"]], "f() (in module nlab)": [[325, "nlab.f"]], "gamma() (in module nlab)": [[325, "nlab.gamma"]], "geometric() (in module nlab)": [[325, "nlab.geometric"]], "get_state() (in module nlab)": [[325, "nlab.get_state"]], "gumbel() (in module nlab)": [[325, "nlab.gumbel"]], "hypergeometric() (in module nlab)": [[325, "nlab.hypergeometric"]], "laplace() (in module nlab)": [[325, "nlab.laplace"]], "logistic() (in module nlab)": [[325, "nlab.logistic"]], "lognormal() (in module nlab)": [[325, "nlab.lognormal"]], "logseries() (in module nlab)": [[325, "nlab.logseries"]], "multinomial() (in module nlab)": [[325, "nlab.multinomial"]], "multivariate_normal() (in module nlab)": [[325, "nlab.multivariate_normal"]], "negative_binomial() (in module nlab)": [[325, "nlab.negative_binomial"]], "nlab": [[325, "module-nlab"]], "noncentral_chisquare() (in module nlab)": [[325, "nlab.noncentral_chisquare"]], "noncentral_f() (in module nlab)": [[325, "nlab.noncentral_f"]], "normal() (in module nlab)": [[325, "nlab.normal"]], "pareto() (in module nlab)": [[325, "nlab.pareto"]], "permutation() (in module nlab)": [[325, "nlab.permutation"]], "poisson() (in module nlab)": [[325, "nlab.poisson"]], "power() (in module nlab)": [[325, "nlab.power"]], "rand() (in module nlab)": [[325, "nlab.rand"]], "randint() (in module nlab)": [[325, "nlab.randint"]], "randn() (in module nlab)": [[325, "nlab.randn"]], "random() (in module nlab)": [[325, "nlab.random"]], "random_integers() (in module nlab)": [[325, "nlab.random_integers"]], "random_sample() (in module nlab)": [[325, "nlab.random_sample"]], "rayleigh() (in module nlab)": [[325, "nlab.rayleigh"]], "seed() (in module nlab)": [[325, "nlab.seed"]], "set_state() (in module nlab)": [[325, "nlab.set_state"]], "shuffle() (in module nlab)": [[325, "nlab.shuffle"]], "standard_cauchy() (in module nlab)": [[325, "nlab.standard_cauchy"]], "standard_exponential() (in module nlab)": [[325, "nlab.standard_exponential"]], "standard_gamma() (in module nlab)": [[325, "nlab.standard_gamma"]], "standard_normal() (in module nlab)": [[325, "nlab.standard_normal"]], "standard_t() (in module nlab)": [[325, "nlab.standard_t"]], "triangular() (in module nlab)": [[325, "nlab.triangular"]], "uniform() (in module nlab)": [[325, "nlab.uniform"]], "vonmises() (in module nlab)": [[325, "nlab.vonmises"]], "wald() (in module nlab)": [[325, "nlab.wald"]], "weibull() (in module nlab)": [[325, "nlab.weibull"]], "zipf() (in module nlab)": [[325, "nlab.zipf"]], "handlers (class in signal)": [[327, "signal.Handlers"]], "itimererror (in module signal)": [[327, "signal.ItimerError"]], "sigabrt (signal.signals attribute)": [[327, "signal.Signals.SIGABRT"]], "sigalrm (signal.signals attribute)": [[327, "signal.Signals.SIGALRM"]], "sigbus (signal.signals attribute)": [[327, "signal.Signals.SIGBUS"]], "sigchld (signal.signals attribute)": [[327, "signal.Signals.SIGCHLD"]], "sigcld (signal.signals attribute)": [[327, "signal.Signals.SIGCLD"]], "sigcont (signal.signals attribute)": [[327, "signal.Signals.SIGCONT"]], "sigfpe (signal.signals attribute)": [[327, "signal.Signals.SIGFPE"]], "sighup (signal.signals attribute)": [[327, "signal.Signals.SIGHUP"]], "sigill (signal.signals attribute)": [[327, "signal.Signals.SIGILL"]], "sigint (signal.signals attribute)": [[327, "signal.Signals.SIGINT"]], "sigio (signal.signals attribute)": [[327, "signal.Signals.SIGIO"]], "sigiot (signal.signals attribute)": [[327, "signal.Signals.SIGIOT"]], "sigkill (signal.signals attribute)": [[327, "signal.Signals.SIGKILL"]], "sigpipe (signal.signals attribute)": [[327, "signal.Signals.SIGPIPE"]], "sigpoll (signal.signals attribute)": [[327, "signal.Signals.SIGPOLL"]], "sigprof (signal.signals attribute)": [[327, "signal.Signals.SIGPROF"]], "sigpwr (signal.signals attribute)": [[327, "signal.Signals.SIGPWR"]], "sigquit (signal.signals attribute)": [[327, "signal.Signals.SIGQUIT"]], "sigrtmax (signal.signals attribute)": [[327, "signal.Signals.SIGRTMAX"]], "sigrtmin (signal.signals attribute)": [[327, "signal.Signals.SIGRTMIN"]], "sigsegv (signal.signals attribute)": [[327, "signal.Signals.SIGSEGV"]], "sigstop (signal.signals attribute)": [[327, "signal.Signals.SIGSTOP"]], "sigsys (signal.signals attribute)": [[327, "signal.Signals.SIGSYS"]], "sigterm (signal.signals attribute)": [[327, "signal.Signals.SIGTERM"]], "sigtrap (signal.signals attribute)": [[327, "signal.Signals.SIGTRAP"]], "sigtstp (signal.signals attribute)": [[327, "signal.Signals.SIGTSTP"]], "sigttin (signal.signals attribute)": [[327, "signal.Signals.SIGTTIN"]], "sigttou (signal.signals attribute)": [[327, "signal.Signals.SIGTTOU"]], "sigurg (signal.signals attribute)": [[327, "signal.Signals.SIGURG"]], "sigusr1 (signal.signals attribute)": [[327, "signal.Signals.SIGUSR1"]], "sigusr2 (signal.signals attribute)": [[327, "signal.Signals.SIGUSR2"]], "sigvtalrm (signal.signals attribute)": [[327, "signal.Signals.SIGVTALRM"]], "sigwinch (signal.signals attribute)": [[327, "signal.Signals.SIGWINCH"]], "sigxcpu (signal.signals attribute)": [[327, "signal.Signals.SIGXCPU"]], "sigxfsz (signal.signals attribute)": [[327, "signal.Signals.SIGXFSZ"]], "sig_block (signal.sigmasks attribute)": [[327, "signal.Sigmasks.SIG_BLOCK"]], "sig_dfl (signal.handlers attribute)": [[327, "signal.Handlers.SIG_DFL"]], "sig_ign (signal.handlers attribute)": [[327, "signal.Handlers.SIG_IGN"]], "sig_setmask (signal.sigmasks attribute)": [[327, "signal.Sigmasks.SIG_SETMASK"]], "sig_unblock (signal.sigmasks attribute)": [[327, "signal.Sigmasks.SIG_UNBLOCK"]], "sigmasks (class in signal)": [[327, "signal.Sigmasks"]], "signals (class in signal)": [[327, "signal.Signals"]], "getsignal() (in module signal)": [[327, "signal.getsignal"]], "n_fields (signal.struct_siginfo attribute)": [[327, "signal.struct_siginfo.n_fields"]], "n_sequence_fields (signal.struct_siginfo attribute)": [[327, "signal.struct_siginfo.n_sequence_fields"]], "n_unnamed_fields (signal.struct_siginfo attribute)": [[327, "signal.struct_siginfo.n_unnamed_fields"]], "pthread_sigmask() (in module signal)": [[327, "signal.pthread_sigmask"]], "si_band (signal.struct_siginfo attribute)": [[327, "signal.struct_siginfo.si_band"]], "si_code (signal.struct_siginfo attribute)": [[327, "signal.struct_siginfo.si_code"]], "si_errno (signal.struct_siginfo attribute)": [[327, "signal.struct_siginfo.si_errno"]], "si_pid (signal.struct_siginfo attribute)": [[327, "signal.struct_siginfo.si_pid"]], "si_signo (signal.struct_siginfo attribute)": [[327, "signal.struct_siginfo.si_signo"]], "si_status (signal.struct_siginfo attribute)": [[327, "signal.struct_siginfo.si_status"]], "si_uid (signal.struct_siginfo attribute)": [[327, "signal.struct_siginfo.si_uid"]], "signal": [[327, "module-signal"]], "signal() (in module signal)": [[327, "signal.signal"]], "sigpending() (in module signal)": [[327, "signal.sigpending"]], "sigwait() (in module signal)": [[327, "signal.sigwait"]], "struct_siginfo (class in signal)": [[327, "signal.struct_siginfo"]], "valid_signals() (in module signal)": [[327, "signal.valid_signals"]], "signal.signal": [[337, "module-signal.signal"]], "brute_force_local_2d_maxima() (in module spatial)": [[338, "spatial.brute_force_local_2d_maxima"]], "spatial": [[338, "module-spatial"]], "array_average_amplitude() (in module spatial.array)": [[339, "spatial.array.array_average_amplitude"]], "array_count_centers() (in module spatial.array)": [[339, "spatial.array.array_count_centers"]], "array_count_critical() (in module spatial.array)": [[339, "spatial.array.array_count_critical"]], "array_kuramoto() (in module spatial.array)": [[339, "spatial.array.array_kuramoto"]], "array_kuramoto_pgd() (in module spatial.array)": [[339, "spatial.array.array_kuramoto_pgd"]], "array_kuramoto_pgd_standard_deviation() (in module spatial.array)": [[339, "spatial.array.array_kuramoto_pgd_standard_deviation"]], "array_kuramoto_standard_deviation() (in module spatial.array)": [[339, "spatial.array.array_kuramoto_standard_deviation"]], "array_phase_gradient() (in module spatial.array)": [[339, "spatial.array.array_phase_gradient"]], "array_phasegradient_local() (in module spatial.array)": [[339, "spatial.array.array_phasegradient_local"]], "array_phasegradient_magnitude_cv() (in module spatial.array)": [[339, "spatial.array.array_phasegradient_magnitude_cv"]], "array_phasegradient_magnitude_sigma() (in module spatial.array)": [[339, "spatial.array.array_phasegradient_magnitude_sigma"]], "array_phasegradient_pgd_threshold() (in module spatial.array)": [[339, "spatial.array.array_phasegradient_pgd_threshold"]], "array_phasegradient_planar() (in module spatial.array)": [[339, "spatial.array.array_phasegradient_planar"]], "array_speed_local() (in module spatial.array)": [[339, "spatial.array.array_speed_local"]], "array_speed_pgd_threshold() (in module spatial.array)": [[339, "spatial.array.array_speed_pgd_threshold"]], "array_synchrony() (in module spatial.array)": [[339, "spatial.array.array_synchrony"]], "array_synchrony_pgd() (in module spatial.array)": [[339, "spatial.array.array_synchrony_pgd"]], "array_synchrony_pgd_standard_deviation() (in module spatial.array)": [[339, "spatial.array.array_synchrony_pgd_standard_deviation"]], "array_synchrony_standard_deviation() (in module spatial.array)": [[339, "spatial.array.array_synchrony_standard_deviation"]], "array_wavelength_local() (in module spatial.array)": [[339, "spatial.array.array_wavelength_local"]], "array_wavelength_local_pgd_threshold() (in module spatial.array)": [[339, "spatial.array.array_wavelength_local_pgd_threshold"]], "array_wavelength_pgd_threshold() (in module spatial.array)": [[339, "spatial.array.array_wavelength_pgd_threshold"]], "array_wavelength_planar() (in module spatial.array)": [[339, "spatial.array.array_wavelength_planar"]], "pack_array_data() (in module spatial.array)": [[339, "spatial.array.pack_array_data"]], "spatial.array": [[339, "module-spatial.array"]], "trim_array() (in module spatial.array)": [[339, "spatial.array.trim_array"]], "trim_array_as_if() (in module spatial.array)": [[339, "spatial.array.trim_array_as_if"]], "dct_cut() (in module spatial.dct)": [[340, "spatial.dct.dct_cut"]], "dct_cut_antialias() (in module spatial.dct)": [[340, "spatial.dct.dct_cut_antialias"]], "dct_cut_downsampled() (in module spatial.dct)": [[340, "spatial.dct.dct_cut_downsampled"]], "dct_upsample() (in module spatial.dct)": [[340, "spatial.dct.dct_upsample"]], "dct_upsample_notrim() (in module spatial.dct)": [[340, "spatial.dct.dct_upsample_notrim"]], "get_mask() (in module spatial.dct)": [[340, "spatial.dct.get_mask"]], "get_mask_antialiased() (in module spatial.dct)": [[340, "spatial.dct.get_mask_antialiased"]], "iterated_upsample() (in module spatial.dct)": [[340, "spatial.dct.iterated_upsample"]], "outer_complex() (in module spatial.dct)": [[340, "spatial.dct.outer_complex"]], "spatial.dct": [[340, "module-spatial.dct"]], "distance_angular_deviation() (in module spatial.distance)": [[341, "spatial.distance.distance_angular_deviation"]], "get_average_synchrony_length_constant_parallel() (in module spatial.distance)": [[341, "spatial.distance.get_average_synchrony_length_constant_parallel"]], "get_averaged_angular_distance() (in module spatial.distance)": [[341, "spatial.distance.get_averaged_angular_distance"]], "get_length_constant_trial() (in module spatial.distance)": [[341, "spatial.distance.get_length_constant_trial"]], "get_pair_distance() (in module spatial.distance)": [[341, "spatial.distance.get_pair_distance"]], "spatial.distance": [[341, "module-spatial.distance"]], "synchrony_length_constant_areas_summary() (in module spatial.distance)": [[341, "spatial.distance.synchrony_length_constant_areas_summary"]], "coalesce() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.coalesce"]], "coalesce_points() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.coalesce_points"]], "cut_array_data() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.cut_array_data"]], "dphidx() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.dPhidx"]], "dphidy() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.dPhidy"]], "find_critical_points() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.find_critical_points"]], "find_critical_potential_points() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.find_critical_potential_points"]], "get_critical_spectra() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.get_critical_spectra"]], "get_phase_gradient_as_complex() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.get_phase_gradient_as_complex"]], "getp() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.getp"]], "getpeaks2d() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.getpeaks2d"]], "grad() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.grad"]], "mirror2d() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.mirror2D"]], "plot_critical_points() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.plot_critical_points"]], "plot_critical_spectra() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.plot_critical_spectra"]], "plot_phase_direction() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.plot_phase_direction"]], "plot_phase_gradient() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.plot_phase_gradient"]], "quickgrad() (in module spatial.fftzeros)": [[342, "spatial.fftzeros.quickgrad"]], "spatial.fftzeros": [[342, "module-spatial.fftzeros"]], "absorbing_gaussian() (in module spatial.kernels)": [[343, "spatial.kernels.absorbing_gaussian"]], "absorbing_laplacian() (in module spatial.kernels)": [[343, "spatial.kernels.absorbing_laplacian"]], "continuum_kernel() (in module spatial.kernels)": [[343, "spatial.kernels.continuum_kernel"]], "cosine_kernel() (in module spatial.kernels)": [[343, "spatial.kernels.cosine_kernel"]], "diffusion_basis() (in module spatial.kernels)": [[343, "spatial.kernels.diffusion_basis"]], "exponential_basis() (in module spatial.kernels)": [[343, "spatial.kernels.exponential_basis"]], "gaussian_2d_kernel() (in module spatial.kernels)": [[343, "spatial.kernels.gaussian_2D_kernel"]], "iterative_orthogonalize_basis() (in module spatial.kernels)": [[343, "spatial.kernels.iterative_orthogonalize_basis"]], "laplace_kernel() (in module spatial.kernels)": [[343, "spatial.kernels.laplace_kernel"]], "laplacian() (in module spatial.kernels)": [[343, "spatial.kernels.laplacian"]], "log_cosine_basis() (in module spatial.kernels)": [[343, "spatial.kernels.log_cosine_basis"]], "log_spline_basis() (in module spatial.kernels)": [[343, "spatial.kernels.log_spline_basis"]], "magickernel() (in module spatial.kernels)": [[343, "spatial.kernels.magickernel"]], "magicsharp() (in module spatial.kernels)": [[343, "spatial.kernels.magicsharp"]], "make_cosine_basis() (in module spatial.kernels)": [[343, "spatial.kernels.make_cosine_basis"]], "spatial.kernels": [[343, "module-spatial.kernels"]], "analytic_signal_coherence() (in module spatial.phase)": [[344, "spatial.phase.analytic_signal_coherence"]], "population_average_amplitude() (in module spatial.phase)": [[344, "spatial.phase.population_average_amplitude"]], "population_kuramoto() (in module spatial.phase)": [[344, "spatial.phase.population_kuramoto"]], "population_median_frequency() (in module spatial.phase)": [[344, "spatial.phase.population_median_frequency"]], "population_median_phase_velocity() (in module spatial.phase)": [[344, "spatial.phase.population_median_phase_velocity"]], "population_normalized_sliding_signal_coherence() (in module spatial.phase)": [[344, "spatial.phase.population_normalized_sliding_signal_coherence"]], "population_phase_coherence() (in module spatial.phase)": [[344, "spatial.phase.population_phase_coherence"]], "population_phase_relative_sliding_kuramoto() (in module spatial.phase)": [[344, "spatial.phase.population_phase_relative_sliding_kuramoto"]], "population_polar_std() (in module spatial.phase)": [[344, "spatial.phase.population_polar_std"]], "population_signal_amplitude_dispersion() (in module spatial.phase)": [[344, "spatial.phase.population_signal_amplitude_dispersion"]], "population_signal_amplitude_precision() (in module spatial.phase)": [[344, "spatial.phase.population_signal_amplitude_precision"]], "population_signal_amplitude_std() (in module spatial.phase)": [[344, "spatial.phase.population_signal_amplitude_std"]], "population_signal_concentration() (in module spatial.phase)": [[344, "spatial.phase.population_signal_concentration"]], "population_signal_description() (in module spatial.phase)": [[344, "spatial.phase.population_signal_description"]], "population_signal_dispersion() (in module spatial.phase)": [[344, "spatial.phase.population_signal_dispersion"]], "population_signal_phase_dispersion() (in module spatial.phase)": [[344, "spatial.phase.population_signal_phase_dispersion"]], "population_signal_phase_precision() (in module spatial.phase)": [[344, "spatial.phase.population_signal_phase_precision"]], "population_signal_phase_std() (in module spatial.phase)": [[344, "spatial.phase.population_signal_phase_std"]], "population_signal_precision() (in module spatial.phase)": [[344, "spatial.phase.population_signal_precision"]], "population_sliding_signal_coherence() (in module spatial.phase)": [[344, "spatial.phase.population_sliding_signal_coherence"]], "population_synchrony() (in module spatial.phase)": [[344, "spatial.phase.population_synchrony"]], "population_synchrony_linear() (in module spatial.phase)": [[344, "spatial.phase.population_synchrony_linear"]], "sliding_population_signal_coherence() (in module spatial.phase)": [[344, "spatial.phase.sliding_population_signal_coherence"]], "spatial.phase": [[344, "module-spatial.phase"]], "interp_bin() (in module spatial.spiking)": [[346, "spatial.spiking.interp_bin"]], "spatial.spiking": [[346, "module-spatial.spiking"]], "coalesce() (in module spatial.triangulation)": [[347, "spatial.triangulation.coalesce"]], "edgesnearby() (in module spatial.triangulation)": [[347, "spatial.triangulation.edgesNearby"]], "mergenearby() (in module spatial.triangulation)": [[347, "spatial.triangulation.mergeNearby"]], "plot_edges() (in module spatial.triangulation)": [[347, "spatial.triangulation.plot_edges"]], "plot_triangles() (in module spatial.triangulation)": [[347, "spatial.triangulation.plot_triangles"]], "spatial.triangulation": [[347, "module-spatial.triangulation"]], "trianglestoedges() (in module spatial.triangulation)": [[347, "spatial.triangulation.trianglesToEdges"]], "uniquerow() (in module spatial.triangulation)": [[347, "spatial.triangulation.uniquerow"]], "z2xy() (in module spatial.triangulation)": [[347, "spatial.triangulation.z2xy"]], "bin_spike_times() (in module spikes.spikes)": [[349, "spikes.spikes.bin_spike_times"]], "bin_spikes_raster() (in module spikes.spikes)": [[349, "spikes.spikes.bin_spikes_raster"]], "cut_spikes() (in module spikes.spikes)": [[349, "spikes.spikes.cut_spikes"]], "pack_cross_correlation_matrix() (in module spikes.spikes)": [[349, "spikes.spikes.pack_cross_correlation_matrix"]], "pp_xcorr() (in module spikes.spikes)": [[349, "spikes.spikes.pp_xcorr"]], "spikes.spikes": [[349, "module-spikes.spikes"]], "times_to_raster() (in module spikes.spikes)": [[349, "spikes.spikes.times_to_raster"]], "txcorr() (in module spikes.spikes)": [[349, "spikes.spikes.txcorr"]], "getfwhm() (in module spikes.waveform)": [[350, "spikes.waveform.getFWHM"]], "getphp() (in module spikes.waveform)": [[350, "spikes.waveform.getPHP"]], "getpt() (in module spikes.waveform)": [[350, "spikes.waveform.getPT"]], "getpthw() (in module spikes.waveform)": [[350, "spikes.waveform.getPTHW"]], "getpvt() (in module spikes.waveform)": [[350, "spikes.waveform.getPVT"]], "getwahp() (in module spikes.waveform)": [[350, "spikes.waveform.getWAHP"]], "is_thin() (in module spikes.waveform)": [[350, "spikes.waveform.is_thin"]], "is_thin_pvt() (in module spikes.waveform)": [[350, "spikes.waveform.is_thin_pvt"]], "minmax() (in module spikes.waveform)": [[350, "spikes.waveform.minmax"]], "normalized_waveform() (in module spikes.waveform)": [[350, "spikes.waveform.normalized_waveform"]], "process() (in module spikes.waveform)": [[350, "spikes.waveform.process"]], "realign() (in module spikes.waveform)": [[350, "spikes.waveform.realign"]], "spikes.waveform": [[350, "module-spikes.waveform"]], "autocorrelation_bayes() (in module stats.convolutional)": [[354, "stats.convolutional.autocorrelation_bayes"]], "blockccm() (in module stats.convolutional)": [[354, "stats.convolutional.blockccm"]], "blocksta() (in module stats.convolutional)": [[354, "stats.convolutional.blocksta"]], "ccm() (in module stats.convolutional)": [[354, "stats.convolutional.ccm"]], "ccor() (in module stats.convolutional)": [[354, "stats.convolutional.ccor"]], "construct_lowpass_operator() (in module stats.convolutional)": [[354, "stats.convolutional.construct_lowpass_operator"]], "create_spectral_model() (in module stats.convolutional)": [[354, "stats.convolutional.create_spectral_model"]], "cspect() (in module stats.convolutional)": [[354, "stats.convolutional.cspect"]], "cspectm() (in module stats.convolutional)": [[354, "stats.convolutional.cspectm"]], "reconstruct() (in module stats.convolutional)": [[354, "stats.convolutional.reconstruct"]], "spectreconstruct() (in module stats.convolutional)": [[354, "stats.convolutional.spectreconstruct"]], "spike_lfp_filters() (in module stats.convolutional)": [[354, "stats.convolutional.spike_lfp_filters"]], "sta() (in module stats.convolutional)": [[354, "stats.convolutional.sta"]], "stats.convolutional": [[354, "module-stats.convolutional"]], "adaptive_density_grid() (in module stats.density)": [[355, "stats.density.adaptive_density_grid"]], "gridhist() (in module stats.density)": [[355, "stats.density.gridhist"]], "kdepeak() (in module stats.density)": [[355, "stats.density.kdepeak"]], "knn_1d_density() (in module stats.density)": [[355, "stats.density.knn_1d_density"]], "stats.density": [[355, "module-stats.density"]], "explogpdf() (in module stats.distributions)": [[356, "stats.distributions.explogpdf"]], "gaussian_logpdf() (in module stats.distributions)": [[356, "stats.distributions.gaussian_logpdf"]], "gaussian_pdf() (in module stats.distributions)": [[356, "stats.distributions.gaussian_pdf"]], "poisson_logpdf() (in module stats.distributions)": [[356, "stats.distributions.poisson_logpdf"]], "poisson_pdf() (in module stats.distributions)": [[356, "stats.distributions.poisson_pdf"]], "sample_categorical() (in module stats.distributions)": [[356, "stats.distributions.sample_categorical"]], "stats.distributions": [[356, "module-stats.distributions"]], "fast_kde() (in module stats.fast_kde)": [[358, "stats.fast_kde.fast_kde"]], "image_cov() (in module stats.fast_kde)": [[358, "stats.fast_kde.image_cov"]], "stats.fast_kde": [[358, "module-stats.fast_kde"]], "glmpenaltybernoulli() (in module stats.glm)": [[359, "stats.glm.GLMPenaltyBernoulli"]], "glmpenaltyl2() (in module stats.glm)": [[359, "stats.glm.GLMPenaltyL2"]], "glmpenaltypoisson() (in module stats.glm)": [[359, "stats.glm.GLMPenaltyPoisson"]], "cosine_kernel() (in module stats.glm)": [[359, "stats.glm.cosine_kernel"]], "crossvalidatedauc() (in module stats.glm)": [[359, "stats.glm.crossvalidatedAUC"]], "fitglm() (in module stats.glm)": [[359, "stats.glm.fitGLM"]], "gradientglmfit() (in module stats.glm)": [[359, "stats.glm.gradientglmfit"]], "log_cosine_basis() (in module stats.glm)": [[359, "stats.glm.log_cosine_basis"]], "make_cosine_basis() (in module stats.glm)": [[359, "stats.glm.make_cosine_basis"]], "numeric_grad() (in module stats.glm)": [[359, "stats.glm.numeric_grad"]], "numeric_hess() (in module stats.glm)": [[359, "stats.glm.numeric_hess"]], "ppglmfit() (in module stats.glm)": [[359, "stats.glm.ppglmfit"]], "sexp() (in module stats.glm)": [[359, "stats.glm.sexp"]], "sigmoid() (in module stats.glm)": [[359, "stats.glm.sigmoid"]], "stats.glm": [[359, "module-stats.glm"]], "bernoulliobservationapproximator (class in stats.hmm)": [[362, "stats.hmm.BernoulliObservationApproximator"]], "bernoulliobservationmodel (class in stats.hmm)": [[362, "stats.hmm.BernoulliObservationModel"]], "chisquarecoxapproximator (class in stats.hmm)": [[362, "stats.hmm.ChisquareCoxApproximator"]], "chisquarecoxmodel (class in stats.hmm)": [[362, "stats.hmm.ChisquareCoxModel"]], "diffusiongaussian (class in stats.hmm)": [[362, "stats.hmm.DiffusionGaussian"]], "gaussiancoxapproximator (class in stats.hmm)": [[362, "stats.hmm.GaussianCoxApproximator"]], "gaussiancoxmodel (class in stats.hmm)": [[362, "stats.hmm.GaussianCoxModel"]], "loggaussiancoxapproximator (class in stats.hmm)": [[362, "stats.hmm.LogGaussianCoxApproximator"]], "loggaussiancoxmodel (class in stats.hmm)": [[362, "stats.hmm.LogGaussianCoxModel"]], "mvgouupdate (class in stats.hmm)": [[362, "stats.hmm.MVGOUUpdate"]], "mvgupdate (class in stats.hmm)": [[362, "stats.hmm.MVGUpdate"]], "mvgaussian (class in stats.hmm)": [[362, "stats.hmm.MVGaussian"]], "mvloggaussiancox (class in stats.hmm)": [[362, "stats.hmm.MVLogGaussianCox"]], "mvloggaussiancox.mvpoissonapproximator (class in stats.hmm)": [[362, "stats.hmm.MVLogGaussianCox.MVPoissonApproximator"]], "ougaussian (class in stats.hmm)": [[362, "stats.hmm.OUGaussian"]], "poissonobservationapproximator (class in stats.hmm)": [[362, "stats.hmm.PoissonObservationApproximator"]], "poissonobservationmodel (class in stats.hmm)": [[362, "stats.hmm.PoissonObservationModel"]], "truncatedloggaussiancoxapproximator (class in stats.hmm)": [[362, "stats.hmm.TruncatedLogGaussianCoxApproximator"]], "truncatedloggaussiancoxmodel (class in stats.hmm)": [[362, "stats.hmm.TruncatedLogGaussianCoxModel"]], "truncatedpoissonobservationapproximator (class in stats.hmm)": [[362, "stats.hmm.TruncatedPoissonObservationApproximator"]], "truncatedpoissonobservationmodel (class in stats.hmm)": [[362, "stats.hmm.TruncatedPoissonObservationModel"]], "backward_abstract() (in module stats.hmm)": [[362, "stats.hmm.backward_abstract"]], "baum_welch() (in module stats.hmm)": [[362, "stats.hmm.baum_welch"]], "bwd() (stats.hmm.diffusiongaussian method)": [[362, "stats.hmm.DiffusionGaussian.bwd"]], "bwd() (stats.hmm.mvgouupdate method)": [[362, "stats.hmm.MVGOUUpdate.bwd"]], "bwd() (stats.hmm.mvgupdate method)": [[362, "stats.hmm.MVGUpdate.bwd"]], "bwd() (stats.hmm.ougaussian method)": [[362, "stats.hmm.OUGaussian.bwd"]], "forward_abstract() (in module stats.hmm)": [[362, "stats.hmm.forward_abstract"]], "forward_backward() (in module stats.hmm)": [[362, "stats.hmm.forward_backward"]], "forward_backward_abstract() (in module stats.hmm)": [[362, "stats.hmm.forward_backward_abstract"]], "fwd() (stats.hmm.diffusiongaussian method)": [[362, "stats.hmm.DiffusionGaussian.fwd"]], "fwd() (stats.hmm.mvgouupdate method)": [[362, "stats.hmm.MVGOUUpdate.fwd"]], "fwd() (stats.hmm.mvgupdate method)": [[362, "stats.hmm.MVGUpdate.fwd"]], "fwd() (stats.hmm.ougaussian method)": [[362, "stats.hmm.OUGaussian.fwd"]], "hasnan() (in module stats.hmm)": [[362, "stats.hmm.hasNaN"]], "jump() (in module stats.hmm)": [[362, "stats.hmm.jump"]], "lgcp_observation_minimizer() (in module stats.hmm)": [[362, "stats.hmm.lgcp_observation_minimizer"]], "log_likelihood() (in module stats.hmm)": [[362, "stats.hmm.log_likelihood"]], "poisson_baum_welch() (in module stats.hmm)": [[362, "stats.hmm.poisson_baum_welch"]], "poisson_parameter_guess() (in module stats.hmm)": [[362, "stats.hmm.poisson_parameter_guess"]], "poisson_viterbi_state_infer() (in module stats.hmm)": [[362, "stats.hmm.poisson_viterbi_state_infer"]], "sample() (in module stats.hmm)": [[362, "stats.hmm.sample"]], "stats.hmm": [[362, "module-stats.hmm"]], "viterbi() (in module stats.hmm)": [[362, "stats.hmm.viterbi"]], "viterbi_log() (in module stats.hmm)": [[362, "stats.hmm.viterbi_log"]], "dkl_discrete() (in module stats.information)": [[363, "stats.information.DKL_discrete"]], "discrete_entropy_distribution() (in module stats.information)": [[363, "stats.information.discrete_entropy_distribution"]], "discrete_entropy_samples() (in module stats.information)": [[363, "stats.information.discrete_entropy_samples"]], "poisson_entropy_nats() (in module stats.information)": [[363, "stats.information.poisson_entropy_nats"]], "regularized_discrete_entropy() (in module stats.information)": [[363, "stats.information.regularized_discrete_entropy"]], "stats.information": [[363, "module-stats.information"]], "monte_carlo_expectation() (in module stats.mcint)": [[367, "stats.mcint.monte_carlo_expectation"]], "monte_carlo_moments() (in module stats.mcint)": [[367, "stats.mcint.monte_carlo_moments"]], "stats.mcint": [[367, "module-stats.mcint"]], "minimize_retry() (in module stats.minimize)": [[368, "stats.minimize.minimize_retry"]], "stats.minimize": [[368, "module-stats.minimize"]], "stats.mixtures": [[369, "module-stats.mixtures"]], "two_class_poisson_mixture_model() (in module stats.mixtures)": [[369, "stats.mixtures.two_class_poisson_mixture_model"]], "logmode() (in module stats.modefind)": [[370, "stats.modefind.logmode"]], "logmodeplot() (in module stats.modefind)": [[370, "stats.modefind.logmodeplot"]], "modefind() (in module stats.modefind)": [[370, "stats.modefind.modefind"]], "peakfinder5() (in module stats.modefind)": [[370, "stats.modefind.peakfinder5"]], "stats.modefind": [[370, "module-stats.modefind"]], "benjamini_hochberg_positive_correlations() (in module stats.pvalues)": [[372, "stats.pvalues.benjamini_hochberg_positive_correlations"]], "bootstrap_compare_mean() (in module stats.pvalues)": [[372, "stats.pvalues.bootstrap_compare_mean"]], "bootstrap_compare_median() (in module stats.pvalues)": [[372, "stats.pvalues.bootstrap_compare_median"]], "bootstrap_compare_statistic_two_sided() (in module stats.pvalues)": [[372, "stats.pvalues.bootstrap_compare_statistic_two_sided"]], "bootstrap_compare_statistic_two_sided_parallel() (in module stats.pvalues)": [[372, "stats.pvalues.bootstrap_compare_statistic_two_sided_parallel"]], "bootstrap_mean() (in module stats.pvalues)": [[372, "stats.pvalues.bootstrap_mean"]], "bootstrap_median() (in module stats.pvalues)": [[372, "stats.pvalues.bootstrap_median"]], "bootstrap_statistic_two_sided() (in module stats.pvalues)": [[372, "stats.pvalues.bootstrap_statistic_two_sided"]], "correct_pvalues() (in module stats.pvalues)": [[372, "stats.pvalues.correct_pvalues"]], "correct_pvalues_positive_dependent() (in module stats.pvalues)": [[372, "stats.pvalues.correct_pvalues_positive_dependent"]], "stats.pvalues": [[372, "module-stats.pvalues"]], "damped_cosine() (in module stats.regressions)": [[373, "stats.regressions.damped_cosine"]], "exponential_decay() (in module stats.regressions)": [[373, "stats.regressions.exponential_decay"]], "gaussian_function() (in module stats.regressions)": [[373, "stats.regressions.gaussian_function"]], "half_gaussian_function() (in module stats.regressions)": [[373, "stats.regressions.half_gaussian_function"]], "power_law() (in module stats.regressions)": [[373, "stats.regressions.power_law"]], "robust_line() (in module stats.regressions)": [[373, "stats.regressions.robust_line"]], "stats.regressions": [[373, "module-stats.regressions"]], "weighted_least_squares() (in module stats.regressions)": [[373, "stats.regressions.weighted_least_squares"]]}})