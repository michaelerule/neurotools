Search.setIndex({"docnames": ["dependencies", "index", "modules", "neurotools", "neurotools.graphics", "neurotools.graphics.color", "neurotools.graphics.colormaps", "neurotools.graphics.dendron", "neurotools.graphics.fabio_maps", "neurotools.graphics.image", "neurotools.graphics.matplotlib", "neurotools.graphics.plot", "neurotools.graphics.pygame", "neurotools.graphics.ztransform_plot_helpers", "neurotools.jobs", "neurotools.jobs.cache", "neurotools.jobs.closure", "neurotools.jobs.filenames", "neurotools.jobs.initialize_system_cache", "neurotools.jobs.ndecorator", "neurotools.jobs.parallel", "neurotools.linalg", "neurotools.linalg.arguments", "neurotools.linalg.matrix", "neurotools.linalg.operators", "neurotools.nlab", "neurotools.obsolete", "neurotools.obsolete.encoding", "neurotools.obsolete.encoding.Huffman", "neurotools.obsolete.encoding.NaryHuffman", "neurotools.obsolete.gpu", "neurotools.obsolete.gpu.cl", "neurotools.obsolete.gpu.cl.device", "neurotools.obsolete.gpu.cl.function", "neurotools.obsolete.gpu.cl.matrix", "neurotools.obsolete.gpu.cpu", "neurotools.obsolete.gpu.cpu.util", "neurotools.obsolete.gpu.cu", "neurotools.obsolete.gpu.cu.convolution", "neurotools.obsolete.gpu.cu.device", "neurotools.obsolete.gpu.cu.function", "neurotools.obsolete.gpu.cu.gpufun", "neurotools.obsolete.gpu.cu.graph", "neurotools.obsolete.gpu.cu.logic", "neurotools.obsolete.gpu.cu.matrix", "neurotools.obsolete.gpu.cu.plot", "neurotools.obsolete.gpu.cu.sequence", "neurotools.obsolete.gpu.cu.statistics", "neurotools.obsolete.models", "neurotools.obsolete.models.izh", "neurotools.obsolete.models.lif", "neurotools.obsolete.opto", "neurotools.obsolete.rbm", "neurotools.obsolete.rbm.rbm", "neurotools.obsolete.rbm.rbm_helper", "neurotools.obsolete.rbm.rbm_sample", "neurotools.obsolete.rbm.rbm_utils", "neurotools.obsolete.rbm.rbm_utils.rbm", "neurotools.obsolete.rbm.rbm_utils.stutils", "neurotools.signal", "neurotools.signal.coherence", "neurotools.signal.conv", "neurotools.signal.morlet", "neurotools.signal.multitaper", "neurotools.signal.ppc", "neurotools.signal.savitskygolay", "neurotools.signal.sde", "neurotools.spatial", "neurotools.spatial.array", "neurotools.spatial.dct", "neurotools.spatial.distance", "neurotools.spatial.fftzeros", "neurotools.spatial.geometry", "neurotools.spatial.kernels", "neurotools.spatial.masking", "neurotools.spatial.phase", "neurotools.spatial.points", "neurotools.spatial.spiking", "neurotools.spatial.triangulation", "neurotools.spikes", "neurotools.spikes.spikes", "neurotools.spikes.waveform", "neurotools.stats", "neurotools.stats.circular", "neurotools.stats.convolutional", "neurotools.stats.density", "neurotools.stats.distributions", "neurotools.stats.fast_kde", "neurotools.stats.gaussian", "neurotools.stats.glm", "neurotools.stats.grid_search", "neurotools.stats.hmm", "neurotools.stats.information", "neurotools.stats.mcint", "neurotools.stats.minimize", "neurotools.stats.mixtures", "neurotools.stats.modefind", "neurotools.stats.pvalues", "neurotools.stats.regressions", "neurotools.util", "neurotools.util.dependencies", "neurotools.util.functions", "neurotools.util.getfftw", "neurotools.util.hdfmat", "neurotools.util.string", "neurotools.util.system", "neurotools.util.time", "neurotools.util.tools", "obsolete/functions", "obsolete/getfftw", "obsolete/gpu", "obsolete/gpu.cl", "obsolete/gpu.cl.device", "obsolete/gpu.cl.function", "obsolete/gpu.cl.matrix", "obsolete/gpu.cpu", "obsolete/gpu.cpu.util", "obsolete/gpu.cu", "obsolete/gpu.cu.convolution", "obsolete/gpu.cu.device", "obsolete/gpu.cu.function", "obsolete/gpu.cu.gpufun", "obsolete/gpu.cu.graph", "obsolete/gpu.cu.logic", "obsolete/gpu.cu.matrix", "obsolete/gpu.cu.plot", "obsolete/gpu.cu.sequence", "obsolete/gpu.cu.statistics", "obsolete/graphics", "obsolete/graphics.color", "obsolete/graphics.image", "obsolete/graphics.matplotlib", "obsolete/graphics.plot", "obsolete/graphics.pygame", "obsolete/jobs", "obsolete/jobs.cache", "obsolete/jobs.closure", "obsolete/jobs.decorator", "obsolete/jobs.filenames", "obsolete/jobs.initialize_system_cache", "obsolete/jobs.parallel", "obsolete/linalg", "obsolete/linalg.arguments", "obsolete/linalg.matrix", "obsolete/linalg.operators", "obsolete/models", "obsolete/models.izh", "obsolete/models.lif", "obsolete/models.rbm", "obsolete/models.rbm.rbm", "obsolete/models.rbm.rbm_helper", "obsolete/models.rbm.rbm_sample", "obsolete/models.rbm.rbm_utils", "obsolete/models.rbm.rbm_utils.rbm", "obsolete/models.rbm.rbm_utils.stutils", "obsolete/modules", "obsolete/neurotools", "obsolete/neurotools.dependencies", "obsolete/neurotools.encoding", "obsolete/neurotools.encoding.Huffman", "obsolete/neurotools.encoding.NaryHuffman", "obsolete/neurotools.functions", "obsolete/neurotools.getfftw", "obsolete/neurotools.gpu", "obsolete/neurotools.gpu.cl", "obsolete/neurotools.gpu.cl.device", "obsolete/neurotools.gpu.cl.function", "obsolete/neurotools.gpu.cl.matrix", "obsolete/neurotools.gpu.cpu", "obsolete/neurotools.gpu.cpu.util", "obsolete/neurotools.gpu.cu", "obsolete/neurotools.gpu.cu.convolution", "obsolete/neurotools.gpu.cu.device", "obsolete/neurotools.gpu.cu.function", "obsolete/neurotools.gpu.cu.gpufun", "obsolete/neurotools.gpu.cu.graph", "obsolete/neurotools.gpu.cu.logic", "obsolete/neurotools.gpu.cu.matrix", "obsolete/neurotools.gpu.cu.plot", "obsolete/neurotools.gpu.cu.sequence", "obsolete/neurotools.gpu.cu.statistics", "obsolete/neurotools.graphics", "obsolete/neurotools.graphics.color", "obsolete/neurotools.graphics.colormaps", "obsolete/neurotools.graphics.dendron", "obsolete/neurotools.graphics.fabio_maps", "obsolete/neurotools.graphics.image", "obsolete/neurotools.graphics.matplotlib", "obsolete/neurotools.graphics.plot", "obsolete/neurotools.graphics.pygame", "obsolete/neurotools.graphics.ztransform_plot_helpers", "obsolete/neurotools.hdfmat", "obsolete/neurotools.jobs", "obsolete/neurotools.jobs.cache", "obsolete/neurotools.jobs.closure", "obsolete/neurotools.jobs.filenames", "obsolete/neurotools.jobs.initialize_system_cache", "obsolete/neurotools.jobs.ndecorator", "obsolete/neurotools.jobs.parallel", "obsolete/neurotools.linalg", "obsolete/neurotools.linalg.arguments", "obsolete/neurotools.linalg.matrix", "obsolete/neurotools.linalg.operators", "obsolete/neurotools.models", "obsolete/neurotools.models.izh", "obsolete/neurotools.models.lif", "obsolete/neurotools.models.rbm", "obsolete/neurotools.models.rbm.rbm", "obsolete/neurotools.models.rbm.rbm_helper", "obsolete/neurotools.models.rbm.rbm_sample", "obsolete/neurotools.models.rbm.rbm_utils", "obsolete/neurotools.models.rbm.rbm_utils.rbm", "obsolete/neurotools.models.rbm.rbm_utils.stutils", "obsolete/neurotools.nlab", "obsolete/neurotools.obsolete", "obsolete/neurotools.obsolete.encoding", "obsolete/neurotools.obsolete.encoding.Huffman", "obsolete/neurotools.obsolete.encoding.NaryHuffman", "obsolete/neurotools.obsolete.gpu", "obsolete/neurotools.obsolete.gpu.cl", "obsolete/neurotools.obsolete.gpu.cl.device", "obsolete/neurotools.obsolete.gpu.cl.function", "obsolete/neurotools.obsolete.gpu.cl.matrix", "obsolete/neurotools.obsolete.gpu.cpu", "obsolete/neurotools.obsolete.gpu.cpu.util", "obsolete/neurotools.obsolete.gpu.cu", "obsolete/neurotools.obsolete.gpu.cu.convolution", "obsolete/neurotools.obsolete.gpu.cu.device", "obsolete/neurotools.obsolete.gpu.cu.function", "obsolete/neurotools.obsolete.gpu.cu.gpufun", "obsolete/neurotools.obsolete.gpu.cu.graph", "obsolete/neurotools.obsolete.gpu.cu.logic", "obsolete/neurotools.obsolete.gpu.cu.matrix", "obsolete/neurotools.obsolete.gpu.cu.plot", "obsolete/neurotools.obsolete.gpu.cu.sequence", "obsolete/neurotools.obsolete.gpu.cu.statistics", "obsolete/neurotools.obsolete.models", "obsolete/neurotools.obsolete.models.izh", "obsolete/neurotools.obsolete.models.lif", "obsolete/neurotools.obsolete.opto", "obsolete/neurotools.obsolete.rbm", "obsolete/neurotools.obsolete.rbm.rbm", "obsolete/neurotools.obsolete.rbm.rbm_helper", "obsolete/neurotools.obsolete.rbm.rbm_sample", "obsolete/neurotools.obsolete.rbm.rbm_utils", "obsolete/neurotools.obsolete.rbm.rbm_utils.rbm", "obsolete/neurotools.obsolete.rbm.rbm_utils.stutils", "obsolete/neurotools.opto", "obsolete/neurotools.signal", "obsolete/neurotools.signal.coherence", "obsolete/neurotools.signal.conv", "obsolete/neurotools.signal.linenoise", "obsolete/neurotools.signal.morlet", "obsolete/neurotools.signal.morlet_coherence", "obsolete/neurotools.signal.multitaper", "obsolete/neurotools.signal.ppc", "obsolete/neurotools.signal.resonator", "obsolete/neurotools.signal.savitskygolay", "obsolete/neurotools.signal.sde", "obsolete/neurotools.signal.signal", "obsolete/neurotools.spatial", "obsolete/neurotools.spatial.array", "obsolete/neurotools.spatial.dct", "obsolete/neurotools.spatial.distance", "obsolete/neurotools.spatial.fftzeros", "obsolete/neurotools.spatial.geometry", "obsolete/neurotools.spatial.kernels", "obsolete/neurotools.spatial.masking", "obsolete/neurotools.spatial.phase", "obsolete/neurotools.spatial.points", "obsolete/neurotools.spatial.spatialPSD", "obsolete/neurotools.spatial.spiking", "obsolete/neurotools.spatial.triangulation", "obsolete/neurotools.spatial.wave_parametric_models", "obsolete/neurotools.spikes", "obsolete/neurotools.spikes.spikes", "obsolete/neurotools.spikes.waveform", "obsolete/neurotools.stats", "obsolete/neurotools.stats.GLMFit", "obsolete/neurotools.stats.Gaussian", "obsolete/neurotools.stats.circular", "obsolete/neurotools.stats.convolutional", "obsolete/neurotools.stats.density", "obsolete/neurotools.stats.distributions", "obsolete/neurotools.stats.entropy", "obsolete/neurotools.stats.fast_kde", "obsolete/neurotools.stats.gaussian (Case Conflict 1)", "obsolete/neurotools.stats.gaussian (Case Conflict 2)", "obsolete/neurotools.stats.gaussian (Case Conflict 3)", "obsolete/neurotools.stats.gaussian (Case Conflict 4)", "obsolete/neurotools.stats.gaussian (Case Conflict 5)", "obsolete/neurotools.stats.gaussian (Case Conflict 6)", "obsolete/neurotools.stats.gaussian (Case Conflict 7)", "obsolete/neurotools.stats.gaussian (Case Conflict 8)", "obsolete/neurotools.stats.gaussian (Case Conflict)", "obsolete/neurotools.stats.glm", "obsolete/neurotools.stats.gmm", "obsolete/neurotools.stats.grid_search", "obsolete/neurotools.stats.history_basis", "obsolete/neurotools.stats.hmm", "obsolete/neurotools.stats.information", "obsolete/neurotools.stats.kent_reimann", "obsolete/neurotools.stats.lessons", "obsolete/neurotools.stats.matzner_bar-gad_PLoS_2015", "obsolete/neurotools.stats.mcint", "obsolete/neurotools.stats.minimize", "obsolete/neurotools.stats.mixtures", "obsolete/neurotools.stats.modefind", "obsolete/neurotools.stats.mvg", "obsolete/neurotools.stats.pvalues", "obsolete/neurotools.stats.regressions", "obsolete/neurotools.stats.sde", "obsolete/neurotools.stats.spatiotemporal_glm_utils", "obsolete/neurotools.stats.stats", "obsolete/neurotools.system", "obsolete/neurotools.text", "obsolete/neurotools.tools", "obsolete/neurotools.util", "obsolete/neurotools.util.dependencies", "obsolete/neurotools.util.functions", "obsolete/neurotools.util.getfftw", "obsolete/neurotools.util.hdfmat", "obsolete/neurotools.util.string", "obsolete/neurotools.util.system", "obsolete/neurotools.util.time", "obsolete/neurotools.util.tools", "obsolete/nlab", "obsolete/opto", "obsolete/signal", "obsolete/signal.coherence", "obsolete/signal.conv", "obsolete/signal.linenoise", "obsolete/signal.morlet", "obsolete/signal.morlet_coherence", "obsolete/signal.multitaper", "obsolete/signal.ppc", "obsolete/signal.resonator", "obsolete/signal.savitskygolay", "obsolete/signal.signal", "obsolete/spatial", "obsolete/spatial.array", "obsolete/spatial.dct", "obsolete/spatial.distance", "obsolete/spatial.fftzeros", "obsolete/spatial.kernels", "obsolete/spatial.phase", "obsolete/spatial.spatialPSD", "obsolete/spatial.spiking", "obsolete/spatial.triangulation", "obsolete/spatial.wave_parametric_models", "obsolete/spikes.spikes", "obsolete/spikes.waveform", "obsolete/stats.GLMFit", "obsolete/stats.Gaussian", "obsolete/stats.circular", "obsolete/stats.convolutional", "obsolete/stats.density", "obsolete/stats.distributions", "obsolete/stats.entropy", "obsolete/stats.fast_kde", "obsolete/stats.glm", "obsolete/stats.gmm", "obsolete/stats.history_basis", "obsolete/stats.hmm", "obsolete/stats.information", "obsolete/stats.kent_reimann", "obsolete/stats.lessons", "obsolete/stats.matzner_bar-gad_PLoS_2015", "obsolete/stats.mcint", "obsolete/stats.minimize", "obsolete/stats.mixtures", "obsolete/stats.modefind", "obsolete/stats.mvg", "obsolete/stats.pvalues", "obsolete/stats.regressions", "obsolete/stats.sde", "obsolete/stats.spatiotemporal_glm_utils", "obsolete/stats.stats"], "filenames": ["dependencies.rst", "index.rst", "modules.rst", "neurotools.rst", "neurotools.graphics.rst", "neurotools.graphics.color.rst", "neurotools.graphics.colormaps.rst", "neurotools.graphics.dendron.rst", "neurotools.graphics.fabio_maps.rst", "neurotools.graphics.image.rst", "neurotools.graphics.matplotlib.rst", "neurotools.graphics.plot.rst", "neurotools.graphics.pygame.rst", "neurotools.graphics.ztransform_plot_helpers.rst", "neurotools.jobs.rst", "neurotools.jobs.cache.rst", "neurotools.jobs.closure.rst", "neurotools.jobs.filenames.rst", "neurotools.jobs.initialize_system_cache.rst", "neurotools.jobs.ndecorator.rst", "neurotools.jobs.parallel.rst", "neurotools.linalg.rst", "neurotools.linalg.arguments.rst", "neurotools.linalg.matrix.rst", "neurotools.linalg.operators.rst", "neurotools.nlab.rst", "neurotools.obsolete.rst", "neurotools.obsolete.encoding.rst", "neurotools.obsolete.encoding.Huffman.rst", "neurotools.obsolete.encoding.NaryHuffman.rst", "neurotools.obsolete.gpu.rst", "neurotools.obsolete.gpu.cl.rst", "neurotools.obsolete.gpu.cl.device.rst", "neurotools.obsolete.gpu.cl.function.rst", "neurotools.obsolete.gpu.cl.matrix.rst", "neurotools.obsolete.gpu.cpu.rst", "neurotools.obsolete.gpu.cpu.util.rst", "neurotools.obsolete.gpu.cu.rst", "neurotools.obsolete.gpu.cu.convolution.rst", "neurotools.obsolete.gpu.cu.device.rst", "neurotools.obsolete.gpu.cu.function.rst", "neurotools.obsolete.gpu.cu.gpufun.rst", "neurotools.obsolete.gpu.cu.graph.rst", "neurotools.obsolete.gpu.cu.logic.rst", "neurotools.obsolete.gpu.cu.matrix.rst", "neurotools.obsolete.gpu.cu.plot.rst", "neurotools.obsolete.gpu.cu.sequence.rst", "neurotools.obsolete.gpu.cu.statistics.rst", "neurotools.obsolete.models.rst", "neurotools.obsolete.models.izh.rst", "neurotools.obsolete.models.lif.rst", "neurotools.obsolete.opto.rst", "neurotools.obsolete.rbm.rst", "neurotools.obsolete.rbm.rbm.rst", "neurotools.obsolete.rbm.rbm_helper.rst", "neurotools.obsolete.rbm.rbm_sample.rst", "neurotools.obsolete.rbm.rbm_utils.rst", "neurotools.obsolete.rbm.rbm_utils.rbm.rst", "neurotools.obsolete.rbm.rbm_utils.stutils.rst", "neurotools.signal.rst", "neurotools.signal.coherence.rst", "neurotools.signal.conv.rst", "neurotools.signal.morlet.rst", "neurotools.signal.multitaper.rst", "neurotools.signal.ppc.rst", "neurotools.signal.savitskygolay.rst", "neurotools.signal.sde.rst", "neurotools.spatial.rst", "neurotools.spatial.array.rst", "neurotools.spatial.dct.rst", "neurotools.spatial.distance.rst", "neurotools.spatial.fftzeros.rst", "neurotools.spatial.geometry.rst", "neurotools.spatial.kernels.rst", "neurotools.spatial.masking.rst", "neurotools.spatial.phase.rst", "neurotools.spatial.points.rst", "neurotools.spatial.spiking.rst", "neurotools.spatial.triangulation.rst", "neurotools.spikes.rst", "neurotools.spikes.spikes.rst", "neurotools.spikes.waveform.rst", "neurotools.stats.rst", "neurotools.stats.circular.rst", "neurotools.stats.convolutional.rst", "neurotools.stats.density.rst", "neurotools.stats.distributions.rst", "neurotools.stats.fast_kde.rst", "neurotools.stats.gaussian.rst", "neurotools.stats.glm.rst", "neurotools.stats.grid_search.rst", "neurotools.stats.hmm.rst", "neurotools.stats.information.rst", "neurotools.stats.mcint.rst", "neurotools.stats.minimize.rst", "neurotools.stats.mixtures.rst", "neurotools.stats.modefind.rst", "neurotools.stats.pvalues.rst", "neurotools.stats.regressions.rst", "neurotools.util.rst", "neurotools.util.dependencies.rst", "neurotools.util.functions.rst", "neurotools.util.getfftw.rst", "neurotools.util.hdfmat.rst", "neurotools.util.string.rst", "neurotools.util.system.rst", "neurotools.util.time.rst", "neurotools.util.tools.rst", "obsolete/functions.rst", "obsolete/getfftw.rst", "obsolete/gpu.rst", "obsolete/gpu.cl.rst", "obsolete/gpu.cl.device.rst", "obsolete/gpu.cl.function.rst", "obsolete/gpu.cl.matrix.rst", "obsolete/gpu.cpu.rst", "obsolete/gpu.cpu.util.rst", "obsolete/gpu.cu.rst", "obsolete/gpu.cu.convolution.rst", "obsolete/gpu.cu.device.rst", "obsolete/gpu.cu.function.rst", "obsolete/gpu.cu.gpufun.rst", "obsolete/gpu.cu.graph.rst", "obsolete/gpu.cu.logic.rst", "obsolete/gpu.cu.matrix.rst", "obsolete/gpu.cu.plot.rst", "obsolete/gpu.cu.sequence.rst", "obsolete/gpu.cu.statistics.rst", "obsolete/graphics.rst", "obsolete/graphics.color.rst", "obsolete/graphics.image.rst", "obsolete/graphics.matplotlib.rst", "obsolete/graphics.plot.rst", "obsolete/graphics.pygame.rst", "obsolete/jobs.rst", "obsolete/jobs.cache.rst", "obsolete/jobs.closure.rst", "obsolete/jobs.decorator.rst", "obsolete/jobs.filenames.rst", "obsolete/jobs.initialize_system_cache.rst", "obsolete/jobs.parallel.rst", "obsolete/linalg.rst", "obsolete/linalg.arguments.rst", "obsolete/linalg.matrix.rst", "obsolete/linalg.operators.rst", "obsolete/models.rst", "obsolete/models.izh.rst", "obsolete/models.lif.rst", "obsolete/models.rbm.rst", "obsolete/models.rbm.rbm.rst", "obsolete/models.rbm.rbm_helper.rst", "obsolete/models.rbm.rbm_sample.rst", "obsolete/models.rbm.rbm_utils.rst", "obsolete/models.rbm.rbm_utils.rbm.rst", "obsolete/models.rbm.rbm_utils.stutils.rst", "obsolete/modules.rst", "obsolete/neurotools.rst", "obsolete/neurotools.dependencies.rst", "obsolete/neurotools.encoding.rst", "obsolete/neurotools.encoding.Huffman.rst", "obsolete/neurotools.encoding.NaryHuffman.rst", "obsolete/neurotools.functions.rst", "obsolete/neurotools.getfftw.rst", "obsolete/neurotools.gpu.rst", "obsolete/neurotools.gpu.cl.rst", "obsolete/neurotools.gpu.cl.device.rst", "obsolete/neurotools.gpu.cl.function.rst", "obsolete/neurotools.gpu.cl.matrix.rst", "obsolete/neurotools.gpu.cpu.rst", "obsolete/neurotools.gpu.cpu.util.rst", "obsolete/neurotools.gpu.cu.rst", "obsolete/neurotools.gpu.cu.convolution.rst", "obsolete/neurotools.gpu.cu.device.rst", "obsolete/neurotools.gpu.cu.function.rst", "obsolete/neurotools.gpu.cu.gpufun.rst", "obsolete/neurotools.gpu.cu.graph.rst", "obsolete/neurotools.gpu.cu.logic.rst", "obsolete/neurotools.gpu.cu.matrix.rst", "obsolete/neurotools.gpu.cu.plot.rst", "obsolete/neurotools.gpu.cu.sequence.rst", "obsolete/neurotools.gpu.cu.statistics.rst", "obsolete/neurotools.graphics.rst", "obsolete/neurotools.graphics.color.rst", "obsolete/neurotools.graphics.colormaps.rst", "obsolete/neurotools.graphics.dendron.rst", "obsolete/neurotools.graphics.fabio_maps.rst", "obsolete/neurotools.graphics.image.rst", "obsolete/neurotools.graphics.matplotlib.rst", "obsolete/neurotools.graphics.plot.rst", "obsolete/neurotools.graphics.pygame.rst", "obsolete/neurotools.graphics.ztransform_plot_helpers.rst", "obsolete/neurotools.hdfmat.rst", "obsolete/neurotools.jobs.rst", "obsolete/neurotools.jobs.cache.rst", "obsolete/neurotools.jobs.closure.rst", "obsolete/neurotools.jobs.filenames.rst", "obsolete/neurotools.jobs.initialize_system_cache.rst", "obsolete/neurotools.jobs.ndecorator.rst", "obsolete/neurotools.jobs.parallel.rst", "obsolete/neurotools.linalg.rst", "obsolete/neurotools.linalg.arguments.rst", "obsolete/neurotools.linalg.matrix.rst", "obsolete/neurotools.linalg.operators.rst", "obsolete/neurotools.models.rst", "obsolete/neurotools.models.izh.rst", "obsolete/neurotools.models.lif.rst", "obsolete/neurotools.models.rbm.rst", "obsolete/neurotools.models.rbm.rbm.rst", "obsolete/neurotools.models.rbm.rbm_helper.rst", "obsolete/neurotools.models.rbm.rbm_sample.rst", "obsolete/neurotools.models.rbm.rbm_utils.rst", "obsolete/neurotools.models.rbm.rbm_utils.rbm.rst", "obsolete/neurotools.models.rbm.rbm_utils.stutils.rst", "obsolete/neurotools.nlab.rst", "obsolete/neurotools.obsolete.rst", "obsolete/neurotools.obsolete.encoding.rst", "obsolete/neurotools.obsolete.encoding.Huffman.rst", "obsolete/neurotools.obsolete.encoding.NaryHuffman.rst", "obsolete/neurotools.obsolete.gpu.rst", "obsolete/neurotools.obsolete.gpu.cl.rst", "obsolete/neurotools.obsolete.gpu.cl.device.rst", "obsolete/neurotools.obsolete.gpu.cl.function.rst", "obsolete/neurotools.obsolete.gpu.cl.matrix.rst", "obsolete/neurotools.obsolete.gpu.cpu.rst", "obsolete/neurotools.obsolete.gpu.cpu.util.rst", "obsolete/neurotools.obsolete.gpu.cu.rst", "obsolete/neurotools.obsolete.gpu.cu.convolution.rst", "obsolete/neurotools.obsolete.gpu.cu.device.rst", "obsolete/neurotools.obsolete.gpu.cu.function.rst", "obsolete/neurotools.obsolete.gpu.cu.gpufun.rst", "obsolete/neurotools.obsolete.gpu.cu.graph.rst", "obsolete/neurotools.obsolete.gpu.cu.logic.rst", "obsolete/neurotools.obsolete.gpu.cu.matrix.rst", "obsolete/neurotools.obsolete.gpu.cu.plot.rst", "obsolete/neurotools.obsolete.gpu.cu.sequence.rst", "obsolete/neurotools.obsolete.gpu.cu.statistics.rst", "obsolete/neurotools.obsolete.models.rst", "obsolete/neurotools.obsolete.models.izh.rst", "obsolete/neurotools.obsolete.models.lif.rst", "obsolete/neurotools.obsolete.opto.rst", "obsolete/neurotools.obsolete.rbm.rst", "obsolete/neurotools.obsolete.rbm.rbm.rst", "obsolete/neurotools.obsolete.rbm.rbm_helper.rst", "obsolete/neurotools.obsolete.rbm.rbm_sample.rst", "obsolete/neurotools.obsolete.rbm.rbm_utils.rst", "obsolete/neurotools.obsolete.rbm.rbm_utils.rbm.rst", "obsolete/neurotools.obsolete.rbm.rbm_utils.stutils.rst", "obsolete/neurotools.opto.rst", "obsolete/neurotools.signal.rst", "obsolete/neurotools.signal.coherence.rst", "obsolete/neurotools.signal.conv.rst", "obsolete/neurotools.signal.linenoise.rst", "obsolete/neurotools.signal.morlet.rst", "obsolete/neurotools.signal.morlet_coherence.rst", "obsolete/neurotools.signal.multitaper.rst", "obsolete/neurotools.signal.ppc.rst", "obsolete/neurotools.signal.resonator.rst", "obsolete/neurotools.signal.savitskygolay.rst", "obsolete/neurotools.signal.sde.rst", "obsolete/neurotools.signal.signal.rst", "obsolete/neurotools.spatial.rst", "obsolete/neurotools.spatial.array.rst", "obsolete/neurotools.spatial.dct.rst", "obsolete/neurotools.spatial.distance.rst", "obsolete/neurotools.spatial.fftzeros.rst", "obsolete/neurotools.spatial.geometry.rst", "obsolete/neurotools.spatial.kernels.rst", "obsolete/neurotools.spatial.masking.rst", "obsolete/neurotools.spatial.phase.rst", "obsolete/neurotools.spatial.points.rst", "obsolete/neurotools.spatial.spatialPSD.rst", "obsolete/neurotools.spatial.spiking.rst", "obsolete/neurotools.spatial.triangulation.rst", "obsolete/neurotools.spatial.wave_parametric_models.rst", "obsolete/neurotools.spikes.rst", "obsolete/neurotools.spikes.spikes.rst", "obsolete/neurotools.spikes.waveform.rst", "obsolete/neurotools.stats.rst", "obsolete/neurotools.stats.GLMFit.rst", "obsolete/neurotools.stats.Gaussian.rst", "obsolete/neurotools.stats.circular.rst", "obsolete/neurotools.stats.convolutional.rst", "obsolete/neurotools.stats.density.rst", "obsolete/neurotools.stats.distributions.rst", "obsolete/neurotools.stats.entropy.rst", "obsolete/neurotools.stats.fast_kde.rst", "obsolete/neurotools.stats.gaussian (Case Conflict 1).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 2).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 3).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 4).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 5).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 6).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 7).rst", "obsolete/neurotools.stats.gaussian (Case Conflict 8).rst", "obsolete/neurotools.stats.gaussian (Case Conflict).rst", "obsolete/neurotools.stats.glm.rst", "obsolete/neurotools.stats.gmm.rst", "obsolete/neurotools.stats.grid_search.rst", "obsolete/neurotools.stats.history_basis.rst", "obsolete/neurotools.stats.hmm.rst", "obsolete/neurotools.stats.information.rst", "obsolete/neurotools.stats.kent_reimann.rst", "obsolete/neurotools.stats.lessons.rst", "obsolete/neurotools.stats.matzner_bar-gad_PLoS_2015.rst", "obsolete/neurotools.stats.mcint.rst", "obsolete/neurotools.stats.minimize.rst", "obsolete/neurotools.stats.mixtures.rst", "obsolete/neurotools.stats.modefind.rst", "obsolete/neurotools.stats.mvg.rst", "obsolete/neurotools.stats.pvalues.rst", "obsolete/neurotools.stats.regressions.rst", "obsolete/neurotools.stats.sde.rst", "obsolete/neurotools.stats.spatiotemporal_glm_utils.rst", "obsolete/neurotools.stats.stats.rst", "obsolete/neurotools.system.rst", "obsolete/neurotools.text.rst", "obsolete/neurotools.tools.rst", "obsolete/neurotools.util.rst", "obsolete/neurotools.util.dependencies.rst", "obsolete/neurotools.util.functions.rst", "obsolete/neurotools.util.getfftw.rst", "obsolete/neurotools.util.hdfmat.rst", "obsolete/neurotools.util.string.rst", "obsolete/neurotools.util.system.rst", "obsolete/neurotools.util.time.rst", "obsolete/neurotools.util.tools.rst", "obsolete/nlab.rst", "obsolete/opto.rst", "obsolete/signal.rst", "obsolete/signal.coherence.rst", "obsolete/signal.conv.rst", "obsolete/signal.linenoise.rst", "obsolete/signal.morlet.rst", "obsolete/signal.morlet_coherence.rst", "obsolete/signal.multitaper.rst", "obsolete/signal.ppc.rst", "obsolete/signal.resonator.rst", "obsolete/signal.savitskygolay.rst", "obsolete/signal.signal.rst", "obsolete/spatial.rst", "obsolete/spatial.array.rst", "obsolete/spatial.dct.rst", "obsolete/spatial.distance.rst", "obsolete/spatial.fftzeros.rst", "obsolete/spatial.kernels.rst", "obsolete/spatial.phase.rst", "obsolete/spatial.spatialPSD.rst", "obsolete/spatial.spiking.rst", "obsolete/spatial.triangulation.rst", "obsolete/spatial.wave_parametric_models.rst", "obsolete/spikes.spikes.rst", "obsolete/spikes.waveform.rst", "obsolete/stats.GLMFit.rst", "obsolete/stats.Gaussian.rst", "obsolete/stats.circular.rst", "obsolete/stats.convolutional.rst", "obsolete/stats.density.rst", "obsolete/stats.distributions.rst", "obsolete/stats.entropy.rst", "obsolete/stats.fast_kde.rst", "obsolete/stats.glm.rst", "obsolete/stats.gmm.rst", "obsolete/stats.history_basis.rst", "obsolete/stats.hmm.rst", "obsolete/stats.information.rst", "obsolete/stats.kent_reimann.rst", "obsolete/stats.lessons.rst", "obsolete/stats.matzner_bar-gad_PLoS_2015.rst", "obsolete/stats.mcint.rst", "obsolete/stats.minimize.rst", "obsolete/stats.mixtures.rst", "obsolete/stats.modefind.rst", "obsolete/stats.mvg.rst", "obsolete/stats.pvalues.rst", "obsolete/stats.regressions.rst", "obsolete/stats.sde.rst", "obsolete/stats.spatiotemporal_glm_utils.rst", "obsolete/stats.stats.rst"], "titles": ["dependencies module", "Neurotools", "neurotools", "neurotools package", "neurotools.graphics package", "neurotools.graphics.color module", "neurotools.graphics.colormaps module", "neurotools.graphics.dendron module", "neurotools.graphics.fabio_maps module", "neurotools.graphics.image module", "neurotools.graphics.matplotlib module", "neurotools.graphics.plot module", "neurotools.graphics.pygame module", "neurotools.graphics.ztransform_plot_helpers module", "neurotools.jobs package", "neurotools.jobs.cache module", "neurotools.jobs.closure module", "neurotools.jobs.filenames module", "neurotools.jobs.initialize_system_cache module", "neurotools.jobs.ndecorator module", "neurotools.jobs.parallel module", "neurotools.linalg package", "neurotools.linalg.arguments module", "neurotools.linalg.matrix module", "neurotools.linalg.operators module", "neurotools.nlab module", "neurotools.obsolete package", "neurotools.obsolete.encoding package", "neurotools.obsolete.encoding.Huffman module", "neurotools.obsolete.encoding.NaryHuffman module", "neurotools.obsolete.gpu package", "neurotools.obsolete.gpu.cl package", "neurotools.obsolete.gpu.cl.device module", "neurotools.obsolete.gpu.cl.function module", "neurotools.obsolete.gpu.cl.matrix module", "neurotools.obsolete.gpu.cpu package", "neurotools.obsolete.gpu.cpu.util module", "neurotools.obsolete.gpu.cu package", "neurotools.obsolete.gpu.cu.convolution module", "neurotools.obsolete.gpu.cu.device module", "neurotools.obsolete.gpu.cu.function module", "neurotools.obsolete.gpu.cu.gpufun module", "neurotools.obsolete.gpu.cu.graph module", "neurotools.obsolete.gpu.cu.logic module", "neurotools.obsolete.gpu.cu.matrix module", "neurotools.obsolete.gpu.cu.plot module", "neurotools.obsolete.gpu.cu.sequence module", "neurotools.obsolete.gpu.cu.statistics module", "neurotools.obsolete.models package", "neurotools.obsolete.models.izh module", "neurotools.obsolete.models.lif module", "neurotools.obsolete.opto module", "neurotools.obsolete.rbm package", "neurotools.obsolete.rbm.rbm module", "neurotools.obsolete.rbm.rbm_helper module", "neurotools.obsolete.rbm.rbm_sample module", "neurotools.obsolete.rbm.rbm_utils package", "neurotools.obsolete.rbm.rbm_utils.rbm module", "neurotools.obsolete.rbm.rbm_utils.stutils module", "neurotools.signal package", "neurotools.signal.coherence module", "neurotools.signal.conv module", "neurotools.signal.morlet module", "neurotools.signal.multitaper module", "neurotools.signal.ppc module", "neurotools.signal.savitskygolay module", "neurotools.signal.sde module", "neurotools.spatial package", "neurotools.spatial.array module", "neurotools.spatial.dct module", "neurotools.spatial.distance module", "neurotools.spatial.fftzeros module", "neurotools.spatial.geometry module", "neurotools.spatial.kernels module", "neurotools.spatial.masking module", "neurotools.spatial.phase module", "neurotools.spatial.points module", "neurotools.spatial.spiking module", "neurotools.spatial.triangulation module", "neurotools.spikes package", "neurotools.spikes.spikes module", "neurotools.spikes.waveform module", "neurotools.stats package", "neurotools.stats.circular module", "neurotools.stats.convolutional module", "neurotools.stats.density module", "neurotools.stats.distributions module", "neurotools.stats.fast_kde module", "neurotools.stats.gaussian module", "neurotools.stats.glm module", "neurotools.stats.grid_search module", "neurotools.stats.hmm module", "neurotools.stats.information module", "neurotools.stats.mcint module", "neurotools.stats.minimize module", "neurotools.stats.mixtures module", "neurotools.stats.modefind module", "neurotools.stats.pvalues module", "neurotools.stats.regressions module", "neurotools.util package", "neurotools.util.dependencies module", "neurotools.util.functions module", "neurotools.util.getfftw module", "neurotools.util.hdfmat module", "neurotools.util.string module", "neurotools.util.system module", "neurotools.util.time module", "neurotools.util.tools module", "functions module", "getfftw module", "gpu package", "gpu.cl package", "gpu.cl.device module", "gpu.cl.function module", "gpu.cl.matrix module", "gpu.cpu package", "gpu.cpu.util module", "gpu.cu package", "gpu.cu.convolution module", "gpu.cu.device module", "gpu.cu.function module", "gpu.cu.gpufun module", "gpu.cu.graph module", "gpu.cu.logic module", "gpu.cu.matrix module", "gpu.cu.plot module", "gpu.cu.sequence module", "gpu.cu.statistics module", "graphics package", "graphics.color module", "graphics.image module", "graphics.matplotlib module", "graphics.plot module", "graphics.pygame module", "jobs package", "jobs.cache module", "jobs.closure module", "jobs.decorator module", "jobs.filenames module", "jobs.initialize_system_cache module", "jobs.parallel module", "linalg package", "linalg.arguments module", "linalg.matrix module", "linalg.operators module", "models package", "models.izh module", "models.lif module", "models.rbm package", "models.rbm.rbm module", "models.rbm.rbm_helper module", "models.rbm.rbm_sample module", "models.rbm.rbm_utils package", "models.rbm.rbm_utils.rbm module", "models.rbm.rbm_utils.stutils module", "neurotools", "neurotools package", "neurotools.dependencies module", "neurotools.encoding package", "neurotools.encoding.Huffman module", "neurotools.encoding.NaryHuffman module", "neurotools.functions module", "neurotools.getfftw module", "neurotools.gpu package", "neurotools.gpu.cl package", "neurotools.gpu.cl.device module", "neurotools.gpu.cl.function module", "neurotools.gpu.cl.matrix module", "neurotools.gpu.cpu package", "neurotools.gpu.cpu.util module", "neurotools.gpu.cu package", "neurotools.gpu.cu.convolution module", "neurotools.gpu.cu.device module", "neurotools.gpu.cu.function module", "neurotools.gpu.cu.gpufun module", "neurotools.gpu.cu.graph module", "neurotools.gpu.cu.logic module", "neurotools.gpu.cu.matrix module", "neurotools.gpu.cu.plot module", "neurotools.gpu.cu.sequence module", "neurotools.gpu.cu.statistics module", "neurotools.graphics package", "neurotools.graphics.color module", "neurotools.graphics.colormaps module", "neurotools.graphics.dendron module", "neurotools.graphics.fabio_maps module", "neurotools.graphics.image module", "neurotools.graphics.matplotlib module", "neurotools.graphics.plot module", "neurotools.graphics.pygame module", "neurotools.graphics.ztransform_plot_helpers module", "neurotools.hdfmat module", "neurotools.jobs package", "neurotools.jobs.cache module", "neurotools.jobs.closure module", "neurotools.jobs.filenames module", "neurotools.jobs.initialize_system_cache module", "neurotools.jobs.ndecorator module", "neurotools.jobs.parallel module", "neurotools.linalg package", "neurotools.linalg.arguments module", "neurotools.linalg.matrix module", "neurotools.linalg.operators module", "neurotools.models package", "neurotools.models.izh module", "neurotools.models.lif module", "neurotools.models.rbm package", "neurotools.models.rbm.rbm module", "neurotools.models.rbm.rbm_helper module", "neurotools.models.rbm.rbm_sample module", "neurotools.models.rbm.rbm_utils package", "neurotools.models.rbm.rbm_utils.rbm module", "neurotools.models.rbm.rbm_utils.stutils module", "neurotools.nlab module", "neurotools.obsolete package", "neurotools.obsolete.encoding package", "neurotools.obsolete.encoding.Huffman module", "neurotools.obsolete.encoding.NaryHuffman module", "neurotools.obsolete.gpu package", "neurotools.obsolete.gpu.cl package", "neurotools.obsolete.gpu.cl.device module", "neurotools.obsolete.gpu.cl.function module", "neurotools.obsolete.gpu.cl.matrix module", "neurotools.obsolete.gpu.cpu package", "neurotools.obsolete.gpu.cpu.util module", "neurotools.obsolete.gpu.cu package", "neurotools.obsolete.gpu.cu.convolution module", "neurotools.obsolete.gpu.cu.device module", "neurotools.obsolete.gpu.cu.function module", "neurotools.obsolete.gpu.cu.gpufun module", "neurotools.obsolete.gpu.cu.graph module", "neurotools.obsolete.gpu.cu.logic module", "neurotools.obsolete.gpu.cu.matrix module", "neurotools.obsolete.gpu.cu.plot module", "neurotools.obsolete.gpu.cu.sequence module", "neurotools.obsolete.gpu.cu.statistics module", "neurotools.obsolete.models package", "neurotools.obsolete.models.izh module", "neurotools.obsolete.models.lif module", "neurotools.obsolete.opto module", "neurotools.obsolete.rbm package", "neurotools.obsolete.rbm.rbm module", "neurotools.obsolete.rbm.rbm_helper module", "neurotools.obsolete.rbm.rbm_sample module", "neurotools.obsolete.rbm.rbm_utils package", "neurotools.obsolete.rbm.rbm_utils.rbm module", "neurotools.obsolete.rbm.rbm_utils.stutils module", "neurotools.opto module", "neurotools.signal package", "neurotools.signal.coherence module", "neurotools.signal.conv module", "neurotools.signal.linenoise module", "neurotools.signal.morlet module", "neurotools.signal.morlet_coherence module", "neurotools.signal.multitaper module", "neurotools.signal.ppc module", "neurotools.signal.resonator module", "neurotools.signal.savitskygolay module", "neurotools.signal.sde module", "neurotools.signal.signal module", "neurotools.spatial package", "neurotools.spatial.array module", "neurotools.spatial.dct module", "neurotools.spatial.distance module", "neurotools.spatial.fftzeros module", "neurotools.spatial.geometry module", "neurotools.spatial.kernels module", "neurotools.spatial.masking module", "neurotools.spatial.phase module", "neurotools.spatial.points module", "neurotools.spatial.spatialPSD module", "neurotools.spatial.spiking module", "neurotools.spatial.triangulation module", "neurotools.spatial.wave_parametric_models module", "neurotools.spikes package", "neurotools.spikes.spikes module", "neurotools.spikes.waveform module", "neurotools.stats package", "neurotools.stats.GLMFit module", "neurotools.stats.Gaussian module", "neurotools.stats.circular module", "neurotools.stats.convolutional module", "neurotools.stats.density module", "neurotools.stats.distributions module", "neurotools.stats.entropy module", "neurotools.stats.fast_kde module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.glm module", "neurotools.stats.gmm module", "neurotools.stats.grid_search module", "neurotools.stats.history_basis module", "neurotools.stats.hmm module", "neurotools.stats.information module", "neurotools.stats.kent_reimann module", "neurotools.stats.lessons module", "neurotools.stats.matzner_bar-gad_PLoS_2015 module", "neurotools.stats.mcint module", "neurotools.stats.minimize module", "neurotools.stats.mixtures module", "neurotools.stats.modefind module", "neurotools.stats.mvg module", "neurotools.stats.pvalues module", "neurotools.stats.regressions module", "neurotools.stats.sde module", "neurotools.stats.spatiotemporal_glm_utils module", "neurotools.stats.stats module", "neurotools.system module", "neurotools.text module", "neurotools.tools module", "neurotools.util package", "neurotools.util.dependencies module", "neurotools.util.functions module", "neurotools.util.getfftw module", "neurotools.util.hdfmat module", "neurotools.util.string module", "neurotools.util.system module", "neurotools.util.time module", "neurotools.util.tools module", "nlab module", "opto module", "signal package", "signal.coherence module", "signal.conv module", "signal.linenoise module", "signal.morlet module", "signal.morlet_coherence module", "signal.multitaper module", "signal.ppc module", "signal.resonator module", "signal.savitskygolay module", "signal.signal module", "spatial package", "spatial.array module", "spatial.dct module", "spatial.distance module", "spatial.fftzeros module", "spatial.kernels module", "spatial.phase module", "spatial.spatialPSD module", "spatial.spiking module", "spatial.triangulation module", "spatial.wave_parametric_models module", "spikes.spikes module", "spikes.waveform module", "stats.GLMFit module", "stats.Gaussian module", "stats.circular module", "stats.convolutional module", "stats.density module", "stats.distributions module", "stats.entropy module", "stats.fast_kde module", "stats.glm module", "stats.gmm module", "stats.history_basis module", "stats.hmm module", "stats.information module", "stats.kent_reimann module", "stats.lessons module", "stats.matzner_bar-gad_PLoS_2015 module", "stats.mcint module", "stats.minimize module", "stats.mixtures module", "stats.modefind module", "stats.mvg module", "stats.pvalues module", "stats.regressions module", "stats.sde module", "stats.spatiotemporal_glm_utils module", "stats.stats module"], "terms": {"python": [1, 10, 15, 16, 17, 20, 25, 40, 41, 104, 105, 106, 107, 120, 121, 131, 135, 136, 138, 140, 187, 193, 194, 195, 198, 213, 228, 229, 322, 323, 324, 325, 326, 328, 338], "modul": [1, 2, 155], "statist": [1, 25, 30, 37, 59, 64, 68, 70, 75, 82, 83, 97, 110, 117, 163, 170, 213, 218, 225, 248, 255, 261, 263, 268, 277, 280, 309, 326, 340, 342, 345, 354, 373], "model": [1, 3, 25, 26, 82, 83, 85, 88, 89, 90, 91, 95, 156, 213, 214, 277, 280, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 306, 326, 354, 356, 360, 363, 370], "comput": [1, 15, 18, 23, 25, 36, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 75, 77, 78, 80, 82, 83, 84, 86, 88, 91, 92, 98, 116, 135, 139, 143, 193, 196, 201, 213, 224, 248, 249, 252, 254, 255, 257, 261, 262, 263, 264, 268, 271, 272, 275, 277, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 310, 326, 340, 341, 342, 343, 345, 347, 348, 350, 354, 355, 357, 363, 364, 374], "neurosci": [1, 96, 307, 371], "much": [1, 25, 41, 43, 84, 93, 121, 123, 213, 229, 231, 281, 304, 326, 355, 368], "packag": [1, 2, 19, 155, 197], "i": [1, 5, 10, 11, 12, 15, 16, 17, 18, 20, 23, 24, 25, 35, 36, 39, 40, 41, 43, 46, 49, 50, 59, 60, 61, 62, 63, 64, 68, 69, 71, 73, 75, 76, 77, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 103, 104, 105, 107, 115, 116, 119, 120, 121, 123, 126, 129, 131, 132, 133, 135, 136, 138, 139, 140, 143, 144, 146, 147, 182, 187, 188, 189, 193, 194, 195, 196, 198, 201, 202, 213, 223, 224, 227, 228, 229, 231, 234, 237, 238, 248, 249, 250, 252, 254, 255, 261, 262, 264, 266, 268, 269, 271, 276, 277, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 304, 307, 309, 321, 322, 323, 325, 326, 328, 338, 340, 341, 343, 344, 345, 347, 351, 355, 356, 357, 359, 360, 363, 364, 368, 371, 373], "research": [1, 25, 213, 326], "code": [1, 5, 15, 16, 18, 20, 23, 25, 36, 40, 41, 50, 64, 69, 71, 87, 97, 116, 120, 121, 129, 135, 136, 139, 140, 143, 147, 182, 193, 194, 196, 198, 201, 213, 224, 228, 229, 238, 255, 262, 264, 285, 309, 326, 328, 341, 343, 359, 373], "unstabl": 1, "refer": [1, 16, 23, 25, 40, 75, 97, 120, 136, 143, 194, 201, 213, 228, 268, 309, 326, 345, 373], "specif": [1, 15, 18, 25, 135, 139, 193, 196, 213, 326], "further": [1, 68, 261, 340], "document": [1, 19, 30, 35, 36, 46, 59, 82, 84, 98, 110, 115, 116, 126, 197, 218, 223, 224, 234, 248, 277, 281, 310, 355, 374], "thi": [1, 5, 10, 11, 15, 16, 18, 20, 23, 24, 25, 36, 39, 40, 41, 43, 50, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 73, 75, 80, 81, 82, 84, 87, 88, 89, 91, 93, 94, 95, 96, 97, 104, 105, 107, 116, 119, 120, 121, 123, 129, 131, 132, 135, 136, 139, 140, 143, 144, 147, 182, 187, 188, 193, 194, 196, 198, 201, 202, 213, 224, 227, 228, 229, 231, 238, 248, 249, 250, 252, 254, 255, 261, 262, 263, 264, 266, 268, 275, 276, 277, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 304, 305, 306, 307, 309, 322, 323, 325, 326, 328, 340, 341, 342, 343, 344, 345, 350, 351, 355, 359, 360, 363, 368, 369, 370, 371, 373], "project": [1, 25, 59, 70, 88, 91, 213, 248, 263, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 326, 342, 363], "confus": 1, "neural": [1, 60, 89, 249, 295, 360], "simul": [1, 25, 49, 66, 146, 213, 237, 258, 326], "depend": [1, 3, 11, 15, 16, 18, 23, 25, 60, 62, 68, 75, 82, 89, 97, 99, 132, 135, 136, 139, 143, 156, 188, 193, 194, 196, 201, 213, 249, 252, 261, 268, 277, 295, 309, 317, 326, 340, 345, 360, 373], "numpi": [1, 5, 15, 17, 20, 23, 25, 40, 59, 68, 71, 78, 82, 85, 89, 90, 95, 101, 107, 108, 120, 129, 135, 138, 140, 143, 182, 193, 195, 198, 201, 213, 228, 248, 261, 264, 272, 277, 282, 295, 297, 306, 319, 325, 326, 340, 343, 348, 356, 360, 370], "scipi": [1, 15, 23, 24, 25, 59, 78, 85, 86, 87, 89, 94, 95, 98, 135, 143, 144, 193, 201, 202, 213, 248, 272, 282, 283, 285, 295, 305, 306, 310, 326, 348, 356, 357, 359, 360, 369, 370, 374], "statsmodel": [1, 82, 89, 277, 295, 360], "panda": 1, "nipi": 1, "The": [1, 5, 7, 15, 16, 17, 18, 20, 23, 24, 25, 40, 50, 59, 60, 63, 64, 68, 71, 75, 82, 87, 88, 89, 91, 97, 105, 107, 120, 129, 135, 136, 138, 139, 140, 143, 144, 147, 182, 184, 193, 194, 195, 196, 198, 201, 202, 213, 228, 238, 248, 249, 254, 255, 261, 264, 268, 277, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 309, 323, 325, 326, 328, 338, 340, 343, 345, 359, 360, 363, 373], "sourc": [1, 5, 6, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 24, 28, 29, 31, 36, 38, 39, 40, 42, 45, 46, 49, 50, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 108, 111, 116, 118, 119, 120, 122, 125, 126, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 182, 183, 184, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 200, 201, 202, 216, 217, 219, 224, 226, 227, 228, 230, 233, 234, 237, 238, 248, 249, 250, 252, 254, 255, 257, 258, 260, 261, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 304, 305, 306, 307, 309, 310, 319, 321, 322, 323, 324, 325, 328, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 354, 355, 356, 357, 359, 360, 363, 364, 368, 369, 370, 371, 373, 374], "can": [1, 5, 7, 11, 15, 16, 17, 18, 20, 24, 25, 36, 39, 59, 64, 68, 80, 82, 83, 84, 88, 92, 94, 107, 116, 119, 129, 132, 135, 136, 138, 139, 140, 144, 182, 184, 188, 193, 194, 195, 196, 198, 202, 213, 224, 227, 248, 255, 261, 275, 277, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 300, 305, 325, 326, 328, 338, 340, 350, 354, 355, 364, 369], "brows": 1, "download": [1, 25, 213, 326], "from": [1, 11, 15, 18, 19, 20, 23, 24, 25, 36, 39, 41, 49, 59, 64, 66, 68, 69, 70, 73, 75, 76, 78, 82, 84, 85, 88, 89, 90, 91, 92, 94, 95, 97, 98, 103, 107, 116, 119, 121, 132, 135, 139, 140, 143, 144, 146, 188, 193, 196, 197, 198, 201, 202, 213, 224, 227, 229, 237, 248, 255, 258, 261, 262, 263, 266, 268, 269, 272, 277, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 305, 306, 309, 310, 321, 325, 326, 328, 340, 341, 342, 344, 345, 348, 355, 356, 360, 363, 364, 369, 370, 373, 374], "github": [1, 87, 285, 359], "ha": [1, 11, 15, 18, 25, 59, 60, 64, 68, 69, 75, 89, 132, 135, 139, 188, 193, 196, 213, 248, 249, 255, 261, 262, 268, 295, 326, 340, 341, 345, 360], "been": [1, 15, 18, 25, 59, 64, 69, 89, 135, 139, 193, 196, 213, 248, 255, 262, 295, 326, 341, 360], "review": 1, "prepar": [1, 82, 277], "us": [1, 5, 6, 7, 10, 11, 15, 17, 18, 19, 20, 23, 24, 25, 36, 40, 41, 43, 46, 50, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 101, 104, 107, 108, 116, 120, 121, 123, 126, 129, 131, 132, 135, 138, 139, 140, 143, 144, 147, 182, 183, 184, 187, 188, 193, 195, 196, 197, 198, 201, 202, 213, 224, 228, 229, 231, 234, 238, 248, 249, 250, 252, 254, 255, 257, 261, 262, 264, 268, 271, 275, 276, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 304, 305, 307, 309, 310, 319, 322, 325, 326, 328, 340, 341, 343, 345, 347, 350, 351, 354, 355, 356, 357, 359, 360, 363, 364, 368, 369, 371, 373, 374], "gener": [1, 11, 15, 17, 18, 23, 24, 25, 41, 59, 60, 61, 65, 70, 73, 80, 82, 83, 84, 89, 121, 132, 135, 138, 139, 143, 144, 188, 193, 195, 196, 201, 202, 213, 229, 248, 249, 250, 257, 263, 266, 275, 277, 280, 281, 295, 326, 342, 344, 350, 354, 355, 360], "public": 1, "when": [1, 15, 18, 20, 23, 25, 59, 64, 71, 91, 135, 139, 140, 143, 193, 196, 198, 201, 213, 248, 255, 264, 299, 326, 343, 363], "otherwis": [1, 15, 25, 40, 75, 89, 120, 135, 193, 213, 228, 268, 295, 326, 345, 360], "specifi": [1, 11, 15, 25, 59, 65, 69, 75, 82, 88, 92, 132, 135, 188, 193, 213, 248, 257, 262, 268, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 300, 326, 328, 341, 345, 364], "associ": [1, 25, 64, 213, 255, 326, 328], "content": [1, 2, 25, 155, 213, 326], "licens": 1, "under": [1, 25, 82, 89, 213, 277, 295, 326, 360], "creativ": 1, "common": [1, 10, 20, 25, 86, 89, 98, 101, 108, 131, 140, 187, 198, 213, 283, 295, 310, 319, 326, 357, 360, 374], "attribut": [1, 19, 197, 328], "non": [1, 15, 16, 19, 23, 25, 59, 68, 84, 89, 91, 97, 104, 135, 136, 143, 193, 194, 197, 201, 213, 248, 261, 281, 295, 299, 309, 322, 326, 340, 355, 360, 363, 373], "commerci": 1, "share": [1, 18, 39, 119, 139, 196, 227], "alik": 1, "3": [1, 5, 7, 15, 16, 17, 24, 25, 29, 49, 59, 60, 65, 68, 73, 78, 82, 89, 90, 91, 97, 101, 105, 108, 129, 135, 136, 138, 144, 146, 182, 184, 193, 194, 195, 202, 213, 217, 237, 248, 249, 257, 261, 266, 272, 277, 295, 297, 299, 309, 319, 323, 326, 328, 340, 344, 348, 360, 363, 373], "0": [1, 5, 7, 8, 11, 12, 15, 23, 24, 25, 41, 43, 49, 50, 59, 60, 62, 63, 68, 69, 71, 73, 75, 77, 81, 82, 84, 85, 86, 88, 89, 91, 93, 95, 97, 98, 104, 107, 121, 123, 129, 132, 133, 135, 143, 144, 146, 147, 182, 184, 185, 188, 189, 193, 201, 202, 213, 229, 231, 237, 238, 248, 249, 252, 254, 261, 262, 264, 266, 268, 271, 276, 277, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 304, 306, 309, 310, 322, 325, 326, 328, 340, 341, 343, 344, 345, 347, 351, 355, 356, 357, 360, 363, 368, 370, 373, 374], "full": [1, 15, 25, 59, 81, 135, 193, 213, 248, 276, 326, 351], "index": [1, 20, 25, 40, 59, 63, 68, 71, 76, 82, 84, 90, 107, 120, 140, 198, 213, 228, 248, 254, 261, 264, 269, 277, 281, 297, 325, 326, 340, 343, 355], "signal": [1, 2, 3, 11, 23, 25, 49, 50, 67, 68, 71, 75, 80, 81, 84, 132, 143, 146, 147, 155, 156, 188, 201, 213, 237, 238, 260, 261, 264, 268, 275, 276, 281, 326, 339, 340, 343, 345, 350, 351, 355], "stat": [1, 2, 3, 25, 59, 155, 156, 213, 248, 326], "spatial": [1, 2, 3, 155, 156], "spike": [1, 2, 3, 49, 50, 59, 64, 67, 84, 85, 89, 146, 147, 155, 156, 237, 238, 248, 255, 260, 281, 282, 295, 339, 355, 356, 360], "graphic": [1, 2, 3, 155, 156], "linalg": [1, 2, 3, 82, 88, 155, 156, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294], "job": [1, 2, 3, 155, 156], "util": [1, 2, 3, 10, 30, 35, 41, 73, 77, 110, 115, 121, 131, 155, 156, 163, 168, 187, 218, 223, 229, 266, 271, 344, 347], "subpackag": [2, 155], "submodul": [2, 30, 110, 155, 163, 218], "obsolet": [2, 3, 61, 155, 156, 250], "nlab": [2, 3, 23, 143, 155, 156, 201], "random": [2, 3, 25, 41, 59, 64, 97, 121, 155, 156, 213, 229, 248, 255, 309, 326, 373], "beta": [2, 3, 25, 60, 155, 156, 213, 249, 326], "binomi": [2, 3, 25, 155, 156, 213, 326], "chisquar": [2, 3, 25, 155, 156, 213, 326], "choic": [2, 3, 25, 155, 156, 213, 326], "dirichlet": [2, 3, 24, 25, 144, 155, 156, 202, 213, 326], "exponenti": [2, 3, 25, 36, 41, 50, 66, 73, 89, 98, 101, 108, 116, 121, 147, 155, 156, 213, 224, 229, 238, 258, 266, 295, 310, 319, 326, 344, 360, 374], "f": [2, 3, 11, 15, 16, 19, 20, 25, 36, 40, 41, 43, 50, 59, 60, 62, 63, 64, 65, 68, 75, 84, 88, 91, 93, 99, 101, 104, 107, 108, 116, 120, 121, 123, 132, 135, 136, 140, 147, 155, 156, 188, 193, 194, 197, 198, 213, 224, 228, 229, 231, 238, 248, 249, 252, 254, 255, 257, 261, 268, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 304, 317, 319, 322, 325, 326, 340, 345, 355, 363, 368], "gamma": [2, 3, 25, 155, 156, 213, 326], "geometr": [2, 3, 25, 155, 156, 213, 326], "get_stat": [2, 3, 25, 155, 156, 213, 326], "gumbel": [2, 3, 25, 155, 156, 213, 326], "hypergeometr": [2, 3, 25, 155, 156, 213, 326], "laplac": [2, 3, 25, 91, 155, 156, 213, 299, 326, 363], "logist": [2, 3, 25, 89, 155, 156, 213, 295, 326, 360], "lognorm": [2, 3, 25, 155, 156, 213, 326], "logseri": [2, 3, 25, 155, 156, 213, 326], "multinomi": [2, 3, 25, 155, 156, 213, 326], "multivariate_norm": [2, 3, 25, 155, 156, 213, 326], "negative_binomi": [2, 3, 25, 155, 156, 213, 326], "noncentral_chisquar": [2, 3, 25, 155, 156, 213, 326], "noncentral_f": [2, 3, 25, 155, 156, 213, 326], "normal": [2, 3, 20, 24, 25, 36, 41, 59, 68, 73, 80, 81, 82, 86, 89, 116, 121, 140, 144, 155, 156, 198, 202, 213, 224, 229, 248, 261, 266, 275, 276, 277, 283, 295, 326, 340, 344, 350, 351, 357, 360], "pareto": [2, 3, 25, 155, 156, 213, 326], "permut": [2, 3, 25, 107, 155, 156, 213, 325, 326], "poisson": [2, 3, 25, 82, 86, 89, 91, 92, 95, 155, 156, 213, 277, 283, 295, 299, 300, 306, 326, 357, 360, 363, 364, 370], "power": [2, 3, 25, 63, 75, 98, 155, 156, 213, 254, 268, 310, 326, 345, 374], "rand": [2, 3, 25, 41, 107, 121, 155, 156, 213, 229, 325, 326], "randint": [2, 3, 25, 91, 155, 156, 213, 299, 326, 363], "randn": [2, 3, 23, 25, 88, 93, 98, 143, 155, 156, 201, 213, 286, 287, 288, 289, 290, 291, 292, 293, 294, 304, 310, 326, 368, 374], "random_integ": [2, 3, 25, 155, 156, 213, 326], "random_sampl": [2, 3, 25, 155, 156, 213, 326], "rayleigh": [2, 3, 25, 155, 156, 213, 326], "seed": [2, 3, 25, 155, 156, 213, 326], "set_stat": [2, 3, 25, 155, 156, 213, 326], "shuffl": [2, 3, 23, 25, 82, 143, 155, 156, 201, 213, 277, 326], "standard_cauchi": [2, 3, 25, 155, 156, 213, 326], "standard_exponenti": [2, 3, 25, 155, 156, 213, 326], "standard_gamma": [2, 3, 25, 155, 156, 213, 326], "standard_norm": [2, 3, 25, 155, 156, 213, 326], "standard_t": [2, 3, 25, 155, 156, 213, 326], "triangular": [2, 3, 11, 23, 25, 132, 143, 155, 156, 188, 201, 213, 326], "uniform": [2, 3, 25, 41, 59, 91, 121, 155, 156, 213, 229, 248, 299, 326, 363], "vonmis": [2, 3, 25, 83, 155, 156, 213, 280, 326, 354], "wald": [2, 3, 25, 155, 156, 213, 326], "weibul": [2, 3, 25, 155, 156, 213, 326], "zipf": [2, 3, 25, 155, 156, 213, 326], "color": [3, 4, 6, 7, 8, 11, 12, 25, 128, 132, 133, 156, 181, 183, 184, 185, 188, 189, 213, 326], "rgb2hex": [3, 4, 5, 128, 129, 156, 181, 182], "hex2rgb": [3, 4, 5, 128, 129, 156, 181, 182], "hsv2rgb": [3, 4, 5, 128, 129, 156, 181, 182], "light": [3, 4, 5, 11, 128, 129, 132, 156, 181, 182, 188], "luminance_matrix": [3, 4, 5, 128, 129, 156, 181, 182], "match_lumin": [3, 4, 5, 128, 129, 156, 181, 182], "rotat": [3, 4, 5, 11, 23, 24, 59, 64, 71, 81, 128, 129, 132, 143, 144, 156, 181, 182, 188, 201, 202, 248, 255, 264, 276, 343, 351], "rgbtohcl": [3, 4, 5, 128, 129, 156, 181, 182], "hue_angl": [3, 4, 5, 128, 129, 156, 181, 182], "hcl2rgb": [3, 4, 5, 128, 129, 156, 181, 182], "circularly_smooth_colormap": [3, 4, 5, 128, 129, 156, 181, 182], "isoluminance1": [3, 4, 5, 128, 129, 156, 181, 182], "isoluminance2": [3, 4, 5, 128, 129, 156, 181, 182], "isoluminance3": [3, 4, 5, 128, 129, 156, 181, 182], "isoluminance4": [3, 4, 5, 128, 129, 156, 181, 182], "lighthu": [3, 4, 5, 128, 129, 156, 181, 182], "darkhu": [3, 4, 5, 128, 129, 156, 181, 182], "medhu": [3, 4, 5, 128, 129, 156, 181, 182], "radl2rgb": [3, 4, 5, 128, 129, 156, 181, 182], "radl2rgblut": [3, 4, 5, 128, 129, 156, 181, 182], "complexhlarr2rgb": [3, 4, 5, 128, 129, 156, 181, 182], "color_boxplot": [3, 4, 5, 128, 129, 156, 181, 182], "hex_pack_bgr": [3, 4, 5, 128, 129, 156, 181, 182], "code_to_16bit": [3, 4, 5, 128, 129, 156, 181, 182], "bit16_rgb_to_tupl": [3, 4, 5, 128, 129, 156, 181, 182], "enumerate_fast_color": [3, 4, 5, 128, 129, 156, 181, 182], "tuple_to_bit16": [3, 4, 5, 128, 129, 156, 181, 182], "tuple_to_bit24": [3, 4, 5, 128, 129, 156, 181, 182], "bit16_print_color": [3, 4, 5, 128, 129, 156, 181, 182], "show_fast_pallet": [3, 4, 5, 128, 129, 156, 181, 182], "show_complete_fast_pallet": [3, 4, 5, 128, 129, 156, 181, 182], "show_complete_fastest_pallet": [3, 4, 5, 128, 129, 156, 181, 182], "show_hex_pallet": [3, 4, 5, 128, 129, 156, 181, 182], "colormap": [3, 4, 5, 8, 11, 129, 132, 156, 181, 182, 185, 188], "test_colormap": [3, 4, 6, 156, 181, 183], "dendron": [3, 4, 156, 181], "list_lik": [3, 4, 7, 156, 181, 184], "get_depth": [3, 4, 7, 156, 181, 184], "count_nod": [3, 4, 7, 156, 181, 184], "inorder_travers": [3, 4, 7, 156, 181, 184], "plot_bracket": [3, 4, 7, 156, 181, 184], "plot_brackets_polar": [3, 4, 7, 156, 181, 184], "fabio_map": [3, 4, 6, 156, 181, 183], "imag": [3, 4, 11, 12, 46, 69, 87, 97, 126, 128, 132, 133, 156, 181, 188, 189, 234, 262, 285, 309, 341, 359, 373], "median_cent": [3, 4, 9, 128, 130, 156, 181, 186], "mean_cent": [3, 4, 9, 128, 130, 156, 181, 186], "unit": [3, 4, 9, 11, 25, 41, 49, 50, 59, 68, 71, 75, 80, 82, 85, 121, 128, 130, 132, 146, 147, 156, 181, 186, 188, 213, 229, 237, 238, 248, 261, 264, 268, 275, 277, 282, 326, 340, 343, 345, 350, 356], "visualize_deriv": [3, 4, 9, 128, 130, 156, 181, 186], "matplotlib": [3, 4, 6, 8, 11, 25, 71, 78, 128, 132, 156, 181, 183, 185, 188, 213, 264, 272, 326, 343, 348], "hide_toolbar": [3, 4, 10, 128, 131, 156, 181, 187], "start": [3, 4, 10, 11, 12, 25, 40, 59, 120, 128, 131, 132, 133, 156, 181, 187, 188, 189, 213, 228, 248, 326], "draw_arrai": [3, 4, 10, 12, 128, 131, 133, 156, 181, 187, 189], "plot": [3, 4, 9, 10, 23, 25, 30, 37, 50, 71, 78, 83, 96, 98, 110, 117, 128, 130, 131, 143, 147, 156, 163, 170, 181, 186, 187, 201, 213, 218, 225, 238, 264, 272, 280, 307, 310, 326, 343, 348, 354, 371, 374], "simpleaxi": [3, 4, 11, 23, 128, 132, 143, 156, 181, 188, 201], "rightaxi": [3, 4, 11, 128, 132, 156, 181, 188], "simpleraxi": [3, 4, 11, 128, 132, 156, 181, 188], "simplerright": [3, 4, 11, 128, 132, 156, 181, 188], "noaxi": [3, 4, 11, 128, 132, 156, 181, 188], "nicebp": [3, 4, 11, 128, 132, 156, 181, 188], "colored_boxplot": [3, 4, 11, 128, 132, 156, 181, 188], "nicei": [3, 4, 11, 128, 132, 156, 181, 188], "nicex": [3, 4, 11, 128, 132, 156, 181, 188], "nicexi": [3, 4, 11, 128, 132, 156, 181, 188], "positivex": [3, 4, 11, 128, 132, 156, 181, 188], "positivei": [3, 4, 11, 128, 132, 156, 181, 188], "positivexi": [3, 4, 11, 128, 132, 156, 181, 188], "xylim": [3, 4, 11, 128, 132, 156, 181, 188], "noclip": [3, 4, 11, 128, 132, 156, 181, 188], "notick": [3, 4, 11, 128, 132, 156, 181, 188], "nox": [3, 4, 11, 128, 132, 156, 181, 188], "noi": [3, 4, 11, 128, 132, 156, 181, 188], "noxyax": [3, 4, 11, 128, 132, 156, 181, 188], "noxlabel": [3, 4, 11, 128, 132, 156, 181, 188], "noylabel": [3, 4, 11, 128, 132, 156, 181, 188], "nolabel": [3, 4, 11, 128, 132, 156, 181, 188], "righti": [3, 4, 11, 128, 132, 156, 181, 188], "uniti": [3, 4, 11, 128, 132, 156, 181, 188], "unitx": [3, 4, 11, 128, 132, 156, 181, 188], "force_aspect": [3, 4, 11, 23, 128, 132, 143, 156, 181, 188, 201], "get_aspect": [3, 4, 11, 128, 132, 156, 181, 188], "match_image_aspect": [3, 4, 11, 128, 132, 156, 181, 188], "unitax": [3, 4, 11, 128, 132, 156, 181, 188], "adjustmap": [3, 4, 11, 128, 132, 156, 181, 188], "get_ax_s": [3, 4, 11, 128, 132, 156, 181, 188], "get_ax_pixel": [3, 4, 11, 128, 132, 156, 181, 188], "get_ax_pixel_ratio": [3, 4, 11, 128, 132, 156, 181, 188], "pixels_to_xunit": [3, 4, 11, 128, 132, 156, 181, 188], "yunits_to_pixel": [3, 4, 11, 128, 132, 156, 181, 188], "xunits_to_pixel": [3, 4, 11, 128, 132, 156, 181, 188], "pixels_to_yunit": [3, 4, 11, 128, 132, 156, 181, 188], "pixels_to_xfigureunit": [3, 4, 11, 128, 132, 156, 181, 188], "pixels_to_yfigureunit": [3, 4, 11, 128, 132, 156, 181, 188], "xfigureunits_to_pixel": [3, 4, 11, 128, 132, 156, 181, 188], "yfigureunits_to_pixel": [3, 4, 11, 128, 132, 156, 181, 188], "px2x": [3, 4, 11, 128, 132, 156, 181, 188], "px2y": [3, 4, 11, 128, 132, 156, 181, 188], "adjust_ylabel_spac": [3, 4, 11, 128, 132, 156, 181, 188], "adjust_xlabel_spac": [3, 4, 11, 128, 132, 156, 181, 188], "get_bbox": [3, 4, 11, 128, 132, 156, 181, 188], "nudge_axis_y_pixel": [3, 4, 11, 128, 132, 156, 181, 188], "adjust_axis_height_pixel": [3, 4, 11, 128, 132, 156, 181, 188], "nudge_axis_i": [3, 4, 11, 128, 132, 156, 181, 188], "nudge_axis_x": [3, 4, 11, 128, 132, 156, 181, 188], "expand_axis_x": [3, 4, 11, 128, 132, 156, 181, 188], "expand_axis_i": [3, 4, 11, 128, 132, 156, 181, 188], "nudge_axis_baselin": [3, 4, 11, 128, 132, 156, 181, 188], "nudge_axis_left": [3, 4, 11, 128, 132, 156, 181, 188], "zoombox": [3, 4, 11, 128, 132, 156, 181, 188], "fudgex": [3, 4, 11, 128, 132, 156, 181, 188], "fudgei": [3, 4, 11, 128, 132, 156, 181, 188], "fudgexi": [3, 4, 11, 128, 132, 156, 181, 188], "shade_edg": [3, 4, 11, 128, 132, 156, 181, 188], "ybartext": [3, 4, 11, 128, 132, 156, 181, 188], "xbartext": [3, 4, 11, 128, 132, 156, 181, 188], "nice_legend": [3, 4, 11, 128, 132, 156, 181, 188], "right_legend": [3, 4, 11, 128, 132, 156, 181, 188], "left_legend": [3, 4, 11, 128, 132, 156, 181, 188], "base_legend": [3, 4, 11, 128, 132, 156, 181, 188], "rangeto": [3, 4, 11, 128, 132, 156, 181, 188], "rangeov": [3, 4, 11, 128, 132, 156, 181, 188], "cleartop": [3, 4, 11, 128, 132, 156, 181, 188], "plotcwt": [3, 4, 11, 128, 132, 156, 181, 188], "plotwtphas": [3, 4, 11, 128, 132, 156, 181, 188], "wtpshow": [3, 4, 11, 128, 132, 156, 181, 188], "plotwtphasefig": [3, 4, 11, 128, 132, 156, 181, 188], "domask": [3, 4, 11, 128, 132, 156, 181, 188], "fsize": [3, 4, 11, 128, 132, 156, 181, 188], "handlersquar": [3, 4, 11, 128, 132, 156, 181, 188], "plot_complex": [3, 4, 11, 128, 132, 156, 181, 188], "animate_complex": [3, 4, 11, 128, 132, 156, 181, 188], "good_colorbar": [3, 4, 11, 128, 132, 156, 181, 188], "complex_axi": [3, 4, 11, 128, 132, 156, 181, 188], "subfigurelabel": [3, 4, 11, 128, 132, 156, 181, 188], "sigbar": [3, 4, 11, 128, 132, 156, 181, 188], "hsigbar": [3, 4, 11, 128, 132, 156, 181, 188], "savefigur": [3, 4, 11, 128, 132, 156, 181, 188], "clean_y_rang": [3, 4, 11, 128, 132, 156, 181, 188], "round_to_precis": [3, 4, 11, 128, 132, 156, 181, 188], "ceil_to_precis": [3, 4, 11, 128, 132, 156, 181, 188], "floor_to_precis": [3, 4, 11, 128, 132, 156, 181, 188], "expand_y_rang": [3, 4, 11, 128, 132, 156, 181, 188], "gaussian2d_covellips": [3, 4, 11, 128, 132, 156, 181, 188], "stderrplot": [3, 4, 11, 128, 132, 156, 181, 188], "yscalebar": [3, 4, 11, 128, 132, 156, 181, 188], "xscalebar": [3, 4, 11, 128, 132, 156, 181, 188], "addspik": [3, 4, 11, 128, 132, 156, 181, 188], "unit_crosshair": [3, 4, 11, 128, 132, 156, 181, 188], "covariance_crosshair": [3, 4, 11, 128, 132, 156, 181, 188], "draw_circl": [3, 4, 11, 128, 132, 156, 181, 188], "simple_arrow": [3, 4, 11, 128, 132, 156, 181, 188], "inhibition_arrow": [3, 4, 11, 128, 132, 156, 181, 188], "figurebox": [3, 4, 11, 128, 132, 156, 181, 188], "more_xtick": [3, 4, 11, 128, 132, 156, 181, 188], "more_ytick": [3, 4, 11, 128, 132, 156, 181, 188], "border_width": [3, 4, 11, 128, 132, 156, 181, 188], "broken_step": [3, 4, 11, 128, 132, 156, 181, 188], "label": [3, 4, 11, 25, 82, 97, 128, 132, 156, 181, 188, 213, 277, 309, 326, 373], "flathist": [3, 4, 11, 128, 132, 156, 181, 188], "barcompar": [3, 4, 11, 128, 132, 156, 181, 188], "shellmean": [3, 4, 11, 128, 132, 156, 181, 188], "trendlin": [3, 4, 11, 128, 132, 156, 181, 188], "shellplot": [3, 4, 11, 128, 132, 156, 181, 188], "arrow_between": [3, 4, 11, 128, 132, 156, 181, 188], "splitz": [3, 4, 11, 128, 132, 156, 181, 188], "plotz": [3, 4, 11, 128, 132, 156, 181, 188], "save_limit": [3, 4, 11, 128, 132, 156, 181, 188], "restore_limit": [3, 4, 11, 128, 132, 156, 181, 188], "mock_legend": [3, 4, 11, 128, 132, 156, 181, 188], "xtickpad": [3, 4, 11, 128, 132, 156, 181, 188], "ytickpad": [3, 4, 11, 128, 132, 156, 181, 188], "xticklen": [3, 4, 11, 128, 132, 156, 181, 188], "yticklen": [3, 4, 11, 128, 132, 156, 181, 188], "xin": [3, 4, 11, 89, 128, 132, 156, 181, 188, 295, 360], "yin": [3, 4, 11, 128, 132, 156, 181, 188], "lighten": [3, 4, 11, 128, 132, 156, 181, 188], "darken": [3, 4, 11, 128, 132, 156, 181, 188], "axvstrip": [3, 4, 11, 128, 132, 156, 181, 188], "widths_to_edg": [3, 4, 11, 128, 132, 156, 181, 188], "center": [3, 4, 11, 24, 25, 59, 68, 71, 73, 82, 85, 89, 128, 132, 144, 156, 181, 188, 202, 213, 248, 261, 264, 266, 277, 282, 295, 326, 340, 343, 344, 356, 360], "widths_to_cent": [3, 4, 11, 128, 132, 156, 181, 188], "axvband": [3, 4, 11, 128, 132, 156, 181, 188], "zerohlin": [3, 4, 11, 128, 132, 156, 181, 188], "zerovlin": [3, 4, 11, 128, 132, 156, 181, 188], "boxplot_signific": [3, 4, 11, 128, 132, 156, 181, 188], "pikeplot": [3, 4, 11, 128, 132, 156, 181, 188], "pygam": [3, 4, 128, 156, 181], "enable_vsync": [3, 4, 12, 128, 133, 156, 181, 189], "ztransform_plot_help": [3, 4, 156, 181], "cach": [3, 14, 16, 17, 18, 19, 25, 63, 107, 134, 136, 138, 139, 156, 192, 194, 195, 196, 197, 213, 254, 325, 326], "function_hash_with_subroutin": [3, 14, 15, 134, 135, 156, 192, 193], "get_sourc": [3, 14, 15, 134, 135, 156, 192, 193], "function_hash_no_subroutin": [3, 14, 15, 134, 135, 156, 192, 193], "base64hash": [3, 14, 15, 134, 135, 156, 192, 193], "base64hash2byt": [3, 14, 15, 134, 135, 156, 192, 193], "function_signatur": [3, 14, 15, 134, 135, 156, 192, 193], "signature_to_file_str": [3, 14, 15, 134, 135, 156, 192, 193], "file_string_to_signatur": [3, 14, 15, 134, 135, 156, 192, 193], "human_encod": [3, 14, 15, 134, 135, 156, 192, 193], "human_decod": [3, 14, 15, 134, 135, 156, 192, 193], "get_cache_path": [3, 14, 15, 134, 135, 156, 192, 193], "locate_cach": [3, 14, 15, 134, 135, 156, 192, 193], "validate_for_matfil": [3, 14, 15, 134, 135, 156, 192, 193], "validate_for_numpi": [3, 14, 15, 134, 135, 156, 192, 193], "read_cache_entri": [3, 14, 15, 134, 135, 156, 192, 193], "disk_cach": [3, 14, 15, 134, 135, 156, 192, 193], "hierarchical_cach": [3, 14, 15, 134, 135, 156, 192, 193], "closur": [3, 14, 134, 156, 192], "is_immut": [3, 14, 16, 134, 136, 156, 192, 194], "is_probably_saf": [3, 14, 16, 134, 136, 156, 192, 194], "csv": [3, 14, 16, 134, 136, 156, 192, 194], "inspect_function_closur": [3, 14, 16, 134, 136, 156, 192, 194], "verify_function_closur": [3, 14, 16, 134, 136, 156, 192, 194], "get_subroutin": [3, 14, 16, 134, 136, 156, 192, 194], "filenam": [3, 14, 15, 46, 126, 134, 135, 156, 192, 193, 234], "validate_argument_signatur": [3, 14, 17, 134, 138, 156, 192, 195], "is_dangerous_filenam": [3, 14, 17, 134, 138, 156, 192, 195], "check_filenam": [3, 14, 17, 134, 138, 156, 192, 195], "initialize_system_cach": [3, 14, 134, 156, 192], "purge_ram_cach": [3, 14, 18, 134, 139, 156, 192, 196], "purge_ssd_cach": [3, 14, 18, 134, 139, 156, 192, 196], "du": [3, 14, 18, 49, 134, 139, 146, 156, 192, 196, 237], "reset_ramdisk": [3, 14, 18, 134, 139, 156, 192, 196], "launch_cache_synchron": [3, 14, 18, 134, 139, 156, 192, 196], "initialize_cach": [3, 14, 18, 134, 139, 156, 192, 196], "cache_test": [3, 14, 18, 134, 139, 156, 192, 196], "ndecor": [3, 14, 18, 139, 156, 192, 196], "listit": [3, 14, 19, 156, 192, 197], "tupleit": [3, 14, 19, 156, 192, 197], "sanit": [3, 14, 19, 156, 192, 197], "summarize_funct": [3, 14, 19, 156, 192, 197], "argument_signatur": [3, 14, 15, 19, 135, 156, 192, 193, 197], "print_signatur": [3, 14, 19, 156, 192, 197], "time": [3, 11, 14, 15, 19, 20, 24, 25, 46, 49, 50, 59, 60, 62, 63, 64, 66, 68, 70, 71, 73, 75, 80, 81, 82, 84, 85, 89, 91, 94, 96, 98, 99, 126, 132, 135, 140, 144, 146, 147, 156, 188, 192, 193, 197, 198, 202, 213, 234, 237, 238, 248, 249, 252, 254, 255, 258, 261, 263, 264, 266, 268, 275, 276, 277, 281, 282, 295, 299, 305, 307, 310, 317, 326, 340, 342, 343, 344, 345, 350, 351, 355, 356, 360, 363, 369, 371, 374], "clear_memo": [3, 14, 19, 156, 192, 197], "memoiz": [3, 14, 15, 18, 19, 41, 121, 135, 139, 156, 192, 193, 196, 197, 229], "unwrap": [3, 14, 19, 59, 75, 156, 192, 197, 248, 268, 345], "parallel": [3, 14, 43, 104, 123, 134, 156, 192, 231, 322], "parmap": [3, 14, 20, 134, 140, 156, 192, 198], "pararraymap": [3, 14, 20, 134, 140, 156, 192, 198], "parmap_dict": [3, 14, 20, 134, 140, 156, 192, 198], "function_fingerprint": [3, 14, 20, 134, 140, 156, 192, 198], "eval_from_cach": [3, 14, 20, 134, 140, 156, 192, 198], "parallel_indirect_wrapp": [3, 14, 20, 134, 140, 156, 192, 198], "parallel_cached_wrapp": [3, 14, 20, 134, 140, 156, 192, 198], "parimap": [3, 14, 20, 134, 140, 156, 192, 198], "close_pool": [3, 14, 20, 134, 140, 156, 192, 198], "reset_pool": [3, 14, 20, 134, 140, 156, 192, 198], "parallel_error_handl": [3, 14, 20, 134, 140, 156, 192, 198], "argument": [3, 11, 15, 16, 17, 19, 20, 21, 25, 36, 40, 59, 62, 78, 89, 90, 107, 116, 120, 132, 135, 136, 138, 140, 141, 156, 188, 193, 194, 195, 197, 198, 199, 213, 224, 228, 248, 252, 272, 295, 297, 325, 326, 328, 338, 348, 360], "issquar": [3, 21, 22, 141, 142, 156, 199, 200], "iscolumn": [3, 21, 22, 141, 142, 156, 199, 200], "isrow": [3, 21, 22, 141, 142, 156, 199, 200], "asrow": [3, 21, 22, 141, 142, 156, 199, 200], "ascolumn": [3, 21, 22, 141, 142, 156, 199, 200], "assquar": [3, 21, 22, 141, 142, 156, 199, 200], "assertsquar": [3, 21, 22, 141, 142, 156, 199, 200], "assertcolumn": [3, 21, 22, 141, 142, 156, 199, 200], "assertrow": [3, 21, 22, 141, 142, 156, 199, 200], "assertvector": [3, 21, 22, 141, 142, 156, 199, 200], "asvector": [3, 21, 22, 141, 142, 156, 199, 200], "scalar": [3, 5, 11, 21, 22, 23, 25, 36, 64, 82, 84, 85, 88, 89, 90, 97, 101, 104, 108, 116, 129, 132, 141, 142, 143, 156, 182, 188, 199, 200, 201, 213, 224, 255, 277, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 309, 319, 322, 326, 355, 356, 360, 373], "assertfinit": [3, 21, 22, 141, 142, 156, 199, 200], "assertr": [3, 21, 22, 141, 142, 156, 199, 200], "assertfiniter": [3, 21, 22, 141, 142, 156, 199, 200], "assertshap": [3, 21, 22, 141, 142, 156, 199, 200], "matrix": [3, 11, 21, 24, 25, 30, 31, 36, 37, 46, 59, 60, 63, 75, 82, 84, 87, 88, 89, 91, 110, 111, 116, 117, 126, 132, 141, 144, 156, 163, 164, 170, 188, 199, 202, 213, 218, 219, 224, 225, 234, 248, 249, 254, 268, 277, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 326, 345, 355, 359, 360, 363], "triu_el": [3, 21, 23, 141, 143, 156, 199, 201], "tril_el": [3, 21, 23, 141, 143, 156, 199, 201], "column": [3, 21, 23, 49, 68, 71, 89, 104, 141, 143, 146, 156, 199, 201, 237, 261, 264, 295, 322, 340, 343, 360], "row": [3, 21, 23, 25, 36, 40, 68, 71, 78, 116, 120, 141, 143, 156, 199, 201, 213, 224, 228, 261, 264, 272, 326, 340, 343, 348], "rcond": [3, 21, 23, 141, 143, 156, 199, 201], "check_finite_r": [3, 21, 23, 141, 143, 156, 199, 201], "check_covmat": [3, 21, 23, 141, 143, 156, 199, 201], "check_covmat_fast": [3, 21, 23, 141, 143, 156, 199, 201], "real_eig": [3, 21, 23, 141, 143, 156, 199, 201], "psd_eig": [3, 21, 23, 141, 143, 156, 199, 201], "logdet": [3, 21, 23, 141, 143, 156, 199, 201], "solt": [3, 21, 23, 141, 143, 156, 199, 201], "rsolt": [3, 21, 23, 141, 143, 156, 199, 201], "rsolv": [3, 21, 23, 141, 143, 156, 199, 201], "qf": [3, 21, 23, 141, 143, 156, 199, 201], "abserr": [3, 21, 23, 141, 143, 156, 199, 201], "errmx": [3, 21, 23, 141, 143, 156, 199, 201], "cholupd": [3, 21, 23, 141, 143, 156, 199, 201], "cholupdate_ey": [3, 21, 23, 141, 143, 156, 199, 201], "cartesian_product": [3, 21, 23, 141, 143, 156, 199, 201], "nearpdhigham": [3, 21, 23, 141, 143, 156, 199, 201], "nearpsdrebonatojackel": [3, 21, 23, 141, 143, 156, 199, 201], "cinv": [3, 21, 23, 141, 143, 156, 199, 201], "csolv": [3, 21, 23, 141, 143, 156, 199, 201], "wheremax": [3, 21, 23, 141, 143, 156, 199, 201], "wheremin": [3, 21, 23, 141, 143, 156, 199, 201], "reglstsq": [3, 21, 23, 141, 143, 156, 199, 201], "ldistanc": [3, 21, 23, 141, 143, 156, 199, 201], "llasso": [3, 21, 23, 141, 143, 156, 199, 201], "rmatrix": [3, 21, 23, 141, 143, 156, 199, 201], "ldiv": [3, 21, 23, 30, 35, 36, 110, 115, 116, 141, 143, 156, 199, 201, 218, 223, 224], "rdiv": [3, 21, 23, 141, 143, 156, 199, 201], "autopredict": [3, 21, 23, 141, 143, 156, 199, 201], "kronsum": [3, 21, 23, 141, 143, 156, 199, 201], "top_v": [3, 21, 23, 141, 143, 156, 199, 201], "normedcovari": [3, 21, 23, 141, 143, 156, 199, 201], "maxeig": [3, 21, 23, 141, 143, 156, 199, 201], "selector_matrix": [3, 21, 23, 141, 143, 156, 199, 201], "laplace_kernel": [3, 21, 23, 67, 73, 141, 143, 156, 199, 201, 260, 266, 339, 344], "match_covari": [3, 21, 23, 141, 143, 156, 199, 201], "oper": [3, 21, 23, 36, 40, 41, 59, 75, 82, 84, 91, 107, 116, 120, 121, 141, 143, 156, 199, 201, 224, 228, 229, 248, 268, 277, 281, 299, 325, 345, 355, 363], "adjacency1d": [3, 21, 24, 141, 144, 156, 199, 202], "laplacian1d_circular": [3, 21, 24, 141, 144, 156, 199, 202], "adjacency2d": [3, 21, 24, 141, 144, 156, 199, 202], "laplacian2d": [3, 21, 24, 141, 144, 156, 199, 202], "adjacency2d_circular": [3, 21, 24, 141, 144, 156, 199, 202], "adjacency2d_rot": [3, 21, 24, 141, 144, 156, 199, 202], "laplacian1d": [3, 21, 24, 141, 144, 156, 199, 202], "laplacianft1d": [3, 21, 24, 141, 144, 156, 199, 202], "wienerft1d": [3, 21, 24, 141, 144, 156, 199, 202], "diffuseft1d": [3, 21, 24, 141, 144, 156, 199, 202], "flatcov": [3, 21, 24, 141, 144, 156, 199, 202], "delta": [3, 21, 24, 64, 76, 89, 97, 141, 144, 156, 199, 202, 255, 269, 295, 309, 360, 373], "differenti": [3, 21, 24, 50, 59, 65, 68, 71, 88, 141, 144, 147, 156, 199, 202, 238, 248, 257, 261, 264, 286, 287, 288, 289, 290, 291, 292, 293, 294, 340, 343], "integr": [3, 21, 24, 50, 73, 86, 88, 89, 91, 93, 141, 144, 147, 156, 199, 202, 238, 266, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 304, 344, 357, 360, 363, 368], "covfrom": [3, 21, 24, 141, 144, 156, 199, 202], "oucov": [3, 21, 24, 141, 144, 156, 199, 202], "gaussian1dbluroper": [3, 21, 24, 141, 144, 156, 199, 202], "circular1dbluroper": [3, 21, 24, 141, 144, 156, 199, 202], "separable_guassian_blur": [3, 21, 24, 141, 144, 156, 199, 202], "gaussian2dbluroper": [3, 21, 24, 141, 144, 156, 199, 202], "cosine_kernel": [3, 21, 24, 67, 73, 82, 89, 141, 144, 156, 199, 202, 260, 266, 277, 295, 339, 344, 360], "log_cosine_basi": [3, 21, 24, 67, 73, 82, 89, 141, 144, 156, 199, 202, 260, 266, 277, 295, 339, 344, 360], "make_cosine_basi": [3, 21, 24, 67, 73, 82, 89, 141, 144, 156, 199, 202, 260, 266, 277, 295, 339, 344, 360], "encod": [3, 15, 26, 59, 68, 76, 135, 156, 193, 214, 248, 261, 269, 340], "gpu": [3, 26, 156, 214], "opto": [3, 26, 156, 214], "coher": [3, 59, 62, 63, 68, 75, 84, 156, 248, 252, 254, 261, 268, 281, 328, 340, 345, 355], "morlet_population_synchrony_spectrum": [3, 59, 60, 156, 248, 249], "population_eigencoher": [3, 59, 60, 156, 248, 249], "population_coherence_matrix": [3, 59, 60, 156, 248, 249], "multitaper_coher": [3, 59, 60, 156, 248, 249], "sliding_multitaper_coher": [3, 59, 60, 156, 248, 249], "sliding_multitaper_coherence_parallel": [3, 59, 60, 156, 248, 249], "coherence_pvalu": [3, 59, 60, 156, 248, 249], "multitaper_multitrial_coher": [3, 59, 60, 156, 248, 249], "conv": [3, 59, 156, 248, 328], "reflect2d": [3, 59, 61, 156, 248, 250], "reflect2d_1": [3, 59, 61, 156, 248, 250], "mirror2d": [3, 59, 61, 67, 71, 156, 248, 250, 260, 264, 339, 343], "convolve2dct": [3, 59, 61, 156, 248, 250], "separable2d": [3, 59, 61, 156, 248, 250], "gausskern2d": [3, 59, 61, 156, 248, 250], "gausskern1d": [3, 59, 61, 156, 248, 250], "morlet": [3, 59, 60, 156, 248, 249, 328], "normalized_morlet": [3, 59, 62, 156, 248, 252], "prepare_wavelet_fft_basi": [3, 59, 62, 156, 248, 252], "fft_cwt": [3, 59, 62, 156, 248, 252], "logfreq": [3, 59, 62, 156, 248, 252], "prepare_wavelet_fft_basis_logspac": [3, 59, 62, 156, 248, 252], "population_synchrony_spectrum": [3, 59, 62, 156, 248, 252], "fft_cwt_transpos": [3, 59, 62, 156, 248, 252], "fft_cwt_transposed_logspac": [3, 59, 62, 156, 248, 252], "multitap": [3, 59, 60, 64, 156, 248, 249, 255, 328], "dpss_cach": [3, 59, 63, 156, 248, 254], "multitaper_spectrum": [3, 59, 63, 156, 248, 254], "multitaper_squared_spectrum": [3, 59, 63, 156, 248, 254], "sliding_multitaper_spectrum": [3, 59, 63, 156, 248, 254], "multitaper_population_eigencoher": [3, 59, 63, 156, 248, 254], "ppc": [3, 59, 156, 248, 328], "phase_random": [3, 59, 64, 156, 248, 255], "fftppc_bias": [3, 59, 64, 156, 248, 255], "fftppc": [3, 59, 64, 156, 248, 255], "fftppc_biased_multitap": [3, 59, 64, 156, 248, 255], "fftppc_multitap": [3, 59, 64, 156, 248, 255], "discard_spikes_closer_than_delta": [3, 59, 64, 156, 248, 255], "pairwise_phase_consist": [3, 59, 64, 156, 248, 255], "estimate_bias_in_uncorrected_ppc": [3, 59, 64, 156, 248, 255], "phase_randomized_bias_correct": [3, 59, 64, 156, 248, 255], "ppc_chance_level": [3, 59, 64, 156, 248, 255], "ppc_phase_randomize_chance_level_sampl": [3, 59, 64, 156, 248, 255], "savitskygolai": [3, 59, 156, 248, 328], "sgord": [3, 59, 65, 156, 248, 257], "sgkern": [3, 59, 65, 156, 248, 257], "sgkernv": [3, 59, 65, 156, 248, 257], "sgkerna": [3, 59, 65, 156, 248, 257], "sgkernj": [3, 59, 65, 156, 248, 257], "sgfilt": [3, 59, 65, 156, 248, 257], "sgfiltv": [3, 59, 65, 156, 248, 257], "sgfilta": [3, 59, 65, 156, 248, 257], "sgfiltj": [3, 59, 65, 156, 248, 257], "sgsmooth": [3, 59, 65, 156, 248, 257], "sgdifferenti": [3, 59, 65, 156, 248, 257], "sgacceler": [3, 59, 65, 156, 248, 257], "sgjerk": [3, 59, 65, 156, 248, 257], "sde": [3, 59, 156, 248], "sample_wiener_process": [3, 59, 66, 156, 248, 258], "sample_ou_process": [3, 59, 66, 156, 248, 258], "geometric_window": [3, 59, 156, 248], "gaussian_kernel": [3, 59, 156, 248], "gaussian_smooth": [3, 59, 156, 248], "circular_gaussian_smooth": [3, 59, 156, 248], "circular_gaussian_smooth_2d": [3, 59, 156, 248], "linear_cosine_basi": [3, 59, 156, 248], "circular_cosine_basi": [3, 59, 156, 248], "unitscal": [3, 59, 156, 248], "topercentil": [3, 59, 156, 248], "local_maxima": [3, 59, 156, 248], "local_minima": [3, 59, 156, 248], "amp": [3, 59, 69, 156, 248, 262, 341], "get_snip": [3, 59, 156, 248], "triggered_averag": [3, 59, 156, 248], "get_triggered_stat": [3, 59, 156, 248], "padout": [3, 59, 156, 248], "padin": [3, 59, 156, 248], "nonnegative_bandpass_filt": [3, 59, 156, 248], "pad_sign": [3, 59, 156, 248], "bandpass_filt": [3, 59, 156, 248], "box_filt": [3, 59, 156, 248], "median_filt": [3, 59, 156, 248], "percentile_filt": [3, 59, 156, 248], "variance_filt": [3, 59, 156, 248], "rewrap": [3, 59, 156, 248], "pdiff": [3, 59, 156, 248], "pghilbert": [3, 59, 156, 248], "fudge_deriv": [3, 59, 156, 248], "ifreq": [3, 59, 156, 248], "ang": [3, 59, 156, 248], "randband": [3, 59, 156, 248], "arenear": [3, 59, 156, 248], "aresaf": [3, 59, 156, 248], "get_edg": [3, 59, 156, 248], "set_edg": [3, 59, 156, 248], "remove_gap": [3, 59, 156, 248], "remove_short": [3, 59, 156, 248], "phase_rot": [3, 59, 156, 248], "fm_mod": [3, 59, 156, 248], "piec": [3, 25, 59, 156, 213, 248, 326], "stats_block": [3, 59, 156, 248], "mean_block": [3, 59, 156, 248], "var_block": [3, 59, 156, 248], "median_block": [3, 59, 156, 248], "phase_randomize_from_amplitud": [3, 59, 156, 248], "estimate_pad": [3, 59, 156, 248], "lowpass_filt": [3, 59, 156, 248], "highpass_filt": [3, 59, 156, 248], "fdiff": [3, 59, 156, 248], "interpolate_nan": [3, 59, 156, 248], "interpolate_nan_quadrat": [3, 59, 156, 248], "killspik": [3, 59, 156, 248], "peak_within": [3, 59, 156, 248], "local_peak_within": [3, 59, 156, 248], "zeromean": [3, 59, 156, 248], "zscore": [3, 59, 107, 156, 248, 325], "gaussian": [3, 5, 11, 24, 25, 59, 61, 71, 73, 82, 83, 84, 87, 91, 97, 101, 108, 129, 132, 144, 156, 182, 188, 202, 213, 248, 250, 264, 266, 277, 280, 281, 285, 299, 309, 319, 326, 343, 344, 354, 355, 359, 363, 373], "deltaovermean": [3, 59, 156, 248], "unit_length": [3, 59, 156, 248], "sign_preserving_amplitude_demodul": [3, 59, 156, 248], "autocorrel": [3, 59, 64, 84, 156, 248, 255, 281, 355], "upsampl": [3, 59, 68, 156, 248, 261, 340], "linfilt": [3, 59, 156, 248], "span": [3, 11, 24, 59, 73, 80, 82, 89, 132, 144, 156, 188, 202, 248, 266, 275, 277, 295, 344, 350, 360], "make_lag": [3, 59, 156, 248], "zgrid": [3, 59, 156, 248], "nice_interp": [3, 59, 156, 248], "fftacorr1d": [3, 59, 156, 248], "fftsta": [3, 59, 156, 248], "interpmax1d": [3, 59, 156, 248], "spaced_deriv": [3, 59, 156, 248], "drop_nonfinit": [3, 59, 156, 248], "split_into_group": [3, 59, 156, 248], "invert_uniform": [3, 59, 156, 248], "virtual_reference_line_noise_remov": [3, 59, 156, 248], "band_stop_line_noise_remov": [3, 59, 156, 248], "ndargmax": [3, 59, 156, 248], "complex_to_nan": [3, 59, 156, 248], "make_rebroadcast_slic": [3, 59, 156, 248], "arrai": [3, 5, 11, 12, 15, 23, 24, 25, 36, 40, 41, 49, 59, 61, 62, 64, 65, 67, 69, 70, 71, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 101, 107, 108, 116, 120, 121, 129, 132, 133, 135, 143, 144, 146, 156, 182, 188, 189, 193, 201, 202, 213, 224, 228, 229, 237, 248, 250, 252, 255, 257, 260, 262, 263, 264, 266, 268, 269, 271, 272, 275, 276, 277, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 304, 306, 307, 310, 319, 325, 326, 339, 341, 342, 343, 344, 345, 347, 348, 350, 351, 354, 355, 359, 360, 363, 364, 368, 370, 371, 374], "array_average_amplitud": [3, 67, 68, 156, 260, 261, 339, 340], "array_kuramoto": [3, 67, 68, 156, 260, 261, 339, 340], "array_synchroni": [3, 67, 68, 156, 260, 261, 339, 340], "array_kuramoto_standard_devi": [3, 67, 68, 156, 260, 261, 339, 340], "array_synchrony_standard_devi": [3, 67, 68, 156, 260, 261, 339, 340], "array_phase_gradi": [3, 67, 68, 156, 260, 261, 339, 340], "array_count_cent": [3, 67, 68, 156, 260, 261, 339, 340], "array_count_crit": [3, 67, 68, 156, 260, 261, 339, 340], "array_phasegradient_loc": [3, 67, 68, 156, 260, 261, 339, 340], "array_phasegradient_planar": [3, 67, 68, 156, 260, 261, 339, 340], "array_phasegradient_magnitude_sigma": [3, 67, 68, 156, 260, 261, 339, 340], "array_phasegradient_magnitude_cv": [3, 67, 68, 156, 260, 261, 339, 340], "array_phasegradient_pgd_threshold": [3, 67, 68, 156, 260, 261, 339, 340], "array_wavelength_pgd_threshold": [3, 67, 68, 156, 260, 261, 339, 340], "array_wavelength_local_pgd_threshold": [3, 67, 68, 156, 260, 261, 339, 340], "array_speed_pgd_threshold": [3, 67, 68, 156, 260, 261, 339, 340], "array_speed_loc": [3, 67, 68, 156, 260, 261, 339, 340], "array_wavelength_loc": [3, 67, 68, 156, 260, 261, 339, 340], "array_wavelength_planar": [3, 67, 68, 156, 260, 261, 339, 340], "array_synchrony_pgd": [3, 67, 68, 156, 260, 261, 339, 340], "array_synchrony_pgd_standard_devi": [3, 67, 68, 156, 260, 261, 339, 340], "array_kuramoto_pgd": [3, 67, 68, 156, 260, 261, 339, 340], "array_kuramoto_pgd_standard_devi": [3, 67, 68, 156, 260, 261, 339, 340], "trim_arrai": [3, 67, 68, 156, 260, 261, 339, 340], "trim_array_as_if": [3, 67, 68, 156, 260, 261, 339, 340], "pack_array_data": [3, 67, 68, 156, 260, 261, 339, 340], "dct": [3, 67, 156, 260, 339], "get_mask_antialias": [3, 67, 69, 156, 260, 262, 339, 341], "get_mask": [3, 67, 69, 156, 260, 262, 339, 341], "dct_cut": [3, 67, 69, 156, 260, 262, 339, 341], "outer_complex": [3, 67, 69, 156, 260, 262, 339, 341], "dct_cut_antialia": [3, 67, 69, 156, 260, 262, 339, 341], "dct_cut_downsampl": [3, 67, 69, 156, 260, 262, 339, 341], "dct_upsampl": [3, 67, 69, 156, 260, 262, 339, 341], "iterated_upsampl": [3, 67, 69, 156, 260, 262, 339, 341], "dct_upsample_notrim": [3, 67, 69, 156, 260, 262, 339, 341], "distanc": [3, 11, 23, 25, 46, 67, 71, 76, 98, 126, 132, 143, 156, 188, 201, 213, 234, 260, 264, 269, 310, 326, 339, 343, 374], "get_pair_dist": [3, 67, 70, 156, 260, 263, 339, 342], "distance_angular_devi": [3, 67, 70, 156, 260, 263, 339, 342], "get_averaged_angular_dist": [3, 67, 70, 156, 260, 263, 339, 342], "get_length_constant_tri": [3, 67, 70, 156, 260, 263, 339, 342], "get_average_synchrony_length_constant_parallel": [3, 67, 70, 156, 260, 263, 339, 342], "synchrony_length_constant_areas_summari": [3, 67, 70, 156, 260, 263, 339, 342], "fftzero": [3, 67, 69, 156, 260, 262, 339, 341], "plot_phase_gradi": [3, 67, 71, 156, 260, 264, 339, 343], "plot_phase_direct": [3, 67, 71, 156, 260, 264, 339, 343], "dphidx": [3, 67, 71, 156, 260, 264, 339, 343], "dphidi": [3, 67, 71, 156, 260, 264, 339, 343], "get_phase_gradient_as_complex": [3, 67, 71, 156, 260, 264, 339, 343], "getpeaks2d": [3, 67, 71, 156, 260, 264, 339, 343], "coalesc": [3, 67, 71, 78, 156, 260, 264, 272, 339, 343, 348], "coalesce_point": [3, 67, 71, 156, 260, 264, 339, 343], "find_critical_point": [3, 67, 71, 156, 260, 264, 339, 343], "plot_critical_point": [3, 67, 71, 156, 260, 264, 339, 343], "find_critical_potential_point": [3, 67, 71, 156, 260, 264, 339, 343], "grad": [3, 67, 71, 156, 260, 264, 339, 343], "quickgrad": [3, 67, 71, 156, 260, 264, 339, 343], "getp": [3, 67, 71, 156, 260, 264, 339, 343], "get_critical_spectra": [3, 67, 71, 156, 260, 264, 339, 343], "plot_critical_spectra": [3, 67, 71, 156, 260, 264, 339, 343], "cut_array_data": [3, 67, 71, 156, 260, 264, 339, 343], "geometri": [3, 67, 156, 260], "kernel": [3, 5, 23, 24, 30, 37, 39, 40, 41, 59, 61, 65, 67, 68, 87, 89, 110, 117, 119, 120, 121, 129, 143, 144, 156, 182, 201, 202, 218, 225, 227, 228, 229, 248, 250, 257, 260, 261, 285, 295, 339, 340, 359, 360], "laplacian": [3, 9, 23, 24, 67, 73, 130, 143, 144, 156, 186, 201, 202, 260, 266, 339, 344], "gaussian_2d_kernel": [3, 67, 73, 156, 260, 266, 339, 344], "absorbing_gaussian": [3, 67, 73, 156, 260, 266, 339, 344], "absorbing_laplacian": [3, 67, 73, 156, 260, 266, 339, 344], "magicsharp": [3, 67, 73, 156, 260, 266, 339, 344], "magickernel": [3, 67, 73, 156, 260, 266, 339, 344], "continuum_kernel": [3, 67, 73, 156, 260, 266, 339, 344], "log_spline_basi": [3, 67, 73, 156, 260, 266, 339, 344], "exponential_basi": [3, 67, 73, 156, 260, 266, 339, 344], "diffusion_basi": [3, 67, 73, 156, 260, 266, 339, 344], "iterative_orthogonalize_basi": [3, 67, 73, 156, 260, 266, 339, 344], "mask": [3, 5, 24, 67, 69, 129, 144, 156, 182, 202, 260, 262, 328, 341], "phase": [3, 11, 24, 59, 64, 67, 68, 69, 71, 73, 89, 132, 144, 156, 188, 202, 248, 255, 260, 261, 262, 264, 266, 295, 339, 340, 341, 343, 344, 360], "population_kuramoto": [3, 67, 75, 156, 260, 268, 339, 345], "population_synchroni": [3, 67, 75, 156, 260, 268, 339, 345], "population_polar_std": [3, 67, 75, 156, 260, 268, 339, 345], "population_average_amplitud": [3, 67, 75, 156, 260, 268, 339, 345], "population_signal_dispers": [3, 67, 75, 156, 260, 268, 339, 345], "population_signal_concentr": [3, 67, 75, 156, 260, 268, 339, 345], "population_signal_precis": [3, 67, 75, 156, 260, 268, 339, 345], "population_signal_phase_dispers": [3, 67, 75, 156, 260, 268, 339, 345], "population_signal_phase_std": [3, 67, 75, 156, 260, 268, 339, 345], "population_signal_amplitude_std": [3, 67, 75, 156, 260, 268, 339, 345], "population_signal_amplitude_dispers": [3, 67, 75, 156, 260, 268, 339, 345], "population_signal_phase_precis": [3, 67, 75, 156, 260, 268, 339, 345], "population_signal_amplitude_precis": [3, 67, 75, 156, 260, 268, 339, 345], "population_signal_descript": [3, 67, 75, 156, 260, 268, 339, 345], "population_synchrony_linear": [3, 67, 75, 156, 260, 268, 339, 345], "population_phase_coher": [3, 67, 75, 156, 260, 268, 339, 345], "analytic_signal_coher": [3, 67, 75, 156, 260, 268, 339, 345], "population_sliding_signal_coher": [3, 67, 75, 156, 260, 268, 339, 345], "sliding_population_signal_coher": [3, 67, 75, 156, 260, 268, 339, 345], "population_normalized_sliding_signal_coher": [3, 67, 75, 156, 260, 268, 339, 345], "population_phase_relative_sliding_kuramoto": [3, 67, 75, 156, 260, 268, 339, 345], "population_median_phase_veloc": [3, 67, 75, 156, 260, 268, 339, 345], "population_median_frequ": [3, 67, 75, 156, 260, 268, 339, 345], "point": [3, 11, 23, 25, 36, 59, 60, 67, 68, 69, 71, 75, 77, 78, 80, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 101, 104, 107, 108, 116, 132, 143, 156, 188, 201, 213, 224, 248, 249, 260, 261, 262, 264, 268, 271, 272, 275, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 306, 307, 309, 310, 319, 322, 325, 326, 339, 340, 341, 343, 345, 347, 348, 350, 356, 357, 359, 360, 363, 370, 371, 373, 374], "p2c": [3, 67, 76, 99, 107, 156, 260, 269, 317, 325], "c2p": [3, 67, 76, 99, 107, 156, 260, 269, 317, 325], "to_xypoint": [3, 67, 76, 156, 260, 269], "closest": [3, 67, 76, 156, 260, 269], "pair_neighbor": [3, 67, 76, 156, 260, 269], "paired_dist": [3, 67, 76, 156, 260, 269], "interp_bin": [3, 67, 77, 156, 260, 271, 339, 347], "triangul": [3, 67, 156, 260, 339], "z2xy": [3, 67, 78, 156, 260, 272, 339, 348], "uniquerow": [3, 67, 78, 156, 260, 272, 339, 348], "trianglestoedg": [3, 67, 78, 156, 260, 272, 339, 348], "edgesnearbi": [3, 67, 78, 156, 260, 272, 339, 348], "plot_edg": [3, 67, 78, 156, 260, 272, 339, 348], "plot_triangl": [3, 67, 78, 156, 260, 272, 339, 348], "mergenearbi": [3, 67, 78, 156, 260, 272, 339, 348], "brute_force_local_2d_maxima": [3, 67, 156, 260, 339], "pp_xcorr": [3, 79, 80, 156, 274, 275, 350], "txcorr": [3, 79, 80, 156, 274, 275, 350], "pack_cross_correlation_matrix": [3, 79, 80, 156, 274, 275, 350], "cut_spik": [3, 79, 80, 156, 274, 275, 350], "times_to_rast": [3, 79, 80, 156, 274, 275, 350], "bin_spikes_rast": [3, 79, 80, 156, 274, 275, 350], "bin_spike_tim": [3, 79, 80, 156, 274, 275, 350], "waveform": [3, 79, 156, 274], "realign": [3, 79, 81, 156, 274, 276, 351], "getfwhm": [3, 79, 81, 156, 274, 276, 351], "getpvt": [3, 79, 81, 156, 274, 276, 351], "getwahp": [3, 79, 81, 156, 274, 276, 351], "getpt": [3, 79, 81, 156, 274, 276, 351], "getpthw": [3, 79, 81, 156, 274, 276, 351], "getphp": [3, 79, 81, 156, 274, 276, 351], "minmax": [3, 79, 81, 156, 274, 276, 351], "normalized_waveform": [3, 79, 81, 156, 274, 276, 351], "is_thin": [3, 79, 81, 156, 274, 276, 351], "is_thin_pvt": [3, 79, 81, 156, 274, 276, 351], "process": [3, 18, 20, 23, 24, 25, 39, 59, 62, 66, 69, 79, 80, 81, 89, 91, 96, 119, 139, 140, 143, 144, 156, 196, 198, 201, 202, 213, 227, 248, 252, 258, 262, 274, 275, 276, 295, 299, 307, 326, 328, 341, 350, 351, 360, 363, 371], "circular": [3, 5, 24, 25, 60, 75, 82, 129, 144, 182, 202, 213, 249, 268, 277, 326, 345], "logpolar_gaussian": [3, 82, 83, 280, 354], "complex_gaussian": [3, 82, 83, 280, 354], "logpolar_stat": [3, 82, 83, 280, 354], "abspolar_stat": [3, 82, 83, 280, 354], "squared_first_circular_mo": [3, 82, 83, 280, 354], "fit_vonmis": [3, 82, 83, 280, 354], "convolut": [3, 30, 37, 59, 61, 65, 73, 82, 87, 110, 117, 156, 163, 170, 218, 225, 248, 250, 257, 266, 277, 285, 344, 359], "ccor": [3, 82, 84, 156, 277, 281, 355], "ccm": [3, 82, 84, 156, 277, 281, 355], "blockccm": [3, 82, 84, 156, 277, 281, 355], "sta": [3, 59, 82, 84, 156, 248, 277, 281, 355], "blocksta": [3, 82, 84, 156, 277, 281, 355], "reconstruct": [3, 82, 84, 156, 277, 281, 355], "cspect": [3, 82, 84, 156, 277, 281, 355], "cspectm": [3, 82, 84, 156, 277, 281, 355], "spike_lfp_filt": [3, 82, 84, 156, 277, 281, 355], "spectreconstruct": [3, 82, 84, 156, 277, 281, 355], "create_spectral_model": [3, 82, 84, 156, 277, 281, 355], "construct_lowpass_oper": [3, 82, 84, 156, 277, 281, 355], "autocorrelation_bay": [3, 82, 84, 156, 277, 281, 355], "densiti": [3, 25, 49, 60, 80, 82, 84, 87, 88, 91, 92, 96, 101, 108, 146, 156, 213, 237, 249, 275, 277, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 307, 319, 326, 350, 355, 359, 363, 364, 371], "kdepeak": [3, 82, 85, 156, 277, 282, 356], "knn_1d_densiti": [3, 82, 85, 156, 277, 282, 356], "adaptive_density_grid": [3, 82, 85, 156, 277, 282, 356], "gridhist": [3, 82, 85, 156, 277, 282, 356], "distribut": [3, 18, 25, 40, 41, 59, 60, 64, 68, 75, 82, 83, 85, 87, 88, 91, 92, 95, 96, 101, 108, 120, 121, 139, 156, 196, 213, 228, 229, 248, 249, 255, 261, 268, 277, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 306, 307, 319, 326, 340, 345, 354, 356, 359, 363, 364, 370, 371], "poisson_logpdf": [3, 82, 86, 156, 277, 283, 357], "poisson_pdf": [3, 82, 86, 156, 277, 283, 357], "gaussian_logpdf": [3, 82, 86, 156, 277, 283, 357], "gaussian_pdf": [3, 82, 86, 156, 277, 283, 357], "explogpdf": [3, 82, 86, 156, 277, 283, 357], "sample_categor": [3, 82, 86, 156, 277, 283, 357], "fast_kd": [3, 82, 156, 277], "image_cov": [3, 82, 87, 156, 277, 285, 359], "gaussian_quadratur": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "gaussian_quadrature_logarithm": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_check": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_logpdf": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_pdf": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_sampl": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_multipli": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_multiply_c": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_divid": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_project": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_entropi": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_dkl": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_dkl_cp": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_condit": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_kalman": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_kalman_p_inversea": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_kalman_joint": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "mvg_kalman_joint_p": [3, 82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "glm": [3, 82, 156, 277], "glmpenaltypoisson": [3, 82, 89, 156, 277, 295, 360], "sexp": [3, 82, 89, 99, 101, 108, 156, 277, 295, 317, 319, 360], "sigmoid": [3, 82, 89, 99, 101, 108, 156, 277, 295, 317, 319, 360], "glmpenaltybernoulli": [3, 82, 89, 156, 277, 295, 360], "glmpenaltyl2": [3, 82, 89, 156, 277, 295, 360], "ppglmfit": [3, 82, 89, 156, 277, 295, 360], "fitglm": [3, 82, 89, 156, 277, 295, 360], "crossvalidatedauc": [3, 82, 89, 156, 277, 295, 360], "gradientglmfit": [3, 82, 89, 156, 277, 295, 360], "numeric_grad": [3, 82, 89, 156, 277, 295, 360], "numeric_hess": [3, 82, 89, 156, 277, 295, 360], "grid_search": [3, 82, 156, 277], "hmm": [3, 82, 156, 277], "poisson_parameter_guess": [3, 82, 91, 156, 277, 299, 363], "poisson_baum_welch": [3, 82, 91, 156, 277, 299, 363], "viterbi": [3, 82, 91, 156, 277, 299, 363], "viterbi_log": [3, 82, 91, 156, 277, 299, 363], "hasnan": [3, 82, 91, 156, 277, 299, 363], "poisson_viterbi_state_inf": [3, 82, 91, 156, 277, 299, 363], "forward_backward": [3, 82, 91, 156, 277, 299, 363], "jump": [3, 82, 91, 156, 277, 299, 363], "sampl": [3, 5, 11, 23, 24, 25, 36, 50, 59, 60, 62, 63, 64, 65, 66, 68, 69, 73, 75, 80, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 97, 104, 116, 129, 132, 143, 144, 147, 156, 182, 188, 201, 202, 213, 224, 238, 248, 249, 252, 254, 255, 257, 258, 261, 262, 266, 268, 275, 277, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 304, 309, 322, 326, 340, 341, 344, 345, 350, 354, 355, 356, 359, 360, 363, 364, 368, 373], "log_likelihood": [3, 82, 91, 156, 277, 299, 363], "baum_welch": [3, 82, 91, 156, 277, 299, 363], "forward_abstract": [3, 82, 91, 156, 277, 299, 363], "backward_abstract": [3, 82, 91, 156, 277, 299, 363], "forward_backward_abstract": [3, 82, 91, 156, 277, 299, 363], "diffusiongaussian": [3, 82, 91, 156, 277, 299, 363], "loggaussiancoxapproxim": [3, 82, 91, 156, 277, 299, 363], "loggaussiancoxmodel": [3, 82, 91, 156, 277, 299, 363], "gaussiancoxapproxim": [3, 82, 91, 156, 277, 299, 363], "gaussiancoxmodel": [3, 82, 91, 156, 277, 299, 363], "chisquarecoxapproxim": [3, 82, 91, 156, 277, 299, 363], "chisquarecoxmodel": [3, 82, 91, 156, 277, 299, 363], "bernoulliobservationapproxim": [3, 82, 91, 156, 277, 299, 363], "bernoulliobservationmodel": [3, 82, 91, 156, 277, 299, 363], "truncatedloggaussiancoxapproxim": [3, 82, 91, 156, 277, 299, 363], "truncatedloggaussiancoxmodel": [3, 82, 91, 156, 277, 299, 363], "mvgaussian": [3, 82, 91, 156, 277, 299, 363], "mvgupdat": [3, 82, 91, 156, 277, 299, 363], "lgcp_observation_minim": [3, 82, 91, 156, 277, 299, 363], "mvloggaussiancox": [3, 82, 91, 156, 277, 299, 363], "ougaussian": [3, 82, 91, 156, 277, 299, 363], "mvgouupdat": [3, 82, 91, 156, 277, 299, 363], "poissonobservationapproxim": [3, 82, 91, 156, 277, 299, 363], "poissonobservationmodel": [3, 82, 91, 156, 277, 299, 363], "truncatedpoissonobservationapproxim": [3, 82, 91, 156, 277, 299, 363], "truncatedpoissonobservationmodel": [3, 82, 91, 156, 277, 299, 363], "inform": [3, 11, 15, 19, 20, 23, 25, 39, 82, 94, 119, 132, 135, 140, 143, 156, 188, 193, 197, 198, 201, 213, 227, 277, 305, 326, 369], "dkl_discret": [3, 82, 92, 156, 277, 300, 364], "discrete_entropy_sampl": [3, 82, 92, 156, 277, 300, 364], "discrete_entropy_distribut": [3, 82, 92, 156, 277, 300, 364], "regularized_discrete_entropi": [3, 82, 92, 156, 277, 300, 364], "poisson_entropy_nat": [3, 82, 92, 156, 277, 300, 364], "mcint": [3, 82, 156, 277], "monte_carlo_expect": [3, 82, 93, 156, 277, 304, 368], "monte_carlo_mo": [3, 82, 93, 156, 277, 304, 368], "minim": [3, 23, 82, 89, 98, 143, 156, 201, 277, 295, 310, 360, 374], "failureerror": [3, 82, 94, 156, 277, 305, 369], "minimize_retri": [3, 82, 94, 156, 277, 305, 369], "mixtur": [3, 25, 82, 91, 156, 213, 277, 299, 326, 363], "two_class_poisson_mixture_model": [3, 82, 95, 156, 277, 306, 370], "modefind": [3, 82, 156, 277], "logmodeplot": [3, 82, 96, 156, 277, 307, 371], "logmod": [3, 82, 96, 156, 277, 307, 371], "peakfinder5": [3, 82, 96, 156, 277, 307, 371], "pvalu": [3, 11, 82, 132, 156, 188, 277], "benjamini_hochberg_positive_correl": [3, 82, 97, 156, 277, 309, 373], "correct_pvalues_positive_depend": [3, 82, 97, 156, 277, 309, 373], "correct_pvalu": [3, 82, 97, 156, 277, 309, 373], "bootstrap_statistic_two_sid": [3, 82, 97, 156, 277, 309, 373], "bootstrap_median": [3, 82, 97, 156, 277, 309, 373], "bootstrap_mean": [3, 82, 97, 156, 277, 309, 373], "bootstrap_compare_statistic_two_sid": [3, 82, 97, 156, 277, 309, 373], "bootstrap_compare_statistic_two_sided_parallel": [3, 82, 97, 156, 277, 309, 373], "bootstrap_compare_median": [3, 82, 97, 156, 277, 309, 373], "bootstrap_compare_mean": [3, 82, 97, 156, 277, 309, 373], "regress": [3, 82, 156, 277], "damped_cosin": [3, 82, 98, 156, 277, 310, 374], "weighted_least_squar": [3, 82, 98, 156, 277, 310, 374], "power_law": [3, 82, 98, 156, 277, 310, 374], "gaussian_funct": [3, 82, 98, 156, 277, 310, 374], "half_gaussian_funct": [3, 82, 98, 156, 277, 310, 374], "exponential_decai": [3, 82, 98, 156, 277, 310, 374], "robust_lin": [3, 82, 98, 156, 277, 310, 374], "nrmse": [3, 82, 156, 277], "weighted_avg_and_std": [3, 82, 156, 277], "partition_data": [3, 82, 156, 277], "partition_trials_for_crossvalid": [3, 82, 156, 277], "polar_error": [3, 82, 156, 277], "add_const": [3, 82, 156, 277], "trial_crossvalidated_least_squar": [3, 82, 156, 277], "partition_data_for_crossvalid": [3, 82, 156, 277], "block_shuffl": [3, 82, 156, 277], "crossvalidated_least_squar": [3, 82, 156, 277], "print_stat": [3, 82, 156, 277], "outlier": [3, 82, 156, 277], "reject_outli": [3, 82, 156, 277], "pca": [3, 82, 156, 277], "covari": [3, 11, 23, 24, 25, 36, 75, 82, 84, 87, 88, 89, 91, 116, 132, 143, 144, 156, 188, 201, 202, 213, 224, 268, 277, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 326, 345, 355, 359, 360, 363], "descript": [3, 15, 81, 82, 135, 156, 193, 276, 277, 351], "short": [3, 59, 60, 62, 82, 89, 104, 156, 248, 249, 252, 277, 295, 322, 360], "glmfit": [3, 82, 156, 277], "auc_to_g2": [3, 82, 156, 277], "fraction_explained_devi": [3, 82, 156, 277], "function": [3, 5, 11, 15, 16, 17, 18, 19, 20, 23, 24, 25, 30, 31, 36, 37, 39, 41, 43, 50, 59, 61, 63, 64, 66, 69, 70, 71, 73, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 99, 106, 107, 110, 111, 116, 117, 119, 121, 123, 129, 132, 135, 136, 138, 139, 140, 143, 144, 147, 156, 163, 164, 170, 182, 188, 193, 194, 195, 196, 197, 198, 201, 202, 213, 218, 219, 224, 225, 227, 229, 231, 238, 248, 250, 254, 255, 258, 262, 263, 264, 266, 268, 275, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 304, 305, 306, 309, 317, 324, 325, 326, 328, 338, 341, 342, 343, 344, 345, 350, 354, 355, 356, 357, 359, 360, 363, 368, 369, 370, 373], "slog": [3, 99, 101, 108, 156, 317, 319], "inversesigmoid": [3, 99, 101, 108, 156, 317, 319], "dsigmoid": [3, 99, 101, 108, 156, 317, 319], "g": [3, 5, 15, 18, 25, 36, 41, 59, 82, 99, 101, 108, 116, 121, 129, 135, 139, 156, 182, 193, 196, 213, 224, 229, 248, 277, 317, 319, 326], "f1": [3, 99, 101, 108, 156, 317, 319], "f2": [3, 99, 101, 108, 156, 317, 319], "npdf": [3, 99, 101, 108, 156, 317, 319], "log_factori": [3, 99, 101, 108, 156, 317, 319], "getfftw": [3, 99, 156, 317], "ftwthr": [3, 99, 102, 109, 156, 317, 320], "hdfmat": [3, 99, 156, 317], "gethdfvalu": [3, 99, 103, 156, 317, 321], "gethdf": [3, 99, 103, 156, 317, 321], "hdf2dict": [3, 99, 103, 156, 317, 321], "printmathdf5": [3, 99, 103, 156, 317, 321], "recursive_printmathdf5": [3, 99, 103, 156, 317, 321], "string": [3, 5, 7, 11, 15, 17, 18, 19, 25, 36, 39, 40, 59, 71, 82, 85, 99, 103, 105, 106, 107, 116, 119, 120, 129, 132, 135, 138, 139, 156, 182, 184, 188, 193, 195, 196, 197, 213, 224, 227, 228, 248, 264, 277, 282, 317, 321, 323, 324, 325, 326, 343, 356], "hcat": [3, 99, 104, 156, 317, 322], "wordwrap": [3, 99, 104, 156, 317, 322], "incolumn": [3, 99, 104, 156, 317, 322], "percent": [3, 25, 82, 99, 104, 156, 213, 277, 317, 322, 326], "shortscientif": [3, 99, 104, 156, 317, 322], "eformat": [3, 99, 104, 156, 317, 322], "v2str": [3, 99, 104, 156, 317, 322], "v2str_long": [3, 99, 104, 156, 317, 322], "nicet": [3, 99, 104, 156, 317, 322], "isint": [3, 99, 104, 156, 317, 322], "system": [3, 15, 18, 20, 23, 25, 59, 91, 99, 135, 139, 140, 143, 156, 193, 196, 198, 201, 213, 248, 299, 317, 326, 363], "execfil": [3, 99, 105, 156, 317, 323], "query_yes_no": [3, 99, 105, 156, 317, 323], "current_milli_tim": [3, 99, 106, 156, 317, 324], "todai": [3, 99, 106, 156, 317, 324], "now": [3, 15, 18, 25, 91, 93, 99, 106, 135, 139, 156, 193, 196, 213, 299, 304, 317, 324, 326, 363, 368], "tic": [3, 99, 106, 156, 317, 324], "toc": [3, 99, 106, 156, 317, 324], "waitfor": [3, 99, 106, 156, 317, 324], "tool": [3, 20, 82, 99, 140, 156, 198, 277, 317], "varexist": [3, 99, 107, 156, 317, 325], "nowarn": [3, 99, 107, 156, 317, 325], "okwarn": [3, 99, 107, 156, 317, 325], "dowarn": [3, 99, 107, 156, 317, 325], "warn": [3, 15, 17, 18, 25, 64, 99, 107, 135, 138, 139, 156, 193, 195, 196, 213, 255, 317, 325, 326], "debug": [3, 19, 20, 23, 99, 107, 140, 143, 156, 197, 198, 201, 317, 325], "wait": [3, 25, 99, 106, 107, 156, 213, 317, 324, 325, 326, 328], "matlab": [3, 15, 17, 23, 25, 68, 97, 99, 103, 106, 107, 135, 138, 143, 156, 193, 195, 201, 213, 261, 309, 317, 321, 324, 325, 326, 340, 373], "zeroslik": [3, 99, 107, 156, 317, 325], "oneslik": [3, 99, 107, 156, 317, 325], "histori": [3, 99, 107, 156, 317, 325], "emitt": [3, 99, 107, 156, 317, 325], "piper": [3, 99, 107, 156, 317, 325], "global": [3, 15, 16, 20, 59, 81, 99, 105, 107, 135, 136, 140, 156, 193, 194, 198, 248, 276, 317, 323, 325, 351], "exist": [3, 15, 25, 40, 99, 107, 120, 135, 156, 193, 213, 228, 317, 325, 326], "metaloadmat": [3, 99, 107, 156, 317, 325], "find_all_extens": [3, 99, 107, 156, 317, 325], "lmap": [3, 99, 107, 156, 317, 325], "slist": [3, 99, 107, 156, 317, 325], "amap": [3, 99, 107, 156, 317, 325], "lap": [3, 99, 107, 156, 317, 325], "aap": [3, 99, 107, 156, 317, 325], "sl": [3, 99, 107, 156, 317, 325], "setinrang": [3, 99, 107, 156, 317, 325], "mapdict": [3, 99, 107, 156, 317, 325], "getdict": [3, 99, 107, 156, 317, 325], "ensure_dir": [3, 99, 107, 156, 317, 325], "getsiz": [3, 99, 107, 156, 317, 325], "savecontext": [3, 99, 107, 156, 317, 325], "clear": [3, 19, 99, 107, 156, 197, 317, 325], "restorecontext": [3, 99, 107, 156, 317, 325], "camel2underscor": [3, 99, 107, 156, 317, 325], "underscore2camel": [3, 99, 107, 156, 317, 325], "getvari": [3, 99, 107, 156, 317, 325], "arraymap": [3, 11, 68, 71, 99, 107, 132, 156, 188, 261, 264, 317, 325, 340, 343], "invert_permut": [3, 99, 107, 156, 317, 325], "find": [3, 23, 50, 59, 67, 69, 76, 82, 91, 96, 97, 99, 107, 143, 147, 156, 201, 238, 248, 260, 262, 269, 277, 299, 307, 309, 317, 325, 339, 341, 363, 371, 373], "ezip": [3, 99, 107, 156, 317, 325], "asiter": [3, 99, 107, 156, 317, 325], "stuff": [3, 10, 23, 99, 107, 131, 143, 156, 187, 201, 317, 325], "create_artist": [4, 11, 128, 132, 181, 188], "miscellan": [5, 129, 182], "relat": [5, 15, 23, 25, 50, 59, 61, 64, 73, 77, 80, 95, 129, 135, 143, 147, 182, 193, 201, 213, 238, 248, 250, 255, 266, 271, 275, 306, 326, 344, 347, 350, 370], "r": [5, 11, 23, 25, 40, 42, 67, 98, 120, 122, 129, 132, 143, 182, 188, 201, 213, 228, 230, 260, 310, 326, 339, 374], "b": [5, 11, 20, 23, 24, 25, 28, 29, 36, 40, 41, 43, 49, 59, 69, 73, 82, 84, 89, 91, 97, 98, 107, 116, 120, 121, 123, 129, 132, 140, 143, 144, 146, 182, 188, 198, 201, 202, 213, 216, 217, 224, 228, 229, 231, 237, 248, 262, 266, 277, 281, 295, 299, 309, 310, 325, 326, 341, 344, 355, 360, 363, 373, 374], "hexcod": [5, 129, 182], "h": [5, 10, 12, 23, 24, 25, 50, 59, 61, 69, 75, 106, 129, 131, 133, 143, 144, 147, 182, 187, 189, 201, 202, 213, 238, 248, 250, 262, 268, 324, 326, 341, 345], "": [5, 8, 11, 15, 23, 25, 28, 29, 36, 41, 42, 43, 46, 59, 60, 64, 68, 75, 80, 82, 84, 88, 91, 101, 106, 107, 108, 116, 121, 122, 123, 126, 129, 132, 135, 143, 182, 185, 188, 193, 201, 213, 216, 217, 224, 229, 230, 231, 234, 248, 249, 255, 261, 268, 275, 277, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 319, 324, 325, 326, 340, 345, 350, 355, 363], "v": [5, 11, 23, 25, 36, 40, 41, 43, 49, 50, 82, 97, 104, 116, 120, 121, 123, 129, 132, 143, 146, 147, 182, 188, 201, 213, 224, 228, 229, 231, 237, 238, 277, 309, 322, 326, 373], "force_lumin": [5, 129, 182], "none": [5, 11, 18, 20, 23, 24, 25, 40, 45, 46, 50, 59, 61, 62, 63, 64, 69, 71, 76, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94, 96, 97, 103, 105, 107, 120, 125, 126, 129, 132, 139, 140, 143, 144, 147, 182, 188, 196, 198, 201, 202, 213, 228, 233, 234, 238, 248, 250, 252, 254, 255, 262, 264, 269, 275, 277, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 305, 307, 309, 321, 323, 325, 326, 328, 341, 343, 350, 354, 355, 356, 359, 360, 363, 369, 371, 373], "method": [5, 15, 25, 64, 68, 69, 82, 85, 94, 129, 135, 182, 193, 213, 255, 261, 262, 277, 282, 305, 326, 340, 341, 356, 369], "perceiv": [5, 129, 182], "convert": [5, 11, 15, 19, 59, 75, 76, 78, 82, 86, 103, 107, 129, 132, 135, 182, 188, 193, 197, 248, 268, 269, 272, 277, 283, 321, 325, 345, 348, 357], "hsv": [5, 71, 129, 182, 264, 343], "rgb": [5, 11, 12, 129, 132, 133, 182, 188, 189], "paramet": [5, 11, 12, 15, 17, 18, 19, 20, 23, 24, 25, 46, 49, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 108, 126, 129, 132, 133, 135, 138, 139, 140, 143, 144, 146, 182, 188, 189, 193, 195, 196, 197, 198, 201, 202, 213, 234, 237, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 264, 266, 268, 269, 271, 275, 276, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 305, 306, 307, 309, 310, 319, 321, 322, 323, 324, 325, 326, 339, 340, 341, 343, 344, 345, 347, 350, 351, 354, 355, 356, 357, 359, 360, 363, 364, 369, 370, 371, 373, 374], "hue": [5, 11, 71, 129, 132, 182, 188, 264, 343], "360": [5, 129, 182], "satur": [5, 82, 129, 182, 277], "1": [5, 7, 9, 11, 12, 15, 16, 18, 20, 23, 24, 25, 36, 40, 41, 43, 49, 50, 59, 60, 62, 64, 65, 66, 68, 69, 70, 71, 73, 75, 77, 80, 82, 83, 85, 86, 88, 89, 91, 93, 95, 97, 98, 101, 107, 108, 116, 120, 121, 123, 129, 130, 132, 133, 135, 136, 139, 140, 143, 144, 146, 147, 182, 184, 186, 188, 189, 193, 194, 196, 198, 201, 202, 213, 224, 228, 229, 231, 237, 238, 248, 249, 252, 255, 257, 258, 261, 262, 263, 264, 266, 268, 271, 275, 277, 280, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 304, 306, 309, 310, 319, 325, 326, 328, 340, 341, 342, 343, 344, 345, 347, 350, 354, 356, 357, 360, 363, 368, 370, 373, 374], "valu": [5, 11, 12, 15, 16, 17, 18, 19, 20, 23, 24, 25, 59, 60, 63, 64, 68, 71, 75, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 97, 98, 101, 103, 104, 105, 107, 108, 129, 132, 133, 135, 136, 138, 139, 140, 143, 144, 182, 188, 189, 193, 194, 195, 196, 197, 198, 201, 202, 213, 248, 249, 254, 255, 261, 264, 268, 276, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 299, 304, 309, 310, 319, 321, 322, 323, 325, 326, 328, 338, 340, 343, 345, 351, 354, 355, 356, 357, 359, 363, 368, 373, 374], "return": [5, 7, 11, 12, 15, 16, 17, 18, 19, 20, 23, 24, 25, 36, 39, 40, 41, 49, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 105, 106, 107, 108, 116, 119, 120, 121, 129, 132, 133, 135, 136, 138, 139, 140, 143, 144, 146, 182, 184, 188, 189, 193, 194, 195, 196, 197, 198, 201, 202, 213, 224, 227, 228, 229, 237, 248, 249, 250, 252, 254, 255, 257, 258, 260, 261, 262, 264, 266, 268, 269, 271, 272, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 304, 305, 306, 307, 309, 310, 319, 321, 322, 323, 324, 325, 326, 328, 338, 339, 340, 341, 343, 344, 345, 347, 348, 354, 355, 356, 357, 359, 360, 363, 364, 368, 369, 370, 371, 373, 374], "type": [5, 11, 15, 16, 17, 18, 19, 20, 23, 24, 25, 40, 49, 59, 61, 62, 64, 65, 66, 67, 68, 71, 73, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 96, 97, 98, 103, 104, 105, 106, 107, 120, 129, 132, 135, 136, 138, 139, 140, 143, 144, 146, 182, 188, 193, 194, 195, 196, 197, 198, 201, 202, 213, 228, 237, 248, 250, 252, 255, 257, 258, 260, 261, 264, 266, 268, 269, 271, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 307, 309, 310, 321, 322, 323, 324, 325, 326, 339, 340, 343, 344, 345, 347, 354, 355, 356, 357, 359, 360, 363, 364, 371, 373, 374], "tupl": [5, 7, 11, 15, 16, 19, 20, 23, 25, 59, 67, 71, 76, 87, 90, 98, 107, 129, 132, 135, 136, 140, 143, 182, 184, 188, 193, 194, 197, 198, 201, 213, 248, 260, 264, 269, 285, 297, 310, 325, 326, 328, 339, 343, 359, 374], "red": [5, 129, 182], "green": [5, 129, 182], "blue": [5, 129, 182], "str": [5, 11, 15, 16, 18, 24, 25, 59, 81, 82, 104, 107, 129, 132, 135, 136, 139, 144, 182, 188, 193, 194, 196, 202, 213, 248, 276, 277, 322, 325, 326, 351], "standard": [5, 11, 15, 19, 24, 25, 36, 41, 59, 60, 61, 66, 68, 73, 75, 82, 86, 93, 101, 107, 108, 116, 121, 129, 132, 135, 144, 182, 188, 193, 197, 202, 213, 224, 229, 248, 249, 250, 258, 261, 266, 268, 277, 283, 304, 319, 325, 326, 340, 344, 345, 357, 368], "default": [5, 11, 15, 16, 18, 20, 23, 24, 25, 49, 59, 60, 62, 63, 64, 68, 71, 73, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 96, 97, 104, 105, 107, 129, 132, 135, 136, 139, 140, 143, 144, 146, 182, 188, 193, 194, 196, 198, 201, 202, 213, 237, 248, 249, 252, 254, 255, 261, 264, 266, 268, 269, 271, 275, 276, 277, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 307, 309, 322, 323, 325, 326, 328, 340, 343, 344, 345, 347, 350, 351, 354, 355, 356, 359, 360, 363, 371, 373], "m": [5, 11, 22, 23, 25, 40, 41, 46, 50, 59, 62, 65, 82, 88, 91, 97, 98, 106, 120, 121, 126, 129, 132, 142, 143, 147, 182, 188, 200, 201, 213, 228, 229, 234, 238, 248, 252, 257, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 309, 310, 324, 326, 363, 373, 374], "weight": [5, 23, 24, 25, 63, 75, 82, 87, 89, 98, 129, 143, 144, 182, 201, 202, 213, 254, 268, 277, 285, 295, 310, 326, 345, 359, 360, 374], "vector": [5, 23, 25, 36, 46, 59, 60, 82, 84, 86, 88, 89, 91, 92, 97, 104, 116, 126, 129, 143, 182, 201, 213, 224, 234, 248, 249, 277, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 309, 322, 326, 355, 357, 360, 363, 364, 373], "lumin": [5, 129, 182], "np": [5, 11, 23, 24, 25, 49, 59, 61, 62, 64, 65, 67, 68, 71, 73, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 95, 96, 98, 101, 107, 108, 129, 132, 143, 144, 146, 182, 188, 201, 202, 213, 237, 248, 250, 252, 255, 257, 260, 261, 264, 266, 268, 269, 271, 276, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 306, 307, 310, 319, 325, 326, 339, 340, 343, 344, 345, 347, 351, 354, 355, 356, 357, 359, 360, 363, 364, 370, 371, 374], "ndarrai": [5, 25, 59, 63, 69, 71, 82, 85, 91, 129, 182, 213, 248, 254, 262, 264, 277, 282, 299, 326, 341, 343, 356, 363], "299": [5, 129, 182], "587": [5, 129, 182], "114": [5, 129, 182], "2126": [5, 129, 182], "7152": [5, 129, 182], "0722": [5, 129, 182], "59": [5, 24, 73, 89, 91, 129, 144, 182, 202, 266, 295, 299, 344, 360, 363], "11": [5, 15, 24, 25, 73, 89, 129, 135, 144, 182, 193, 202, 213, 266, 295, 326, 328, 344, 360], "lrgb": [5, 129, 182], "target": [5, 23, 97, 129, 143, 182, 201, 309, 373], "threshold": [5, 11, 25, 50, 59, 68, 78, 81, 97, 129, 132, 147, 182, 188, 213, 238, 248, 261, 272, 276, 309, 326, 340, 348, 351, 373], "01": [5, 25, 85, 93, 97, 129, 182, 213, 282, 304, 309, 326, 356, 368, 373], "squar": [5, 11, 23, 24, 25, 60, 61, 63, 71, 73, 82, 83, 84, 91, 129, 132, 143, 144, 182, 188, 201, 202, 213, 249, 250, 254, 264, 266, 277, 280, 281, 299, 326, 343, 344, 354, 355, 363], "fals": [5, 11, 15, 17, 18, 19, 20, 23, 25, 43, 59, 63, 64, 71, 80, 82, 83, 87, 89, 93, 94, 97, 105, 123, 129, 132, 135, 138, 139, 140, 143, 182, 188, 193, 195, 196, 197, 198, 201, 213, 231, 248, 254, 255, 264, 275, 277, 280, 285, 295, 304, 305, 309, 323, 326, 343, 350, 354, 359, 360, 368, 369, 373], "adjust": [5, 11, 23, 59, 62, 129, 132, 143, 182, 188, 201, 248, 252], "match": [5, 11, 19, 23, 50, 64, 76, 82, 88, 107, 129, 132, 143, 147, 182, 188, 197, 201, 238, 255, 269, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 325], "luminos": [5, 129, 182], "th": [5, 10, 129, 131, 182, 187], "list": [5, 7, 11, 15, 19, 20, 23, 25, 36, 40, 46, 59, 62, 63, 64, 68, 76, 78, 80, 82, 83, 85, 89, 90, 92, 96, 97, 98, 104, 107, 116, 120, 126, 129, 132, 135, 140, 143, 182, 184, 188, 193, 197, 198, 201, 213, 224, 228, 234, 248, 252, 254, 255, 261, 269, 272, 275, 277, 280, 282, 295, 297, 300, 307, 309, 310, 322, 325, 326, 340, 348, 350, 354, 356, 360, 364, 371, 373, 374], "angl": [5, 7, 23, 25, 59, 64, 129, 143, 182, 184, 201, 213, 248, 255, 326], "theta": [5, 25, 70, 129, 182, 213, 263, 326, 342], "like": [5, 7, 11, 15, 16, 18, 23, 25, 36, 40, 59, 69, 75, 82, 87, 89, 90, 91, 92, 93, 98, 101, 105, 108, 116, 120, 129, 132, 135, 136, 139, 143, 182, 184, 188, 193, 194, 196, 201, 213, 224, 228, 248, 262, 268, 277, 285, 295, 297, 299, 300, 304, 310, 319, 323, 326, 328, 341, 345, 359, 360, 363, 364, 368, 374], "iter": [5, 7, 11, 42, 59, 73, 76, 82, 88, 91, 92, 104, 107, 122, 129, 132, 182, 184, 188, 230, 248, 266, 269, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 322, 325, 328, 344, 363, 364], "doe": [5, 11, 15, 25, 40, 82, 107, 120, 129, 132, 135, 182, 188, 193, 213, 228, 277, 325, 326], "affect": [5, 25, 129, 182, 213, 326], "magnitud": [5, 11, 25, 36, 59, 60, 68, 71, 75, 87, 98, 116, 129, 132, 182, 188, 213, 224, 248, 249, 261, 264, 268, 285, 310, 326, 340, 343, 345, 359, 374], "mai": [5, 11, 15, 16, 18, 25, 50, 59, 61, 68, 69, 91, 97, 129, 132, 135, 136, 139, 147, 182, 188, 193, 194, 196, 213, 238, 248, 250, 261, 262, 299, 309, 326, 328, 340, 341, 363, 373], "caus": [5, 16, 18, 19, 41, 59, 94, 121, 129, 136, 139, 182, 194, 196, 197, 229, 248, 305, 369], "result": [5, 11, 15, 18, 20, 25, 40, 41, 59, 60, 61, 62, 63, 68, 73, 82, 83, 84, 85, 86, 87, 90, 91, 98, 107, 120, 121, 129, 132, 135, 139, 140, 182, 188, 193, 196, 198, 213, 228, 229, 248, 249, 250, 252, 254, 261, 266, 277, 280, 281, 282, 283, 285, 297, 299, 310, 325, 326, 328, 340, 344, 354, 355, 356, 357, 359, 363, 374], "fall": [5, 77, 94, 129, 182, 271, 305, 347, 369], "outsid": [5, 11, 25, 77, 129, 132, 182, 188, 213, 271, 326, 347], "origin": [5, 11, 18, 23, 36, 40, 59, 95, 98, 107, 116, 120, 129, 132, 139, 143, 182, 188, 196, 201, 224, 228, 248, 306, 310, 325, 370, 374], "colorspac": [5, 129, 182], "float": [5, 9, 11, 15, 16, 23, 25, 40, 43, 46, 49, 59, 61, 62, 65, 66, 68, 71, 73, 75, 76, 77, 83, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 98, 101, 104, 108, 120, 123, 126, 129, 130, 132, 135, 136, 143, 146, 182, 186, 188, 193, 194, 201, 213, 228, 231, 234, 237, 248, 250, 252, 257, 258, 261, 264, 266, 268, 269, 271, 280, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 306, 307, 309, 310, 319, 322, 326, 340, 343, 344, 345, 347, 354, 355, 356, 357, 360, 363, 364, 370, 371, 373, 374], "chroma": [5, 129, 182], "space": [5, 10, 11, 15, 18, 19, 24, 25, 62, 68, 69, 71, 73, 88, 89, 98, 104, 129, 131, 132, 135, 139, 144, 182, 187, 188, 193, 196, 197, 202, 213, 252, 261, 262, 264, 266, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 310, 322, 326, 340, 341, 343, 344, 360, 374], "c1": [5, 11, 88, 129, 132, 182, 188, 286, 287, 288, 289, 290, 291, 292, 293, 294], "c2": [5, 11, 23, 88, 129, 132, 143, 182, 188, 201, 286, 287, 288, 289, 290, 291, 292, 293, 294], "calcul": [5, 25, 59, 60, 65, 68, 76, 82, 87, 89, 129, 182, 213, 248, 249, 257, 261, 269, 277, 285, 295, 326, 340, 359, 360], "angular": [5, 70, 129, 182, 263, 342], "differ": [5, 15, 16, 20, 23, 24, 25, 36, 50, 59, 61, 91, 95, 97, 116, 129, 135, 136, 140, 143, 144, 147, 182, 193, 194, 198, 201, 202, 213, 224, 238, 248, 250, 299, 306, 309, 326, 363, 370, 373], "between": [5, 11, 17, 18, 23, 25, 59, 60, 62, 63, 64, 68, 70, 76, 80, 82, 84, 86, 88, 89, 92, 129, 132, 138, 139, 143, 182, 188, 195, 196, 201, 213, 248, 249, 252, 254, 255, 261, 263, 269, 275, 277, 281, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 300, 326, 340, 342, 350, 355, 357, 360, 364], "two": [5, 11, 15, 16, 20, 23, 24, 25, 36, 59, 60, 61, 63, 68, 69, 71, 76, 78, 80, 88, 89, 91, 95, 97, 104, 116, 129, 132, 135, 136, 140, 143, 144, 182, 188, 193, 194, 198, 201, 202, 213, 224, 248, 249, 250, 254, 261, 262, 264, 269, 272, 275, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 306, 309, 322, 326, 328, 338, 340, 341, 343, 348, 350, 360, 363, 370, 373], "hcl": [5, 129, 182], "first": [5, 20, 23, 25, 36, 40, 46, 49, 59, 60, 62, 63, 68, 71, 75, 82, 83, 84, 88, 91, 97, 116, 120, 126, 129, 140, 143, 146, 182, 198, 201, 213, 224, 228, 234, 237, 248, 249, 252, 254, 261, 264, 268, 277, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 309, 326, 328, 338, 340, 343, 345, 354, 355, 363, 373], "second": [5, 25, 49, 50, 59, 60, 62, 65, 68, 71, 84, 85, 88, 93, 101, 108, 129, 146, 147, 182, 213, 237, 238, 248, 249, 252, 257, 261, 264, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 304, 319, 326, 328, 338, 340, 343, 355, 356, 368], "difer": [5, 129, 182], "c": [5, 11, 23, 25, 41, 49, 50, 59, 60, 71, 82, 88, 121, 129, 132, 143, 146, 147, 182, 188, 201, 213, 229, 237, 238, 248, 249, 264, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326, 343], "l": [5, 11, 23, 24, 25, 36, 59, 62, 71, 73, 75, 82, 86, 89, 91, 92, 98, 116, 129, 132, 143, 144, 182, 188, 201, 202, 213, 224, 248, 252, 264, 266, 268, 277, 283, 295, 299, 300, 310, 326, 343, 344, 345, 357, 360, 363, 364, 374], "degre": [5, 25, 29, 64, 65, 82, 83, 129, 182, 213, 217, 255, 257, 277, 280, 326, 354], "length": [5, 11, 24, 25, 30, 35, 36, 46, 59, 63, 65, 75, 76, 84, 88, 89, 97, 98, 107, 110, 115, 116, 126, 129, 132, 144, 182, 188, 202, 213, 218, 223, 224, 234, 248, 254, 257, 268, 269, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 309, 310, 325, 326, 345, 355, 360, 373, 374], "compon": [5, 11, 15, 25, 59, 64, 69, 71, 78, 82, 129, 132, 135, 182, 188, 193, 213, 248, 255, 262, 264, 272, 277, 326, 341, 343, 348], "cm": [5, 11, 50, 129, 132, 147, 182, 188, 238], "smooth": [5, 11, 24, 59, 65, 68, 69, 71, 80, 85, 91, 129, 132, 144, 182, 188, 202, 248, 257, 261, 262, 264, 275, 282, 299, 340, 341, 343, 350, 356, 363], "cirular": [5, 129, 182], "boundari": [5, 24, 25, 59, 61, 68, 69, 73, 77, 129, 144, 182, 202, 213, 248, 250, 261, 262, 266, 271, 326, 340, 341, 344, 347], "condit": [5, 11, 16, 23, 24, 25, 59, 61, 64, 66, 69, 73, 88, 90, 91, 94, 129, 132, 136, 143, 144, 182, 188, 194, 201, 202, 213, 248, 250, 255, 258, 262, 266, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 299, 305, 326, 341, 344, 363, 369], "sigma": [5, 11, 24, 25, 30, 35, 36, 59, 61, 66, 73, 82, 83, 86, 91, 101, 108, 110, 115, 116, 129, 132, 144, 182, 188, 202, 213, 218, 223, 224, 248, 250, 258, 266, 277, 280, 283, 299, 319, 326, 344, 354, 357, 363], "dev": [5, 129, 182], "map": [5, 6, 8, 11, 15, 18, 20, 36, 40, 68, 69, 71, 78, 107, 116, 120, 129, 132, 135, 139, 140, 182, 183, 185, 188, 193, 196, 198, 224, 228, 261, 262, 264, 272, 325, 340, 341, 343, 348], "radiu": [5, 11, 65, 67, 71, 76, 78, 129, 132, 182, 188, 257, 260, 264, 269, 272, 339, 343, 348], "rbg": [5, 129, 182], "5": [5, 7, 11, 15, 16, 23, 24, 25, 46, 59, 60, 63, 67, 68, 71, 73, 80, 89, 91, 96, 126, 129, 132, 135, 136, 143, 144, 182, 184, 188, 193, 194, 201, 202, 213, 234, 248, 249, 254, 260, 261, 264, 266, 275, 295, 299, 307, 326, 328, 339, 340, 343, 344, 350, 360, 363, 371], "n": [5, 11, 23, 24, 25, 36, 41, 42, 46, 50, 59, 60, 61, 65, 66, 73, 75, 77, 88, 89, 91, 92, 93, 101, 104, 107, 108, 116, 121, 122, 126, 129, 132, 143, 144, 147, 182, 188, 201, 202, 213, 224, 229, 230, 234, 238, 248, 249, 250, 257, 258, 266, 268, 271, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 304, 319, 322, 325, 326, 344, 345, 347, 360, 363, 364, 368], "10": [5, 8, 11, 15, 23, 24, 25, 50, 59, 69, 73, 75, 82, 85, 88, 89, 91, 96, 97, 98, 107, 129, 132, 135, 143, 144, 147, 182, 185, 188, 193, 201, 202, 213, 238, 248, 262, 266, 268, 277, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 307, 309, 310, 325, 326, 328, 341, 344, 345, 356, 360, 363, 371, 373, 374], "7": [5, 11, 23, 24, 25, 73, 89, 129, 132, 143, 144, 182, 188, 201, 202, 213, 266, 295, 326, 328, 344, 360], "4": [5, 8, 11, 15, 16, 24, 25, 59, 60, 62, 64, 65, 68, 69, 71, 73, 89, 91, 98, 104, 129, 132, 135, 136, 144, 182, 185, 188, 193, 194, 202, 213, 248, 249, 252, 255, 257, 261, 262, 264, 266, 295, 299, 310, 322, 326, 328, 340, 341, 343, 344, 360, 363, 374], "6": [5, 8, 11, 23, 24, 25, 59, 65, 73, 75, 88, 89, 91, 129, 132, 143, 144, 182, 185, 188, 201, 202, 213, 248, 257, 266, 268, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 326, 328, 344, 345, 360, 363], "slightli": [5, 129, 182], "more": [5, 11, 15, 17, 25, 39, 60, 64, 68, 69, 70, 75, 82, 84, 86, 91, 94, 97, 101, 107, 108, 119, 129, 132, 135, 138, 182, 188, 193, 195, 213, 227, 249, 255, 261, 262, 263, 268, 277, 281, 283, 299, 305, 309, 319, 325, 326, 340, 341, 342, 345, 355, 357, 363, 369, 373], "optim": [5, 25, 69, 89, 90, 91, 94, 98, 129, 182, 213, 262, 295, 297, 299, 305, 310, 326, 341, 360, 363, 369, 374], "hsl": [5, 129, 182], "convers": [5, 15, 107, 129, 135, 182, 193, 325], "routin": [5, 11, 18, 20, 23, 25, 59, 60, 61, 63, 68, 70, 75, 78, 80, 81, 82, 84, 88, 89, 91, 92, 93, 94, 96, 97, 98, 103, 129, 132, 139, 140, 143, 182, 188, 196, 198, 201, 213, 248, 249, 250, 254, 261, 263, 268, 272, 275, 276, 277, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 304, 305, 307, 309, 310, 321, 326, 340, 342, 345, 348, 350, 351, 355, 360, 363, 364, 368, 369, 371, 373, 374], "fix": [5, 11, 25, 59, 65, 104, 129, 132, 182, 188, 213, 248, 257, 322, 326], "back": [5, 15, 18, 59, 94, 129, 135, 139, 182, 193, 196, 248, 305, 369], "limit": [5, 11, 15, 25, 39, 46, 73, 91, 97, 101, 108, 119, 126, 129, 132, 135, 182, 188, 193, 213, 227, 234, 266, 299, 309, 319, 326, 344, 363, 373], "resolut": [5, 24, 59, 60, 64, 73, 89, 129, 144, 182, 202, 248, 249, 255, 266, 295, 344, 360], "lookup": [5, 107, 129, 182, 325], "tabl": [5, 25, 104, 129, 182, 213, 322, 326], "z": [5, 11, 23, 25, 59, 60, 75, 76, 78, 83, 98, 107, 129, 132, 143, 182, 188, 201, 213, 248, 249, 268, 269, 272, 280, 310, 325, 326, 345, 348, 354, 374], "perform": [5, 11, 15, 18, 25, 43, 59, 60, 82, 87, 88, 123, 129, 132, 135, 139, 182, 188, 193, 196, 213, 231, 248, 249, 277, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326, 359], "bulk": [5, 129, 182], "lut": [5, 129, 182], "complex": [5, 11, 15, 59, 60, 68, 71, 75, 76, 78, 83, 107, 129, 132, 135, 182, 188, 193, 248, 249, 261, 264, 268, 269, 272, 280, 325, 340, 343, 345, 348, 354], "number": [5, 11, 15, 20, 23, 24, 25, 39, 40, 41, 46, 59, 60, 62, 63, 64, 66, 68, 69, 71, 76, 77, 78, 80, 82, 83, 84, 85, 87, 88, 89, 91, 93, 94, 96, 97, 104, 106, 107, 119, 120, 121, 126, 129, 132, 135, 140, 143, 144, 182, 188, 193, 198, 201, 202, 213, 227, 228, 229, 234, 248, 249, 252, 254, 255, 258, 261, 262, 264, 269, 271, 272, 275, 277, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 304, 305, 307, 309, 322, 324, 325, 326, 328, 338, 340, 341, 343, 347, 348, 350, 354, 355, 356, 359, 360, 363, 368, 369, 371, 373], "avoid": [5, 15, 16, 20, 59, 69, 85, 89, 91, 101, 108, 129, 135, 136, 140, 182, 193, 194, 198, 248, 262, 282, 295, 299, 319, 341, 356, 360, 363], "loop": [5, 15, 39, 40, 119, 120, 129, 135, 182, 193, 227, 228], "bp": [5, 11, 59, 129, 132, 182, 188, 248], "boxplot": [5, 11, 129, 132, 182, 188], "ar": [5, 7, 11, 15, 16, 17, 18, 19, 20, 23, 24, 25, 39, 41, 59, 61, 63, 64, 68, 69, 70, 71, 75, 78, 82, 83, 84, 88, 94, 96, 97, 103, 119, 121, 129, 132, 135, 136, 138, 139, 140, 143, 144, 182, 184, 188, 193, 194, 195, 196, 197, 198, 201, 202, 213, 227, 229, 248, 250, 254, 255, 261, 262, 263, 264, 268, 272, 277, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 305, 307, 309, 321, 326, 328, 340, 341, 342, 343, 345, 348, 354, 355, 369, 371, 373], "aw": [5, 82, 129, 182, 277], "littl": [5, 11, 40, 43, 120, 123, 129, 132, 182, 188, 228, 231], "better": [5, 11, 18, 25, 90, 129, 132, 139, 182, 188, 196, 213, 297, 326], "pack": [5, 23, 25, 36, 40, 116, 120, 129, 143, 182, 201, 213, 224, 228, 326], "data": [5, 11, 12, 15, 18, 19, 23, 25, 38, 39, 41, 46, 50, 59, 60, 61, 62, 64, 68, 69, 71, 73, 75, 77, 81, 82, 83, 84, 87, 91, 96, 97, 98, 104, 107, 118, 119, 121, 126, 129, 132, 133, 135, 139, 143, 147, 182, 188, 189, 193, 196, 197, 201, 213, 226, 227, 229, 234, 238, 248, 249, 250, 252, 255, 261, 262, 264, 266, 268, 271, 276, 277, 280, 281, 285, 299, 307, 309, 310, 322, 325, 326, 340, 341, 343, 344, 345, 347, 351, 354, 355, 359, 363, 371, 373, 374], "hexadecim": [5, 129, 182], "bgr": [5, 129, 182], "format": [5, 11, 15, 17, 19, 30, 37, 40, 46, 78, 97, 98, 103, 104, 106, 110, 117, 120, 126, 129, 132, 135, 138, 182, 188, 193, 195, 197, 218, 225, 228, 234, 272, 309, 310, 321, 322, 324, 348, 373, 374], "fast": [5, 15, 18, 25, 129, 135, 139, 182, 193, 196, 213, 326], "render": [5, 10, 11, 129, 131, 132, 182, 187, 188], "javascript": [5, 129, 182], "canva": [5, 129, 182], "import": [5, 6, 18, 23, 25, 80, 129, 139, 143, 182, 183, 196, 201, 213, 275, 326, 328, 338, 350], "html": [5, 19, 23, 25, 89, 129, 143, 182, 197, 201, 213, 295, 326, 360], "demo": [5, 129, 182], "256x3": [5, 129, 182], "hex": [5, 129, 182], "given": [5, 7, 11, 17, 25, 59, 68, 78, 85, 89, 90, 91, 104, 107, 129, 132, 138, 182, 184, 188, 195, 213, 248, 261, 272, 282, 295, 297, 299, 322, 325, 326, 328, 338, 340, 348, 356, 360, 363], "rrggbb": [5, 129, 182], "16": [5, 24, 25, 73, 75, 89, 129, 144, 182, 202, 213, 266, 268, 295, 326, 344, 345, 360], "bit": [5, 15, 25, 59, 104, 129, 135, 182, 193, 213, 248, 322, 326], "565": [5, 129, 182], "brg": [5, 12, 129, 133, 182, 189], "integ": [5, 11, 15, 18, 25, 36, 40, 59, 60, 63, 64, 80, 85, 86, 91, 101, 104, 108, 116, 120, 129, 132, 135, 139, 182, 188, 193, 196, 213, 224, 228, 248, 249, 254, 255, 275, 282, 283, 299, 319, 322, 326, 350, 356, 357, 363], "form": [5, 11, 18, 23, 25, 36, 40, 43, 59, 77, 90, 91, 116, 120, 123, 129, 132, 139, 143, 182, 188, 196, 201, 213, 224, 228, 231, 248, 271, 297, 299, 326, 347, 363], "rrrrr": [5, 129, 182], "gggggg": [5, 129, 182], "bbbbb": [5, 129, 182], "int": [5, 11, 16, 20, 23, 24, 25, 40, 46, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 75, 76, 77, 80, 82, 83, 85, 86, 89, 91, 96, 97, 104, 120, 126, 129, 132, 136, 140, 143, 144, 182, 188, 194, 198, 201, 202, 213, 228, 234, 248, 250, 252, 254, 255, 257, 258, 260, 261, 262, 264, 268, 269, 271, 275, 277, 280, 282, 283, 295, 299, 307, 309, 322, 326, 339, 340, 341, 343, 345, 347, 350, 354, 356, 357, 360, 363, 371, 373], "enumer": [5, 129, 182, 328], "over": [5, 11, 15, 16, 17, 18, 20, 25, 36, 41, 49, 59, 60, 63, 68, 70, 75, 80, 83, 84, 87, 88, 90, 91, 107, 116, 121, 129, 132, 135, 136, 138, 139, 140, 146, 182, 188, 193, 194, 195, 196, 198, 213, 224, 229, 237, 248, 249, 254, 261, 263, 268, 275, 280, 281, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 299, 325, 326, 340, 342, 345, 350, 354, 355, 359, 363], "bu": [5, 129, 182], "ident": [5, 16, 25, 87, 129, 136, 182, 194, 213, 285, 326, 359], "byte": [5, 15, 18, 129, 135, 139, 182, 193, 196], "skip": [5, 59, 64, 68, 71, 129, 182, 248, 255, 261, 264, 340, 343], "lowest": [5, 25, 129, 182, 213, 326], "each": [5, 11, 15, 16, 20, 25, 36, 39, 59, 60, 62, 63, 64, 68, 75, 76, 82, 85, 86, 87, 90, 91, 95, 116, 119, 129, 132, 135, 136, 140, 182, 188, 193, 194, 198, 213, 224, 227, 248, 249, 252, 254, 255, 261, 268, 269, 277, 282, 283, 285, 297, 299, 306, 326, 340, 345, 356, 357, 359, 363, 370], "reserv": [5, 129, 182], "fourth": [5, 129, 182], "storag": [5, 18, 129, 139, 182, 196], "intend": [5, 129, 182], "develop": [5, 25, 129, 182, 213, 326], "pallet": [5, 129, 182], "mictrocontrol": [5, 129, 182], "driven": [5, 25, 129, 182, 213, 326], "displai": [5, 25, 129, 182, 213, 326], "interfac": [5, 10, 105, 129, 131, 182, 187, 323], "formt": [5, 129, 182], "binari": [5, 36, 40, 59, 89, 91, 116, 120, 129, 182, 224, 228, 248, 295, 299, 360, 363], "liter": [5, 129, 182], "subset": [5, 23, 25, 64, 129, 143, 182, 201, 213, 255, 326], "shownn": [5, 129, 182], "quickli": [5, 129, 182], "arduino": [5, 129, 182], "uno": [5, 129, 182], "2": [5, 11, 15, 16, 17, 20, 23, 24, 25, 36, 43, 50, 59, 60, 61, 63, 65, 68, 69, 73, 76, 77, 78, 81, 82, 83, 89, 91, 93, 98, 107, 116, 123, 129, 132, 135, 136, 138, 140, 143, 144, 147, 182, 188, 193, 194, 195, 198, 201, 202, 213, 224, 231, 238, 248, 249, 250, 254, 257, 261, 262, 266, 269, 271, 272, 276, 277, 280, 295, 299, 304, 310, 325, 326, 328, 340, 341, 344, 347, 348, 351, 354, 360, 363, 368, 374], "inch": [5, 129, 182], "tft": [5, 129, 182], "touch": [5, 129, 182], "screen": [5, 10, 12, 129, 131, 133, 182, 187, 189], "breakout": [5, 129, 182], "restrict": [5, 15, 68, 129, 135, 182, 193, 261, 340], "sent": [5, 68, 129, 182, 261, 340], "singl": [5, 11, 15, 20, 23, 25, 50, 91, 129, 132, 135, 140, 143, 147, 182, 188, 193, 198, 201, 213, 238, 299, 326, 363], "write": [5, 10, 15, 50, 129, 131, 135, 147, 182, 187, 193, 238], "one": [5, 11, 15, 18, 20, 23, 24, 25, 39, 40, 46, 50, 59, 60, 61, 71, 82, 83, 88, 94, 96, 97, 104, 119, 120, 126, 129, 132, 135, 139, 140, 143, 144, 147, 182, 188, 193, 196, 198, 201, 202, 213, 227, 228, 234, 238, 248, 249, 250, 264, 277, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 305, 307, 309, 322, 326, 328, 343, 354, 369, 371, 373], "port": [5, 25, 129, 182, 213, 326], "mode": [5, 11, 15, 19, 25, 59, 82, 96, 129, 132, 135, 182, 188, 193, 197, 213, 248, 277, 307, 326, 371], "low": [5, 25, 59, 62, 65, 69, 75, 84, 129, 182, 213, 248, 252, 257, 262, 268, 281, 326, 341, 345, 355], "high": [5, 18, 25, 59, 62, 68, 69, 81, 101, 108, 129, 139, 182, 196, 213, 248, 252, 261, 262, 276, 319, 326, 340, 341, 351], "don": [5, 20, 59, 89, 93, 129, 140, 182, 198, 248, 295, 304, 360, 368], "t": [5, 11, 19, 20, 23, 24, 25, 46, 50, 59, 63, 64, 73, 82, 88, 89, 91, 93, 94, 105, 106, 126, 129, 132, 140, 143, 144, 147, 182, 188, 197, 198, 201, 202, 213, 234, 238, 248, 254, 255, 266, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 304, 305, 323, 324, 326, 344, 360, 363, 368, 369], "even": [5, 25, 59, 68, 81, 94, 129, 182, 213, 248, 261, 276, 305, 326, 340, 351, 369], "lower": [5, 11, 23, 25, 68, 69, 129, 132, 143, 182, 188, 201, 213, 261, 262, 326, 340, 341], "show": [5, 11, 23, 25, 71, 129, 132, 143, 182, 188, 201, 213, 264, 326, 343], "addit": [6, 11, 20, 25, 69, 82, 132, 140, 183, 188, 198, 213, 262, 277, 326, 341], "also": [6, 7, 15, 20, 23, 25, 36, 50, 59, 60, 64, 68, 69, 75, 90, 97, 116, 135, 140, 143, 147, 183, 184, 193, 198, 201, 213, 224, 238, 248, 249, 255, 261, 262, 268, 297, 309, 326, 340, 341, 345, 373], "load": [6, 8, 25, 107, 183, 185, 213, 325, 326], "tree": [7, 15, 135, 184, 193], "get": [7, 10, 11, 15, 20, 23, 25, 59, 63, 64, 80, 81, 84, 86, 131, 132, 135, 140, 143, 184, 187, 188, 193, 198, 201, 213, 248, 254, 255, 275, 276, 281, 283, 326, 350, 351, 355, 357], "depth": [7, 184], "structur": [7, 15, 23, 135, 143, 184, 193, 201], "ani": [7, 15, 20, 25, 36, 59, 64, 68, 89, 91, 92, 116, 135, 140, 184, 193, 198, 213, 224, 248, 255, 261, 295, 299, 300, 326, 340, 360, 363, 364], "nest": [7, 15, 19, 103, 135, 184, 193, 197, 321], "count": [7, 25, 50, 59, 68, 80, 82, 86, 89, 91, 92, 95, 147, 184, 213, 238, 248, 261, 275, 277, 283, 295, 299, 300, 306, 326, 340, 350, 357, 360, 363, 364, 370], "howev": [7, 15, 20, 25, 135, 140, 184, 193, 198, 213, 326], "leaf": [7, 27, 28, 29, 184, 215, 216, 217], "node": [7, 15, 27, 28, 29, 135, 184, 193, 215, 216, 217], "leav": [7, 20, 24, 59, 73, 89, 140, 144, 184, 198, 202, 248, 266, 295, 344, 360], "order": [7, 12, 15, 16, 25, 59, 65, 68, 75, 87, 133, 135, 136, 184, 189, 193, 194, 213, 248, 257, 261, 268, 285, 326, 340, 345, 359], "deep": [7, 184], "flatten": [7, 36, 40, 59, 116, 120, 184, 224, 228, 248], "command": [7, 10, 11, 18, 105, 107, 131, 132, 139, 184, 187, 188, 196, 323, 325], "lw": [7, 11, 23, 71, 132, 143, 184, 188, 201, 264, 343], "k": [7, 11, 23, 25, 42, 46, 59, 61, 63, 64, 65, 71, 75, 80, 82, 84, 85, 86, 88, 89, 91, 96, 101, 108, 122, 126, 132, 143, 184, 188, 201, 213, 230, 234, 248, 250, 254, 255, 257, 264, 268, 275, 277, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 307, 319, 326, 343, 345, 350, 355, 356, 357, 360, 363, 371], "rotate_label": [7, 184], "true": [7, 11, 12, 15, 18, 20, 23, 24, 25, 43, 59, 60, 63, 64, 68, 71, 82, 83, 87, 89, 94, 103, 105, 106, 123, 132, 133, 135, 139, 140, 143, 144, 184, 188, 189, 193, 196, 198, 201, 202, 213, 231, 248, 249, 254, 255, 261, 264, 277, 280, 285, 295, 305, 321, 323, 324, 326, 340, 343, 354, 359, 360, 369], "label_offset": [7, 184], "arcspan": [7, 184], "figsiz": [7, 184], "9": [7, 11, 19, 24, 25, 73, 77, 89, 93, 98, 132, 144, 184, 188, 197, 202, 213, 266, 271, 295, 304, 310, 326, 328, 344, 347, 360, 368, 374], "fontsiz": [7, 11, 132, 184, 188], "line_resolut": [7, 184], "50": [7, 11, 24, 25, 64, 73, 89, 132, 144, 184, 188, 202, 213, 255, 266, 295, 326, 344, 360], "regist": [8, 39, 119, 185, 227], "fabio": [8, 185], "crameri": [8, 185], "well": [8, 25, 68, 81, 185, 213, 261, 276, 326, 340, 351], "revers": [8, 10, 59, 131, 185, 187, 248], "version": [8, 10, 25, 36, 59, 65, 101, 108, 116, 131, 185, 187, 213, 224, 248, 257, 319, 326], "similarli": [8, 59, 82, 185, 248, 277], "built": [8, 15, 16, 20, 135, 136, 140, 185, 193, 194, 198], "2020": [8, 185], "januari": [8, 185], "scientif": [8, 104, 185, 322], "colour": [8, 185], "zenodo": [8, 185], "http": [8, 10, 19, 23, 25, 73, 87, 89, 91, 105, 107, 131, 143, 185, 187, 197, 201, 213, 266, 285, 295, 299, 323, 325, 326, 344, 359, 360, 363], "doi": [8, 185], "org": [8, 19, 23, 25, 89, 91, 143, 185, 197, 201, 213, 295, 299, 326, 360, 363], "5281": [8, 185], "4153113": [8, 185], "gradient": [9, 59, 68, 69, 71, 89, 94, 130, 186, 248, 261, 262, 264, 295, 305, 340, 341, 343, 360, 369], "left": [9, 11, 25, 28, 40, 75, 82, 120, 130, 132, 186, 188, 213, 216, 228, 268, 277, 326, 345], "right": [9, 11, 23, 25, 28, 75, 82, 130, 132, 143, 186, 188, 201, 213, 216, 268, 277, 326, 345], "onli": [9, 11, 15, 16, 17, 23, 25, 41, 59, 60, 75, 84, 87, 94, 104, 121, 130, 132, 135, 136, 138, 143, 186, 188, 193, 194, 195, 201, 213, 229, 248, 249, 268, 281, 285, 305, 322, 326, 345, 355, 359, 369], "test": [9, 11, 18, 23, 25, 50, 59, 64, 69, 73, 82, 89, 91, 97, 107, 130, 132, 139, 143, 147, 186, 188, 196, 201, 213, 238, 248, 255, 262, 266, 277, 295, 299, 309, 325, 326, 341, 344, 360, 363, 373], "2d": [9, 11, 23, 24, 59, 61, 67, 68, 69, 71, 73, 75, 77, 78, 82, 87, 88, 130, 132, 143, 144, 186, 188, 201, 202, 248, 250, 260, 261, 262, 264, 266, 268, 271, 272, 277, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 339, 340, 341, 343, 344, 345, 347, 348, 359], "channel": [9, 11, 59, 60, 68, 70, 71, 75, 130, 132, 186, 188, 248, 249, 261, 263, 264, 268, 340, 342, 343, 345], "collect": [10, 11, 18, 23, 63, 68, 75, 76, 97, 104, 131, 132, 139, 143, 187, 188, 196, 201, 254, 261, 268, 269, 309, 322, 340, 345, 373], "direct": [10, 11, 24, 59, 64, 68, 71, 131, 132, 144, 187, 188, 202, 248, 255, 261, 264, 340, 343], "pixel": [10, 11, 24, 71, 131, 132, 144, 187, 188, 202, 264, 343], "via": [10, 11, 16, 18, 20, 23, 36, 59, 105, 116, 131, 132, 136, 139, 140, 143, 187, 188, 194, 196, 198, 201, 224, 248, 323, 328], "It": [10, 16, 17, 18, 20, 25, 39, 40, 59, 68, 71, 84, 89, 93, 97, 105, 107, 119, 120, 131, 136, 138, 139, 140, 187, 194, 195, 196, 198, 213, 227, 228, 248, 261, 264, 281, 295, 304, 309, 323, 325, 326, 340, 343, 355, 360, 368, 373], "difficult": [10, 16, 131, 136, 187, 194], "directli": [10, 11, 25, 69, 131, 132, 187, 188, 213, 262, 326, 341], "One": [10, 59, 91, 131, 187, 248, 299, 363], "trick": [10, 131, 187], "let": [10, 11, 25, 60, 131, 132, 187, 188, 213, 249, 326], "do": [10, 11, 15, 20, 23, 25, 39, 41, 59, 60, 64, 68, 84, 107, 119, 121, 131, 132, 135, 140, 143, 187, 188, 193, 198, 201, 213, 227, 229, 248, 249, 255, 261, 281, 325, 326, 340, 355], "heavi": [10, 25, 131, 187, 213, 326], "lift": [10, 131, 187], "you": [10, 20, 25, 36, 40, 59, 64, 82, 89, 90, 91, 107, 116, 120, 131, 140, 187, 198, 213, 224, 228, 248, 255, 277, 295, 297, 299, 325, 326, 360, 363], "At": [10, 40, 73, 120, 131, 187, 228, 266, 344], "cost": [10, 15, 60, 131, 135, 187, 193, 249], "engin": [10, 25, 131, 187, 213, 326], "how": [10, 11, 15, 20, 25, 59, 75, 81, 97, 107, 131, 132, 135, 140, 187, 188, 193, 198, 213, 248, 268, 276, 309, 325, 326, 328, 345, 351, 373], "access": [10, 16, 20, 25, 107, 131, 136, 140, 187, 194, 198, 213, 325, 326, 328], "have": [10, 16, 18, 20, 23, 25, 43, 59, 61, 64, 68, 75, 82, 83, 89, 91, 123, 131, 136, 139, 140, 143, 187, 194, 196, 198, 201, 213, 231, 248, 250, 255, 261, 268, 277, 280, 295, 299, 326, 340, 345, 354, 360, 363], "handl": [10, 15, 16, 20, 39, 59, 103, 119, 131, 135, 136, 140, 187, 193, 194, 198, 227, 248, 321], "all": [10, 11, 15, 16, 18, 19, 20, 23, 25, 39, 41, 59, 60, 67, 71, 77, 78, 80, 82, 84, 90, 91, 107, 119, 121, 131, 132, 135, 136, 139, 140, 143, 187, 188, 193, 194, 196, 197, 198, 201, 213, 227, 229, 248, 249, 260, 264, 271, 272, 275, 277, 281, 297, 299, 325, 326, 339, 343, 347, 348, 350, 355, 363], "tk": [10, 131, 187], "qt": [10, 131, 187], "agg": [10, 131, 187], "backend": [10, 131, 187], "so": [10, 11, 15, 19, 20, 24, 25, 40, 41, 46, 59, 64, 68, 73, 81, 89, 91, 93, 94, 97, 107, 120, 121, 126, 131, 132, 135, 140, 144, 187, 188, 193, 197, 198, 202, 213, 228, 229, 234, 248, 255, 261, 266, 276, 295, 299, 304, 305, 309, 325, 326, 328, 340, 344, 351, 360, 363, 368, 369, 373], "multipl": [10, 11, 25, 36, 39, 59, 60, 88, 97, 116, 119, 131, 132, 187, 188, 213, 224, 227, 248, 249, 286, 287, 288, 289, 290, 291, 292, 293, 294, 309, 326, 373], "platform": [10, 25, 131, 187, 213, 326, 328], "fig": [10, 11, 131, 132, 187, 188], "hide": [10, 11, 131, 132, 187, 188], "toolabr": [10, 131, 187], "chang": [10, 11, 15, 16, 25, 59, 91, 131, 132, 135, 136, 187, 188, 193, 194, 213, 248, 299, 326, 328, 363], "across": [10, 15, 16, 25, 64, 68, 71, 131, 135, 136, 187, 193, 194, 213, 255, 261, 264, 326, 340, 343], "try": [10, 15, 20, 25, 73, 94, 104, 131, 135, 140, 187, 193, 198, 213, 266, 305, 322, 326, 344, 369], "catch": [10, 20, 131, 140, 187, 198], "toolbar": [10, 131, 187], "w": [10, 11, 12, 23, 25, 43, 59, 60, 61, 62, 69, 82, 88, 98, 123, 131, 132, 133, 143, 187, 188, 189, 201, 213, 231, 248, 249, 250, 252, 262, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 310, 326, 341, 374], "titl": [10, 11, 23, 25, 45, 125, 131, 132, 143, 187, 188, 201, 213, 233, 326], "untitl": [10, 12, 131, 133, 187, 189], "stackoverflow": [10, 23, 104, 105, 106, 107, 131, 143, 187, 201, 322, 323, 324, 325], "com": [10, 23, 25, 59, 73, 87, 104, 105, 106, 107, 131, 143, 187, 201, 213, 248, 266, 285, 322, 323, 324, 325, 326, 344, 359], "question": [10, 23, 104, 105, 106, 107, 131, 143, 187, 201, 322, 323, 324, 325], "9295026": [10, 131, 187], "remov": [10, 11, 59, 60, 68, 78, 81, 82, 96, 131, 132, 187, 188, 248, 249, 261, 272, 276, 277, 307, 340, 348, 351, 371], "axi": [10, 11, 25, 59, 71, 75, 82, 83, 131, 132, 187, 188, 213, 248, 264, 268, 277, 280, 326, 343, 345, 354], "legend": [10, 11, 25, 131, 132, 187, 188, 213, 326], "white": [10, 11, 25, 131, 132, 187, 188, 213, 326], "rgbdata": [10, 12, 131, 133, 187, 189], "helper": [11, 40, 61, 94, 120, 132, 188, 228, 250, 305, 369], "ax": [11, 23, 25, 68, 91, 132, 143, 188, 201, 213, 261, 299, 326, 340, 363], "draw": [11, 25, 41, 66, 91, 93, 97, 121, 132, 188, 213, 229, 258, 299, 304, 309, 326, 363, 368, 373], "bottom": [11, 132, 188], "line": [11, 25, 40, 46, 59, 71, 98, 104, 105, 107, 120, 126, 132, 188, 213, 228, 234, 248, 264, 310, 322, 323, 325, 326, 343, 374], "maplotlib": [11, 132, 188], "plt": [11, 25, 132, 188, 213, 326], "gca": [11, 132, 188], "move": [11, 40, 50, 59, 70, 120, 132, 147, 188, 228, 238, 248, 263, 342], "y": [11, 23, 25, 36, 40, 43, 49, 50, 59, 60, 63, 67, 68, 71, 76, 78, 82, 85, 87, 89, 91, 98, 106, 116, 120, 123, 132, 143, 146, 147, 188, 201, 213, 224, 228, 231, 237, 238, 248, 249, 254, 260, 261, 264, 269, 272, 277, 282, 285, 295, 299, 310, 324, 326, 339, 340, 343, 348, 356, 359, 360, 363, 374], "noth": [11, 132, 188], "els": [11, 18, 71, 90, 106, 132, 139, 188, 196, 264, 297, 324, 328, 343], "linewidth": [11, 25, 132, 188, 213, 326], "improv": [11, 16, 24, 68, 132, 136, 144, 188, 194, 202, 261, 340], "appear": [11, 25, 50, 64, 132, 147, 188, 213, 238, 255, 326], "box": [11, 59, 132, 188, 248], "whisker": [11, 132, 188], "To": [11, 15, 25, 59, 68, 132, 135, 188, 193, 213, 248, 261, 326, 340], "call": [11, 15, 16, 18, 20, 23, 25, 39, 40, 41, 59, 82, 94, 106, 107, 119, 120, 121, 132, 135, 136, 139, 140, 143, 188, 193, 194, 196, 198, 201, 213, 227, 228, 229, 248, 277, 305, 324, 325, 326, 328, 338, 369], "object": [11, 12, 15, 16, 19, 23, 28, 29, 36, 59, 82, 88, 89, 90, 91, 94, 98, 103, 104, 107, 116, 132, 133, 135, 136, 143, 188, 189, 193, 194, 197, 201, 216, 217, 224, 248, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 305, 310, 321, 322, 325, 328, 338, 360, 363, 369, 374], "accompani": [11, 18, 132, 139, 188, 196], "set": [11, 16, 18, 19, 20, 24, 25, 59, 73, 76, 78, 82, 88, 89, 92, 94, 132, 136, 139, 140, 144, 188, 194, 196, 197, 198, 202, 213, 248, 266, 269, 272, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 300, 305, 326, 328, 338, 344, 348, 360, 364, 369], "posit": [11, 23, 24, 25, 59, 60, 61, 62, 63, 64, 65, 66, 73, 77, 80, 82, 84, 85, 86, 88, 89, 91, 97, 98, 104, 107, 132, 143, 144, 188, 201, 202, 213, 248, 249, 250, 252, 254, 255, 257, 258, 266, 271, 275, 277, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 309, 310, 322, 325, 326, 344, 347, 350, 355, 356, 357, 360, 363, 373, 374], "width": [11, 24, 25, 46, 59, 69, 71, 81, 85, 104, 126, 132, 144, 188, 202, 213, 234, 248, 262, 264, 276, 282, 322, 326, 341, 343, 351, 356], "fill": [11, 25, 59, 85, 107, 132, 188, 213, 248, 282, 325, 326, 356], "notch": [11, 132, 188], "showflier": [11, 132, 188], "whi": [11, 132, 188], "95": [11, 24, 25, 73, 89, 132, 144, 188, 202, 213, 266, 295, 326, 344, 360], "bgcolor": [11, 132, 188], "94509804": [11, 132, 188], "9411765": [11, 132, 188], "9137255": [11, 132, 188], "dtype": [11, 25, 132, 188, 213, 326], "float32": [11, 15, 25, 40, 59, 61, 73, 76, 81, 82, 85, 86, 120, 132, 135, 188, 193, 213, 228, 248, 250, 266, 269, 276, 277, 282, 283, 326, 344, 351, 356, 357], "mediancolor": [11, 132, 188], "kwarg": [11, 15, 19, 31, 39, 45, 78, 82, 89, 94, 107, 111, 119, 125, 132, 135, 188, 193, 197, 219, 227, 233, 272, 277, 295, 305, 325, 348, 360, 369], "nice": [11, 15, 59, 69, 132, 135, 188, 193, 248, 262, 341], "style": [11, 103, 132, 188, 321], "npoint": [11, 76, 77, 132, 188, 269, 271, 347], "ngroup": [11, 132, 188], "x": [11, 15, 16, 23, 24, 25, 36, 40, 41, 43, 49, 50, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 73, 75, 76, 77, 78, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 98, 101, 102, 104, 107, 108, 109, 116, 120, 121, 123, 132, 135, 136, 143, 144, 146, 147, 188, 193, 194, 201, 202, 213, 224, 228, 229, 231, 237, 238, 248, 249, 250, 252, 254, 255, 257, 260, 261, 262, 264, 266, 268, 269, 271, 272, 277, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 304, 310, 319, 320, 322, 325, 326, 339, 340, 341, 343, 344, 345, 347, 348, 355, 356, 357, 359, 360, 363, 364, 368, 374], "group": [11, 25, 59, 132, 188, 213, 248, 326], "boolean": [11, 15, 18, 23, 25, 43, 59, 64, 71, 80, 82, 87, 104, 123, 132, 135, 139, 143, 188, 193, 196, 201, 213, 231, 248, 255, 264, 275, 277, 285, 322, 326, 343, 350, 359], "whether": [11, 15, 16, 17, 20, 23, 25, 59, 68, 71, 75, 81, 82, 83, 87, 91, 132, 135, 136, 138, 140, 143, 188, 193, 194, 195, 198, 201, 213, 248, 261, 264, 268, 276, 277, 280, 285, 299, 326, 340, 343, 345, 351, 354, 359, 363], "inset": [11, 132, 188], "median": [11, 25, 59, 75, 82, 97, 132, 188, 213, 248, 268, 277, 309, 326, 345, 373], "outli": [11, 132, 188], "scatter": [11, 23, 25, 132, 143, 188, 201, 213, 326], "which": [11, 12, 15, 20, 23, 24, 25, 40, 59, 60, 63, 64, 67, 68, 69, 71, 75, 82, 83, 85, 86, 88, 91, 101, 103, 108, 120, 132, 133, 135, 140, 143, 144, 188, 189, 193, 198, 201, 202, 213, 228, 248, 249, 254, 255, 260, 261, 262, 264, 268, 277, 280, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 319, 321, 326, 339, 340, 341, 343, 345, 354, 356, 357, 363], "percentil": [11, 59, 82, 132, 188, 248, 277], "rang": [11, 24, 25, 36, 59, 73, 75, 80, 89, 91, 116, 132, 144, 188, 202, 213, 224, 248, 266, 268, 275, 295, 299, 326, 344, 345, 350, 360, 363], "background": [11, 15, 132, 135, 188, 193], "black": [11, 25, 132, 188, 213, 326], "unless": [11, 18, 25, 75, 132, 139, 188, 196, 213, 268, 326, 345], "case": [11, 15, 18, 20, 25, 59, 60, 85, 89, 94, 107, 132, 135, 139, 140, 188, 193, 196, 198, 213, 248, 249, 282, 295, 305, 325, 326, 356, 360, 369], "foward": [11, 132, 188], "pyplot": [11, 25, 36, 116, 132, 188, 213, 224, 326], "mark": [11, 59, 68, 132, 188, 248, 261, 340], "min": [11, 25, 45, 59, 87, 125, 132, 188, 213, 233, 248, 285, 326, 359], "max": [11, 25, 45, 59, 82, 87, 97, 125, 132, 188, 213, 233, 248, 277, 285, 309, 326, 359, 373], "xby": [11, 132, 188], "yby": [11, 132, 188], "see": [11, 15, 18, 23, 25, 59, 60, 62, 73, 81, 82, 91, 98, 104, 132, 135, 139, 143, 188, 193, 196, 201, 213, 248, 249, 252, 266, 276, 277, 299, 310, 322, 326, 328, 338, 344, 351, 363, 374], "zero": [11, 23, 24, 25, 41, 50, 59, 71, 73, 75, 80, 81, 84, 85, 89, 91, 98, 107, 121, 132, 143, 144, 147, 188, 201, 202, 213, 229, 238, 248, 264, 266, 268, 275, 276, 281, 282, 295, 299, 310, 325, 326, 343, 344, 345, 350, 351, 355, 356, 360, 363, 374], "upper": [11, 23, 25, 68, 132, 143, 188, 201, 213, 261, 326, 340], "largest": [11, 23, 24, 25, 39, 59, 91, 119, 132, 143, 144, 188, 201, 202, 213, 227, 248, 299, 326, 363], "un": [11, 132, 188], "current": [11, 39, 49, 50, 106, 119, 132, 146, 147, 188, 227, 237, 238, 324, 328], "xlimit": [11, 132, 188], "If": [11, 15, 16, 18, 19, 20, 23, 24, 25, 39, 49, 59, 60, 71, 75, 82, 83, 84, 88, 91, 94, 96, 119, 132, 135, 136, 139, 140, 143, 144, 146, 188, 193, 194, 196, 197, 198, 201, 202, 213, 227, 237, 248, 249, 264, 268, 277, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 305, 307, 326, 343, 345, 354, 355, 363, 369, 371], "curent": [11, 132, 188], "xlim": [11, 132, 188], "neg": [11, 23, 25, 59, 60, 64, 84, 88, 91, 104, 132, 143, 188, 201, 213, 248, 249, 255, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 322, 326, 355, 363], "error": [11, 16, 17, 19, 20, 23, 25, 36, 59, 82, 88, 93, 94, 98, 116, 132, 136, 138, 140, 143, 188, 194, 195, 197, 198, 201, 213, 224, 248, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 304, 305, 310, 326, 368, 369, 374], "rais": [11, 17, 18, 24, 25, 73, 75, 82, 89, 132, 138, 139, 144, 188, 195, 196, 202, 213, 266, 268, 277, 295, 326, 344, 345, 360], "ylimit": [11, 132, 188], "ylim": [11, 132, 188], "both": [11, 15, 24, 25, 50, 63, 64, 82, 132, 135, 144, 147, 188, 193, 202, 213, 238, 254, 255, 277, 326], "smae": [11, 132, 188], "turn": [11, 132, 188], "clip": [11, 59, 101, 108, 132, 188, 248, 319], "tick": [11, 132, 188], "aspect": [11, 71, 132, 188, 264, 343], "interv": [11, 25, 59, 96, 132, 188, 213, 248, 307, 326, 371], "ratio": [11, 25, 36, 68, 71, 116, 132, 188, 213, 224, 261, 264, 326, 340, 343], "im": [11, 132, 188], "keep": [11, 18, 59, 82, 88, 132, 139, 188, 196, 248, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294], "corner": [11, 24, 73, 132, 144, 188, 202, 266, 344], "rescal": [11, 24, 59, 73, 89, 132, 144, 188, 202, 248, 266, 295, 344, 360], "height": [11, 24, 25, 46, 69, 126, 132, 144, 188, 202, 213, 234, 262, 326, 341], "dimens": [11, 23, 25, 46, 59, 60, 61, 62, 63, 68, 69, 71, 75, 82, 88, 91, 126, 132, 143, 188, 201, 213, 234, 248, 249, 250, 252, 254, 261, 262, 264, 268, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 326, 340, 341, 343, 345, 363], "instanc": [11, 15, 25, 36, 116, 132, 135, 188, 193, 213, 224, 326], "tha": [11, 132, 188], "size": [11, 18, 20, 23, 24, 25, 36, 38, 39, 46, 59, 60, 61, 64, 68, 71, 82, 84, 87, 92, 97, 104, 107, 116, 118, 119, 126, 132, 139, 140, 143, 144, 188, 196, 198, 201, 202, 213, 224, 226, 227, 234, 248, 249, 250, 255, 261, 264, 277, 281, 285, 300, 309, 322, 325, 326, 340, 343, 355, 359, 364, 373], "figur": [11, 25, 104, 132, 188, 213, 322, 326], "rel": [11, 24, 25, 59, 64, 75, 80, 132, 144, 188, 202, 213, 248, 255, 268, 275, 326, 345, 350], "measur": [11, 25, 59, 60, 62, 68, 75, 82, 132, 188, 213, 248, 249, 252, 261, 268, 277, 326, 340, 345], "scale": [11, 25, 30, 35, 36, 59, 68, 69, 71, 82, 98, 110, 115, 116, 132, 188, 213, 218, 223, 224, 248, 261, 262, 264, 277, 310, 326, 340, 341, 343, 374], "bound": [11, 16, 25, 68, 92, 132, 136, 188, 194, 213, 261, 300, 326, 340, 364], "currenta": [11, 132, 188], "dy": [11, 50, 71, 132, 147, 188, 238, 264, 343], "dx": [11, 71, 86, 132, 188, 264, 283, 343, 357], "orient": [11, 25, 132, 188, 213, 326], "resiz": [11, 132, 188], "baselin": [11, 82, 132, 188, 277], "amount": [11, 15, 39, 59, 119, 132, 135, 188, 193, 227, 248], "expand": [11, 15, 59, 132, 135, 188, 193, 248], "same": [11, 15, 16, 23, 25, 36, 40, 59, 71, 75, 80, 82, 87, 107, 116, 120, 132, 135, 136, 143, 188, 193, 194, 201, 213, 224, 228, 248, 264, 268, 275, 277, 285, 325, 326, 343, 345, 350, 359], "top": [11, 25, 132, 188, 213, 326], "intact": [11, 132, 188], "ax1": [11, 132, 188], "ax2": [11, 132, 188], "xspan1": [11, 132, 188], "xspan2": [11, 132, 188], "draw_left": [11, 132, 188], "draw_right": [11, 132, 188], "doshow": [11, 12, 132, 133, 188, 189], "dishow": [11, 132, 188], "edg": [11, 24, 59, 61, 64, 71, 73, 76, 78, 81, 132, 144, 188, 202, 248, 250, 255, 264, 266, 269, 272, 276, 343, 344, 348, 351], "stop": [11, 59, 91, 132, 188, 248, 299, 363], "shade": [11, 132, 188], "region": [11, 25, 67, 132, 188, 213, 260, 326, 339], "graph": [11, 15, 25, 30, 37, 73, 110, 117, 132, 135, 163, 170, 188, 193, 213, 218, 225, 266, 326, 344], "defin": [11, 15, 16, 20, 25, 59, 78, 90, 132, 135, 136, 140, 188, 193, 194, 198, 213, 248, 272, 297, 326, 348], "keyword": [11, 15, 25, 89, 132, 135, 188, 193, 213, 295, 326, 360], "forward": [11, 23, 25, 59, 71, 78, 88, 89, 91, 132, 143, 188, 201, 213, 248, 264, 272, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 326, 343, 348, 360, 363], "text": [11, 25, 104, 132, 188, 213, 322, 326], "arg": [11, 15, 19, 20, 31, 39, 40, 45, 70, 104, 107, 111, 119, 120, 125, 132, 135, 140, 188, 193, 197, 198, 219, 227, 228, 233, 263, 322, 325, 342], "fudg": [11, 132, 188], "base": [11, 15, 23, 24, 25, 28, 29, 59, 62, 64, 65, 68, 73, 81, 82, 88, 89, 91, 94, 97, 107, 132, 135, 143, 144, 188, 193, 201, 202, 213, 216, 217, 248, 252, 255, 257, 261, 266, 276, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 305, 309, 325, 326, 328, 340, 344, 351, 360, 363, 369, 373], "pad": [11, 59, 61, 77, 81, 85, 132, 188, 248, 250, 271, 276, 282, 347, 351, 356], "rangefun": [11, 132, 188], "ff": [11, 64, 71, 132, 188, 255, 264, 343], "cwt": [11, 132, 188], "auto": [11, 40, 71, 120, 132, 188, 228, 264, 343], "vmin": [11, 132, 188], "vmax": [11, 132, 188], "afmhot": [11, 132, 188], "interpol": [11, 59, 68, 77, 85, 132, 188, 248, 261, 271, 282, 340, 347, 356], "nearest": [11, 36, 68, 71, 76, 80, 85, 116, 132, 188, 224, 261, 264, 269, 275, 282, 340, 343, 350, 356], "dodraw": [11, 132, 188], "numer": [11, 19, 25, 59, 62, 69, 71, 82, 88, 89, 91, 92, 101, 104, 108, 132, 188, 197, 213, 248, 252, 262, 264, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 319, 322, 326, 341, 343, 360, 363, 364], "frequenc": [11, 25, 28, 29, 50, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 75, 84, 91, 92, 132, 147, 188, 213, 216, 217, 238, 248, 249, 252, 254, 255, 257, 261, 262, 263, 264, 268, 281, 299, 300, 326, 340, 341, 342, 343, 345, 355, 363, 364], "wavelet": [11, 60, 62, 132, 188, 249, 252], "transform": [11, 23, 24, 59, 61, 62, 68, 69, 75, 88, 132, 143, 144, 188, 201, 202, 248, 250, 252, 261, 262, 268, 286, 287, 288, 289, 290, 291, 292, 293, 294, 340, 341, 345], "what": [11, 15, 25, 64, 105, 132, 135, 188, 193, 213, 255, 323, 326], "ip": [11, 132, 188], "bone": [11, 132, 188], "class": [11, 25, 28, 29, 82, 88, 91, 95, 101, 107, 108, 132, 188, 213, 216, 217, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 306, 319, 325, 326, 328, 363, 370], "patch_func": [11, 132, 188], "handlerpatch": [11, 132, 188], "orig_handl": [11, 132, 188], "xdescent": [11, 132, 188], "ydescent": [11, 132, 188], "tran": [11, 25, 132, 188, 213, 326], "vm": [11, 132, 188], "bicub": [11, 132, 188], "extent": [11, 71, 87, 132, 188, 264, 285, 343, 359], "onlyphas": [11, 132, 188], "previou": [11, 132, 188, 328, 338], "polar": [11, 82, 83, 132, 188, 277, 280, 354], "modulu": [11, 132, 188], "ab": [11, 23, 25, 59, 68, 132, 143, 188, 201, 213, 248, 261, 326, 340], "imshow": [11, 132, 188], "avail": [11, 25, 59, 84, 95, 132, 188, 213, 248, 281, 306, 326, 355, 370], "output": [11, 25, 87, 132, 188, 213, 285, 326, 359], "skirt": [11, 69, 132, 188, 262, 341], "replot": [11, 132, 188], "nuisanc": [11, 132, 188], "updat": [11, 23, 49, 50, 88, 94, 132, 143, 146, 147, 188, 201, 237, 238, 286, 287, 288, 289, 290, 291, 292, 293, 294, 305, 369], "should": [11, 15, 17, 18, 23, 25, 40, 59, 60, 68, 69, 71, 82, 88, 91, 95, 97, 101, 107, 108, 120, 132, 135, 138, 139, 143, 188, 193, 195, 196, 201, 213, 228, 248, 249, 261, 262, 264, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 306, 309, 319, 325, 326, 340, 341, 343, 363, 370, 373], "faster": [11, 15, 87, 91, 94, 132, 135, 188, 193, 285, 299, 305, 359, 363, 369], "img": [11, 132, 188], "copi": [11, 15, 25, 36, 40, 59, 69, 84, 116, 120, 132, 135, 188, 193, 213, 224, 228, 248, 262, 281, 326, 341, 355], "reus": [11, 132, 188], "subsequ": [11, 90, 132, 188, 297], "speed": [11, 25, 68, 132, 188, 213, 261, 326, 340], "thing": [11, 16, 17, 40, 120, 132, 136, 138, 188, 194, 195, 228], "up": [11, 18, 20, 25, 36, 80, 116, 132, 139, 140, 188, 196, 198, 213, 224, 275, 326, 350], "anim": [11, 25, 132, 188, 213, 326], "video": [11, 132, 188], "except": [11, 20, 25, 40, 94, 104, 120, 132, 140, 188, 198, 213, 228, 305, 322, 326, 369], "an": [11, 15, 16, 17, 19, 23, 24, 25, 36, 40, 41, 50, 59, 66, 68, 71, 75, 78, 80, 82, 85, 87, 89, 91, 97, 98, 101, 103, 104, 105, 107, 108, 116, 120, 121, 132, 135, 136, 138, 143, 144, 147, 188, 193, 194, 195, 197, 201, 202, 213, 224, 228, 229, 238, 248, 258, 261, 264, 268, 272, 275, 277, 282, 285, 295, 299, 309, 310, 319, 321, 322, 323, 325, 326, 328, 340, 343, 345, 348, 350, 356, 359, 360, 363, 373, 374], "cmap": [11, 30, 35, 36, 71, 110, 115, 116, 132, 188, 218, 223, 224, 264, 343], "sidewai": [11, 132, 188], "border": [11, 59, 132, 188, 248], "15": [11, 23, 24, 25, 60, 73, 89, 132, 143, 144, 188, 201, 202, 213, 249, 266, 295, 326, 328, 344, 360], "labelpad": [11, 132, 188], "vscale": [11, 132, 188], "va": [11, 132, 188], "colorbar": [11, 132, 188], "pretti": [11, 25, 132, 188, 213, 326], "bad": [11, 18, 25, 71, 132, 139, 188, 196, 213, 264, 326, 343], "less": [11, 23, 25, 39, 59, 75, 91, 97, 119, 132, 143, 188, 201, 213, 227, 248, 268, 299, 309, 326, 345, 363, 373], "mathrm": [11, 132, 188], "mu": [11, 25, 30, 35, 36, 86, 89, 101, 108, 110, 115, 116, 132, 188, 213, 218, 223, 224, 283, 295, 319, 326, 357, 360], "mac": [11, 132, 188], "option": [11, 15, 18, 25, 40, 59, 75, 82, 83, 84, 87, 89, 90, 91, 94, 104, 120, 132, 135, 139, 188, 193, 196, 213, 228, 248, 268, 277, 280, 281, 285, 295, 297, 299, 305, 322, 326, 345, 354, 355, 359, 360, 363, 369], "add": [11, 25, 36, 59, 82, 99, 104, 107, 116, 132, 188, 213, 224, 248, 277, 317, 322, 325, 326], "bool": [11, 15, 16, 17, 18, 20, 23, 24, 25, 59, 68, 71, 82, 83, 91, 106, 132, 135, 136, 138, 139, 140, 143, 144, 188, 193, 194, 195, 196, 198, 201, 202, 213, 248, 261, 264, 277, 280, 299, 324, 326, 340, 343, 354, 363], "flip": [11, 25, 59, 64, 132, 188, 213, 248, 255, 326], "around": [11, 24, 59, 64, 68, 75, 132, 144, 188, 202, 248, 255, 261, 268, 340, 345], "font": [11, 132, 188], "12": [11, 24, 25, 73, 88, 89, 132, 144, 188, 202, 213, 266, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 326, 328, 344, 360], "parent": [11, 25, 132, 188, 213, 326], "vertic": [11, 61, 132, 188, 250], "align": [11, 25, 132, 188, 213, 326], "plane": [11, 68, 75, 132, 188, 261, 268, 340, 345], "latex": [11, 132, 188], "re": [11, 15, 20, 25, 50, 59, 84, 90, 94, 132, 135, 140, 147, 188, 193, 198, 213, 238, 248, 281, 297, 305, 326, 355, 369], "everyth": [11, 18, 132, 139, 188, 196], "39": [11, 24, 73, 89, 132, 144, 188, 202, 266, 295, 344, 360], "bold": [11, 132, 188], "x1": [11, 23, 132, 143, 188, 201], "x2": [11, 23, 76, 132, 143, 188, 201, 269], "26666668": [11, 132, 188], "32156864": [11, 132, 188], "36078432": [11, 132, 188], "signific": [11, 25, 104, 132, 188, 213, 322, 326], "bar": [11, 25, 132, 188, 213, 326], "brace": [11, 132, 188], "y1": [11, 132, 188], "y2": [11, 132, 188], "horizont": [11, 61, 104, 132, 188, 250, 322], "name": [11, 12, 15, 16, 25, 36, 59, 82, 94, 107, 116, 132, 133, 135, 136, 188, 189, 193, 194, 213, 224, 248, 277, 305, 325, 326, 369], "stamp": [11, 132, 188], "save": [11, 15, 90, 132, 135, 188, 193, 297], "svg": [11, 132, 188], "pdf": [11, 25, 41, 86, 88, 121, 132, 188, 213, 229, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326, 357], "prepend": [11, 132, 188], "date": [11, 106, 132, 188, 324], "ti": [11, 132, 188], "me": [11, 39, 119, 132, 188, 227], "yyyymmdd_hhmmss": [11, 132, 188], "file": [11, 15, 18, 46, 73, 103, 107, 126, 132, 135, 139, 188, 193, 196, 234, 266, 321, 325, 344], "san": [11, 132, 188], "extens": [11, 15, 107, 132, 135, 188, 193, 325], "precis": [11, 15, 23, 25, 75, 86, 88, 93, 101, 104, 108, 132, 135, 143, 188, 193, 201, 213, 268, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 304, 319, 322, 326, 345, 357, 368], "round": [11, 24, 25, 36, 39, 116, 119, 132, 144, 188, 202, 213, 224, 227, 326], "down": [11, 24, 39, 68, 119, 132, 144, 188, 202, 227, 261, 340], "digit": [11, 86, 104, 132, 188, 283, 322, 357], "yvalu": [11, 132, 188], "60": [11, 24, 50, 59, 73, 89, 132, 144, 147, 188, 202, 238, 248, 266, 295, 344, 360], "xy": [11, 132, 188], "ellips": [11, 83, 132, 188, 280, 354], "mean": [11, 23, 25, 30, 35, 36, 41, 59, 60, 68, 75, 81, 82, 84, 85, 86, 88, 89, 91, 93, 95, 97, 101, 105, 107, 108, 110, 115, 116, 121, 132, 143, 188, 201, 213, 218, 223, 224, 229, 248, 249, 261, 268, 276, 277, 281, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 304, 306, 309, 319, 323, 325, 326, 340, 345, 351, 355, 356, 357, 360, 363, 368, 370, 373], "drawn": [11, 25, 132, 188, 213, 326], "deviat": [11, 24, 25, 36, 41, 59, 61, 66, 68, 73, 75, 82, 86, 101, 108, 116, 121, 132, 144, 188, 202, 213, 224, 229, 248, 250, 258, 261, 266, 268, 277, 283, 319, 326, 340, 344, 345, 357], "coordin": [11, 25, 59, 67, 76, 132, 188, 213, 248, 260, 269, 326, 339], "2x2": [11, 23, 132, 143, 188, 201], "alpha": [11, 25, 50, 97, 132, 147, 188, 213, 238, 309, 326, 373], "stdwidth": [11, 132, 188], "96": [11, 24, 73, 89, 132, 144, 188, 202, 266, 295, 344, 360], "\u03c3": [11, 59, 75, 82, 132, 188, 248, 268, 277, 345], "varianc": [11, 25, 36, 59, 60, 64, 82, 83, 84, 88, 97, 116, 132, 188, 213, 224, 248, 249, 255, 277, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 309, 326, 354, 355, 373], "confid": [11, 132, 188], "blend": [11, 132, 188], "ycenter": [11, 132, 188], "yheight": [11, 132, 188], "side": [11, 25, 82, 107, 132, 188, 213, 277, 325, 326], "xcenter": [11, 132, 188], "xlength": [11, 132, 188], "wide": [11, 25, 132, 188, 213, 326], "where": [11, 15, 20, 23, 25, 35, 50, 59, 68, 75, 82, 89, 107, 115, 132, 135, 140, 143, 147, 188, 193, 198, 201, 213, 223, 238, 248, 261, 268, 277, 295, 325, 326, 340, 345, 360], "draw_ellips": [11, 132, 188], "draw_cross": [11, 132, 188], "p": [11, 15, 20, 25, 42, 46, 59, 64, 76, 88, 89, 91, 92, 97, 101, 104, 107, 108, 122, 126, 132, 135, 140, 188, 193, 198, 213, 230, 234, 248, 255, 269, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 309, 319, 322, 325, 326, 360, 363, 364, 373], "8": [11, 15, 24, 25, 71, 73, 89, 91, 104, 132, 135, 144, 188, 193, 202, 213, 264, 266, 295, 299, 322, 326, 328, 343, 344, 360, 363], "For": [11, 15, 18, 25, 36, 40, 41, 59, 60, 63, 65, 75, 82, 85, 91, 93, 97, 116, 120, 121, 132, 135, 139, 188, 193, 196, 213, 224, 228, 229, 248, 249, 254, 257, 268, 277, 282, 299, 304, 309, 326, 345, 356, 363, 368, 373], "90": [11, 24, 73, 89, 132, 144, 188, 202, 266, 295, 344, 360], "605": [11, 132, 188], "991": [11, 132, 188], "97": [11, 24, 73, 89, 132, 144, 188, 202, 266, 295, 344, 360], "378": [11, 132, 188], "99": [11, 24, 73, 89, 132, 144, 188, 202, 266, 295, 344, 360], "210": [11, 132, 188], "597": [11, 132, 188], "fraction": [11, 25, 82, 132, 188, 213, 277, 326], "enclos": [11, 132, 188], "centx": [11, 132, 188], "centi": [11, 132, 188], "angle_": [11, 132, 188], "theta2_": [11, 132, 188], "arrows": [11, 132, 188], "cap_start": [11, 132, 188], "cap_end": [11, 132, 188], "connect": [11, 76, 78, 132, 188, 269, 272, 348], "pass": [11, 15, 16, 20, 25, 36, 40, 59, 62, 65, 69, 75, 78, 84, 90, 91, 94, 116, 120, 132, 135, 136, 140, 188, 193, 194, 198, 213, 224, 228, 248, 252, 257, 262, 268, 272, 281, 297, 299, 305, 326, 328, 341, 345, 348, 355, 363, 369], "headlength": [11, 132, 188], "headwidth": [11, 132, 188], "arrow": [11, 132, 188], "properti": [11, 23, 25, 60, 132, 143, 188, 201, 213, 249, 326], "inhibit": [11, 132, 188], "brake": [11, 132, 188], "ep": [11, 23, 77, 85, 88, 91, 92, 98, 101, 108, 132, 143, 188, 201, 271, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 310, 319, 347, 356, 363, 364, 374], "1e": [11, 23, 24, 25, 59, 77, 82, 88, 91, 92, 93, 94, 98, 132, 143, 144, 188, 201, 202, 213, 248, 271, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 304, 305, 310, 326, 347, 363, 364, 368, 369, 374], "05": [11, 24, 25, 94, 97, 132, 144, 188, 202, 213, 305, 309, 326, 369, 373], "step": [11, 46, 49, 50, 59, 60, 63, 66, 91, 126, 132, 146, 147, 188, 234, 237, 238, 248, 249, 254, 258, 299, 363], "adjac": [11, 24, 132, 144, 188, 202], "level": [11, 16, 25, 64, 97, 132, 136, 188, 194, 213, 255, 309, 326, 373], "abov": [11, 25, 68, 132, 188, 213, 261, 326, 340], "break": [11, 17, 59, 82, 132, 138, 188, 195, 248, 277], "conveni": [11, 25, 85, 132, 188, 213, 282, 326, 356], "bin": [11, 25, 45, 46, 59, 77, 80, 89, 125, 126, 132, 188, 213, 233, 234, 248, 271, 275, 295, 326, 347, 350, 360], "20": [11, 24, 25, 60, 73, 89, 97, 132, 144, 188, 202, 213, 249, 266, 295, 309, 326, 328, 344, 360, 373], "p50": [11, 132, 188], "markers": [11, 132, 188], "summar": [11, 59, 132, 188, 248], "histogram": [11, 25, 77, 87, 96, 132, 188, 213, 271, 285, 307, 326, 347, 359, 371], "\u03bc": [11, 81, 82, 89, 132, 188, 276, 277, 295, 351, 360], "d\u03bc": [11, 132, 188], "\u03b4e": [11, 132, 188], "92156863": [11, 132, 188], "47843137": [11, 132, 188], "34901962": [11, 132, 188], "shell": [11, 18, 107, 132, 139, 188, 196, 325], "averag": [11, 25, 36, 41, 50, 59, 60, 63, 68, 75, 78, 82, 84, 98, 116, 121, 132, 147, 188, 213, 224, 229, 238, 248, 249, 254, 261, 268, 272, 277, 281, 310, 326, 340, 345, 348, 355, 374], "A": [11, 15, 23, 25, 36, 40, 59, 60, 68, 75, 82, 83, 87, 88, 90, 91, 97, 116, 120, 132, 135, 143, 188, 193, 201, 213, 224, 228, 248, 249, 261, 268, 277, 280, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 299, 309, 326, 328, 338, 340, 345, 354, 359, 363, 373], "thr": [11, 50, 59, 81, 132, 147, 188, 238, 248, 276, 351], "09": [11, 23, 25, 77, 92, 132, 143, 188, 201, 213, 271, 300, 326, 347, 364], "split": [11, 59, 82, 132, 188, 248, 277], "1d": [11, 24, 59, 61, 64, 73, 75, 76, 80, 81, 82, 85, 87, 88, 89, 91, 92, 98, 132, 144, 188, 202, 248, 250, 255, 266, 268, 269, 275, 276, 277, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 310, 344, 345, 350, 351, 356, 359, 360, 363, 364, 374], "real": [11, 15, 23, 25, 59, 64, 68, 69, 71, 78, 88, 132, 135, 143, 188, 193, 201, 213, 248, 255, 261, 262, 264, 272, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326, 328, 340, 341, 343, 348], "imaginari": [11, 15, 68, 71, 78, 132, 135, 188, 193, 261, 264, 272, 340, 343, 348], "part": [11, 68, 78, 132, 188, 261, 272, 340, 348], "either": [11, 16, 24, 25, 69, 82, 97, 132, 136, 144, 188, 194, 202, 213, 262, 277, 309, 326, 328, 341, 373], "nan": [11, 23, 25, 59, 76, 91, 101, 108, 132, 143, 188, 201, 213, 248, 269, 299, 319, 326, 363], "u": [11, 25, 49, 59, 132, 146, 188, 213, 237, 248, 326], "separ": [11, 25, 75, 89, 103, 104, 132, 188, 213, 268, 295, 321, 322, 326, 345, 360], "without": [11, 15, 25, 41, 61, 64, 69, 104, 121, 132, 135, 188, 193, 213, 229, 250, 255, 262, 322, 326, 341], "overlap": [11, 24, 73, 89, 132, 144, 188, 202, 266, 295, 344, 360], "dash": [11, 132, 188], "stash": [11, 132, 188], "x0": [11, 66, 91, 132, 188, 258, 299, 363], "y0": [11, 132, 188], "__save_limits_private_storage__": [11, 132, 188], "These": [11, 16, 18, 25, 43, 59, 123, 132, 136, 139, 188, 194, 196, 213, 231, 248, 326], "restor": [11, 59, 132, 188, 248], "later": [11, 16, 25, 107, 132, 136, 188, 194, 213, 325, 326], "store": [11, 15, 20, 71, 132, 135, 140, 188, 193, 198, 264, 343], "40": [11, 24, 25, 59, 73, 89, 132, 144, 188, 202, 213, 248, 266, 295, 326, 344, 360], "marker": [11, 132, 188], "some": [11, 15, 16, 18, 20, 25, 43, 59, 69, 86, 92, 94, 97, 98, 123, 132, 135, 136, 139, 140, 188, 193, 194, 196, 198, 213, 231, 248, 262, 283, 300, 305, 309, 310, 326, 341, 357, 364, 369, 373, 374], "popul": [11, 25, 36, 63, 75, 97, 104, 116, 132, 188, 213, 224, 254, 268, 309, 322, 326, 345, 373], "creat": [11, 15, 16, 18, 19, 20, 23, 25, 36, 40, 41, 59, 69, 107, 116, 120, 121, 132, 135, 136, 139, 140, 143, 188, 193, 194, 196, 197, 198, 201, 213, 224, 228, 229, 248, 262, 325, 326, 341], "ofl": [11, 132, 188], "xtick": [11, 132, 188], "major": [11, 36, 40, 68, 83, 116, 120, 132, 188, 224, 228, 261, 280, 340, 354], "minor": [11, 83, 132, 188, 280, 354], "appli": [11, 19, 20, 23, 24, 25, 49, 59, 60, 62, 64, 68, 73, 75, 83, 84, 107, 132, 140, 143, 144, 146, 188, 197, 198, 201, 202, 213, 237, 248, 249, 252, 255, 261, 266, 268, 280, 281, 325, 326, 340, 344, 345, 354, 355], "ytick": [11, 132, 188], "make": [11, 15, 16, 25, 36, 64, 84, 97, 107, 116, 132, 135, 136, 188, 193, 194, 213, 224, 255, 281, 309, 325, 326, 355, 373], "inward": [11, 132, 188], "discard": [11, 68, 69, 132, 188, 261, 262, 340, 341], "fade": [11, 132, 188], "altern": [11, 15, 20, 25, 105, 132, 135, 140, 188, 193, 198, 213, 323, 326], "band": [11, 59, 60, 62, 132, 188, 248, 249, 252, 328], "within": [11, 18, 20, 25, 39, 59, 67, 75, 76, 80, 103, 119, 132, 139, 140, 188, 196, 198, 213, 227, 248, 260, 268, 269, 275, 321, 326, 339, 345, 350], "mix": [11, 132, 188], "startat": [11, 132, 188], "delimit": [11, 46, 126, 132, 188, 234], "consecut": [11, 132, 188], "wrapper": [11, 20, 25, 40, 41, 43, 82, 85, 89, 120, 121, 123, 132, 140, 188, 198, 213, 228, 229, 231, 277, 282, 295, 326, 356, 360], "accept": [11, 25, 36, 40, 59, 64, 68, 78, 80, 88, 89, 91, 96, 97, 116, 120, 132, 188, 213, 224, 228, 248, 255, 261, 272, 275, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 307, 309, 326, 328, 340, 348, 350, 360, 363, 371, 373], "rather": [11, 25, 59, 63, 64, 91, 132, 188, 213, 248, 254, 255, 299, 326, 363], "than": [11, 15, 17, 23, 24, 25, 39, 59, 60, 63, 64, 67, 71, 82, 83, 84, 86, 87, 88, 91, 96, 97, 101, 108, 119, 132, 135, 138, 143, 144, 188, 193, 195, 201, 202, 213, 227, 248, 249, 254, 255, 260, 264, 277, 280, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 307, 309, 319, 326, 339, 343, 354, 355, 357, 359, 363, 371, 373], "a1": [11, 132, 188], "positionsa": [11, 132, 188], "b1": [11, 132, 188], "positionsb": [11, 132, 188], "fdr": [11, 97, 132, 188, 309, 373], "label_pvalu": [11, 132, 188], "significance_mark": [11, 132, 188], "wilcoxon": [11, 132, 188], "pair": [11, 36, 59, 60, 76, 84, 116, 132, 188, 224, 248, 249, 269, 281, 355], "bracket": [11, 132, 188], "correct": [11, 59, 60, 64, 83, 85, 97, 132, 188, 248, 249, 255, 280, 282, 309, 354, 356, 373], "comparison": [11, 25, 97, 132, 188, 213, 309, 326, 373], "benjamini": [11, 97, 132, 188, 309, 373], "hochberg": [11, 97, 132, 188, 309, 373], "procedur": [11, 15, 59, 60, 81, 91, 97, 132, 135, 188, 193, 248, 249, 276, 299, 309, 351, 363, 373], "whichev": [11, 59, 97, 132, 188, 248, 309, 373], "conserv": [11, 68, 97, 132, 188, 261, 309, 340, 373], "desir": [11, 25, 59, 61, 65, 132, 188, 213, 248, 250, 257, 326], "discoveri": [11, 97, 132, 188, 309, 373], "rate": [11, 25, 50, 59, 62, 63, 64, 65, 68, 69, 75, 82, 84, 85, 86, 91, 97, 132, 147, 188, 213, 238, 248, 252, 254, 255, 257, 261, 262, 268, 277, 281, 282, 283, 299, 309, 326, 340, 341, 345, 355, 356, 357, 363, 373], "annot": [11, 132, 188], "postiiv": [11, 132, 188], "shown": [11, 71, 132, 188, 264, 343], "note": [11, 15, 25, 41, 50, 73, 91, 105, 121, 132, 135, 147, 188, 193, 213, 229, 238, 266, 299, 323, 326, 344, 363], "is_signific": [11, 132, 188], "indic": [11, 23, 25, 71, 75, 78, 82, 132, 143, 188, 201, 213, 264, 268, 272, 277, 326, 343, 345, 348], "wa": [11, 18, 20, 25, 59, 75, 81, 132, 139, 140, 188, 196, 198, 213, 248, 268, 276, 326, 345, 351], "signfiic": [11, 132, 188], "falst": [11, 132, 188], "after": [11, 20, 25, 39, 50, 119, 132, 140, 147, 188, 198, 213, 227, 238, 326], "timeseri": [11, 59, 65, 132, 188, 248, 257], "veric": [11, 132, 188], "drop": [11, 132, 188], "locat": [11, 15, 18, 25, 40, 59, 67, 68, 71, 77, 78, 85, 87, 88, 96, 107, 120, 132, 135, 139, 188, 193, 196, 213, 228, 248, 260, 261, 264, 271, 272, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 307, 325, 326, 339, 340, 343, 347, 348, 356, 359, 371], "send": [12, 20, 133, 140, 189, 198, 328], "window": [12, 15, 17, 59, 60, 63, 64, 75, 133, 135, 138, 189, 193, 195, 248, 249, 254, 255, 268, 345], "unusu": [12, 133, 189], "reorder": [12, 133, 189], "disk": [15, 17, 18, 135, 138, 139, 193, 195, 196], "forc": [15, 18, 59, 69, 94, 135, 139, 193, 196, 248, 262, 305, 341, 369], "subroutin": [15, 16, 18, 23, 135, 136, 139, 143, 193, 194, 196, 201], "hash": [15, 16, 135, 136, 193, 194], "sensit": [15, 25, 68, 70, 97, 107, 135, 193, 213, 261, 263, 309, 325, 326, 340, 342, 373], "docstr": [15, 36, 116, 135, 193, 224], "recurs": [15, 19, 103, 107, 135, 193, 197, 321, 325], "fair": [15, 135, 193], "overhead": [15, 135, 193], "allow": [15, 18, 23, 25, 40, 62, 68, 76, 94, 107, 120, 135, 139, 143, 193, 196, 201, 213, 228, 252, 261, 269, 305, 325, 326, 340, 369], "possibl": [15, 18, 23, 25, 73, 76, 101, 108, 135, 139, 143, 193, 196, 201, 213, 266, 269, 319, 326, 328, 338, 344], "mutual": [15, 23, 135, 143, 193, 201], "exclud": [15, 25, 59, 68, 96, 135, 193, 213, 248, 261, 307, 326, 340, 371], "alreadi": [15, 84, 89, 135, 193, 281, 295, 355, 360], "visit": [15, 135, 193], "compat": [15, 17, 25, 59, 68, 93, 135, 138, 193, 195, 213, 248, 261, 304, 326, 340, 368], "grace": [15, 135, 193], "potenti": [15, 50, 71, 135, 147, 193, 238, 264, 343], "recurr": [15, 135, 193], "tricki": [15, 16, 135, 136, 193, 194], "present": [15, 20, 43, 59, 64, 105, 123, 135, 140, 193, 198, 231, 248, 255, 323], "therefor": [15, 25, 59, 135, 193, 213, 248, 326], "mani": [15, 17, 20, 25, 59, 135, 138, 140, 193, 195, 198, 213, 248, 326], "intermedi": [15, 18, 135, 139, 193, 196], "far": [15, 18, 25, 94, 135, 139, 193, 196, 213, 305, 326, 369], "encount": [15, 135, 193], "we": [15, 16, 18, 20, 23, 25, 50, 59, 60, 64, 68, 91, 94, 95, 135, 136, 139, 140, 143, 147, 193, 194, 196, 198, 201, 213, 238, 248, 249, 255, 261, 299, 305, 306, 326, 340, 363, 369, 370], "cannot": [15, 16, 19, 20, 59, 135, 136, 140, 193, 194, 197, 198, 248], "worth": [15, 135, 193], "topologi": [15, 135, 193], "least": [15, 23, 25, 68, 82, 84, 135, 143, 193, 201, 213, 261, 277, 281, 326, 340, 355], "suffic": [15, 135, 193], "librari": [15, 18, 20, 23, 25, 35, 41, 115, 121, 135, 139, 140, 143, 193, 196, 198, 201, 213, 223, 229, 326], "grab": [15, 25, 135, 193, 213, 326], "combin": [15, 41, 68, 121, 135, 193, 229, 261, 340], "datastructur": [15, 40, 120, 135, 193, 228], "repres": [15, 17, 25, 36, 40, 65, 78, 88, 104, 107, 116, 120, 135, 138, 193, 195, 213, 224, 228, 257, 272, 286, 287, 288, 289, 290, 291, 292, 293, 294, 322, 325, 326, 348], "profil": [15, 135, 193], "obtain": [15, 25, 103, 135, 193, 213, 321, 326], "assum": [15, 25, 59, 68, 75, 91, 97, 135, 193, 213, 248, 261, 268, 299, 309, 326, 340, 345, 363, 373], "decor": [15, 16, 19, 134, 135, 136, 193, 194, 197], "wrap": [15, 23, 24, 25, 40, 41, 59, 68, 82, 104, 120, 121, 135, 143, 144, 193, 201, 202, 213, 228, 229, 248, 261, 277, 322, 326, 340], "modifi": [15, 18, 19, 25, 70, 97, 135, 139, 193, 196, 197, 213, 263, 309, 326, 342, 373], "safe": [15, 16, 17, 19, 20, 23, 68, 88, 101, 108, 135, 136, 138, 140, 143, 193, 194, 195, 197, 198, 201, 261, 286, 287, 288, 289, 290, 291, 292, 293, 294, 319, 328, 340], "strip": [15, 19, 59, 135, 193, 197, 248], "assumpt": [15, 25, 97, 135, 193, 213, 309, 326, 373], "detect": [15, 16, 23, 59, 135, 136, 143, 193, 194, 201, 248], "effect": [15, 25, 59, 107, 135, 193, 213, 248, 325, 326, 328], "behavior": [15, 16, 25, 59, 81, 135, 136, 193, 194, 213, 248, 276, 326, 351], "variabl": [15, 20, 23, 25, 40, 49, 82, 98, 107, 120, 135, 140, 143, 146, 193, 198, 201, 213, 228, 237, 277, 310, 325, 326, 374], "mutabl": [15, 16, 20, 25, 135, 136, 140, 193, 194, 198, 213, 326], "scope": [15, 20, 135, 140, 193, 198], "close": [15, 16, 20, 23, 24, 25, 59, 64, 135, 136, 140, 143, 144, 193, 194, 198, 201, 202, 213, 248, 255, 326], "muse": [15, 135, 193], "fail": [15, 18, 20, 25, 91, 94, 135, 139, 140, 193, 196, 198, 213, 299, 305, 326, 363, 369], "extract": [15, 23, 59, 64, 68, 75, 103, 135, 143, 193, 201, 248, 255, 261, 268, 321, 340, 345], "contain": [15, 16, 17, 18, 19, 23, 25, 36, 41, 43, 59, 68, 69, 73, 81, 82, 91, 104, 116, 121, 123, 135, 136, 138, 139, 143, 193, 194, 195, 196, 197, 201, 213, 224, 229, 231, 248, 261, 262, 266, 276, 277, 299, 322, 326, 340, 341, 344, 351, 363], "undecor": [15, 135, 193], "construct": [15, 24, 40, 84, 120, 135, 144, 193, 202, 228, 281, 355], "obj": [15, 89, 107, 135, 193, 295, 325, 360], "identifi": [15, 59, 71, 135, 193, 248, 264, 343], "correspond": [15, 88, 135, 193, 286, 287, 288, 289, 290, 291, 292, 293, 294], "particular": [15, 135, 193], "want": [15, 25, 36, 59, 64, 89, 91, 116, 135, 193, 213, 224, 248, 255, 295, 299, 326, 360, 363], "abl": [15, 135, 193], "dist": [15, 135, 193], "underli": [15, 25, 36, 59, 68, 75, 116, 135, 193, 213, 224, 248, 261, 268, 326, 340, 345], "pickl": [15, 20, 135, 140, 193, 198], "check": [15, 16, 17, 23, 25, 50, 59, 88, 93, 104, 107, 135, 136, 138, 143, 147, 193, 194, 195, 201, 213, 238, 248, 286, 287, 288, 289, 290, 291, 292, 293, 294, 304, 322, 325, 326, 368], "meaning": [15, 135, 193], "almost": [15, 135, 193], "imposs": [15, 135, 193], "becom": [15, 25, 135, 193, 213, 326], "invalid": [15, 135, 193], "quit": [15, 16, 43, 59, 69, 123, 135, 136, 193, 194, 231, 248, 262, 341], "ll": [15, 25, 135, 193, 213, 326], "argspec": [15, 19, 135, 193, 197], "valid": [15, 17, 59, 82, 88, 89, 135, 138, 193, 195, 248, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 328, 360], "significantli": [15, 97, 135, 193, 309, 373], "sig": [15, 17, 19, 135, 138, 193, 195, 197], "repr": [15, 135, 193], "compress": [15, 135, 193], "base64encod": [15, 135, 193], "truncat": [15, 24, 25, 59, 107, 135, 144, 193, 202, 213, 248, 325, 326], "signatur": [15, 16, 17, 19, 82, 135, 136, 138, 193, 194, 195, 197, 277], "human": [15, 135, 193], "readabl": [15, 135, 193], "simpli": [15, 23, 40, 97, 120, 135, 143, 193, 201, 228, 309, 373], "most": [15, 17, 25, 36, 41, 59, 84, 91, 95, 116, 121, 135, 138, 193, 195, 213, 224, 229, 248, 281, 299, 306, 326, 355, 363, 370], "d": [15, 23, 25, 41, 42, 43, 46, 49, 84, 89, 90, 91, 103, 107, 121, 122, 123, 126, 135, 143, 146, 193, 201, 213, 229, 230, 231, 234, 237, 281, 295, 297, 299, 321, 325, 326, 355, 360, 363], "still": [15, 16, 18, 135, 136, 139, 193, 194, 196], "need": [15, 18, 23, 25, 39, 43, 59, 64, 84, 88, 119, 123, 135, 139, 143, 193, 196, 201, 213, 227, 231, 248, 255, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326, 355], "verif": [15, 135, 193], "No": [15, 17, 25, 59, 75, 97, 135, 138, 193, 195, 213, 248, 268, 309, 326, 345, 373], "4096": [15, 135, 193], "charact": [15, 17, 104, 135, 138, 193, 195, 322], "path": [15, 18, 103, 107, 135, 139, 193, 196, 321, 325], "255": [15, 17, 135, 138, 193, 195], "260": [15, 135, 193], "total": [15, 25, 104, 135, 193, 213, 322, 326], "pathlen": [15, 135, 193], "ascii": [15, 17, 135, 138, 193, 195], "31": [15, 24, 25, 73, 89, 135, 144, 193, 202, 213, 266, 295, 326, 328, 344, 360], "easiest": [15, 135, 193], "wai": [15, 16, 19, 20, 25, 69, 91, 107, 135, 136, 140, 193, 194, 197, 198, 213, 262, 299, 325, 326, 341, 363], "problemat": [15, 135, 193], "input": [15, 23, 25, 50, 59, 64, 68, 71, 82, 87, 105, 135, 143, 147, 193, 201, 213, 238, 248, 255, 261, 264, 277, 285, 323, 326, 340, 343, 359], "64": [15, 24, 73, 89, 135, 144, 193, 202, 266, 295, 328, 344, 360], "follow": [15, 18, 23, 25, 59, 85, 97, 135, 139, 143, 193, 196, 201, 213, 248, 282, 309, 326, 356, 373], "support": [15, 25, 40, 41, 59, 88, 120, 121, 135, 193, 213, 228, 229, 248, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326], "ast": [15, 86, 135, 193, 283, 357], "literal_ev": [15, 135, 193], "node_or_str": [15, 135, 193], "serial": [15, 135, 193], "permit": [15, 17, 88, 135, 138, 193, 195, 286, 287, 288, 289, 290, 291, 292, 293, 294], "paramtet": [15, 135, 193], "json": [15, 135, 193], "uniqu": [15, 19, 25, 78, 107, 135, 193, 197, 213, 272, 325, 326, 348], "recov": [15, 69, 135, 193, 262, 341], "becaus": [15, 25, 59, 64, 135, 193, 213, 248, 255, 326], "represent": [15, 24, 25, 69, 135, 144, 193, 202, 213, 262, 326, 341], "circumv": [15, 135, 193], "take": [15, 20, 23, 25, 59, 60, 64, 82, 97, 101, 108, 135, 140, 143, 193, 198, 201, 213, 248, 249, 255, 277, 309, 319, 326, 373], "longer": [15, 135, 193], "work": [15, 18, 20, 23, 25, 43, 59, 84, 85, 88, 91, 94, 97, 105, 123, 135, 139, 140, 143, 193, 196, 198, 201, 213, 231, 248, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 305, 309, 323, 326, 355, 356, 363, 369, 373], "attempt": [15, 20, 23, 25, 69, 107, 135, 140, 143, 193, 198, 201, 213, 262, 325, 326, 341], "experiment": [15, 18, 64, 135, 139, 193, 196, 255], "defaut": [15, 135, 193], "base64": [15, 135, 193], "kei": [15, 25, 107, 135, 193, 213, 325, 326], "entri": [15, 18, 23, 24, 25, 59, 82, 97, 135, 139, 143, 144, 193, 196, 201, 202, 213, 248, 277, 309, 326, 373], "invers": [15, 23, 25, 59, 69, 73, 75, 88, 101, 108, 135, 143, 193, 201, 213, 248, 262, 266, 268, 286, 287, 288, 289, 290, 291, 292, 293, 294, 319, 326, 341, 344, 345], "eperiment": [15, 135, 193], "cache_root": [15, 135, 193], "directori": [15, 107, 135, 193, 325], "e": [15, 18, 23, 25, 36, 41, 49, 59, 69, 82, 116, 121, 135, 139, 143, 146, 193, 196, 201, 213, 224, 229, 237, 248, 262, 277, 326, 341], "npy": [15, 135, 193], "mat": [15, 36, 103, 107, 116, 135, 193, 224, 321, 325], "etc": [15, 25, 59, 82, 98, 135, 193, 213, 248, 277, 310, 326, 374], "fn": [15, 135, 193], "info": [15, 59, 60, 90, 135, 193, 248, 249, 297], "absolut": [15, 23, 25, 62, 68, 75, 82, 93, 107, 135, 143, 193, 201, 213, 252, 261, 268, 277, 304, 325, 326, 340, 345, 368], "int8": [15, 135, 193], "128": [15, 135, 193], "127": [15, 135, 193], "int16": [15, 135, 193], "32768": [15, 135, 193], "32767": [15, 135, 193], "int32": [15, 40, 67, 76, 86, 120, 135, 193, 228, 260, 269, 283, 339, 357], "2147483648": [15, 135, 193], "2147483647": [15, 135, 193], "int64": [15, 25, 135, 193, 213, 326], "9223372036854775808": [15, 135, 193], "9223372036854775807": [15, 135, 193], "uint8": [15, 25, 135, 193, 213, 326], "unsign": [15, 25, 135, 193, 213, 326], "uint16": [15, 135, 193], "65535": [15, 135, 193], "uint32": [15, 135, 193], "4294967295": [15, 135, 193], "uint64": [15, 135, 193], "18446744073709551615": [15, 135, 193], "float16": [15, 135, 193], "half": [15, 25, 59, 63, 81, 135, 193, 213, 248, 254, 276, 326, 351], "sign": [15, 25, 40, 59, 64, 82, 120, 135, 193, 213, 228, 248, 255, 277, 326], "expon": [15, 24, 25, 73, 89, 104, 135, 144, 193, 202, 213, 266, 295, 322, 326, 344, 360], "mantissa": [15, 135, 193], "23": [15, 24, 25, 60, 73, 89, 101, 108, 135, 144, 193, 202, 213, 249, 266, 295, 319, 326, 328, 344, 360], "float64": [15, 23, 59, 82, 93, 101, 108, 135, 143, 193, 201, 248, 277, 304, 319, 368], "doubl": [15, 25, 36, 61, 116, 135, 193, 213, 224, 250, 326], "52": [15, 24, 73, 81, 89, 135, 144, 193, 202, 266, 276, 295, 344, 351, 360], "complex64": [15, 59, 76, 135, 193, 248, 269], "32": [15, 24, 25, 73, 89, 135, 144, 193, 202, 213, 266, 295, 326, 344, 360], "complex128": [15, 71, 135, 193, 264, 343], "archiv": [15, 25, 59, 135, 193, 213, 248, 326], "cache_loc": [15, 135, 193], "write_back": [15, 135, 193], "skip_fast": [15, 135, 193], "verbos": [15, 18, 19, 20, 23, 59, 88, 89, 93, 94, 97, 135, 139, 140, 143, 193, 196, 197, 198, 201, 248, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 304, 305, 309, 360, 368, 369, 373], "allow_mutable_bind": [15, 135, 193], "cache_identifi": [15, 18, 135, 139, 193, 196], "__neurotools_cache__": [15, 18, 135, 139, 193, 196], "curri": [15, 36, 41, 116, 121, 135, 193, 224, 229], "pattern": [15, 25, 135, 193, 213, 326], "here": [15, 20, 25, 35, 41, 64, 81, 87, 115, 121, 135, 140, 193, 198, 213, 223, 229, 255, 276, 285, 326, 351, 359], "decotr": [15, 135, 193], "In": [15, 16, 18, 20, 23, 25, 59, 60, 73, 135, 136, 139, 140, 143, 193, 194, 196, 198, 201, 213, 248, 249, 266, 326, 344], "hierarch": [15, 135, 193], "filesystem": [15, 17, 18, 107, 135, 138, 139, 193, 195, 196, 325], "rsync": [15, 18, 135, 139, 193, 196], "asynchron": [15, 135, 193], "serious": [15, 135, 193], "slow": [15, 18, 101, 108, 135, 139, 193, 196, 319], "speedup": [15, 135, 193], "due": [15, 25, 59, 135, 193, 213, 248, 326], "io": [15, 135, 193], "savemat": [15, 135, 193], "loadmat": [15, 135, 193], "unfortun": [15, 135, 193], "alter": [15, 25, 135, 193, 213, 326], "retriev": [15, 103, 135, 193, 321], "Will": [15, 135, 193], "hdf5": [15, 103, 107, 135, 193, 321, 325], "Not": [15, 17, 18, 69, 88, 135, 138, 139, 193, 195, 196, 262, 286, 287, 288, 289, 290, 291, 292, 293, 294, 341], "implement": [15, 17, 18, 25, 40, 50, 59, 60, 61, 63, 88, 104, 120, 135, 138, 139, 147, 193, 195, 196, 213, 228, 238, 248, 249, 250, 254, 286, 287, 288, 289, 290, 291, 292, 293, 294, 322, 326], "futur": [15, 135, 193], "storang": [15, 135, 193], "new": [15, 18, 23, 25, 36, 40, 41, 59, 88, 91, 103, 116, 120, 121, 135, 139, 143, 193, 196, 201, 213, 224, 228, 229, 248, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 321, 326, 363], "previous": [15, 135, 193], "read": [15, 107, 135, 193, 325], "too": [15, 25, 64, 93, 135, 193, 213, 255, 304, 326, 368], "long": [15, 16, 17, 25, 59, 91, 135, 136, 138, 193, 194, 195, 213, 248, 299, 326, 363], "print": [15, 18, 19, 20, 23, 25, 40, 82, 91, 93, 94, 103, 106, 107, 120, 135, 139, 140, 143, 193, 196, 197, 198, 201, 213, 228, 277, 299, 304, 305, 321, 324, 325, 326, 363, 368, 369], "detaild": [15, 135, 193], "log": [15, 20, 24, 25, 41, 69, 73, 83, 86, 88, 89, 91, 96, 98, 101, 108, 121, 135, 140, 144, 193, 198, 202, 213, 229, 262, 266, 280, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 307, 310, 319, 326, 341, 344, 354, 357, 360, 363, 371, 374], "Such": [15, 25, 135, 193, 213, 326], "lead": [15, 18, 23, 25, 59, 135, 139, 143, 193, 196, 201, 213, 248, 326], "subdirectori": [15, 103, 135, 193, 321], "todo": [15, 19, 46, 59, 69, 70, 81, 84, 98, 104, 107, 126, 135, 193, 197, 234, 248, 262, 263, 276, 281, 310, 322, 325, 341, 342, 351, 355, 374], "cacher": [15, 18, 135, 139, 193, 196], "fast_to_slow": [15, 135, 193], "term": [15, 24, 25, 76, 80, 89, 98, 107, 135, 144, 193, 202, 213, 269, 275, 295, 310, 325, 326, 350, 360, 374], "hierarchi": [15, 18, 135, 139, 193, 196], "slower": [15, 18, 23, 94, 135, 139, 143, 193, 196, 201, 305, 369], "fallback": [15, 135, 193], "main": [15, 18, 135, 139, 193, 196], "automat": [15, 16, 18, 23, 40, 59, 82, 120, 135, 136, 139, 143, 193, 194, 196, 201, 228, 248, 277], "newli": [15, 20, 135, 140, 193, 198], "detail": [15, 20, 25, 59, 82, 98, 135, 140, 193, 198, 213, 248, 277, 310, 326, 374], "iform": [15, 135, 193], "out": [15, 20, 23, 25, 40, 50, 59, 64, 82, 104, 120, 135, 140, 143, 147, 193, 198, 201, 213, 228, 238, 248, 255, 277, 322, 326], "manipul": [15, 135, 193], "unsaf": [15, 16, 135, 136, 193, 194], "namespac": [15, 16, 135, 136, 193, 194], "bind": [15, 16, 41, 121, 135, 136, 193, 194, 229], "exampl": [15, 18, 25, 36, 40, 41, 59, 73, 75, 82, 85, 88, 91, 92, 93, 95, 98, 107, 116, 120, 121, 135, 139, 193, 196, 213, 224, 228, 229, 248, 266, 268, 277, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 304, 306, 310, 325, 326, 344, 345, 356, 363, 364, 368, 370, 374], "user": [15, 18, 20, 23, 25, 82, 90, 105, 135, 139, 140, 143, 193, 196, 198, 201, 213, 277, 297, 323, 326, 328], "those": [15, 16, 25, 59, 68, 135, 136, 193, 194, 213, 248, 261, 326, 340], "consequenti": [15, 135, 193], "tell": [15, 135, 193], "old": [15, 135, 193], "sub": [15, 25, 59, 135, 193, 213, 248, 326], "folder": [15, 135, 193], "deal": [16, 136, 194], "problem": [16, 20, 23, 25, 136, 140, 143, 194, 198, 201, 213, 326], "late": [16, 136, 194], "supris": [16, 136, 194], "state": [16, 20, 25, 49, 59, 86, 88, 90, 91, 136, 140, 146, 194, 198, 213, 237, 248, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 299, 326, 357, 363], "surpris": [16, 136, 194], "extern": [16, 136, 194], "run": [16, 18, 20, 25, 39, 82, 107, 119, 136, 139, 140, 194, 196, 198, 213, 227, 277, 325, 326], "extren": [16, 136, 194], "guarante": [16, 25, 136, 194, 213, 326], "befor": [16, 18, 25, 59, 64, 69, 82, 107, 136, 139, 194, 196, 213, 248, 255, 262, 277, 325, 326, 341], "trust": [16, 136, 194], "safeti": [16, 136, 194], "hopefulli": [16, 18, 136, 139, 194, 196], "likel": [16, 136, 194], "troubl": [16, 136, 194], "immut": [16, 136, 194], "must": [16, 17, 18, 25, 59, 67, 68, 77, 86, 88, 91, 92, 105, 136, 138, 139, 194, 195, 196, 213, 248, 260, 261, 271, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 323, 326, 339, 340, 347, 357, 363, 364], "compos": [16, 30, 35, 36, 110, 115, 116, 136, 194, 218, 223, 224], "its": [16, 18, 20, 23, 25, 36, 59, 65, 69, 75, 81, 116, 136, 139, 140, 143, 194, 196, 198, 201, 213, 224, 248, 257, 262, 268, 276, 326, 341, 345, 351], "element": [16, 23, 24, 25, 36, 41, 73, 82, 89, 90, 116, 121, 136, 143, 144, 194, 201, 202, 213, 224, 229, 266, 277, 295, 297, 326, 344, 360], "probabl": [16, 23, 25, 28, 29, 40, 41, 49, 69, 85, 86, 87, 88, 91, 92, 95, 97, 101, 107, 108, 120, 121, 136, 143, 146, 194, 201, 213, 216, 217, 228, 229, 237, 262, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 300, 306, 309, 319, 325, 326, 341, 356, 357, 359, 363, 364, 370, 373], "unlikli": [16, 136, 194], "thei": [16, 18, 20, 25, 43, 50, 84, 107, 123, 136, 139, 140, 147, 194, 196, 198, 213, 231, 238, 281, 325, 326, 355], "obvious": [16, 136, 194], "latter": [16, 136, 194], "practic": [16, 25, 59, 136, 194, 213, 248, 326], "ok": [16, 17, 18, 97, 136, 138, 139, 194, 195, 196, 309, 373], "riski": [16, 18, 20, 136, 139, 140, 194, 196, 198], "formal": [16, 136, 194], "sens": [16, 84, 136, 194, 281, 355], "design": [16, 25, 59, 89, 136, 194, 213, 248, 295, 326, 360], "other": [16, 18, 20, 25, 40, 41, 59, 73, 76, 81, 90, 120, 121, 136, 139, 140, 194, 196, 198, 213, 228, 229, 248, 266, 269, 276, 297, 326, 344, 351], "incorpor": [16, 136, 194], "themselv": [16, 136, 194], "invok": [16, 136, 194], "theori": [16, 23, 25, 92, 136, 143, 194, 201, 213, 300, 326, 364], "could": [16, 18, 25, 40, 69, 120, 136, 139, 194, 196, 213, 228, 262, 326, 341], "snapshot": [16, 136, 194], "valueerror": [16, 19, 23, 25, 82, 88, 136, 143, 194, 197, 201, 213, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326], "resembl": [16, 25, 136, 194, 213, 326], "callabl": [16, 107, 136, 194, 325, 328, 338], "objet": [16, 136, 194], "determin": [17, 23, 25, 75, 81, 90, 107, 138, 143, 195, 201, 213, 268, 276, 297, 325, 326, 345, 351], "hashabl": [17, 19, 92, 138, 195, 197, 300, 364], "consist": [17, 25, 64, 138, 195, 213, 255, 326], "translat": [17, 25, 138, 195, 213, 326], "convenct": [17, 138, 195], "modern": [17, 138, 195], "filnam": [17, 138, 195], "shorter": [17, 59, 96, 138, 195, 248, 307, 371], "special": [17, 25, 138, 195, 213, 326], "escap": [17, 138, 195], "sequenc": [17, 25, 28, 29, 30, 37, 59, 84, 85, 91, 110, 117, 138, 163, 170, 195, 213, 216, 217, 218, 225, 248, 281, 282, 299, 326, 355, 356, 363], "unicod": [17, 138, 195], "broadli": [17, 138, 195], "lenient": [17, 138, 195], "pythoon": [17, 138, 195], "char": [17, 138, 195], "trigger": [17, 59, 64, 84, 138, 195, 248, 255, 281, 355], "outright": [17, 138, 195], "static": [18, 139, 196], "initi": [18, 20, 25, 59, 66, 81, 89, 90, 91, 94, 98, 139, 140, 196, 198, 213, 248, 258, 276, 295, 297, 299, 305, 310, 326, 351, 360, 363, 369, 374], "neurotools_cach": [18, 139, 196], "were": [18, 19, 20, 25, 59, 139, 140, 196, 197, 198, 213, 248, 326], "written": [18, 84, 95, 139, 196, 281, 306, 355, 370], "framework": [18, 139, 196], "oscar": [18, 139, 196], "cluster": [18, 139, 196], "brown": [18, 139, 196], "univers": [18, 25, 139, 196, 213, 326], "yet": [18, 84, 88, 139, 196, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 355], "hard": [18, 39, 119, 139, 196, 227], "delet": [18, 139, 196], "ramdisk": [18, 139, 196], "WITH": [18, 139, 196], "caution": [18, 64, 139, 196, 255], "rm": [18, 82, 139, 196, 277], "rf": [18, 139, 196], "entir": [18, 68, 139, 196, 261, 340], "ramdisk_loc": [18, 139, 196], "extrem": [18, 25, 59, 82, 139, 196, 213, 248, 277, 326], "danger": [18, 139, 196], "disabl": [18, 139, 196], "notimplementederror": [18, 139, 196], "ssd": [18, 139, 196], "drive": [18, 66, 139, 196, 258], "level2_loc": [18, 139, 196], "usav": [18, 139, 196], "override_ramdisk_loc": [18, 139, 196], "500gb": [18, 139, 196], "debian": [18, 139, 196], "linux": [18, 139, 196], "ram": [18, 63, 107, 139, 196, 254, 325], "inter": [18, 139, 196], "commun": [18, 139, 196], "metaphor": [18, 139, 196], "consid": [18, 25, 50, 80, 139, 147, 196, 213, 238, 275, 326, 350], "requir": [18, 19, 25, 64, 105, 139, 196, 197, 213, 255, 323, 326], "sudo": [18, 139, 196], "privileg": [18, 139, 196], "execut": [18, 40, 59, 120, 139, 196, 228, 248, 328], "jupyt": [18, 139, 196], "ipython": [18, 105, 139, 196, 323], "notebook": [18, 81, 105, 139, 196, 276, 323, 351], "insid": [18, 139, 196], "browser": [18, 139, 196], "hand": [18, 20, 23, 25, 139, 140, 143, 196, 198, 201, 213, 326], "configur": [18, 82, 107, 139, 196, 277, 325], "mediat": [18, 139, 196], "onto": [18, 59, 139, 196, 248], "larg": [18, 25, 59, 87, 91, 97, 139, 196, 213, 248, 285, 299, 309, 326, 359, 363, 373], "solut": [18, 23, 25, 50, 139, 143, 147, 196, 201, 213, 238, 326], "depric": [18, 107, 139, 196, 325], "spawn": [18, 139, 196], "synchron": [18, 139, 196], "reason": [18, 20, 25, 60, 63, 97, 139, 140, 196, 198, 213, 249, 254, 309, 326, 373], "mi": [18, 139, 196], "loss": [18, 139, 196], "sort": [18, 25, 97, 139, 196, 213, 309, 326, 373], "lazi": [18, 139, 196], "protocol": [18, 139, 196], "level1": [18, 139, 196], "home": [18, 139, 196], "mer49": [18, 139, 196], "neurotools_ramdisk": [18, 139, 196], "level2": [18, 139, 196], "level3": [18, 139, 196], "miss": [18, 20, 25, 30, 31, 37, 39, 45, 59, 68, 71, 85, 107, 110, 111, 117, 119, 125, 139, 140, 196, 198, 213, 218, 219, 225, 227, 233, 248, 261, 264, 282, 325, 326, 340, 343, 356], "repopul": [18, 139, 196], "might": [18, 20, 40, 92, 120, 139, 140, 196, 198, 228, 300, 364], "includ": [18, 19, 25, 59, 67, 82, 139, 196, 197, 213, 248, 260, 277, 326, 339], "local": [18, 59, 65, 67, 68, 71, 73, 75, 85, 91, 105, 139, 196, 248, 257, 260, 261, 264, 266, 268, 282, 299, 323, 339, 340, 343, 344, 345, 356, 363], "life": [18, 139, 196], "frequent": [18, 25, 139, 196, 213, 326], "hdd": [18, 139, 196], "larger": [18, 25, 59, 68, 69, 75, 97, 139, 196, 213, 248, 261, 262, 268, 309, 326, 340, 341, 345, 373], "dataset": [18, 45, 59, 82, 125, 139, 196, 233, 248, 277], "network": [18, 139, 196], "databas": [18, 139, 196], "memori": [18, 36, 39, 40, 116, 119, 120, 139, 196, 224, 227, 228], "unsafe_disk_cach": [18, 139, 196], "patch": [18, 139, 196], "replac": [18, 25, 59, 107, 139, 196, 213, 248, 325, 326], "persist": [18, 139, 196], "provid": [18, 19, 20, 24, 25, 59, 68, 75, 80, 82, 85, 91, 107, 139, 140, 144, 196, 197, 198, 202, 213, 248, 261, 268, 275, 277, 282, 299, 325, 326, 340, 345, 350, 356, 363], "bug": [18, 94, 139, 196, 305, 369], "wors": [18, 139, 196], "By": [18, 25, 139, 196, 213, 326], "excplitli": [18, 139, 196], "enforc": [18, 139, 196], "original": [18, 139, 196], "truccolo": [18, 97, 139, 196, 309, 373], "lab": [18, 139, 196], "myhost": [18, 139, 196], "o": [18, 25, 91, 139, 196, 213, 299, 326, 363], "unam": [18, 139, 196], "moonbas": [18, 139, 196], "level1_loc": [18, 139, 196], "media": [18, 139, 196], "neurotools_level1": [18, 139, 196], "ssd_1": [18, 139, 196], "mrule": [18, 139, 196], "level3_loc": [18, 139, 196], "ldisk_1": [18, 139, 196], "elif": [18, 139, 196], "basecamp": [18, 139, 196], "robotfortress": [18, 139, 196], "petra": [18, 139, 196], "script": [18, 139, 196], "robust": [19, 197], "pythonhost": [19, 197], "liber": [19, 197], "strict": [19, 197], "primit": [19, 197], "veri": [19, 25, 43, 59, 68, 89, 93, 123, 197, 213, 231, 248, 261, 295, 304, 326, 340, 360, 368], "chracter": [19, 197], "za": [19, 197], "z0": [19, 197], "throw": [19, 23, 25, 64, 88, 143, 197, 201, 213, 255, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326], "timer": [19, 59, 197, 248], "runtim": [19, 197], "purg": [19, 197], "kind": [19, 85, 197, 282, 356], "__wrapped__": [19, 197], "leavefre": [20, 140, 198], "show_progress": [20, 94, 140, 198, 305, 369], "implmenet": [20, 140, 198], "multiprocess": [20, 140, 198], "evaul": [20, 69, 140, 198, 262, 341], "core": [20, 40, 120, 140, 198, 228], "open": [20, 25, 140, 198, 213, 326], "handel": [20, 59, 69, 140, 198, 248, 262, 341], "correctli": [20, 59, 140, 198, 248], "fingerprint": [20, 140, 198], "recompil": [20, 140, 198], "compil": [20, 41, 121, 140, 198, 229], "dictionari": [20, 25, 78, 97, 103, 107, 140, 198, 213, 272, 309, 321, 325, 326, 348, 373], "__indirect_eval_fallback_cach": [20, 140, 198], "worker": [20, 140, 198], "pool": [20, 140, 198], "usual": [20, 140, 198], "yield": [20, 25, 82, 86, 140, 198, 213, 277, 283, 326, 357], "undefin": [20, 25, 40, 59, 120, 140, 198, 213, 228, 248, 326], "rebuild": [20, 140, 198], "lambda": [20, 25, 36, 43, 98, 116, 123, 140, 198, 213, 224, 231, 310, 326, 374], "express": [20, 25, 40, 107, 120, 140, 198, 213, 228, 325, 326], "them": [20, 25, 59, 107, 140, 198, 213, 248, 325, 326], "ahead": [20, 140, 198], "force_cach": [20, 140, 198], "force_fallback": [20, 140, 198], "allow_fallback": [20, 140, 198], "defind": [20, 140, 198], "happen": [20, 25, 94, 140, 198, 213, 305, 326, 369], "unabl": [20, 140, 198], "initiatl": [20, 140, 198], "There": [20, 140, 198], "workaround": [20, 140, 198], "your": [20, 36, 89, 116, 140, 198, 224, 295, 360], "funcion": [20, 140, 198], "launch": [20, 140, 198], "prevent": [20, 59, 77, 140, 198, 248, 271, 347], "thread": [20, 39, 40, 62, 70, 119, 120, 140, 198, 227, 228, 252, 263, 328, 342], "understand": [20, 25, 140, 198, 213, 326], "ensur": [20, 23, 64, 93, 107, 140, 143, 198, 201, 255, 304, 325, 368], "pointer": [20, 140, 198], "workspac": [20, 140, 198], "Then": [20, 25, 84, 140, 198, 213, 281, 326, 355], "gain": [20, 91, 140, 198, 299, 363], "inheret": [20, 140, 198], "context": [20, 39, 119, 140, 198, 227], "halt": [20, 140, 198], "stuck": [20, 140, 198], "hang": [20, 140, 198], "On": [20, 25, 140, 198, 213, 326], "anyth": [20, 90, 140, 198, 297, 328], "violent": [20, 140, 198], "free": [20, 94, 140, 198, 305, 369], "minu": [20, 25, 83, 140, 198, 213, 280, 326, 354], "restart": [20, 25, 140, 198, 213, 326], "realli": [20, 84, 140, 198, 281, 355], "just": [20, 25, 40, 80, 105, 107, 120, 140, 198, 213, 228, 275, 323, 325, 326, 350], "propag": [20, 68, 140, 198, 261, 340], "shape": [22, 23, 24, 25, 59, 61, 69, 73, 75, 76, 82, 84, 87, 89, 91, 98, 107, 142, 143, 144, 200, 201, 202, 213, 248, 250, 262, 266, 268, 269, 277, 281, 285, 295, 299, 310, 325, 326, 341, 344, 345, 355, 359, 360, 363, 374], "similar": [23, 25, 50, 73, 75, 106, 143, 147, 201, 213, 238, 266, 268, 324, 326, 344, 345], "diag": [23, 143, 201], "matric": [23, 24, 40, 84, 120, 143, 144, 201, 202, 228, 281, 355], "triangl": [23, 78, 143, 201, 272, 348], "nxn": [23, 24, 88, 143, 144, 201, 202, 286, 287, 288, 289, 290, 291, 292, 293, 294], "diagon": [23, 24, 25, 82, 143, 144, 201, 202, 213, 277, 326], "offset": [23, 24, 59, 73, 82, 89, 98, 143, 144, 201, 202, 248, 266, 277, 295, 310, 344, 360, 374], "triu_indeci": [23, 143, 201], "somewhat": [23, 41, 60, 121, 143, 201, 229, 249], "multidimension": [23, 59, 143, 201, 248], "ravel": [23, 107, 143, 201, 325], "reciproc": [23, 75, 88, 143, 201, 268, 286, 287, 288, 289, 290, 291, 292, 293, 294, 345], "finit": [23, 24, 59, 64, 88, 143, 144, 201, 202, 248, 255, 286, 287, 288, 289, 290, 291, 292, 293, 294], "06": [23, 88, 143, 201, 286, 287, 288, 289, 290, 291, 292, 293, 294], "verifi": [23, 25, 68, 91, 143, 201, 213, 261, 299, 326, 340, 363], "definit": [23, 25, 60, 88, 143, 201, 213, 249, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326], "expect": [23, 25, 50, 75, 83, 89, 91, 93, 143, 147, 201, 213, 238, 268, 280, 295, 299, 304, 326, 345, 354, 360, 363, 368], "maximum": [23, 25, 59, 76, 80, 81, 82, 91, 93, 94, 104, 143, 201, 213, 248, 269, 275, 276, 277, 299, 304, 305, 322, 326, 350, 351, 363, 368, 369], "transpos": [23, 25, 63, 64, 143, 201, 213, 254, 255, 326], "recondit": [23, 143, 201], "matirx": [23, 88, 143, 201, 286, 287, 288, 289, 290, 291, 292, 293, 294], "hermetian": [23, 143, 201], "redund": [23, 143, 201], "eigh": [23, 143, 201], "instead": [23, 25, 85, 143, 201, 213, 282, 326, 356], "eigenvalu": [23, 60, 63, 82, 143, 201, 249, 254, 277], "eigenvector": [23, 82, 143, 201, 277], "logarithm": [23, 25, 59, 62, 101, 108, 143, 201, 213, 248, 252, 319, 326], "solve_triangular": [23, 143, 201], "solv": [23, 24, 50, 73, 89, 143, 144, 147, 201, 202, 238, 266, 295, 344, 360], "quatrat": [23, 143, 201], "m1": [23, 75, 88, 143, 201, 268, 286, 287, 288, 289, 290, 291, 292, 293, 294, 345], "m2": [23, 88, 143, 201, 286, 287, 288, 289, 290, 291, 292, 293, 294], "wise": [23, 36, 41, 116, 121, 143, 201, 224, 229], "teo": [23, 143, 201], "pairwis": [23, 60, 63, 64, 76, 80, 84, 98, 143, 201, 249, 254, 255, 269, 275, 281, 310, 350, 355, 374], "mst": [23, 143, 201], "rank": [23, 25, 59, 143, 201, 213, 248, 326], "choleski": [23, 143, 201], "factor": [23, 59, 68, 69, 80, 85, 143, 201, 248, 261, 262, 275, 282, 340, 341, 350, 356], "possibli": [23, 143, 201], "recomput": [23, 143, 201], "q": [23, 25, 88, 92, 97, 101, 108, 143, 201, 213, 286, 287, 288, 289, 290, 291, 292, 293, 294, 300, 309, 319, 326, 364, 373], "qq": [23, 143, 201], "dot": [23, 30, 35, 36, 88, 110, 115, 116, 143, 201, 218, 223, 224, 286, 287, 288, 289, 290, 291, 292, 293, 294], "ch": [23, 25, 143, 201, 213, 326], "chol": [23, 143, 201], "xx": [23, 25, 143, 201, 213, 326], "outer": [23, 69, 143, 201, 262, 341], "pp": [23, 25, 71, 97, 143, 201, 213, 264, 309, 326, 343, 373], "cp": [23, 143, 201], "idenet": [23, 143, 201], "ey": [23, 143, 201], "11144513": [23, 143, 201], "cartesian": [23, 143, 201], "product": [23, 24, 25, 36, 60, 69, 73, 88, 116, 143, 144, 201, 202, 213, 224, 249, 262, 266, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326, 341, 344], "nit": [23, 143, 201], "algorithm": [23, 25, 59, 91, 94, 143, 201, 213, 248, 299, 305, 326, 363, 369], "higham": [23, 143, 201], "2000": [23, 50, 143, 147, 201, 238], "answer": [23, 25, 105, 143, 201, 213, 323, 326], "10940283": [23, 143, 201], "900749": [23, 143, 201], "relev": [23, 25, 143, 201, 213, 326], "intellectu": [23, 143, 201], "retain": [23, 59, 82, 143, 201, 248, 277], "sega": [23, 143, 201], "sai": [23, 143, 201], "1269140": [23, 143, 201], "semi": [23, 143, 201], "epsilon": [23, 143, 201], "rebonato": [23, 143, 201], "jackel": [23, 143, 201], "1999": [23, 25, 143, 201, 213, 326], "18542094": [23, 143, 201], "minimum": [23, 59, 68, 82, 88, 89, 143, 201, 248, 261, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 340, 360], "repair": [23, 88, 143, 201, 286, 287, 288, 289, 290, 291, 292, 293, 294], "invert": [23, 59, 88, 107, 143, 201, 248, 286, 287, 288, 289, 290, 291, 292, 293, 294, 325], "alias": [23, 69, 143, 201, 262, 341], "analogi": [23, 68, 71, 143, 201, 261, 264, 340, 343], "operatornam": [23, 143, 201], "lapack": [23, 143, 201], "dtrtri": [23, 143, 201], "www": [23, 25, 89, 143, 201, 213, 295, 326, 360], "netlib": [23, 143, 201], "explor": [23, 25, 143, 201, 213, 326], "da": [23, 143, 201], "dba": [23, 143, 201], "group__double_o_t_h_e_rcomputational_ga97c5ddb103f5f6bc2dc060886aaf2ffc": [23, 143, 201], "ga97c5ddb103f5f6bc2dc060886aaf2ffc": [23, 143, 201], "doc": [23, 143, 201], "symmetr": [23, 24, 25, 69, 73, 88, 143, 144, 201, 202, 213, 262, 266, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326, 341, 344], "j": [23, 25, 76, 84, 97, 143, 201, 213, 269, 281, 309, 326, 355, 373], "psd": [23, 143, 201], "linear": [23, 41, 50, 59, 75, 82, 84, 85, 88, 89, 91, 98, 121, 143, 147, 201, 229, 238, 248, 268, 277, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 310, 345, 355, 356, 360, 363, 374], "indeci": [23, 59, 68, 76, 78, 82, 143, 201, 248, 261, 269, 272, 277, 340, 348], "multi": [23, 25, 60, 63, 64, 68, 82, 88, 143, 201, 213, 249, 254, 255, 261, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326, 340], "dimension": [23, 24, 25, 59, 61, 68, 71, 81, 82, 91, 96, 143, 144, 201, 202, 213, 248, 250, 261, 264, 276, 277, 299, 307, 326, 340, 343, 351, 363, 371], "reg": [23, 82, 143, 201, 277], "regular": [23, 59, 82, 84, 87, 89, 91, 143, 201, 248, 277, 281, 285, 295, 299, 355, 359, 360, 363], "xm": [23, 143, 201], "l2": [23, 82, 84, 89, 143, 201, 277, 281, 295, 355, 360], "observ": [23, 25, 82, 89, 91, 92, 95, 104, 143, 201, 213, 277, 295, 299, 300, 306, 322, 326, 360, 363, 364, 370], "explanatori": [23, 143, 201], "independ": [23, 25, 36, 64, 82, 97, 116, 143, 201, 213, 224, 255, 277, 309, 326, 373], "nsampl": [23, 25, 60, 64, 82, 84, 89, 143, 201, 213, 249, 255, 277, 281, 295, 326, 355, 360], "nfeatur": [23, 82, 89, 143, 201, 277, 295, 360], "respons": [23, 49, 59, 84, 98, 143, 146, 201, 237, 248, 281, 310, 355, 374], "small": [23, 25, 40, 59, 69, 77, 83, 85, 91, 120, 143, 201, 213, 228, 248, 262, 271, 280, 282, 299, 326, 341, 347, 354, 356, 363], "001": [23, 143, 201], "norm": [23, 25, 30, 35, 36, 110, 115, 116, 143, 201, 213, 218, 223, 224, 326], "lasso": [23, 143, 201], "think": [23, 60, 69, 143, 201, 249, 262, 341], "radian": [23, 68, 71, 75, 82, 143, 201, 261, 264, 268, 277, 340, 343, 345], "behav": [23, 25, 59, 143, 201, 213, 248, 326], "multipli": [23, 25, 73, 88, 91, 143, 201, 213, 266, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 326, 344, 363], "noutput": [23, 143, 201], "bx": [23, 143, 201], "predict": [23, 82, 143, 201, 277], "approxim": [23, 25, 91, 92, 96, 101, 108, 143, 201, 213, 299, 300, 307, 319, 326, 363, 364, 371], "kroneck": [23, 143, 201], "sum": [23, 25, 36, 59, 62, 63, 80, 86, 91, 97, 101, 107, 108, 116, 143, 201, 213, 224, 248, 252, 254, 275, 283, 299, 309, 319, 325, 326, 350, 357, 363, 373], "divid": [23, 36, 59, 82, 88, 116, 143, 201, 224, 248, 277, 286, 287, 288, 289, 290, 291, 292, 293, 294], "largetst": [23, 143, 201], "selector": [23, 143, 201], "3x3": [23, 24, 73, 143, 144, 201, 202, 266, 344], "radial": [23, 24, 69, 73, 143, 144, 201, 202, 262, 266, 341, 344], "discret": [23, 24, 25, 50, 59, 61, 69, 73, 91, 92, 143, 144, 147, 201, 202, 213, 238, 248, 250, 262, 266, 299, 300, 326, 341, 344, 363, 364], "sample_defici": [23, 82, 143, 201, 277], "distort": [23, 143, 201], "eigendecomposit": [23, 143, 201], "whiten": [23, 143, 201], "tutori": [23, 89, 143, 201, 295, 360], "approach": [23, 25, 143, 201, 213, 326], "eldar": [23, 143, 201], "yc": [23, 143, 201], "2003": [23, 25, 50, 143, 147, 201, 213, 238, 326], "ieee": [23, 143, 201], "intern": [23, 25, 143, 201, 213, 326], "confer": [23, 143, 201], "acoust": [23, 143, 201], "speech": [23, 143, 201], "proceed": [23, 143, 201], "icassp": [23, 143, 201], "03": [23, 143, 201], "apr": [23, 143, 201], "vol": [23, 25, 143, 201, 213, 326], "vi": [23, 143, 201], "713": [23, 143, 201], "oppenheim": [23, 143, 201], "av": [23, 143, 201], "mmse": [23, 143, 201], "subspac": [23, 143, 201], "transact": [23, 143, 201], "jun": [23, 143, 201], "25": [23, 24, 25, 73, 89, 143, 144, 201, 202, 213, 266, 295, 326, 328, 344, 360], "49": [23, 24, 25, 73, 89, 143, 144, 201, 202, 213, 266, 295, 326, 344, 360], "1846": [23, 143, 201], "51": [23, 24, 25, 73, 89, 143, 144, 201, 202, 213, 266, 295, 326, 344, 360], "inproceed": [23, 143, 201], "eldar2003minimum": [23, 143, 201], "author": [23, 87, 143, 201, 285, 359], "yonina": [23, 143, 201], "booktitl": [23, 143, 201], "volum": [23, 25, 49, 143, 146, 201, 213, 237, 326], "page": [23, 25, 143, 201, 213, 326], "year": [23, 25, 143, 201, 213, 326], "organ": [23, 143, 201], "articl": [23, 143, 201], "eldar2003mms": [23, 143, 201], "alan": [23, 143, 201], "journal": [23, 25, 143, 201, 213, 326], "1851": [23, 143, 201], "publish": [23, 25, 143, 201, 213, 326], "reli": [23, 25, 143, 201, 213, 326], "1000": [23, 25, 50, 59, 60, 62, 63, 64, 68, 75, 80, 84, 91, 97, 143, 147, 201, 213, 238, 248, 249, 252, 254, 255, 261, 268, 275, 281, 299, 309, 326, 340, 345, 350, 355, 363, 373], "subplot": [23, 143, 201], "131": [23, 143, 201], "132": [23, 25, 143, 201, 213, 326], "133": [23, 25, 143, 201, 213, 326], "cat": [23, 25, 143, 201, 213, 326], "xi1": [23, 143, 201], "xi2": [23, 143, 201], "zip": [23, 36, 116, 143, 201, 224], "nfeatures\u00b2": [23, 143, 201], "overrid": [23, 143, 201], "saniti": [23, 143, 201], "while": [23, 25, 143, 201, 213, 326], "certain": [24, 64, 68, 144, 202, 255, 261, 340], "fourier": [24, 59, 62, 69, 144, 202, 248, 252, 262, 341], "coeffici": [24, 25, 36, 64, 68, 75, 82, 116, 144, 202, 213, 224, 255, 261, 268, 277, 326, 340, 345], "spars": [24, 144, 202], "domain": [24, 59, 63, 69, 84, 88, 144, 202, 248, 254, 262, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 341, 355], "circularli": [24, 59, 68, 82, 144, 202, 248, 261, 277, 340], "neighborhood": [24, 144, 202], "build": [24, 60, 73, 89, 144, 202, 249, 266, 295, 344, 360], "approximatelli": [24, 144, 202], "cell": [24, 81, 144, 202, 276, 351], "lxl": [24, 59, 144, 202, 248], "neumann": [24, 144, 202], "reflect": [24, 59, 61, 69, 73, 82, 85, 88, 91, 144, 202, 248, 250, 262, 266, 277, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 341, 344, 356, 363], "csr_matrix": [24, 144, 202], "self": [24, 25, 144, 202, 213, 326], "n\u00b2xn\u00b2": [24, 144, 202], "nonzero": [24, 75, 144, 202, 268, 345], "neighbor": [24, 67, 68, 80, 85, 144, 202, 260, 261, 275, 282, 339, 340, 350, 356], "symmetri": [24, 144, 202], "lenght": [24, 144, 202], "root": [24, 25, 73, 82, 144, 202, 213, 266, 277, 326, 344], "wiener": [24, 66, 91, 144, 202, 258, 299, 363], "differentiaion": [24, 144, 202], "ssvar": [24, 144, 202], "tau": [24, 50, 66, 91, 144, 147, 202, 238, 258, 299, 363], "gaussan": [24, 144, 202], "blur": [24, 144, 202], "buffer": [24, 144, 202], "smaller": [24, 59, 68, 71, 83, 88, 96, 144, 202, 248, 261, 264, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 307, 340, 343, 354, 371], "op": [24, 40, 41, 120, 121, 144, 202, 228, 229], "tensor": [24, 144, 202], "cosin": [24, 59, 61, 69, 73, 89, 98, 144, 202, 248, 250, 262, 266, 295, 310, 341, 344, 360, 374], "basi": [24, 59, 62, 73, 89, 144, 202, 248, 252, 266, 295, 344, 360], "13": [24, 73, 89, 144, 202, 266, 295, 328, 344, 360], "14": [24, 25, 71, 73, 89, 144, 202, 213, 264, 266, 295, 326, 328, 343, 344, 360], "17": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 328, 344, 360], "18": [24, 73, 89, 97, 144, 202, 266, 295, 309, 328, 344, 360, 373], "19": [24, 73, 89, 92, 97, 144, 202, 266, 295, 300, 309, 328, 344, 360, 364, 373], "21": [24, 73, 89, 144, 202, 266, 295, 328, 344, 360], "22": [24, 73, 89, 144, 202, 266, 295, 328, 344, 360], "24": [24, 73, 89, 144, 202, 266, 295, 328, 344, 360], "26": [24, 25, 73, 89, 101, 108, 144, 202, 213, 266, 295, 319, 326, 328, 344, 360], "27": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 328, 344, 360], "28": [24, 73, 89, 144, 202, 266, 295, 328, 344, 360], "29": [24, 73, 89, 144, 202, 266, 295, 328, 344, 360], "30": [24, 25, 59, 73, 89, 144, 202, 213, 248, 266, 295, 326, 328, 344, 360], "33": [24, 73, 89, 144, 202, 266, 295, 344, 360], "34": [24, 73, 89, 144, 202, 266, 295, 328, 344, 360], "35": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "36": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "37": [24, 73, 89, 144, 202, 266, 295, 344, 360], "38": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "41": [24, 73, 89, 144, 202, 266, 295, 344, 360], "42": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "43": [24, 73, 89, 144, 202, 266, 295, 344, 360], "44": [24, 73, 89, 144, 202, 266, 295, 344, 360], "45": [24, 73, 75, 89, 144, 202, 266, 268, 295, 344, 345, 360], "46": [24, 73, 89, 144, 202, 266, 295, 344, 360], "47": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "48": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "53": [24, 73, 89, 144, 202, 266, 295, 344, 360], "54": [24, 73, 89, 144, 202, 266, 295, 344, 360], "55": [24, 73, 89, 144, 202, 266, 295, 344, 360], "56": [24, 73, 89, 144, 202, 266, 295, 344, 360], "57": [24, 25, 73, 89, 97, 144, 202, 213, 266, 295, 309, 326, 344, 360, 373], "58": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "61": [24, 73, 89, 144, 202, 266, 295, 344, 360], "62": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "63": [24, 73, 89, 144, 202, 266, 295, 344, 360], "65": [24, 73, 89, 144, 202, 266, 295, 344, 360], "66": [24, 73, 89, 144, 202, 266, 295, 344, 360], "67": [24, 73, 89, 144, 202, 266, 295, 344, 360], "68": [24, 73, 89, 144, 202, 266, 295, 344, 360], "69": [24, 73, 89, 91, 144, 202, 266, 295, 299, 344, 360, 363], "70": [24, 50, 73, 89, 144, 147, 202, 238, 266, 295, 344, 360], "71": [24, 73, 89, 144, 202, 266, 295, 344, 360], "72": [24, 73, 89, 144, 202, 266, 295, 344, 360], "73": [24, 73, 89, 144, 202, 266, 295, 344, 360], "74": [24, 73, 89, 144, 202, 266, 295, 344, 360], "75": [24, 73, 89, 144, 202, 266, 295, 344, 360], "76": [24, 73, 89, 144, 202, 266, 295, 344, 360], "77": [24, 73, 89, 144, 202, 266, 295, 344, 360], "78": [24, 73, 89, 144, 202, 266, 295, 344, 360], "79": [24, 73, 89, 144, 202, 266, 295, 344, 360], "80": [24, 25, 73, 89, 104, 144, 202, 213, 266, 295, 322, 326, 344, 360], "81": [24, 73, 89, 144, 202, 266, 295, 344, 360], "82": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "83": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "84": [24, 73, 89, 144, 202, 266, 295, 344, 360], "85": [24, 73, 89, 144, 202, 266, 295, 344, 360], "86": [24, 25, 73, 89, 144, 202, 213, 266, 295, 326, 344, 360], "87": [24, 73, 89, 144, 202, 266, 295, 344, 360], "88": [24, 73, 89, 144, 202, 266, 295, 344, 360], "89": [24, 73, 89, 144, 202, 266, 295, 344, 360], "91": [24, 73, 89, 144, 202, 266, 295, 344, 360], "92": [24, 73, 89, 144, 202, 266, 295, 344, 360], "93": [24, 73, 89, 144, 202, 266, 295, 344, 360], "94": [24, 73, 89, 144, 202, 266, 295, 344, 360], "98": [24, 73, 81, 89, 144, 202, 266, 276, 295, 344, 351, 360], "wave": [24, 25, 68, 71, 73, 75, 89, 144, 202, 213, 261, 264, 266, 268, 295, 326, 340, 343, 344, 345, 360], "quarter": [24, 73, 89, 144, 202, 266, 295, 344, 360], "n_element": [24, 73, 89, 144, 202, 266, 295, 344, 360], "n_time": [24, 73, 89, 144, 202, 266, 295, 344, 360], "min_interv": [24, 73, 89, 144, 202, 266, 295, 344, 360], "logarightm": [24, 73, 89, 144, 202, 266, 295, 344, 360], "peak": [24, 25, 59, 67, 71, 73, 81, 89, 96, 144, 202, 213, 248, 260, 264, 266, 276, 295, 307, 326, 339, 343, 344, 351, 360, 371], "constraint": [24, 73, 89, 144, 202, 266, 295, 344, 360], "n_basi": [24, 73, 89, 144, 202, 266, 295, 344, 360], "exp": [24, 25, 40, 50, 69, 73, 89, 98, 101, 108, 120, 144, 147, 202, 213, 228, 238, 262, 266, 295, 310, 319, 326, 341, 344, 360, 374], "pylab": [25, 107, 213, 325, 326], "commonli": [25, 101, 108, 213, 319, 326], "alia": [25, 69, 213, 262, 326, 328, 341], "eas": [25, 213, 326], "api": [25, 213, 326], "frac": [25, 213, 326], "int_0": [25, 213, 326], "dt": [25, 42, 49, 50, 66, 91, 106, 122, 146, 147, 213, 230, 237, 238, 258, 299, 324, 326, 363], "often": [25, 59, 213, 248, 326], "seen": [25, 213, 326], "bayesian": [25, 213, 326], "infer": [25, 90, 91, 213, 297, 299, 326, 363], "default_rng": [25, 213, 326], "pleas": [25, 82, 85, 91, 213, 277, 282, 299, 326, 356, 363], "quick": [25, 82, 213, 277, 326], "array_lik": [25, 93, 213, 304, 326, 368], "broadcast": [25, 59, 213, 248, 326], "parameter": [25, 213, 326], "trial": [25, 59, 60, 70, 82, 213, 248, 249, 263, 277, 326, 342], "success": [25, 213, 326], "equal": [25, 63, 213, 254, 326], "binom": [25, 213, 326], "cumul": [25, 213, 326], "estim": [25, 39, 59, 60, 64, 68, 75, 80, 82, 85, 87, 88, 89, 91, 93, 95, 96, 97, 119, 213, 227, 248, 249, 255, 261, 268, 275, 277, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 304, 306, 307, 309, 326, 340, 345, 350, 356, 359, 360, 363, 368, 370, 371, 373], "proport": [25, 213, 326], "peopl": [25, 213, 326], "who": [25, 213, 326], "dalgaard": [25, 213, 326], "peter": [25, 213, 326], "introductori": [25, 213, 326], "springer": [25, 213, 326], "verlag": [25, 213, 326], "2002": [25, 213, 326], "glantz": [25, 213, 326], "stanton": [25, 213, 326], "primer": [25, 213, 326], "biostatist": [25, 213, 326], "mcgraw": [25, 213, 326], "hill": [25, 41, 90, 121, 213, 229, 297, 326], "fifth": [25, 213, 326], "edit": [25, 213, 326], "lentner": [25, 213, 326], "marvin": [25, 213, 326], "elementari": [25, 213, 326], "bogden": [25, 213, 326], "quiglei": [25, 213, 326], "1972": [25, 213, 326], "weisstein": [25, 213, 326], "eric": [25, 213, 326], "mathworld": [25, 213, 326], "wolfram": [25, 213, 326], "web": [25, 73, 213, 266, 326, 344], "resourc": [25, 213, 326], "binomialdistribut": [25, 213, 326], "wikipedia": [25, 91, 213, 299, 326, 363], "en": [25, 91, 213, 299, 326, 363], "wiki": [25, 91, 213, 299, 326, 363], "binomial_distribut": [25, 213, 326], "coin": [25, 213, 326], "world": [25, 213, 326], "compani": [25, 213, 326], "drill": [25, 213, 326], "wild": [25, 213, 326], "oil": [25, 213, 326], "nine": [25, 213, 326], "000": [25, 213, 326], "20000": [25, 213, 326], "38885": [25, 213, 326], "df": [25, 213, 326], "chi": [25, 91, 213, 299, 326, 363], "hypothesi": [25, 64, 213, 255, 326], "freedom": [25, 64, 83, 213, 255, 280, 326, 354], "inappropri": [25, 213, 326], "sum_": [25, 213, 326], "mathtt": [25, 213, 326], "2_i": [25, 213, 326], "denot": [25, 40, 120, 213, 228, 326], "sim": [25, 46, 126, 213, 234, 326], "2_k": [25, 213, 326], "infti": [25, 213, 326], "nist": [25, 213, 326], "handbook": [25, 213, 326], "itl": [25, 213, 326], "gov": [25, 213, 326], "div898": [25, 213, 326], "eda": [25, 213, 326], "section3": [25, 213, 326], "eda3666": [25, 213, 326], "htm": [25, 213, 326], "89920014": [25, 213, 326], "00867716": [25, 213, 326], "13710533": [25, 213, 326], "62318272": [25, 213, 326], "arang": [25, 69, 98, 213, 262, 310, 326, 341, 374], "select": [25, 64, 69, 213, 255, 262, 326, 341], "item": [25, 82, 104, 213, 277, 322, 326], "greater": [25, 213, 326], "through": [25, 107, 213, 325, 326], "effici": [25, 39, 40, 87, 107, 119, 120, 213, 227, 228, 285, 325, 326, 359], "sampler": [25, 213, 326], "produc": [25, 36, 59, 87, 116, 213, 224, 248, 285, 326, 359], "len": [25, 59, 81, 86, 87, 89, 97, 213, 248, 276, 283, 285, 295, 309, 326, 351, 357, 359, 360, 373], "equival": [25, 36, 40, 59, 116, 120, 213, 224, 228, 248, 326], "repeat": [25, 213, 326], "arbitrari": [25, 68, 213, 261, 326, 340], "aa_milne_arr": [25, 213, 326], "pooh": [25, 213, 326], "rabbit": [25, 213, 326], "piglet": [25, 213, 326], "christoph": [25, 213, 326], "u11": [25, 213, 326], "multivari": [25, 88, 91, 213, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 326, 363], "conjug": [25, 213, 326], "prior": [25, 84, 88, 91, 213, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 326, 355, 363], "fulfil": [25, 213, 326], "x_i": [25, 87, 213, 285, 326, 359], "propto": [25, 213, 326], "prod_": [25, 213, 326], "alpha_i": [25, 213, 326], "_i": [25, 213, 326], "concentr": [25, 75, 213, 268, 326, 345], "y_i": [25, 87, 213, 285, 326, 359], "david": [25, 213, 326], "mckai": [25, 213, 326], "learn": [25, 89, 213, 295, 326, 360], "chapter": [25, 213, 326], "uk": [25, 213, 326], "mackai": [25, 213, 326], "itila": [25, 213, 326], "dirichlet_distribut": [25, 213, 326], "cite": [25, 213, 326], "cut": [25, 30, 35, 36, 59, 68, 80, 110, 115, 116, 213, 218, 223, 224, 248, 261, 275, 326, 340, 350], "had": [25, 36, 116, 213, 224, 326], "variat": [25, 68, 75, 88, 213, 261, 268, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326, 340, 345], "barh": [25, 213, 326], "Its": [25, 213, 326], "elsewher": [25, 40, 71, 120, 213, 228, 264, 326, 343], "_": [25, 213, 326], "continu": [25, 59, 84, 85, 94, 107, 213, 248, 281, 282, 305, 325, 326, 355, 356, 369], "analogu": [25, 82, 213, 277, 326], "describ": [25, 75, 213, 268, 326, 345], "situat": [25, 213, 326], "raindrop": [25, 213, 326], "rainstorm": [25, 213, 326], "request": [25, 213, 326], "peyton": [25, 213, 326], "peebl": [25, 213, 326], "jr": [25, 213, 326], "principl": [25, 82, 213, 277, 326], "4th": [25, 75, 213, 268, 326, 345], "ed": [25, 213, 326], "2001": [25, 60, 75, 213, 249, 268, 326, 345], "poisson_process": [25, 213, 326], "exponential_distribut": [25, 213, 326], "dfnum": [25, 213, 326], "dfden": [25, 213, 326], "denomin": [25, 213, 326], "known": [25, 39, 119, 213, 227, 326], "fisher": [25, 213, 326], "aris": [25, 94, 95, 213, 305, 306, 326, 369, 370], "anova": [25, 213, 326], "compar": [25, 64, 76, 80, 82, 97, 213, 255, 269, 275, 277, 309, 326, 350, 373], "respect": [25, 40, 78, 120, 213, 228, 272, 326, 348], "children": [25, 29, 213, 217, 326], "diabet": [25, 213, 326], "control": [25, 59, 62, 107, 213, 248, 252, 325, 326], "blood": [25, 213, 326], "glucos": [25, 213, 326], "null": [25, 64, 97, 213, 255, 309, 326, 373], "statu": [25, 94, 213, 305, 326, 369], "give": [25, 41, 121, 213, 229, 326], "61988120985": [25, 213, 326], "about": [25, 97, 213, 309, 326, 373], "chanc": [25, 64, 213, 255, 326], "exce": [25, 39, 59, 119, 213, 227, 248, 326], "reject": [25, 82, 97, 213, 277, 309, 326, 373], "sometim": [25, 213, 326], "failur": [25, 94, 213, 305, 326, 369], "electron": [25, 213, 326], "natur": [25, 41, 59, 60, 101, 108, 121, 213, 229, 248, 249, 319, 326], "event": [25, 50, 64, 68, 96, 147, 213, 238, 255, 261, 307, 326, 328, 340, 371], "gammadistribut": [25, 213, 326], "gamma_distribut": [25, 213, 326], "std": [25, 30, 35, 36, 59, 107, 110, 115, 116, 213, 218, 223, 224, 248, 325, 326], "sqrt": [25, 63, 93, 213, 254, 304, 326, 368], "along": [25, 59, 60, 68, 71, 82, 96, 213, 248, 249, 261, 264, 277, 307, 326, 340, 343, 371], "sp": [25, 213, 326], "ignor": [25, 88, 213, 286, 287, 288, 289, 290, 291, 292, 293, 294, 326, 328], "hist": [25, 77, 213, 271, 326, 347], "bernoulli": [25, 89, 91, 213, 295, 299, 326, 360, 363], "experi": [25, 59, 213, 248, 326], "outcom": [25, 213, 326], "achiev": [25, 59, 213, 248, 326], "mass": [25, 49, 85, 146, 213, 237, 282, 326, 356], "individu": [25, 213, 326], "ten": [25, 213, 326], "thousand": [25, 213, 326], "10000": [25, 91, 97, 213, 299, 309, 326, 363, 373], "succeed": [25, 213, 326], "34889999999999999": [25, 213, 326], "legaci": [25, 60, 63, 213, 249, 254, 326], "flag": [25, 213, 326], "bitgener": [25, 213, 326], "mt19937": [25, 213, 326], "dict": [25, 97, 103, 107, 213, 309, 321, 325, 326, 373], "624": [25, 213, 326], "po": [25, 213, 326], "has_gauss": [25, 213, 326], "cached_gaussian": [25, 213, 326], "uint": [25, 213, 326], "manual": [25, 89, 213, 295, 326, 360], "know": [25, 213, 326], "exactli": [25, 213, 326], "he": [25, 213, 326], "she": [25, 213, 326], "loc": [25, 213, 326], "below": [25, 68, 107, 213, 261, 325, 326, 340], "gumbel_l": [25, 213, 326], "gumbel_r": [25, 213, 326], "genextrem": [25, 213, 326], "smallest": [25, 213, 326], "sev": [25, 213, 326], "gev": [25, 213, 326], "tail": [25, 213, 326], "german": [25, 213, 326], "mathematician": [25, 213, 326], "emil": [25, 213, 326], "juliu": [25, 213, 326], "earli": [25, 213, 326], "hydrologi": [25, 213, 326], "literatur": [25, 213, 326], "occurr": [25, 213, 326], "flood": [25, 213, 326], "wind": [25, 213, 326], "rainfal": [25, 213, 326], "fat": [25, 213, 326], "henc": [25, 213, 326], "surprisingli": [25, 213, 326], "100": [25, 36, 41, 50, 59, 60, 63, 64, 75, 80, 82, 85, 88, 91, 116, 121, 147, 213, 224, 229, 238, 248, 249, 254, 255, 268, 275, 277, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 326, 345, 350, 356, 363], "underestim": [25, 64, 213, 255, 326], "frechet": [25, 213, 326], "57721": [25, 213, 326], "pi": [25, 59, 68, 89, 213, 248, 261, 295, 326, 340, 360], "york": [25, 213, 326], "columbia": [25, 213, 326], "press": [25, 107, 213, 325, 326], "1958": [25, 213, 326], "reiss": [25, 213, 326], "thoma": [25, 213, 326], "analysi": [25, 63, 68, 77, 84, 89, 213, 254, 261, 271, 281, 295, 326, 340, 347, 355, 360], "insur": [25, 213, 326], "financ": [25, 213, 326], "field": [25, 71, 213, 264, 326, 343], "basel": [25, 213, 326], "birkhaus": [25, 213, 326], "maxima": [25, 67, 68, 71, 213, 260, 261, 264, 326, 339, 340, 343], "append": [25, 82, 213, 277, 326], "ngood": [25, 213, 326], "nbad": [25, 213, 326], "good": [25, 213, 326], "nonneg": [25, 213, 326], "randomli": [25, 59, 64, 213, 248, 255, 326], "taken": [25, 63, 75, 78, 90, 213, 254, 268, 272, 297, 326, 345, 348], "hypergeom": [25, 213, 326], "le": [25, 213, 326], "urn": [25, 213, 326], "marbl": [25, 213, 326], "ball": [25, 213, 326], "wherea": [25, 213, 326], "infinit": [25, 213, 326], "As": [25, 40, 120, 213, 228, 326], "hypergeometricdistribut": [25, 213, 326], "hypergeometric_distribut": [25, 213, 326], "nsamp": [25, 213, 326], "unlik": [25, 213, 326], "suppos": [25, 213, 326], "pull": [25, 213, 326], "100000": [25, 93, 97, 213, 304, 309, 326, 368, 373], "003": [25, 213, 326], "decai": [25, 50, 98, 147, 213, 238, 310, 326, 374], "sharper": [25, 213, 326], "fatter": [25, 213, 326], "law": [25, 98, 213, 310, 326, 374], "1774": [25, 213, 326], "econom": [25, 213, 326], "health": [25, 213, 326], "scienc": [25, 213, 326], "seem": [25, 105, 213, 323, 326], "abramowitz": [25, 213, 326], "stegun": [25, 213, 326], "mathemat": [25, 101, 108, 213, 319, 326], "formula": [25, 82, 213, 277, 326], "9th": [25, 213, 326], "dover": [25, 213, 326], "kotz": [25, 213, 326], "samuel": [25, 213, 326], "et": [25, 60, 68, 213, 249, 261, 326, 340], "al": [25, 60, 68, 213, 249, 261, 326, 340], "laplacedistribut": [25, 213, 326], "laplace_distribut": [25, 213, 326], "act": [25, 213, 326], "epidemiologi": [25, 213, 326], "chess": [25, 213, 326], "feder": [25, 213, 326], "fide": [25, 213, 326], "elo": [25, 213, 326], "player": [25, 213, 326], "logisticdistribut": [25, 213, 326], "logistic_distribut": [25, 213, 326], "against": [25, 50, 147, 213, 238, 326], "def": [25, 93, 107, 213, 304, 325, 326, 368], "lgst_val": [25, 213, 326], "itself": [25, 73, 213, 266, 326, 344], "deriv": [25, 49, 59, 65, 69, 71, 81, 97, 101, 108, 146, 213, 237, 248, 257, 262, 264, 276, 309, 319, 326, 341, 343, 351, 373], "ln": [25, 213, 326], "limpert": [25, 213, 326], "stahel": [25, 213, 326], "abbt": [25, 213, 326], "clue": [25, 213, 326], "bioscienc": [25, 213, 326], "ethz": [25, 213, 326], "mid": [25, 213, 326], "linspac": [25, 213, 326], "tight": [25, 213, 326], "demonstr": [25, 213, 326], "fit": [25, 39, 65, 82, 83, 89, 90, 91, 98, 119, 213, 227, 257, 277, 280, 295, 297, 299, 310, 326, 354, 360, 363, 374], "seri": [25, 59, 97, 213, 248, 309, 326, 373], "logser": [25, 213, 326], "speci": [25, 213, 326], "rich": [25, 213, 326], "propos": [25, 213, 326], "corbet": [25, 213, 326], "william": [25, 213, 326], "1943": [25, 213, 326], "occup": [25, 213, 326], "car": [25, 213, 326], "buza": [25, 213, 326], "martin": [25, 213, 326], "culver": [25, 213, 326], "stephen": [25, 213, 326], "divers": [25, 213, 326], "biodivers": [25, 213, 326], "septemb": [25, 213, 326], "187": [25, 213, 326], "195": [25, 213, 326], "ecologi": [25, 213, 326], "dali": [25, 213, 326], "lunn": [25, 213, 326], "ostrowski": [25, 213, 326], "crc": [25, 213, 326], "1994": [25, 213, 326], "logarithmic_distribut": [25, 213, 326], "pval": [25, 213, 326], "dice": [25, 213, 326], "x_0": [25, 91, 213, 299, 326, 363], "x_1": [25, 213, 326], "x_p": [25, 213, 326], "last": [25, 59, 63, 85, 106, 107, 213, 248, 254, 282, 324, 325, 326, 356], "alwai": [25, 40, 120, 213, 228, 326], "account": [25, 59, 213, 248, 326], "remain": [25, 59, 68, 213, 248, 261, 326, 340], "word": [25, 104, 213, 322, 326], "land": [25, 213, 326], "onc": [25, 41, 121, 213, 229, 326], "again": [25, 213, 326], "threw": [25, 213, 326], "die": [25, 213, 326], "leftov": [25, 213, 326], "bias": [25, 64, 213, 255, 326], "twice": [25, 213, 326], "wrong": [25, 213, 326], "traceback": [25, 213, 326], "recent": [25, 213, 326], "cov": [25, 30, 35, 36, 87, 110, 115, 116, 213, 218, 223, 224, 285, 326, 359], "check_valid": [25, 213, 326], "tol": [25, 94, 213, 305, 326, 369], "multinorm": [25, 213, 326], "higher": [25, 67, 90, 213, 260, 297, 326, 339], "analog": [25, 106, 213, 324, 326], "semidefinit": [25, 213, 326], "proper": [25, 213, 326], "arrang": [25, 213, 326], "toler": [25, 68, 93, 94, 213, 261, 304, 305, 326, 340, 368, 369], "singular": [25, 63, 213, 254, 326], "cast": [25, 40, 59, 93, 120, 213, 228, 248, 304, 326, 368], "bell": [25, 213, 326], "curv": [25, 89, 213, 295, 326, 360], "univari": [25, 75, 88, 101, 108, 213, 268, 286, 287, 288, 289, 290, 291, 292, 293, 294, 319, 326, 345], "vari": [25, 213, 326], "togeth": [25, 59, 64, 213, 248, 255, 326], "x_2": [25, 213, 326], "x_n": [25, 50, 147, 213, 238, 326], "c_": [25, 213, 326], "ij": [25, 213, 326], "x_j": [25, 213, 326], "ii": [25, 76, 78, 213, 269, 272, 326, 348], "spread": [25, 213, 326], "popular": [25, 213, 326], "spheric": [25, 213, 326], "5000": [25, 213, 326], "backward": [25, 59, 68, 88, 91, 213, 248, 261, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 326, 340, 363], "papouli": [25, 213, 326], "stochast": [25, 213, 326], "3rd": [25, 213, 326], "1991": [25, 213, 326], "duda": [25, 213, 326], "hart": [25, 213, 326], "stork": [25, 213, 326], "classif": [25, 213, 326], "2nd": [25, 213, 326], "wilei": [25, 213, 326], "800": [25, 213, 326], "bivari": [25, 213, 326], "correl": [25, 36, 59, 80, 82, 84, 97, 116, 213, 224, 248, 275, 277, 281, 309, 326, 350, 355, 373], "65465": [25, 213, 326], "pt": [25, 97, 213, 309, 326, 373], "0326911": [25, 213, 326], "01280782": [25, 213, 326], "96202397": [25, 213, 326], "85602287": [25, 213, 326], "47613949": [25, 213, 326], "corrcoef": [25, 213, 326], "6273591314603949": [25, 213, 326], "visual": [25, 69, 213, 262, 326, 341], "cloud": [25, 213, 326], "illustr": [25, 213, 326], "grid": [25, 59, 69, 77, 85, 87, 90, 213, 248, 262, 271, 282, 285, 297, 326, 341, 347, 356, 359], "occur": [25, 49, 59, 146, 213, 237, 248, 326], "reach": [25, 213, 326], "pmf": [25, 213, 326], "repeatedli": [25, 213, 326], "until": [25, 213, 326, 328], "third": [25, 36, 49, 65, 90, 116, 146, 213, 224, 237, 257, 297, 326], "negativebinomialdistribut": [25, 213, 326], "negative_binomial_distribut": [25, 213, 326], "nonc": [25, 213, 326], "noncentr": [25, 213, 326], "earlier": [25, 213, 326], "central": [25, 213, 326], "p_": [25, 213, 326], "y_": [25, 50, 147, 213, 238, 326], "2i": [25, 213, 326], "noncentral_chi": [25, 213, 326], "squared_distribut": [25, 213, 326], "200": [25, 59, 84, 213, 248, 281, 326, 355], "0000001": [25, 213, 326], "values2": [25, 213, 326], "ob": [25, 213, 326], "noncentralf": [25, 213, 326], "studi": [25, 213, 326], "area": [25, 70, 89, 213, 263, 295, 326, 342, 360], "deg": [25, 213, 326], "nc_val": [25, 213, 326], "1000000": [25, 93, 213, 304, 326, 368], "nf": [25, 213, 326], "c_val": [25, 213, 326], "de": [25, 213, 326], "moivr": [25, 213, 326], "gauss": [25, 213, 326], "characterist": [25, 213, 326], "influenc": [25, 213, 326], "tini": [25, 213, 326], "disturb": [25, 213, 326], "own": [25, 213, 326], "centr": [25, 213, 326], "increas": [25, 59, 60, 213, 248, 249, 326], "607": [25, 213, 326], "impli": [25, 213, 326], "ly": [25, 45, 125, 213, 233, 326], "awai": [25, 213, 326], "normal_distribut": [25, 213, 326], "theorem": [25, 213, 326], "125": [25, 213, 326], "ddof": [25, 213, 326], "four": [25, 213, 326], "49401501": [25, 213, 326], "00950034": [25, 213, 326], "81814867": [25, 213, 326], "29718677": [25, 213, 326], "39924804": [25, 213, 326], "68456316": [25, 213, 326], "99394529": [25, 213, 326], "84057254": [25, 213, 326], "lomax": [25, 213, 326], "shift": [25, 30, 35, 36, 59, 75, 110, 115, 116, 213, 218, 223, 224, 248, 268, 326, 345], "classic": [25, 213, 326], "ad": [25, 36, 41, 59, 82, 89, 116, 121, 213, 224, 229, 248, 277, 295, 326, 360], "simplifi": [25, 40, 89, 107, 120, 213, 228, 295, 325, 326, 360], "unbound": [25, 213, 326], "rule": [25, 213, 326], "genpareto": [25, 213, 326], "am": [25, 213, 326], "italian": [25, 213, 326], "economist": [25, 213, 326], "vilfredo": [25, 213, 326], "bradford": [25, 213, 326], "wealth": [25, 213, 326], "economi": [25, 213, 326], "found": [25, 43, 59, 68, 87, 94, 107, 123, 213, 231, 248, 261, 285, 305, 325, 326, 340, 359, 369], "sourceforg": [25, 89, 213, 295, 326, 360], "franci": [25, 213, 326], "hunt": [25, 213, 326], "paul": [25, 213, 326], "johnson": [25, 213, 326], "1896": [25, 213, 326], "cours": [25, 213, 326], "polit": [25, 213, 326], "lausann": [25, 213, 326], "pareto_distribut": [25, 213, 326], "arr": [25, 36, 116, 213, 224, 326], "reshap": [25, 213, 326], "lam": [25, 213, 326], "poissondistribut": [25, 213, 326], "poisson_distribut": [25, 213, 326], "500": [25, 60, 63, 75, 213, 249, 254, 268, 326, 345], "report": [25, 213, 326], "claim": [25, 213, 326], "christian": [25, 213, 326], "kleiber": [25, 213, 326], "actuari": [25, 213, 326], "heckert": [25, 213, 326], "filliben": [25, 213, 326], "jame": [25, 213, 326], "148": [25, 213, 326], "dataplot": [25, 213, 326], "subcommand": [25, 213, 326], "nation": [25, 213, 326], "institut": [25, 213, 326], "technologi": [25, 213, 326], "june": [25, 213, 326], "softwar": [25, 213, 326], "refman2": [25, 213, 326], "auxillar": [25, 213, 326], "powpdf": [25, 213, 326], "normed_i": [25, 213, 326], "diff": [25, 91, 213, 299, 326, 363], "rv": [25, 213, 326], "rvsp": [25, 213, 326], "powerlaw": [25, 213, 326], "d0": [25, 213, 326], "d1": [25, 213, 326], "dn": [25, 213, 326], "That": [25, 40, 89, 91, 120, 213, 228, 295, 299, 326, 360, 363], "ones": [25, 59, 87, 89, 98, 107, 213, 248, 285, 295, 310, 325, 326, 359, 360, 374], "14022471": [25, 213, 326], "96360618": [25, 213, 326], "37601032": [25, 213, 326], "25528411": [25, 213, 326], "49313049": [25, 213, 326], "94909878": [25, 213, 326], "inclus": [25, 213, 326], "exclus": [25, 213, 326], "highest": [25, 213, 326], "byteord": [25, 213, 326], "nativ": [25, 213, 326], "appropri": [25, 68, 82, 213, 261, 277, 326, 340], "omit": [25, 71, 213, 264, 326, 343], "int_lik": [25, 213, 326], "suppli": [25, 213, 326], "1923875335537315": [25, 213, 326], "int_": [25, 213, 326], "deprec": [25, 213, 326], "sinc": [25, 43, 69, 75, 106, 123, 213, 231, 262, 268, 324, 326, 341, 345], "evenli": [25, 59, 104, 213, 248, 322, 326], "choos": [25, 82, 213, 277, 326], "five": [25, 213, 326], "625": [25, 213, 326], "roll": [25, 213, 326], "six": [25, 213, 326], "d2": [25, 213, 326], "dsum": [25, 213, 326], "unif": [25, 213, 326], "47108547995356098": [25, 213, 326], "30220482": [25, 213, 326], "86820401": [25, 213, 326], "1654503": [25, 213, 326], "11659149": [25, 213, 326], "54323428": [25, 213, 326], "three": [25, 213, 326], "99149989": [25, 213, 326], "52338984": [25, 213, 326], "99091858": [25, 213, 326], "79479508": [25, 213, 326], "23204345": [25, 213, 326], "75224494": [25, 213, 326], "cdotp": [25, 213, 326], "would": [25, 36, 41, 50, 116, 121, 147, 213, 224, 229, 238, 326], "east": [25, 213, 326], "north": [25, 213, 326], "veloc": [25, 59, 75, 213, 248, 268, 326, 345], "brighton": [25, 213, 326], "ltd": [25, 213, 326], "20090514091424": [25, 213, 326], "co": [25, 70, 89, 98, 107, 213, 263, 295, 310, 325, 326, 342, 360, 374], "asp": [25, 213, 326], "rayleigh_distribut": [25, 213, 326], "tend": [25, 59, 213, 248, 326], "meter": [25, 213, 326], "meanvalu": [25, 213, 326], "modevalu": [25, 213, 326], "percentag": [25, 104, 213, 322, 326], "087300000000000003": [25, 213, 326], "rese": [25, 213, 326], "best": [25, 90, 94, 213, 297, 305, 326, 369], "recreat": [25, 213, 326], "randomst": [25, 213, 326], "seedsequ": [25, 213, 326], "123456789": [25, 213, 326], "stream": [25, 213, 326], "987654321": [25, 213, 326], "mersenn": [25, 213, 326], "twister": [25, 213, 326], "pseudo": [25, 213, 326], "although": [25, 94, 213, 305, 326, 369], "matsumoto": [25, 213, 326], "nishimura": [25, 213, 326], "623": [25, 213, 326], "equidistribut": [25, 213, 326], "pseudorandom": [25, 213, 326], "acm": [25, 213, 326], "jan": [25, 213, 326], "1998": [25, 213, 326], "place": [25, 59, 213, 248, 326], "mutablesequ": [25, 213, 326], "cauchi": [25, 213, 326], "lorentz": [25, 213, 326], "bigl": [25, 213, 326], "bigr": [25, 213, 326], "harmon": [25, 213, 326], "oscil": [25, 75, 213, 268, 326, 345], "spectral": [25, 60, 62, 63, 84, 213, 249, 252, 254, 281, 326, 355], "broaden": [25, 213, 326], "tilt": [25, 213, 326], "look": [25, 68, 71, 213, 261, 264, 326, 340, 343], "heavier": [25, 213, 326], "sematech": [25, 213, 326], "eda3663": [25, 213, 326], "cauchydistribut": [25, 213, 326], "cauchy_distribut": [25, 213, 326], "3x8000": [25, 213, 326], "8000": [25, 213, 326], "stdev": [25, 213, 326], "6888893": [25, 213, 326], "78096262": [25, 213, 326], "89086505": [25, 213, 326], "49876311": [25, 213, 326], "38672696": [25, 213, 326], "4685006": [25, 213, 326], "student": [25, 213, 326], "hyperbol": [25, 213, 326], "come": [25, 92, 213, 300, 326, 364], "1908": [25, 213, 326], "gosset": [25, 213, 326], "guin": [25, 213, 326], "breweri": [25, 213, 326], "dublin": [25, 213, 326], "proprietari": [25, 213, 326], "issu": [25, 69, 213, 262, 326, 341], "pseudonym": [25, 213, 326], "With": [25, 213, 326], "s_t": [25, 213, 326], "daili": [25, 213, 326], "energi": [25, 92, 213, 300, 326, 364], "intak": [25, 213, 326], "women": [25, 213, 326], "kilojoul": [25, 213, 326], "kj": [25, 213, 326], "5260": [25, 213, 326], "5470": [25, 213, 326], "5640": [25, 213, 326], "6180": [25, 213, 326], "6390": [25, 213, 326], "6515": [25, 213, 326], "6805": [25, 213, 326], "7515": [25, 213, 326], "8230": [25, 213, 326], "8770": [25, 213, 326], "systemat": [25, 213, 326], "recommend": [25, 97, 213, 309, 326, 373], "7725": [25, 213, 326], "our": [25, 64, 213, 255, 326], "absenc": [25, 213, 326], "presenc": [25, 64, 68, 213, 255, 261, 326, 340], "empir": [25, 213, 326], "unbias": [25, 60, 64, 83, 213, 249, 255, 280, 326, 354], "final": [25, 81, 85, 98, 213, 276, 282, 310, 326, 351, 356, 374], "concav": [25, 213, 326], "6753": [25, 213, 326], "636363636364": [25, 213, 326], "1142": [25, 213, 326], "1232221373727": [25, 213, 326], "8207540608310198": [25, 213, 326], "adequ": [25, 213, 326], "critic": [25, 68, 69, 71, 213, 261, 262, 264, 326, 340, 341, 343], "018318": [25, 213, 326], "pre": [25, 213, 326], "condition": [25, 213, 326], "being": [25, 69, 213, 262, 326, 328, 341], "begin": [25, 59, 213, 248, 326], "leq": [25, 213, 326], "end": [25, 46, 59, 81, 82, 126, 213, 234, 248, 276, 277, 326, 351], "ill": [25, 213, 326], "knowledg": [25, 213, 326], "triangular_distribut": [25, 213, 326], "uniformli": [25, 213, 326], "equat": [25, 41, 50, 121, 147, 213, 229, 238, 326], "anywher": [25, 213, 326], "offici": [25, 213, 326], "eventu": [25, 213, 326], "satisfi": [25, 213, 326], "inequ": [25, 213, 326], "99999999": [25, 213, 326], "ones_lik": [25, 213, 326], "kappa": [25, 213, 326], "von": [25, 213, 326], "mise": [25, 213, 326], "dispers": [25, 75, 97, 213, 268, 309, 326, 345, 373], "circl": [25, 213, 326], "thought": [25, 213, 326], "i_0": [25, 213, 326], "bessel": [25, 213, 326], "richard": [25, 213, 326], "edler": [25, 213, 326], "born": [25, 213, 326], "austria": [25, 213, 326], "hungari": [25, 213, 326], "ukrain": [25, 213, 326], "fled": [25, 213, 326], "1939": [25, 213, 326], "becam": [25, 213, 326], "professor": [25, 213, 326], "harvard": [25, 213, 326], "aerodynam": [25, 213, 326], "fluid": [25, 213, 326], "mechan": [25, 213, 326], "philosophi": [25, 213, 326], "academ": [25, 213, 326], "1964": [25, 213, 326], "i0": [25, 213, 326], "num": [25, 213, 326], "infin": [25, 213, 326], "relationship": [25, 213, 326], "brownian": [25, 213, 326], "motion": [25, 59, 213, 248, 326], "1956": [25, 213, 326], "tweedi": [25, 213, 326], "cover": [25, 213, 326], "2x": [25, 213, 326], "competitor": [25, 213, 326], "reliabl": [25, 68, 75, 213, 261, 268, 326, 340, 345], "stock": [25, 213, 326], "interest": [25, 213, 326], "20090423014010": [25, 213, 326], "chhikara": [25, 213, 326], "raj": [25, 213, 326], "folk": [25, 213, 326], "leroi": [25, 213, 326], "methodologi": [25, 213, 326], "applic": [25, 213, 326], "1988": [25, 213, 326], "inverse_gaussian_distribut": [25, 213, 326], "weibull_max": [25, 213, 326], "weibull_min": [25, 213, 326], "iii": [25, 213, 326], "asymptot": [25, 98, 213, 310, 326, 374], "rosin": [25, 213, 326], "rammler": [25, 213, 326], "reduc": [25, 59, 64, 68, 213, 248, 255, 261, 326, 340], "waloddi": [25, 213, 326], "royal": [25, 97, 213, 309, 326, 373], "technic": [25, 213, 326], "stockholm": [25, 213, 326], "Of": [25, 213, 326], "strength": [25, 213, 326], "materi": [25, 213, 326], "ingeniorsvetenskapsakademien": [25, 213, 326], "handlingar": [25, 213, 326], "nr": [25, 213, 326], "151": [25, 213, 326], "generalstaben": [25, 213, 326], "litografiska": [25, 213, 326], "anstalt": [25, 213, 326], "forlag": [25, 213, 326], "asm": [25, 213, 326], "paper": [25, 213, 326], "1951": [25, 213, 326], "weibull_distribut": [25, 213, 326], "weib": [25, 213, 326], "zeta": [25, 213, 326], "geq": [25, 213, 326], "riemann": [25, 213, 326], "american": [25, 213, 326], "linguist": [25, 213, 326], "georg": [25, 213, 326], "kingslei": [25, 213, 326], "languag": [25, 213, 326], "cambridg": [25, 213, 326], "ma": [25, 213, 326], "univ": [25, 213, 326], "1932": [25, 213, 326], "bincount": [25, 213, 326], "semilogi": [25, 213, 326], "huffman": [26, 27, 158, 214, 215], "naryhuffman": [26, 27, 158, 214, 215], "cl": [26, 30, 110, 163, 214, 218], "cpu": [26, 30, 37, 40, 62, 110, 117, 120, 163, 214, 218, 225, 228, 252], "cu": [26, 30, 110, 163, 214, 218], "izh": [26, 48, 145, 203, 214, 236], "dv_izh": [26, 48, 49, 145, 146, 214, 236, 237], "du_izh": [26, 48, 49, 145, 146, 214, 236, 237], "update_izh": [26, 48, 49, 145, 146, 214, 236, 237], "sim_izh": [26, 48, 49, 145, 146, 214, 236, 237], "lif": [26, 48, 145, 203, 214, 236], "euler_integrate_lif": [26, 48, 50, 145, 147, 214, 236, 238], "exponential_integrate_lif": [26, 48, 50, 145, 147, 214, 236, 238], "exponential_moving_averag": [26, 48, 50, 145, 147, 214, 236, 238], "unmaintain": [26, 214], "walk": [27, 28, 29, 215, 216, 217], "encode_packet": [27, 28, 29, 215, 216, 217], "decod": [27, 28, 29, 215, 216, 217], "symbol": [28, 29, 216, 217], "devic": [30, 31, 37, 110, 111, 117, 163, 164, 170, 218, 219, 225], "flat": [30, 35, 36, 110, 115, 116, 218, 223, 224], "idivup": [30, 35, 36, 110, 115, 116, 218, 223, 224], "fanci": [30, 35, 36, 110, 115, 116, 218, 223, 224], "elem": [30, 35, 36, 110, 115, 116, 218, 223, 224], "mmap": [30, 35, 36, 110, 115, 116, 218, 223, 224], "ldif": [30, 35, 36, 110, 115, 116, 218, 223, 224], "lsum": [30, 35, 36, 110, 115, 116, 218, 223, 224], "lmul": [30, 35, 36, 110, 115, 116, 218, 223, 224], "lpow": [30, 35, 36, 110, 115, 116, 218, 223, 224], "ldif2": [30, 35, 36, 110, 115, 116, 218, 223, 224], "lsum2": [30, 35, 36, 110, 115, 116, 218, 223, 224], "lmul2": [30, 35, 36, 110, 115, 116, 218, 223, 224], "ldiv2": [30, 35, 36, 110, 115, 116, 218, 223, 224], "lpow2": [30, 35, 36, 110, 115, 116, 218, 223, 224], "var": [30, 35, 36, 59, 91, 107, 110, 115, 116, 218, 223, 224, 248, 299, 325, 363], "svar": [30, 35, 36, 110, 115, 116, 218, 223, 224], "sstd": [30, 35, 36, 110, 115, 116, 218, 223, 224], "sem": [30, 35, 36, 110, 115, 116, 218, 223, 224], "corr": [30, 35, 36, 110, 115, 116, 218, 223, 224], "mdif": [30, 35, 36, 110, 115, 116, 218, 223, 224], "msum": [30, 35, 36, 110, 115, 116, 218, 223, 224], "mmul": [30, 35, 36, 110, 115, 116, 218, 223, 224], "mdiv": [30, 35, 36, 110, 115, 116, 218, 223, 224], "mpow": [30, 35, 36, 110, 115, 116, 218, 223, 224], "mmean": [30, 35, 36, 110, 115, 116, 218, 223, 224], "mstd": [30, 35, 36, 110, 115, 116, 218, 223, 224], "mvar": [30, 35, 36, 110, 115, 116, 218, 223, 224], "rnorm": [30, 35, 36, 110, 115, 116, 218, 223, 224], "gpuboxconv_cor": [30, 37, 38, 110, 117, 118, 218, 225, 226], "gpuboxconv": [30, 37, 38, 110, 117, 118, 218, 225, 226], "estimatethreadsperblock": [30, 37, 39, 110, 117, 119, 218, 225, 227], "estimateblock": [30, 37, 39, 110, 117, 119, 218, 225, 227], "estimateloop": [30, 37, 39, 110, 117, 119, 218, 225, 227], "card_info": [30, 37, 39, 110, 117, 119, 218, 225, 227], "printkernel": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpubin": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpuscalar": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpumap": [30, 37, 40, 43, 110, 117, 120, 123, 218, 225, 228, 231], "gpuintmap": [30, 37, 40, 110, 117, 120, 218, 225, 228], "expsub": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpumapeq": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpubinaryeq": [30, 37, 40, 43, 110, 117, 120, 123, 218, 225, 228, 231], "guessgputyp": [30, 37, 40, 110, 117, 120, 218, 225, 228], "togputyp": [30, 37, 40, 110, 117, 120, 218, 225, 228], "ezkern": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpupoint": [30, 37, 40, 46, 110, 117, 120, 126, 218, 225, 228, 234], "gpufloat": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpufloatmat": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpufloatr": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpuint": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpuintmat": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpuintr": [30, 37, 40, 110, 117, 120, 218, 225, 228], "gpufun": [30, 37, 110, 117, 163, 170, 218, 225], "gpulcomb": [30, 37, 41, 110, 117, 121, 218, 225, 229], "gpumean": [30, 37, 41, 110, 117, 121, 218, 225, 229], "gpunpdf": [30, 37, 41, 46, 110, 117, 121, 126, 218, 225, 229, 234], "gpulogpdf": [30, 37, 41, 110, 117, 121, 218, 225, 229], "gpuhil": [30, 37, 41, 110, 117, 121, 218, 225, 229], "gpurandf": [30, 37, 41, 110, 117, 121, 218, 225, 229], "gpuuniform": [30, 37, 41, 110, 117, 121, 218, 225, 229], "gpurandexp": [30, 37, 41, 110, 117, 121, 218, 225, 229], "random_point_sheet": [30, 37, 42, 110, 117, 122, 218, 225, 230], "uniform_point_sheet": [30, 37, 42, 110, 117, 122, 218, 225, 230], "connect_gaussian": [30, 37, 42, 110, 117, 122, 218, 225, 230], "spherepoint": [30, 37, 42, 110, 117, 122, 218, 225, 230], "logic": [30, 37, 107, 110, 117, 163, 170, 218, 225, 325], "gpult": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpugt": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpueq": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpuneq": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpulteq": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpugteq": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpunot": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpuy": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpuand": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpunor": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpuhzero": [30, 37, 43, 110, 117, 123, 218, 225, 231], "gpurang": [30, 37, 43, 110, 117, 123, 218, 225, 231], "elementwisekernel": [30, 37, 45, 110, 117, 125, 218, 225, 233], "gpubarlinedata": [30, 37, 45, 110, 117, 125, 218, 225, 233], "sebarlin": [30, 37, 45, 110, 117, 125, 218, 225, 233], "sebarline2": [30, 37, 45, 110, 117, 125, 218, 225, 233], "gpuhistogram": [30, 37, 45, 110, 117, 125, 218, 225, 233], "gpusequenceautodetect": [30, 37, 46, 110, 117, 126, 218, 225, 234], "gpupointautodist": [30, 37, 46, 110, 117, 126, 218, 225, 234], "gpuautometr": [30, 37, 46, 110, 117, 126, 218, 225, 234], "gpumagmetr": [30, 37, 46, 110, 117, 126, 218, 225, 234], "gpudotmetr": [30, 37, 46, 110, 117, 126, 218, 225, 234], "deltamag": [30, 37, 46, 110, 117, 126, 218, 225, 234], "summag": [30, 37, 46, 110, 117, 126, 218, 225, 234], "gpuderiv": [30, 37, 46, 110, 117, 126, 218, 225, 234], "gpusmooth": [30, 37, 46, 110, 117, 126, 218, 225, 234], "gputh": [30, 37, 46, 110, 117, 126, 218, 225, 234], "mulmag": [30, 37, 46, 110, 117, 126, 218, 225, 234], "frameeat": [30, 37, 46, 110, 117, 126, 218, 225, 234], "gpusubsetmean": [30, 37, 46, 110, 117, 126, 218, 225, 234], "gpusubsetgfit": [30, 37, 46, 110, 117, 126, 218, 225, 234], "gpulognpdf": [30, 37, 46, 110, 117, 126, 218, 225, 234], "fitgaussbimod": [30, 37, 46, 110, 117, 126, 218, 225, 234], "fitgausstrimod": [30, 37, 46, 110, 117, 126, 218, 225, 234], "live": [35, 115, 223], "anonym": [36, 116, 224], "sphinx": [36, 116, 224], "autodoc": [36, 116, 224], "tripl": [36, 116, 224], "quot": [36, 116, 224], "follo": [36, 116, 224], "declataion": [36, 116, 224], "naiv": [36, 116, 224], "concaten": [36, 104, 116, 224, 322], "lot": [36, 60, 116, 224, 249], "composit": [36, 116, 224], "interpret": [36, 59, 68, 75, 116, 224, 248, 261, 268, 340, 345], "eqival": [36, 116, 224], "ceil": [36, 59, 116, 224, 248], "wap": [36, 116, 224], "math": [36, 116, 224], "markup": [36, 116, 224], "elementwis": [36, 41, 116, 121, 224, 229], "lista": [36, 116, 224], "listb": [36, 116, 224], "verion": [36, 116, 224], "succesor": [36, 116, 224], "everi": [36, 68, 71, 75, 82, 91, 116, 224, 261, 264, 268, 277, 299, 340, 343, 345, 363], "pearson": [36, 82, 116, 224, 277], "rowlen": [36, 116, 224], "subscript": [36, 116, 224], "facilit": [36, 116, 224], "creation": [36, 40, 116, 120, 224, 228], "100x100": [36, 116, 224], "gpuarrai": [36, 40, 41, 116, 120, 121, 224, 228, 229], "slice": [36, 59, 116, 224, 248], "section": [36, 61, 116, 224, 250], "cudamodul": [39, 119, 227], "accepta": [39, 119, 227], "cuda": [39, 40, 119, 120, 227, 228], "block": [39, 40, 59, 75, 82, 84, 89, 119, 120, 227, 228, 248, 268, 277, 281, 295, 345, 355, 360], "per": [39, 50, 68, 75, 119, 147, 227, 238, 261, 268, 340, 345], "warp": [39, 119, 227], "n_unit": [39, 119, 227], "multiprocessor": [39, 119, 227], "my": [39, 40, 119, 120, 227, 228], "convent": [39, 43, 59, 119, 123, 227, 231, 248], "unclear": [39, 119, 227], "weather": [39, 119, 227], "processor": [39, 119, 227], "enough": [39, 119, 227], "pycuda": [39, 40, 41, 119, 120, 121, 227, 228, 229], "formatt": [40, 120, 228], "mostli": [40, 61, 120, 228, 250], "indent": [40, 120, 228], "fun": [40, 107, 120, 228, 325], "autom": [40, 120, 228], "dollar": [40, 120, 228], "clone": [40, 41, 120, 121, 228, 229], "idenitii": [40, 120, 228], "assign": [40, 85, 91, 95, 120, 228, 282, 299, 306, 356, 363, 370], "nontrivi": [40, 120, 228], "nonlinear": [40, 68, 97, 120, 228, 261, 309, 340, 373], "datatyp": [40, 93, 120, 228, 304, 368], "alloc": [40, 120, 228], "suppliment": [40, 120, 228], "hold": [40, 120, 228], "moment": [40, 83, 91, 93, 120, 228, 280, 299, 304, 354, 363, 368], "header": [40, 120, 228], "easi": [40, 120, 228], "bodi": [40, 120, 228], "tid": [40, 120, 228], "manag": [40, 120, 228], "gpuarr": [40, 120, 228], "reduct": [40, 120, 228], "succint": [40, 120, 228], "sever": [41, 87, 121, 229, 285, 359], "simpl": [41, 121, 229], "orix": [41, 121, 229], "succinctli": [41, 121, 229], "overload": [41, 121, 229], "duplic": [41, 78, 121, 229, 272, 348], "useless": [41, 121, 229], "cumath": [41, 121, 229], "syntax": [41, 121, 229], "weight1": [41, 121, 229], "weight2": [41, 121, 229], "data1": [41, 121, 229], "data2": [41, 121, 229], "succes": [41, 121, 229], "recompili": [41, 121, 229], "evalu": [41, 64, 82, 85, 86, 88, 89, 90, 93, 94, 101, 108, 121, 229, 255, 277, 282, 283, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 304, 305, 319, 356, 357, 360, 368, 369], "gpupdf": [41, 121, 229], "compili": [41, 121, 229], "standard_devi": [41, 121, 229], "distribt": [41, 121, 229], "noncoop": [41, 121, 229], "curandom": [41, 121, 229], "basic": [43, 123, 231], "iverson": [43, 123, 231], "0f": [43, 123, 231], "nevertheless": [43, 123, 231], "circumst": [43, 123, 231], "xdata": [45, 125, 233], "ydata": [45, 125, 233], "minval": [45, 125, 233], "maxval": [45, 125, 233], "lx": [45, 125, 233], "thresh": [46, 68, 126, 234, 261, 340], "13k": [46, 126, 234], "timestep": [46, 126, 234], "256x256": [46, 126, 234], "datapoint": [46, 126, 234], "inner": [46, 126, 234], "rad": [46, 126, 234], "maxfram": [46, 126, 234], "frame": [46, 59, 68, 75, 83, 126, 234, 248, 261, 268, 280, 328, 338, 340, 345, 354], "tab": [46, 126, 234], "next": [46, 126, 234], "izhikevich": [49, 146, 237], "dv": [49, 50, 146, 147, 237, 238], "neuron": [49, 84, 146, 237, 281, 355], "ntime": [49, 60, 62, 68, 71, 75, 82, 146, 237, 249, 252, 261, 264, 268, 277, 340, 343, 345], "leaki": [50, 147, 238], "fire": [50, 147, 238], "g_l": [50, 147, 238], "g_e": [50, 147, 238], "00074": [50, 147, 238], "e_": [50, 147, 238], "e_l": [50, 147, 238], "g_": [50, 147, 238], "baker": [50, 147, 238], "pinch": [50, 147, 238], "lemon": [50, 147, 238], "euler": [50, 147, 238], "though": [50, 147, 238], "synapt": [50, 147, 238], "activ": [50, 75, 147, 238, 268, 345], "uf": [50, 147, 238], "membran": [50, 147, 238], "capacit": [50, 147, 238], "leak": [50, 147, 238], "conduct": [50, 147, 238], "mv": [50, 75, 147, 238, 268, 345], "rest": [50, 147, 238], "excitatori": [50, 147, 238], "constant": [50, 66, 69, 75, 82, 86, 89, 98, 101, 108, 147, 238, 258, 262, 268, 277, 283, 295, 310, 319, 341, 345, 357, 360, 374], "hz": [50, 59, 62, 63, 64, 65, 75, 85, 147, 238, 248, 252, 254, 255, 257, 268, 282, 345, 356], "10m": [50, 147, 238], "rc": [50, 147, 238], "epsp": [50, 147, 238], "microvolt": [50, 147, 238], "1mv": [50, 147, 238], "emper": [50, 147, 238], "farad": [50, 147, 238], "volt": [50, 147, 238], "amper": [50, 147, 238], "siemen": [50, 147, 238], "ohm": [50, 147, 238], "millisiemen": [50, 147, 238], "millivolt": [50, 147, 238], "microamp": [50, 147, 238], "microfarad": [50, 147, 238], "millisecond": [50, 106, 147, 238, 324], "clf": [50, 147, 238], "y_n": [50, 147, 238], "convolv": [50, 59, 61, 73, 147, 238, 248, 250, 266, 344], "heavisid": [50, 147, 238], "And": [50, 147, 238], "exact": [50, 147, 238], "impuls": [50, 84, 98, 147, 238, 281, 310, 355, 374], "y_0": [50, 147, 238], "rbm_util": [52, 145, 148, 203, 206, 214, 240], "stutil": [52, 56, 145, 148, 152, 206, 210, 240, 244], "rbm_helper": [52, 145, 148, 203, 206, 214, 240], "rbm_sampl": [52, 145, 148, 203, 206, 214, 240], "gemoetr": [59, 248], "fa": [59, 60, 62, 75, 248, 249, 252, 268, 345], "cutoff": [59, 62, 65, 68, 69, 71, 248, 252, 257, 261, 262, 264, 340, 341, 343], "fb": [59, 60, 62, 75, 84, 248, 249, 252, 268, 281, 345, 355], "guassian": [59, 248], "clamp": [59, 248], "filter": [59, 60, 65, 69, 84, 88, 91, 248, 249, 257, 262, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 341, 355, 363], "nbasi": [59, 248], "tile": [59, 248], "minima": [59, 68, 71, 248, 261, 264, 340, 343], "amplitud": [59, 68, 71, 75, 98, 248, 261, 264, 268, 310, 340, 343, 345, 374], "envelop": [59, 68, 248, 261, 340], "hilbert": [59, 248], "narrow": [59, 248], "watch": [59, 248], "snippit": [59, 64, 248, 255], "surrond": [59, 248], "typic": [59, 75, 87, 248, 268, 285, 345, 359], "summari": [59, 63, 64, 68, 82, 83, 90, 248, 254, 255, 261, 277, 280, 297, 340, 354], "dimensionan": [59, 248], "erro": [59, 248], "handi": [59, 248], "middl": [59, 73, 75, 248, 266, 268, 344, 345], "mirrord": [59, 248], "condtit": [59, 248], "zerophas": [59, 248], "bandstop": [59, 248], "ring": [59, 248], "fiter": [59, 248], "unrealist": [59, 248], "compens": [59, 248], "underflow": [59, 89, 248, 295, 360], "stabil": [59, 75, 248, 268, 345], "freq": [59, 60, 62, 64, 248, 249, 252, 255], "lowpass": [59, 248], "highpass": [59, 248], "butterworth": [59, 248], "IF": [59, 248], "smoothat": [59, 248], "padmod": [59, 248], "filtr": [59, 248], "trim": [59, 68, 248, 261, 340], "slide": [59, 60, 75, 248, 249, 268, 345], "pct": [59, 248], "wraparound": [59, 248], "undesir": [59, 248], "ambigu": [59, 248], "halfwai": [59, 248], "instantan": [59, 248], "od": [59, 248], "decreas": [59, 248], "wari": [59, 248], "nois": [59, 68, 75, 248, 261, 268, 340, 345], "contract": [59, 248], "pad_edg": [59, 248], "treatch": [59, 248], "treat": [59, 88, 248, 286, 287, 288, 289, 290, 291, 292, 293, 294], "2xn": [59, 248], "period": [59, 248], "outsiz": [59, 248], "gap": [59, 248], "streach": [59, 248], "durat": [59, 80, 81, 248, 275, 276, 350, 351], "advanc": [59, 248], "portion": [59, 248], "reson": [59, 248, 328], "resonantdr": [59, 248], "statfunct": [59, 248], "sample_match": [59, 248], "buit": [59, 248], "ins": [59, 248], "opposit": [59, 64, 248, 255], "nyquist": [59, 64, 248, 255], "address": [59, 94, 97, 248, 305, 309, 369, 373], "bandwidth": [59, 60, 63, 64, 248, 249, 254, 255], "artifact": [59, 248], "240": [59, 248], "singnal": [59, 248], "quadrat": [59, 248], "particularli": [59, 248], "higkinemat": [59, 248], "trajectori": [59, 91, 248, 299, 363], "track": [59, 88, 248, 286, 287, 288, 289, 290, 291, 292, 293, 294], "sharp": [59, 248], "spectrum": [59, 60, 63, 248, 249, 254], "cc": [59, 82, 248, 277], "ignore_nan": [59, 248], "trend": [59, 248], "score": [59, 60, 75, 248, 249, 268, 345], "preven": [59, 248], "instabl": [59, 248], "refular": [59, 248], "subtract": [59, 82, 248, 277], "analytic_sign": [59, 248], "doplot": [59, 83, 248, 280, 354], "analyt": [59, 68, 71, 75, 248, 261, 264, 268, 340, 343, 345], "cross": [59, 60, 71, 80, 82, 84, 89, 248, 249, 264, 275, 277, 281, 295, 343, 350, 355, 360], "rectifi": [59, 248], "heuriddddst": [59, 248], "basd": [59, 248], "abnorm": [59, 248], "extremum": [59, 248], "voltag": [59, 248], "curvatur": [59, 248], "demodul": [59, 248], "lag": [59, 80, 84, 248, 275, 281, 350, 355], "fft": [59, 60, 62, 64, 248, 249, 252, 255], "matter": [59, 248], "acf": [59, 248], "mirror": [59, 61, 69, 248, 250, 262, 341], "partial_t": [59, 248], "syst": [59, 248], "nlag": [59, 248], "lagspac": [59, 248], "retrospect": [59, 248], "causal": [59, 248], "featur": [59, 81, 82, 89, 248, 276, 277, 295, 351, 360], "interp1d": [59, 85, 248, 282, 356], "autocorrelogram": [59, 248], "triggerd": [59, 248], "dspguru": [59, 248], "dsp": [59, 248], "howto": [59, 248], "gloabal": [59, 248], "smoothli": [59, 69, 248, 262, 341], "group_siz": [59, 248], "killep": [59, 248], "quirk": [59, 248], "done": [59, 248], "maze": [59, 248], "mous": [59, 248], "spend": [59, 248], "dynam": [59, 68, 248, 261, 340], "dedicatd": [59, 248], "heurist": [59, 64, 248, 255], "dan": [59, 248], "helen": [59, 248], "ethan": [59, 248], "isn": [59, 248], "rankdata": [59, 248], "dedic": [59, 248], "timepoint": [59, 68, 75, 248, 261, 268, 340, 345], "actual": [59, 64, 248, 255], "uinform": [59, 248], "raw": [59, 64, 248, 255], "blank": [59, 248], "did": [59, 81, 248, 276, 351], "recontruct": [59, 248], "original_x": [59, 248], "lfp": [59, 60, 62, 64, 84, 248, 249, 252, 255, 281, 355], "hbw": [59, 248], "record": [59, 248], "1000hz": [59, 248], "60hz": [59, 248], "overton": [59, 248], "usa": [59, 248], "replc": [59, 248], "stastist": [59, 248], "nchannel": [60, 62, 68, 71, 75, 249, 252, 261, 264, 268, 340, 343, 345], "essenti": [60, 87, 249, 285, 359], "bandpass": [60, 249], "bank": [60, 249], "timescal": [60, 62, 249, 252], "synchroni": [60, 62, 75, 249, 252, 268, 345], "kuromoto": [60, 249], "attain": [60, 249], "z_i": [60, 249], "z_j": [60, 249], "involv": [60, 249], "ramirez": [60, 249], "OF": [60, 249], "THE": [60, 249], "FOR": [60, 249], "AND": [60, 249], "nch": [60, 62, 249, 252], "ntaper": [60, 63, 64, 249, 254, 255], "taper": [60, 63, 64, 249, 254, 255], "ft": [60, 84, 249, 281, 355], "bw": [60, 63, 249, 254], "strang": [60, 249], "preserv": [60, 82, 249, 277], "jarvi": [60, 249], "mitra": [60, 249], "comp": [60, 249], "p732": [60, 249], "pesaran": [60, 249], "2008": [60, 249], "supp": [60, 249], "p5": [60, 249], "suggest": [60, 249], "citep": [60, 249], "jarvis2001sampl": [60, 249], "pesaran2008fre": [60, 249], "nt": [60, 249], "nvariabl": [60, 249], "ntrial": [60, 66, 84, 97, 249, 258, 281, 309, 355, 373], "bootstrap": [60, 97, 249, 309, 373], "resampl": [60, 97, 249, 309, 373], "bia": [60, 64, 83, 91, 249, 255, 280, 299, 354, 363], "occassion": [60, 249], "\u00b2": [60, 77, 249, 271, 347], "2h": [61, 250], "2w": [61, 250], "shaoe": [61, 250], "3d": [61, 68, 250, 261, 340], "supersed": [61, 69, 250, 262, 341], "k2": [61, 250], "wavelength": [62, 68, 252, 261, 340], "tempor": [62, 252], "nfreqss": [62, 252], "post": [62, 81, 96, 252, 276, 307, 351, 371], "magnitu": [62, 252], "nfreq": [62, 252], "specral": [62, 252], "tradeoff": [62, 252], "wavelt": [62, 252], "half_bandwidth_paramet": [63, 254], "dpss": [63, 254], "advantag": [63, 254], "expens": [63, 64, 254, 255], "nodc": [63, 254], "NOT": [63, 88, 254, 286, 287, 288, 289, 290, 291, 292, 293, 294], "lowf": [63, 254], "highf": [63, 254], "use_parallel": [63, 254], "coupl": [64, 83, 255, 280, 354], "sigal": [64, 255], "vicin": [64, 255], "attai": [64, 255], "npp": [64, 255], "transpose_warn": [64, 255], "nspike": [64, 255], "nwindow": [64, 255], "trace": [64, 255], "surround": [64, 255], "expos": [64, 255], "examin": [64, 75, 255, 268, 328, 345], "lfp_segment": [64, 255], "booleanl": [64, 255], "nrand": [64, 255], "deafult": [64, 255], "nrandom": [64, 255], "trian": [64, 255], "savitski": [65, 257], "golai": [65, 257], "polynomi": [65, 257], "spline": [65, 257], "fc": [65, 257], "2m": [65, 257], "ou": [66, 258], "ornstein": [66, 258], "uhlenbeck": [66, 258], "damp": [66, 98, 258, 310, 374], "rxr": [67, 260, 339], "electrod": [68, 261, 340], "nd": [68, 75, 261, 268, 340, 345], "kuramoto": [68, 75, 261, 268, 340, 345], "kuramotor": [68, 75, 261, 268, 340, 345], "syncroni": [68, 261, 340], "diment": [68, 261, 340], "exept": [68, 261, 340], "arra": [68, 261, 340], "electrode_spac": [68, 261, 340], "mm": [68, 69, 261, 262, 340, 341], "4mm": [68, 261, 340], "utah": [68, 261, 340], "nclockwis": [68, 261, 340], "clockwis": [68, 71, 261, 264, 340, 343], "nanticlockwis": [68, 261, 340], "anticlockwis": [68, 71, 261, 264, 340, 343], "nsaddl": [68, 261, 340], "saddl": [68, 71, 261, 264, 340, 343], "nmaxima": [68, 261, 340], "nminima": [68, 261, 340], "magnitur": [68, 261, 340], "cycl": [68, 75, 261, 268, 340, 345], "accur": [68, 69, 101, 108, 261, 262, 319, 340, 341], "assess": [68, 261, 340], "directionl": [68, 261, 340], "contribut": [68, 261, 340], "direction": [68, 261, 340], "pgd": [68, 261, 340], "planar": [68, 261, 340], "denois": [68, 261, 340], "accuraci": [68, 89, 261, 295, 340, 360], "mitig": [68, 261, 340], "impact": [68, 261, 340], "rubinto": [68, 261, 340], "2009": [68, 261, 340], "pg": [68, 261, 340], "easier": [68, 75, 261, 268, 340, 345], "nonlinearli": [68, 261, 340], "empti": [68, 261, 340], "crop": [68, 261, 340], "lxkxntime": [68, 261, 340], "primarili": [69, 262, 341], "h_w": [69, 262, 341], "aa": [69, 262, 341], "anti": [69, 262, 341], "antialias": [69, 262, 341], "supsampl": [69, 262, 341], "retrun": [69, 262, 341], "intead": [69, 262, 341], "a_i": [69, 262, 341], "b_k": [69, 262, 341], "1j": [69, 262, 341], "guess": [69, 89, 91, 94, 262, 295, 299, 305, 341, 360, 363, 369], "brute": [69, 262, 341], "dctcut": [69, 262, 341], "compact": [69, 262, 341], "whole": [69, 262, 341], "downsampl": [69, 80, 262, 275, 341, 350], "made": [69, 262, 341], "insert": [69, 262, 341], "custom": [69, 262, 341], "impliment": [69, 262, 341], "frist": [69, 262, 341], "aribtrari": [69, 262, 341], "niter": [69, 262, 341], "multielectrod": [70, 263, 342], "session": [70, 263, 342], "ch1": [70, 263, 342], "ch2": [70, 263, 342], "epoch": [70, 75, 263, 268, 342, 345], "phi": [70, 263, 342], "cgid": [70, 263, 342], "dz": [71, 264, 343], "zorder": [71, 264, 343], "wheel": [71, 264, 343], "flow": [71, 264, 343], "anf": [71, 264, 343], "compass": [71, 264, 343], "needl": [71, 264, 343], "complex1": [71, 264, 343], "search": [71, 90, 107, 264, 297, 325, 343], "s1": [71, 75, 264, 268, 343, 345], "s2": [71, 75, 264, 268, 343, 345], "merg": [71, 78, 107, 264, 272, 325, 343, 348], "nearbi": [71, 78, 88, 264, 272, 286, 287, 288, 289, 290, 291, 292, 293, 294, 343, 348], "pk": [71, 264, 343], "neighbord": [71, 264, 343], "docoalesc": [71, 264, 343], "edgeavoid": [71, 264, 343], "antclockwis": [71, 264, 343], "ss": [71, 264, 343], "plotsaddl": [71, 264, 343], "unknown": [71, 264, 328, 343], "defualt": [71, 83, 264, 280, 343, 354], "sadd": [71, 264, 343], "curl": [71, 264, 343], "wt": [71, 264, 343], "smt": [71, 264, 343], "smf": [71, 264, 343], "id": [71, 264, 328, 343], "mesh": [73, 78, 266, 272, 344, 348], "absorb": [73, 266, 344], "showim": [73, 266, 344], "bounari": [73, 266, 344], "continuum": [73, 266, 344], "magic": [73, 266, 344], "piecewis": [73, 266, 344], "johncostella": [73, 266, 344], "conceptu": [73, 266, 344], "repeatli": [73, 266, 344], "orthogon": [73, 266, 344], "help": [73, 266, 344], "maintain": [73, 266, 344], "oppos": [73, 266, 344], "pop": [75, 268, 345], "unitless": [75, 268, 345], "analag": [75, 268, 345], "tr": [75, 268, 345], "spk120918": [75, 268, 345], "get_all_analytic_pop": [75, 268, 345], "600": [75, 268, 345], "han": [75, 268, 345], "population_signal_coher": [75, 268, 345], "textrm": [75, 268, 345], "langl": [75, 268, 345], "rangl": [75, 268, 345], "notion": [75, 268, 345], "medv": [75, 268, 345], "intoform": [76, 269], "poini": [76, 269], "otherpoint": [76, 269], "inf": [76, 101, 108, 269, 319], "witin": [76, 269], "imatch": [76, 269], "xymatch": [76, 269], "closestmatch": [76, 269], "z1": [76, 269], "z2": [76, 269], "xypoint": [77, 271, 347], "ntriangl": [78, 272, 348], "indec": [78, 272, 348], "delaunai": [78, 272, 348], "simplic": [78, 272, 348], "nedg": [78, 272, 348], "iz": [78, 272, 348], "microd": [78, 272, 348], "edgelist": [78, 272, 348], "join": [78, 104, 272, 322, 348], "centroid": [78, 272, 348], "keword": [78, 272, 348], "train": [80, 81, 82, 84, 89, 275, 276, 277, 281, 295, 350, 351, 355, 360], "t1": [80, 275, 350], "t2": [80, 275, 350], "maxlag": [80, 275, 350], "stand": [80, 275, 350], "sampleat": [80, 275, 350], "adapt": [80, 87, 275, 285, 350, 359], "xc": [80, 84, 275, 281, 350, 355], "raster": [80, 275, 350], "binsiz": [80, 275, 350], "snip": [81, 276, 351], "li": [81, 276, 351], "wf": [81, 276, 351], "vallei": [81, 276, 351], "trough": [81, 276, 351], "extrema": [81, 276, 351], "123": [81, 276, 351], "thin": [81, 276, 351], "amplituc": [81, 276, 351], "300": [81, 97, 276, 309, 351, 373], "isol": [81, 276, 351], "20160802_waveform_segment": [81, 276, 351], "0349055393": [81, 276, 351], "i_f": [81, 276, 351], "logpdf": [82, 88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "fwd": [82, 91, 277, 299, 363], "bwd": [82, 91, 277, 299, 363], "mvpoissonapproxim": [82, 91, 277, 299, 363], "estiamt": [82, 277], "nfold": [82, 277], "parrit": [82, 277], "crossvalid": [82, 89, 277, 295, 360], "partit": [82, 277], "xtrain": [82, 277], "ytrain": [82, 277], "xtest": [82, 277], "ytest": [82, 277], "ntimepoint": [82, 277], "ndatapoint": [82, 277], "xh": [82, 277], "l1": [82, 98, 277, 310, 374], "vali": [82, 277], "hx": [82, 277], "err": [82, 277], "errmethod": [82, 277], "fold": [82, 89, 277, 295, 360], "lstsq": [82, 277], "anoth": [82, 277], "penalti": [82, 89, 98, 277, 295, 310, 360, 374], "constand": [82, 277], "extra": [82, 94, 104, 277, 305, 322, 369], "bhat": [82, 91, 277, 299, 363], "traina": [82, 277], "trainb": [82, 277], "testa": [82, 277], "testb": [82, 277], "blocksiz": [82, 277], "blockshuffl": [82, 277], "integet": [82, 277], "prefix": [82, 103, 104, 106, 277, 321, 322, 324], "ndarari": [82, 91, 277, 299, 363], "halv": [82, 277], "kept": [82, 277], "n_keep": [82, 277], "rank_defici": [82, 277], "princip": [82, 277], "nyfeatur": [82, 277], "fewer": [82, 104, 277, 322], "covariac": [82, 277], "abbrevi": [82, 277], "colum": [82, 277], "nobserv": [82, 277], "regressor": [82, 277], "intercept": [82, 277], "auc": [82, 277], "gini": [82, 277], "impur": [82, 277], "r\u00b2": [82, 277], "g\u00b2": [82, 277], "l0": [82, 277], "explain": [82, 277], "devianc": [82, 277], "likelihood": [82, 90, 91, 277, 297, 299, 363], "held": [82, 277], "contour": [83, 280, 354], "dof": [83, 280, 354], "squared_averag": [83, 280, 354], "averagind": [84, 281, 355], "apologi": [84, 281, 355], "nreplica": [84, 281, 355], "nneuron": [84, 281, 355], "fftspike": [84, 281, 355], "shrinkag": [84, 281, 355], "strenth": [84, 281, 355], "prior_var": [84, 281, 355], "x_grid": [85, 282, 356], "gaussian_kd": [85, 87, 282, 285, 356, 359], "kde": [85, 87, 96, 282, 285, 307, 356, 359, 371], "input_unit": [85, 282, 356], "intens": [85, 282, 356], "divis": [85, 282, 356], "ngrid": [85, 282, 356], "histogram2d": [85, 282, 356], "counterpart": [86, 283, 357], "longdoubl": [86, 101, 108, 283, 319, 357], "whih": [86, 283, 357], "pobabl": [86, 91, 283, 299, 357, 363], "pick": [86, 91, 283, 299, 357, 363], "accord": [86, 91, 283, 299, 357, 363], "gist": [87, 285, 359], "joferkington": [87, 285, 359], "d95101a61a02e0ba63e5": [87, 285, 359], "joe": [87, 285, 359], "kington": [87, 285, 359], "gridsiz": [87, 285, 359], "400": [87, 285, 359], "1e7": [87, 285, 359], "coord": [87, 285, 359], "nx": [87, 285, 359], "ny": [87, 285, 359], "xmin": [87, 285, 359], "xmax": [87, 285, 359], "ymin": [87, 285, 359], "ymax": [87, 285, 359], "weigh": [87, 285, 359], "w_i": [87, 285, 359], "sampled_dens": [87, 285, 359], "applicationss": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "logp": [88, 91, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 363], "abstract": [88, 91, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 363], "kxn": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "OR": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "pinv": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "nxk": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "p1": [88, 91, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 363], "p2": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "handle_neg": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "unitari": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "entropi": [88, 92, 286, 287, 288, 289, 290, 291, 292, 293, 294, 300, 364], "m0": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "p0": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "kl": [88, 92, 286, 287, 288, 289, 290, 291, 292, 293, 294, 300, 364], "diverg": [88, 92, 286, 287, 288, 289, 290, 291, 292, 293, 294, 300, 364], "mgv_dkl": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "c0": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "joint": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "kalman": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "posterior": [88, 91, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 363], "inva": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "transit": [88, 91, 286, 287, 288, 289, 290, 291, 292, 293, 294, 299, 363], "aca": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "inv": [88, 286, 287, 288, 289, 290, 291, 292, 293, 294], "instal": [89, 295, 360], "sklearn": [89, 295, 360], "scikit": [89, 95, 295, 306, 360, 370], "stabl": [89, 91, 295, 299, 360, 363], "net": [89, 295, 360], "devel": [89, 295, 360], "hessian": [89, 94, 295, 305, 360, 369], "jacobian": [89, 94, 295, 305, 360, 369], "overflow": [89, 91, 295, 299, 360, 363], "penal": [89, 295, 360], "solver": [89, 94, 295, 305, 360, 369], "link": [89, 295, 360], "explicitli": [89, 295, 360], "n_observ": [89, 295, 360], "n_featur": [89, 295, 360], "l2penalti": [89, 295, 360], "mu0": [89, 91, 95, 295, 299, 306, 360, 363, 370], "b0": [89, 295, 360], "descent": [89, 295, 360], "nxval": [89, 295, 360], "roc": [89, 295, 360], "mu_hat": [89, 295, 360], "b_hat": [89, 295, 360], "tfrac": [89, 295, 360], "1920929e": [89, 295, 360], "07": [89, 295, 360], "jac": [89, 94, 295, 305, 360, 369], "climb": [90, 297], "pargrid": [90, 297], "hyperparamet": [90, 297], "qualiti": [90, 297], "par": [90, 297], "allresult": [90, 297], "hidden": [91, 299, 363], "markov": [91, 299, 363], "loga": [91, 299, 363], "logb": [91, 299, 363], "param": [91, 94, 299, 305, 363, 369], "p01": [91, 299, 363], "p10": [91, 299, 363], "mu1": [91, 95, 299, 306, 363, 370], "maxim": [91, 299, 363], "latent": [91, 299, 363], "em": [91, 299, 363], "asymmetr": [91, 299, 363], "viterbi_algorithm": [91, 299, 363], "nstate": [91, 299, 363], "emiss": [91, 299, 363], "probabilti": [91, 299, 363], "maxit": [91, 93, 299, 304, 363, 368], "overal": [91, 299, 363], "baum": [91, 299, 363], "welch": [91, 299, 363], "algoirthm": [91, 299, 363], "n_timepoint": [91, 299, 363], "n_hidden_st": [91, 299, 363], "n_observable_st": [91, 299, 363], "pr": [91, 299, 363], "n_state": [91, 299, 363], "n_hid": [91, 299, 363], "converg": [91, 93, 94, 299, 304, 305, 363, 368, 369], "0001": [91, 299, 363], "minit": [91, 299, 363], "x0hat": [91, 299, 363], "llikelihood": [91, 299, 363], "tranisit": [91, 299, 363], "go": [91, 299, 363], "diffus": [91, 299, 363], "quadratur": [91, 299, 363], "\u03bb": [91, 299, 363], "cox": [91, 299, 363], "a\u00b2x\u00b2": [91, 299, 363], "2abx": [91, 299, 363], "b\u00b2": [91, 299, 363], "tm": [91, 299, 363], "evolv": [91, 299, 363], "px": [91, 299, 363], "concern": [92, 300, 364], "dkl": [92, 300, 364], "nat": [92, 300, 364], "shannon": [92, 300, 364], "minp": [92, 300, 364], "mayb": [92, 300, 364], "extrapol": [92, 300, 364], "mont": [93, 304, 368], "carlo": [93, 304, 368], "simplicit": [93, 304, 368], "slowli": [93, 304, 368], "ex": [93, 304, 368], "ask": [93, 105, 304, 323, 368], "exx": [93, 304, 368], "runtimeerror": [94, 305, 369], "distinguish": [94, 305, 369], "hess": [94, 305, 369], "printerror": [94, 305, 369], "failthrough": [94, 305, 369], "simplex_onli": [94, 305, 369], "dontus": [94, 305, 369], "maxfev": [94, 305, 369], "maxgev": [94, 305, 369], "retri": [94, 305, 369], "few": [94, 305, 369], "doesn": [94, 105, 305, 323, 369], "unresolv": [94, 305, 369], "upon": [94, 305, 369], "robus": [94, 305, 369], "ultim": [94, 305, 369], "nelder": [94, 305, 369], "mead": [94, 305, 369], "simplex": [94, 305, 369], "provided": [94, 305, 369], "simple_onli": [94, 305, 369], "dure": [94, 305, 369], "toi": [95, 107, 306, 325, 370], "presum": [95, 105, 306, 323, 370], "mistur": [95, 306, 370], "pr0": [95, 306, 370], "obsrev": [95, 306, 370], "belong": [95, 306, 370], "pr1": [95, 306, 370], "burst": [96, 307, 371], "refractori": [96, 307, 371], "mainli": [96, 307, 371], "isi": [96, 307, 371], "st": [96, 307, 371], "py": [97, 309, 373], "wilson": [97, 309, 373], "pid": [97, 309, 373], "pn": [97, 309, 373], "nonparametr": [97, 309, 373], "societi": [97, 309, 373], "methodolog": [97, 309, 373], "1995": [97, 309, 373], "289": [97, 309, 373], "_____________________________________________________________________________": [97, 309, 373], "tom": [97, 309, 373], "nichol": [97, 309, 373], "02": [97, 309, 373], "2007": [97, 309, 373], "cvid": [97, 309, 373], "cvn": [97, 309, 373], "pvalue_dictionari": [97, 309, 373], "test_popul": [97, 309, 373], "null_popul": [97, 309, 373], "cure": [97, 309, 373], "suffici": [97, 309, 373], "popa": [97, 309, 373], "popb": [97, 309, 373], "na": [97, 309, 373], "nb": [97, 309, 373], "task": [98, 310, 374], "constrain": [98, 310, 374], "lamb": [98, 310, 374], "dc": [98, 310, 374], "mx": [98, 310, 374], "7433921782255195601e": [101, 108, 319], "returntyp": [101, 108, 319], "641747557046326023": [101, 108, 319], "fist": [101, 108, 319], "factori": [101, 108, 319], "secretli": [103, 321], "hdf": [103, 321], "squeez": [103, 321], "detectstr": [103, 321], "detectscalar": [103, 321], "unpack": [103, 321], "subpath": [103, 321], "sep": [103, 104, 321, 322], "hfdf5": [103, 321], "outbut": [103, 321], "tabwidth": [104, 322], "suffix": [104, 322], "newlin": [104, 322], "columnd": [104, 322], "weird": [104, 322], "collat": [104, 322], "decim": [104, 322], "prec": [104, 322], "shortest": [104, 322], "viabl": [104, 322], "notat": [104, 322], "exp_digit": [104, 322], "separtor": [104, 322], "4f": [104, 322], "ncol": [104, 322], "1265665": [104, 322], "filepath": [105, 323], "436198": [105, 323], "ye": [105, 323], "raw_input": [105, 323], "3041986": [105, 323], "apt": [105, 323], "hit": [105, 323], "enter": [105, 107, 323, 325], "yymmdd": [106, 324], "d_": [106, 324], "doprint": [106, 324], "5849800": [106, 324], "elaps": [106, 324], "timestamp": [106, 324], "varnam": [107, 325], "someth": [107, 325], "kw": [107, 325], "prompt": [107, 325], "matlabpath": [107, 325], "concept": [107, 325], "dector": [107, 325], "extend": [107, 325], "emit": [107, 325], "infix": [107, 325], "foo": [107, 325], "pip": [107, 325], "krg": [107, 325], "matfil": [107, 325], "matfilecach": [107, 325], "ext": [107, 325], "png": [107, 325], "dirnam": [107, 325], "944536": [107, 325], "member": [107, 325], "449560": [107, 325], "1175208": [107, 325], "eleg": [107, 325], "camelcas": [107, 325], "camel": [107, 325], "4303492": [107, 325], "underscor": [107, 325], "lost": [107, 325], "synonym": [107, 325], "neurotool": [133, 139, 143, 326], "rbm": [145, 156, 203, 214], "linenois": 328, "morlet_coher": 328, "signalnum": 328, "handler": [328, 338], "action": [328, 338], "sig_dfl": [328, 338], "sig_ign": [328, 338], "getsign": [328, 338], "notic": [328, 338], "interrupt": [328, 338], "stack": [328, 338], "pthread_sigmask": 328, "fetch": 328, "sigpend": 328, "pend": 328, "deliveri": 328, "sigwait": 328, "sigset": 328, "suspend": 328, "valid_sign": 328, "intenum": 328, "itimererror": 328, "itimer_error": 328, "sigmask": 328, "sig_block": 328, "sig_unblock": 328, "sig_setmask": 328, "sighup": 328, "sigint": 328, "sigquit": 328, "sigil": 328, "sigtrap": 328, "sigabrt": 328, "sigiot": 328, "sigbu": 328, "sigfp": 328, "sigkil": 328, "sigusr1": 328, "sigsegv": 328, "sigusr2": 328, "sigpip": 328, "sigalrm": 328, "sigterm": 328, "sigchld": 328, "sigcld": 328, "sigcont": 328, "sigstop": 328, "sigtstp": 328, "sigttin": 328, "sigttou": 328, "sigurg": 328, "sigxcpu": 328, "sigxfsz": 328, "sigvtalrm": 328, "sigprof": 328, "sigwinch": 328, "sigio": 328, "sigpol": 328, "sigpwr": 328, "sigsi": 328, "sigrtmin": 328, "sigrtmax": 328, "struct_siginfo": 328, "sigwaitinfo": 328, "sigtimedwait": 328, "si_signo": 328, "si_cod": 328, "si_errno": 328, "si_pid": 328, "si_uid": 328, "si_statu": 328, "si_band": 328, "n_field": 328, "n_sequence_field": 328, "n_unnamed_field": 328, "errno": 328, "exit": 328, "spatialpsd": 339, "wave_parametric_model": 339}, "objects": {"": [[108, 0, 0, "-", "functions"], [109, 0, 0, "-", "getfftw"], [110, 0, 0, "-", "gpu"], [128, 0, 0, "-", "graphics"], [134, 0, 0, "-", "jobs"], [141, 0, 0, "-", "linalg"], [145, 0, 0, "-", "models"], [156, 0, 0, "-", "neurotools"], [326, 0, 0, "-", "nlab"], [328, 0, 0, "-", "signal"], [339, 0, 0, "-", "spatial"]], "functions": [[108, 1, 1, "", "dsigmoid"], [108, 1, 1, "", "f"], [108, 1, 1, "", "f1"], [108, 1, 1, "", "f2"], [108, 1, 1, "", "g"], [108, 1, 1, "", "inversesigmoid"], [108, 1, 1, "", "log_factorial"], [108, 1, 1, "", "npdf"], [108, 1, 1, "", "sexp"], [108, 1, 1, "", "sigmoid"], [108, 1, 1, "", "slog"]], "getfftw": [[109, 1, 1, "", "ftwthr"]], "gpu": [[111, 0, 0, "-", "cl"], [115, 0, 0, "-", "cpu"], [117, 0, 0, "-", "cu"]], "gpu.cl": [[111, 1, 1, "", "missing"]], "gpu.cpu": [[116, 0, 0, "-", "util"]], "gpu.cpu.util": [[116, 1, 1, "", "cmap"], [116, 1, 1, "", "compose"], [116, 1, 1, "", "corr"], [116, 1, 1, "", "cov"], [116, 1, 1, "", "cut"], [116, 1, 1, "", "document"], [116, 1, 1, "", "dot"], [116, 1, 1, "", "elem"], [116, 1, 1, "", "fancy"], [116, 1, 1, "", "flat"], [116, 1, 1, "", "idivup"], [116, 1, 1, "", "ldif"], [116, 1, 1, "", "ldif2"], [116, 1, 1, "", "ldiv"], [116, 1, 1, "", "ldiv2"], [116, 1, 1, "", "length"], [116, 1, 1, "", "lmul"], [116, 1, 1, "", "lmul2"], [116, 1, 1, "", "lpow"], [116, 1, 1, "", "lpow2"], [116, 1, 1, "", "lsum"], [116, 1, 1, "", "lsum2"], [116, 1, 1, "", "mdif"], [116, 1, 1, "", "mdiv"], [116, 1, 1, "", "mean"], [116, 1, 1, "", "mmap"], [116, 1, 1, "", "mmean"], [116, 1, 1, "", "mmul"], [116, 1, 1, "", "mpow"], [116, 1, 1, "", "mstd"], [116, 1, 1, "", "msum"], [116, 1, 1, "", "mu"], [116, 1, 1, "", "mvar"], [116, 1, 1, "", "norm"], [116, 1, 1, "", "rnorm"], [116, 1, 1, "", "scale"], [116, 1, 1, "", "sem"], [116, 1, 1, "", "shift"], [116, 1, 1, "", "sigma"], [116, 1, 1, "", "sstd"], [116, 1, 1, "", "std"], [116, 1, 1, "", "svar"], [116, 1, 1, "", "var"]], "gpu.cu": [[118, 0, 0, "-", "convolution"], [119, 0, 0, "-", "device"], [120, 0, 0, "-", "function"], [121, 0, 0, "-", "gpufun"], [122, 0, 0, "-", "graph"], [123, 0, 0, "-", "logic"], [125, 0, 0, "-", "plot"], [126, 0, 0, "-", "sequence"]], "gpu.cu.convolution": [[118, 1, 1, "", "gpuboxconv"], [118, 1, 1, "", "gpuboxconv_core"]], "gpu.cu.device": [[119, 1, 1, "", "card_info"], [119, 1, 1, "", "estimateBlocks"], [119, 1, 1, "", "estimateLoop"], [119, 1, 1, "", "estimateThreadsPerBlock"], [119, 1, 1, "", "missing"]], "gpu.cu.function": [[120, 1, 1, "", "cpu"], [120, 1, 1, "", "expsub"], [120, 1, 1, "", "ezkern"], [120, 1, 1, "", "format"], [120, 1, 1, "", "gpubin"], [120, 1, 1, "", "gpubinaryeq"], [120, 1, 1, "", "gpufloat"], [120, 1, 1, "", "gpufloatmat"], [120, 1, 1, "", "gpufloatred"], [120, 1, 1, "", "gpuint"], [120, 1, 1, "", "gpuintmap"], [120, 1, 1, "", "gpuintmat"], [120, 1, 1, "", "gpuintred"], [120, 1, 1, "", "gpumap"], [120, 1, 1, "", "gpumapeq"], [120, 1, 1, "", "gpupointer"], [120, 1, 1, "", "gpuscalar"], [120, 1, 1, "", "guessGPUType"], [120, 1, 1, "", "kernel"], [120, 1, 1, "", "printKernel"], [120, 1, 1, "", "toGPUType"]], "gpu.cu.gpufun": [[121, 1, 1, "", "gpuhill"], [121, 1, 1, "", "gpulcomb"], [121, 1, 1, "", "gpulogpdf"], [121, 1, 1, "", "gpumean"], [121, 1, 1, "", "gpunpdf"], [121, 1, 1, "", "gpurandexp"], [121, 1, 1, "", "gpurandf"], [121, 1, 1, "", "gpuuniform"]], "gpu.cu.graph": [[122, 1, 1, "", "connect_gaussian"], [122, 1, 1, "", "random_point_sheet"], [122, 1, 1, "", "spherepoints"], [122, 1, 1, "", "uniform_point_sheet"]], "gpu.cu.logic": [[123, 1, 1, "", "gpuand"], [123, 1, 1, "", "gpueq"], [123, 1, 1, "", "gpugt"], [123, 1, 1, "", "gpugteq"], [123, 1, 1, "", "gpuhzero"], [123, 1, 1, "", "gpult"], [123, 1, 1, "", "gpulteq"], [123, 1, 1, "", "gpuneq"], [123, 1, 1, "", "gpunor"], [123, 1, 1, "", "gpunot"], [123, 1, 1, "", "gpurange"], [123, 1, 1, "", "gpuyes"]], "gpu.cu.plot": [[125, 1, 1, "", "ElementwiseKernel"], [125, 1, 1, "", "gpubarlinedata"], [125, 1, 1, "", "gpuhistogram"], [125, 1, 1, "", "missing"], [125, 1, 1, "", "sebarline"], [125, 1, 1, "", "sebarline2"]], "gpu.cu.sequence": [[126, 1, 1, "", "FrameEater"], [126, 1, 1, "", "GPUAutometric"], [126, 1, 1, "", "GPUDotmetric"], [126, 1, 1, "", "GPUMagmetric"], [126, 1, 1, "", "GPUPointAutoDistance"], [126, 1, 1, "", "GPUSequenceAutoDetect"], [126, 1, 1, "", "deltamag"], [126, 1, 1, "", "fitgaussbimodal"], [126, 1, 1, "", "fitgausstrimodal"], [126, 1, 1, "", "gpuderivative"], [126, 1, 1, "", "gpulognpdf"], [126, 1, 1, "", "gpunpdf"], [126, 1, 1, "", "gpusmooth"], [126, 1, 1, "", "gpusubsetgfit"], [126, 1, 1, "", "gpusubsetmean"], [126, 1, 1, "", "gputhing"], [126, 1, 1, "", "mulmag"], [126, 1, 1, "", "summag"]], "graphics": [[129, 0, 0, "-", "color"], [130, 0, 0, "-", "image"], [131, 0, 0, "-", "matplotlib"], [132, 0, 0, "-", "plot"], [133, 0, 0, "-", "pygame"]], "graphics.color": [[129, 1, 1, "", "RGBtoHCL"], [129, 1, 1, "", "bit16_RGB_to_tuple"], [129, 1, 1, "", "bit16_print_color"], [129, 1, 1, "", "circularly_smooth_colormap"], [129, 1, 1, "", "code_to_16bit"], [129, 1, 1, "", "color_boxplot"], [129, 1, 1, "", "complexHLArr2RGB"], [129, 1, 1, "", "darkhues"], [129, 1, 1, "", "enumerate_fast_colors"], [129, 1, 1, "", "hcl2rgb"], [129, 1, 1, "", "hex2rgb"], [129, 1, 1, "", "hex_pack_BGR"], [129, 1, 1, "", "hsv2rgb"], [129, 1, 1, "", "hue_angle"], [129, 1, 1, "", "isoluminance1"], [129, 1, 1, "", "isoluminance2"], [129, 1, 1, "", "isoluminance3"], [129, 1, 1, "", "isoluminance4"], [129, 1, 1, "", "lighthues"], [129, 1, 1, "", "lightness"], [129, 1, 1, "", "luminance_matrix"], [129, 1, 1, "", "match_luminance"], [129, 1, 1, "", "medhues"], [129, 1, 1, "", "radl2rgb"], [129, 1, 1, "", "radl2rgbLUT"], [129, 1, 1, "", "rgb2hex"], [129, 1, 1, "", "rotate"], [129, 1, 1, "", "show_complete_fast_pallet"], [129, 1, 1, "", "show_complete_fastest_pallet"], [129, 1, 1, "", "show_fast_pallet"], [129, 1, 1, "", "show_hex_pallet"], [129, 1, 1, "", "tuple_to_bit16"], [129, 1, 1, "", "tuple_to_bit24"]], "graphics.image": [[130, 1, 1, "", "mean_center"], [130, 1, 1, "", "median_center"], [130, 1, 1, "", "unitize"], [130, 1, 1, "", "visualize_derivatives"]], "graphics.matplotlib": [[131, 1, 1, "", "draw_array"], [131, 1, 1, "", "hide_toolbar"], [131, 1, 1, "", "start"]], "graphics.plot": [[132, 1, 1, "", "Gaussian2D_covellipse"], [132, 2, 1, "", "HandlerSquare"], [132, 1, 1, "", "addspikes"], [132, 1, 1, "", "adjust_axis_height_pixels"], [132, 1, 1, "", "adjust_xlabel_space"], [132, 1, 1, "", "adjust_ylabel_space"], [132, 1, 1, "", "adjustmap"], [132, 1, 1, "", "animate_complex"], [132, 1, 1, "", "arrow_between"], [132, 1, 1, "", "axvbands"], [132, 1, 1, "", "axvstripe"], [132, 1, 1, "", "barcompare"], [132, 1, 1, "", "base_legend"], [132, 1, 1, "", "border_width"], [132, 1, 1, "", "boxplot_significance"], [132, 1, 1, "", "broken_step"], [132, 1, 1, "", "ceil_to_precision"], [132, 1, 1, "", "centers"], [132, 1, 1, "", "clean_y_range"], [132, 1, 1, "", "cleartop"], [132, 1, 1, "", "colored_boxplot"], [132, 1, 1, "", "complex_axis"], [132, 1, 1, "", "covariance_crosshairs"], [132, 1, 1, "", "darken"], [132, 1, 1, "", "domask"], [132, 1, 1, "", "draw_circle"], [132, 1, 1, "", "expand_axis_x"], [132, 1, 1, "", "expand_axis_y"], [132, 1, 1, "", "expand_y_range"], [132, 1, 1, "", "figurebox"], [132, 1, 1, "", "flathist"], [132, 1, 1, "", "floor_to_precision"], [132, 1, 1, "", "force_aspect"], [132, 1, 1, "", "fsize"], [132, 1, 1, "", "fudgex"], [132, 1, 1, "", "fudgexy"], [132, 1, 1, "", "fudgey"], [132, 1, 1, "", "get_aspect"], [132, 1, 1, "", "get_ax_pixel"], [132, 1, 1, "", "get_ax_pixel_ratio"], [132, 1, 1, "", "get_ax_size"], [132, 1, 1, "", "get_bbox"], [132, 1, 1, "", "good_colorbar"], [132, 1, 1, "", "hsigbar"], [132, 1, 1, "", "inhibition_arrow"], [132, 1, 1, "", "label"], [132, 1, 1, "", "left_legend"], [132, 1, 1, "", "lighten"], [132, 1, 1, "", "match_image_aspect"], [132, 1, 1, "", "mock_legend"], [132, 1, 1, "", "more_xticks"], [132, 1, 1, "", "more_yticks"], [132, 1, 1, "", "nice_legend"], [132, 1, 1, "", "nicebp"], [132, 1, 1, "", "nicex"], [132, 1, 1, "", "nicexy"], [132, 1, 1, "", "nicey"], [132, 1, 1, "", "noaxis"], [132, 1, 1, "", "noclip"], [132, 1, 1, "", "nolabels"], [132, 1, 1, "", "notick"], [132, 1, 1, "", "nox"], [132, 1, 1, "", "noxlabels"], [132, 1, 1, "", "noxyaxes"], [132, 1, 1, "", "noy"], [132, 1, 1, "", "noylabels"], [132, 1, 1, "", "nudge_axis_baseline"], [132, 1, 1, "", "nudge_axis_left"], [132, 1, 1, "", "nudge_axis_x"], [132, 1, 1, "", "nudge_axis_y"], [132, 1, 1, "", "nudge_axis_y_pixels"], [132, 1, 1, "", "pikeplot"], [132, 1, 1, "", "pixels_to_xfigureunits"], [132, 1, 1, "", "pixels_to_xunits"], [132, 1, 1, "", "pixels_to_yfigureunits"], [132, 1, 1, "", "pixels_to_yunits"], [132, 1, 1, "", "plotCWT"], [132, 1, 1, "", "plotWTPhase"], [132, 1, 1, "", "plotWTPhaseFig"], [132, 1, 1, "", "plot_complex"], [132, 1, 1, "", "plotz"], [132, 1, 1, "", "positivex"], [132, 1, 1, "", "positivexy"], [132, 1, 1, "", "positivey"], [132, 1, 1, "", "px2x"], [132, 1, 1, "", "px2y"], [132, 1, 1, "", "rangeover"], [132, 1, 1, "", "rangeto"], [132, 1, 1, "", "restore_limits"], [132, 1, 1, "", "right_legend"], [132, 1, 1, "", "rightaxis"], [132, 1, 1, "", "righty"], [132, 1, 1, "", "round_to_precision"], [132, 1, 1, "", "save_limits"], [132, 1, 1, "", "savefigure"], [132, 1, 1, "", "shade_edges"], [132, 1, 1, "", "shellmean"], [132, 1, 1, "", "shellplot"], [132, 1, 1, "", "sigbar"], [132, 1, 1, "", "simple_arrow"], [132, 1, 1, "", "simpleaxis"], [132, 1, 1, "", "simpleraxis"], [132, 1, 1, "", "simplerright"], [132, 1, 1, "", "splitz"], [132, 1, 1, "", "stderrplot"], [132, 1, 1, "", "subfigurelabel"], [132, 1, 1, "", "trendline"], [132, 1, 1, "", "unit_crosshairs"], [132, 1, 1, "", "unitaxes"], [132, 1, 1, "", "unitx"], [132, 1, 1, "", "unity"], [132, 1, 1, "", "widths_to_centers"], [132, 1, 1, "", "widths_to_edges"], [132, 1, 1, "", "wtpshow"], [132, 1, 1, "", "xbartext"], [132, 1, 1, "", "xfigureunits_to_pixels"], [132, 1, 1, "", "xin"], [132, 1, 1, "", "xscalebar"], [132, 1, 1, "", "xticklen"], [132, 1, 1, "", "xtickpad"], [132, 1, 1, "", "xunits_to_pixels"], [132, 1, 1, "", "xylim"], [132, 1, 1, "", "ybartext"], [132, 1, 1, "", "yfigureunits_to_pixels"], [132, 1, 1, "", "yin"], [132, 1, 1, "", "yscalebar"], [132, 1, 1, "", "yticklen"], [132, 1, 1, "", "ytickpad"], [132, 1, 1, "", "yunits_to_pixels"], [132, 1, 1, "", "zerohline"], [132, 1, 1, "", "zerovline"], [132, 1, 1, "", "zoombox"]], "graphics.plot.HandlerSquare": [[132, 3, 1, "", "create_artists"]], "graphics.pygame": [[133, 1, 1, "", "draw_array"], [133, 1, 1, "", "enable_vsync"], [133, 1, 1, "", "start"]], "jobs": [[135, 0, 0, "-", "cache"], [136, 0, 0, "-", "closure"], [138, 0, 0, "-", "filenames"], [139, 0, 0, "-", "initialize_system_cache"], [140, 0, 0, "-", "parallel"]], "jobs.cache": [[135, 1, 1, "", "base64hash"], [135, 1, 1, "", "base64hash2byte"], [135, 1, 1, "", "disk_cacher"], [135, 1, 1, "", "file_string_to_signature"], [135, 1, 1, "", "function_hash_no_subroutines"], [135, 1, 1, "", "function_hash_with_subroutines"], [135, 1, 1, "", "function_signature"], [135, 1, 1, "", "get_cache_path"], [135, 1, 1, "", "get_source"], [135, 1, 1, "", "hierarchical_cacher"], [135, 1, 1, "", "human_decode"], [135, 1, 1, "", "human_encode"], [135, 1, 1, "", "locate_cached"], [135, 1, 1, "", "read_cache_entry"], [135, 1, 1, "", "signature_to_file_string"], [135, 1, 1, "", "validate_for_matfile"], [135, 1, 1, "", "validate_for_numpy"]], "jobs.closure": [[136, 1, 1, "", "csv"], [136, 1, 1, "", "get_subroutines"], [136, 1, 1, "", "inspect_function_closure"], [136, 1, 1, "", "is_immutable"], [136, 1, 1, "", "is_probably_safe"], [136, 1, 1, "", "verify_function_closure"]], "jobs.filenames": [[138, 1, 1, "", "check_filename"], [138, 1, 1, "", "is_dangerous_filename"], [138, 1, 1, "", "validate_argument_signature"]], "jobs.initialize_system_cache": [[139, 1, 1, "", "cache_test"], [139, 1, 1, "", "du"], [139, 1, 1, "", "initialize_caches"], [139, 1, 1, "", "launch_cache_synchronizers"], [139, 1, 1, "", "purge_ram_cache"], [139, 1, 1, "", "purge_ssd_cache"], [139, 1, 1, "", "reset_ramdisk"]], "jobs.parallel": [[140, 1, 1, "", "close_pool"], [140, 1, 1, "", "eval_from_cached"], [140, 1, 1, "", "function_fingerprint"], [140, 1, 1, "", "parallel_cached_wrapper"], [140, 1, 1, "", "parallel_error_handling"], [140, 1, 1, "", "parallel_indirect_wrapper"], [140, 1, 1, "", "pararraymap"], [140, 1, 1, "", "parimap"], [140, 1, 1, "", "parmap"], [140, 1, 1, "", "parmap_dict"], [140, 1, 1, "", "reset_pool"]], "linalg": [[142, 0, 0, "-", "arguments"], [143, 0, 0, "-", "matrix"], [144, 0, 0, "-", "operators"]], "linalg.arguments": [[142, 1, 1, "", "ascolumn"], [142, 1, 1, "", "asrow"], [142, 1, 1, "", "assertcolumn"], [142, 1, 1, "", "assertfinite"], [142, 1, 1, "", "assertfinitereal"], [142, 1, 1, "", "assertreal"], [142, 1, 1, "", "assertrow"], [142, 1, 1, "", "assertshape"], [142, 1, 1, "", "assertsquare"], [142, 1, 1, "", "assertvector"], [142, 1, 1, "", "assquare"], [142, 1, 1, "", "asvector"], [142, 1, 1, "", "iscolumn"], [142, 1, 1, "", "isrow"], [142, 1, 1, "", "issquare"], [142, 1, 1, "", "scalar"]], "linalg.matrix": [[143, 1, 1, "", "Ldistance"], [143, 1, 1, "", "Llasso"], [143, 1, 1, "", "abserr"], [143, 1, 1, "", "autopredict"], [143, 1, 1, "", "cartesian_product"], [143, 1, 1, "", "check_covmat"], [143, 1, 1, "", "check_covmat_fast"], [143, 1, 1, "", "check_finite_real"], [143, 1, 1, "", "cholupdate"], [143, 1, 1, "", "cholupdate_eye"], [143, 1, 1, "", "cinv"], [143, 1, 1, "", "column"], [143, 1, 1, "", "csolve"], [143, 1, 1, "", "errmx"], [143, 1, 1, "", "kronsum"], [143, 1, 1, "", "laplace_kernel"], [143, 1, 1, "", "ldiv"], [143, 1, 1, "", "logdet"], [143, 1, 1, "", "match_covariance"], [143, 1, 1, "", "maxeig"], [143, 1, 1, "", "nearPDHigham"], [143, 1, 1, "", "nearPSDRebonatoJackel"], [143, 1, 1, "", "normedcovariance"], [143, 1, 1, "", "psd_eig"], [143, 1, 1, "", "qf"], [143, 1, 1, "", "rcond"], [143, 1, 1, "", "rdiv"], [143, 1, 1, "", "real_eig"], [143, 1, 1, "", "reglstsq"], [143, 1, 1, "", "rmatrix"], [143, 1, 1, "", "row"], [143, 1, 1, "", "rsolt"], [143, 1, 1, "", "rsolve"], [143, 1, 1, "", "selector_matrix"], [143, 1, 1, "", "solt"], [143, 1, 1, "", "top_v"], [143, 1, 1, "", "tril_elements"], [143, 1, 1, "", "triu_elements"], [143, 1, 1, "", "wheremax"], [143, 1, 1, "", "wheremin"]], "linalg.operators": [[144, 1, 1, "", "adjacency1D"], [144, 1, 1, "", "adjacency2D"], [144, 1, 1, "", "adjacency2D_circular"], [144, 1, 1, "", "adjacency2d_rotational"], [144, 1, 1, "", "circular1DblurOperator"], [144, 1, 1, "", "cosine_kernel"], [144, 1, 1, "", "covfrom"], [144, 1, 1, "", "delta"], [144, 1, 1, "", "differentiator"], [144, 1, 1, "", "diffuseFT1D"], [144, 1, 1, "", "flatcov"], [144, 1, 1, "", "gaussian1DblurOperator"], [144, 1, 1, "", "gaussian2DblurOperator"], [144, 1, 1, "", "integrator"], [144, 1, 1, "", "laplacian1D"], [144, 1, 1, "", "laplacian1D_circular"], [144, 1, 1, "", "laplacian2D"], [144, 1, 1, "", "laplacianFT1D"], [144, 1, 1, "", "log_cosine_basis"], [144, 1, 1, "", "make_cosine_basis"], [144, 1, 1, "", "oucov"], [144, 1, 1, "", "separable_guassian_blur"], [144, 1, 1, "", "wienerFT1D"]], "models": [[146, 0, 0, "-", "izh"], [147, 0, 0, "-", "lif"]], "models.izh": [[146, 1, 1, "", "du_izh"], [146, 1, 1, "", "dv_izh"], [146, 1, 1, "", "sim_izh"], [146, 1, 1, "", "update_izh"]], "models.lif": [[147, 1, 1, "", "euler_integrate_LIF"], [147, 1, 1, "", "exponential_integrate_LIF"], [147, 1, 1, "", "exponential_moving_average"]], "neurotools": [[181, 0, 0, "-", "graphics"], [192, 0, 0, "-", "jobs"], [199, 0, 0, "-", "linalg"], [213, 0, 0, "-", "nlab"], [214, 0, 0, "-", "obsolete"], [248, 0, 0, "-", "signal"], [260, 0, 0, "-", "spatial"], [274, 0, 0, "-", "spikes"], [277, 0, 0, "-", "stats"], [317, 0, 0, "-", "util"]], "neurotools.graphics": [[182, 0, 0, "-", "color"], [183, 0, 0, "-", "colormaps"], [184, 0, 0, "-", "dendron"], [185, 0, 0, "-", "fabio_maps"], [186, 0, 0, "-", "image"], [187, 0, 0, "-", "matplotlib"], [188, 0, 0, "-", "plot"], [189, 0, 0, "-", "pygame"]], "neurotools.graphics.color": [[182, 1, 1, "", "RGBtoHCL"], [182, 1, 1, "", "bit16_RGB_to_tuple"], [182, 1, 1, "", "bit16_print_color"], [182, 1, 1, "", "circularly_smooth_colormap"], [182, 1, 1, "", "code_to_16bit"], [182, 1, 1, "", "color_boxplot"], [182, 1, 1, "", "complexHLArr2RGB"], [182, 1, 1, "", "darkhues"], [182, 1, 1, "", "enumerate_fast_colors"], [182, 1, 1, "", "hcl2rgb"], [182, 1, 1, "", "hex2rgb"], [182, 1, 1, "", "hex_pack_BGR"], [182, 1, 1, "", "hsv2rgb"], [182, 1, 1, "", "hue_angle"], [182, 1, 1, "", "isoluminance1"], [182, 1, 1, "", "isoluminance2"], [182, 1, 1, "", "isoluminance3"], [182, 1, 1, "", "isoluminance4"], [182, 1, 1, "", "lighthues"], [182, 1, 1, "", "lightness"], [182, 1, 1, "", "luminance_matrix"], [182, 1, 1, "", "match_luminance"], [182, 1, 1, "", "medhues"], [182, 1, 1, "", "radl2rgb"], [182, 1, 1, "", "radl2rgbLUT"], [182, 1, 1, "", "rgb2hex"], [182, 1, 1, "", "rotate"], [182, 1, 1, "", "show_complete_fast_pallet"], [182, 1, 1, "", "show_complete_fastest_pallet"], [182, 1, 1, "", "show_fast_pallet"], [182, 1, 1, "", "show_hex_pallet"], [182, 1, 1, "", "tuple_to_bit16"], [182, 1, 1, "", "tuple_to_bit24"]], "neurotools.graphics.colormaps": [[183, 1, 1, "", "test_colormaps"]], "neurotools.graphics.dendron": [[184, 1, 1, "", "count_nodes"], [184, 1, 1, "", "get_depth"], [184, 1, 1, "", "inorder_traversal"], [184, 1, 1, "", "list_like"], [184, 1, 1, "", "plot_brackets"], [184, 1, 1, "", "plot_brackets_polar"]], "neurotools.graphics.image": [[186, 1, 1, "", "mean_center"], [186, 1, 1, "", "median_center"], [186, 1, 1, "", "unitize"], [186, 1, 1, "", "visualize_derivatives"]], "neurotools.graphics.matplotlib": [[187, 1, 1, "", "draw_array"], [187, 1, 1, "", "hide_toolbar"], [187, 1, 1, "", "start"]], "neurotools.graphics.plot": [[188, 1, 1, "", "Gaussian2D_covellipse"], [188, 2, 1, "", "HandlerSquare"], [188, 1, 1, "", "addspikes"], [188, 1, 1, "", "adjust_axis_height_pixels"], [188, 1, 1, "", "adjust_xlabel_space"], [188, 1, 1, "", "adjust_ylabel_space"], [188, 1, 1, "", "adjustmap"], [188, 1, 1, "", "animate_complex"], [188, 1, 1, "", "arrow_between"], [188, 1, 1, "", "axvbands"], [188, 1, 1, "", "axvstripe"], [188, 1, 1, "", "barcompare"], [188, 1, 1, "", "base_legend"], [188, 1, 1, "", "border_width"], [188, 1, 1, "", "boxplot_significance"], [188, 1, 1, "", "broken_step"], [188, 1, 1, "", "ceil_to_precision"], [188, 1, 1, "", "centers"], [188, 1, 1, "", "clean_y_range"], [188, 1, 1, "", "cleartop"], [188, 1, 1, "", "colored_boxplot"], [188, 1, 1, "", "complex_axis"], [188, 1, 1, "", "covariance_crosshairs"], [188, 1, 1, "", "darken"], [188, 1, 1, "", "domask"], [188, 1, 1, "", "draw_circle"], [188, 1, 1, "", "expand_axis_x"], [188, 1, 1, "", "expand_axis_y"], [188, 1, 1, "", "expand_y_range"], [188, 1, 1, "", "figurebox"], [188, 1, 1, "", "flathist"], [188, 1, 1, "", "floor_to_precision"], [188, 1, 1, "", "force_aspect"], [188, 1, 1, "", "fsize"], [188, 1, 1, "", "fudgex"], [188, 1, 1, "", "fudgexy"], [188, 1, 1, "", "fudgey"], [188, 1, 1, "", "get_aspect"], [188, 1, 1, "", "get_ax_pixel"], [188, 1, 1, "", "get_ax_pixel_ratio"], [188, 1, 1, "", "get_ax_size"], [188, 1, 1, "", "get_bbox"], [188, 1, 1, "", "good_colorbar"], [188, 1, 1, "", "hsigbar"], [188, 1, 1, "", "inhibition_arrow"], [188, 1, 1, "", "label"], [188, 1, 1, "", "left_legend"], [188, 1, 1, "", "lighten"], [188, 1, 1, "", "match_image_aspect"], [188, 1, 1, "", "mock_legend"], [188, 1, 1, "", "more_xticks"], [188, 1, 1, "", "more_yticks"], [188, 1, 1, "", "nice_legend"], [188, 1, 1, "", "nicebp"], [188, 1, 1, "", "nicex"], [188, 1, 1, "", "nicexy"], [188, 1, 1, "", "nicey"], [188, 1, 1, "", "noaxis"], [188, 1, 1, "", "noclip"], [188, 1, 1, "", "nolabels"], [188, 1, 1, "", "notick"], [188, 1, 1, "", "nox"], [188, 1, 1, "", "noxlabels"], [188, 1, 1, "", "noxyaxes"], [188, 1, 1, "", "noy"], [188, 1, 1, "", "noylabels"], [188, 1, 1, "", "nudge_axis_baseline"], [188, 1, 1, "", "nudge_axis_left"], [188, 1, 1, "", "nudge_axis_x"], [188, 1, 1, "", "nudge_axis_y"], [188, 1, 1, "", "nudge_axis_y_pixels"], [188, 1, 1, "", "pikeplot"], [188, 1, 1, "", "pixels_to_xfigureunits"], [188, 1, 1, "", "pixels_to_xunits"], [188, 1, 1, "", "pixels_to_yfigureunits"], [188, 1, 1, "", "pixels_to_yunits"], [188, 1, 1, "", "plotCWT"], [188, 1, 1, "", "plotWTPhase"], [188, 1, 1, "", "plotWTPhaseFig"], [188, 1, 1, "", "plot_complex"], [188, 1, 1, "", "plotz"], [188, 1, 1, "", "positivex"], [188, 1, 1, "", "positivexy"], [188, 1, 1, "", "positivey"], [188, 1, 1, "", "px2x"], [188, 1, 1, "", "px2y"], [188, 1, 1, "", "rangeover"], [188, 1, 1, "", "rangeto"], [188, 1, 1, "", "restore_limits"], [188, 1, 1, "", "right_legend"], [188, 1, 1, "", "rightaxis"], [188, 1, 1, "", "righty"], [188, 1, 1, "", "round_to_precision"], [188, 1, 1, "", "save_limits"], [188, 1, 1, "", "savefigure"], [188, 1, 1, "", "shade_edges"], [188, 1, 1, "", "shellmean"], [188, 1, 1, "", "shellplot"], [188, 1, 1, "", "sigbar"], [188, 1, 1, "", "simple_arrow"], [188, 1, 1, "", "simpleaxis"], [188, 1, 1, "", "simpleraxis"], [188, 1, 1, "", "simplerright"], [188, 1, 1, "", "splitz"], [188, 1, 1, "", "stderrplot"], [188, 1, 1, "", "subfigurelabel"], [188, 1, 1, "", "trendline"], [188, 1, 1, "", "unit_crosshairs"], [188, 1, 1, "", "unitaxes"], [188, 1, 1, "", "unitx"], [188, 1, 1, "", "unity"], [188, 1, 1, "", "widths_to_centers"], [188, 1, 1, "", "widths_to_edges"], [188, 1, 1, "", "wtpshow"], [188, 1, 1, "", "xbartext"], [188, 1, 1, "", "xfigureunits_to_pixels"], [188, 1, 1, "", "xin"], [188, 1, 1, "", "xscalebar"], [188, 1, 1, "", "xticklen"], [188, 1, 1, "", "xtickpad"], [188, 1, 1, "", "xunits_to_pixels"], [188, 1, 1, "", "xylim"], [188, 1, 1, "", "ybartext"], [188, 1, 1, "", "yfigureunits_to_pixels"], [188, 1, 1, "", "yin"], [188, 1, 1, "", "yscalebar"], [188, 1, 1, "", "yticklen"], [188, 1, 1, "", "ytickpad"], [188, 1, 1, "", "yunits_to_pixels"], [188, 1, 1, "", "zerohline"], [188, 1, 1, "", "zerovline"], [188, 1, 1, "", "zoombox"]], "neurotools.graphics.plot.HandlerSquare": [[188, 3, 1, "", "create_artists"]], "neurotools.graphics.pygame": [[189, 1, 1, "", "draw_array"], [189, 1, 1, "", "enable_vsync"], [189, 1, 1, "", "start"]], "neurotools.jobs": [[193, 0, 0, "-", "cache"], [194, 0, 0, "-", "closure"], [195, 0, 0, "-", "filenames"], [196, 0, 0, "-", "initialize_system_cache"], [197, 0, 0, "-", "ndecorator"], [198, 0, 0, "-", "parallel"]], "neurotools.jobs.cache": [[193, 1, 1, "", "base64hash"], [193, 1, 1, "", "base64hash2byte"], [193, 1, 1, "", "disk_cacher"], [193, 1, 1, "", "file_string_to_signature"], [193, 1, 1, "", "function_hash_no_subroutines"], [193, 1, 1, "", "function_hash_with_subroutines"], [193, 1, 1, "", "function_signature"], [193, 1, 1, "", "get_cache_path"], [193, 1, 1, "", "get_source"], [193, 1, 1, "", "hierarchical_cacher"], [193, 1, 1, "", "human_decode"], [193, 1, 1, "", "human_encode"], [193, 1, 1, "", "locate_cached"], [193, 1, 1, "", "read_cache_entry"], [193, 1, 1, "", "signature_to_file_string"], [193, 1, 1, "", "validate_for_matfile"], [193, 1, 1, "", "validate_for_numpy"]], "neurotools.jobs.closure": [[194, 1, 1, "", "csv"], [194, 1, 1, "", "get_subroutines"], [194, 1, 1, "", "inspect_function_closure"], [194, 1, 1, "", "is_immutable"], [194, 1, 1, "", "is_probably_safe"], [194, 1, 1, "", "verify_function_closure"]], "neurotools.jobs.filenames": [[195, 1, 1, "", "check_filename"], [195, 1, 1, "", "is_dangerous_filename"], [195, 1, 1, "", "validate_argument_signature"]], "neurotools.jobs.initialize_system_cache": [[196, 1, 1, "", "cache_test"], [196, 1, 1, "", "du"], [196, 1, 1, "", "initialize_caches"], [196, 1, 1, "", "launch_cache_synchronizers"], [196, 1, 1, "", "purge_ram_cache"], [196, 1, 1, "", "purge_ssd_cache"], [196, 1, 1, "", "reset_ramdisk"]], "neurotools.jobs.ndecorator": [[197, 1, 1, "", "argument_signature"], [197, 1, 1, "", "clear_memoized"], [197, 1, 1, "", "listit"], [197, 1, 1, "", "memoize"], [197, 1, 1, "", "print_signature"], [197, 1, 1, "", "sanitize"], [197, 1, 1, "", "summarize_function"], [197, 1, 1, "", "timed"], [197, 1, 1, "", "tupleit"], [197, 1, 1, "", "unwrap"]], "neurotools.jobs.parallel": [[198, 1, 1, "", "close_pool"], [198, 1, 1, "", "eval_from_cached"], [198, 1, 1, "", "function_fingerprint"], [198, 1, 1, "", "parallel_cached_wrapper"], [198, 1, 1, "", "parallel_error_handling"], [198, 1, 1, "", "parallel_indirect_wrapper"], [198, 1, 1, "", "pararraymap"], [198, 1, 1, "", "parimap"], [198, 1, 1, "", "parmap"], [198, 1, 1, "", "parmap_dict"], [198, 1, 1, "", "reset_pool"]], "neurotools.linalg": [[200, 0, 0, "-", "arguments"], [201, 0, 0, "-", "matrix"], [202, 0, 0, "-", "operators"]], "neurotools.linalg.arguments": [[200, 1, 1, "", "ascolumn"], [200, 1, 1, "", "asrow"], [200, 1, 1, "", "assertcolumn"], [200, 1, 1, "", "assertfinite"], [200, 1, 1, "", "assertfinitereal"], [200, 1, 1, "", "assertreal"], [200, 1, 1, "", "assertrow"], [200, 1, 1, "", "assertshape"], [200, 1, 1, "", "assertsquare"], [200, 1, 1, "", "assertvector"], [200, 1, 1, "", "assquare"], [200, 1, 1, "", "asvector"], [200, 1, 1, "", "iscolumn"], [200, 1, 1, "", "isrow"], [200, 1, 1, "", "issquare"], [200, 1, 1, "", "scalar"]], "neurotools.linalg.matrix": [[201, 1, 1, "", "Ldistance"], [201, 1, 1, "", "Llasso"], [201, 1, 1, "", "abserr"], [201, 1, 1, "", "autopredict"], [201, 1, 1, "", "cartesian_product"], [201, 1, 1, "", "check_covmat"], [201, 1, 1, "", "check_covmat_fast"], [201, 1, 1, "", "check_finite_real"], [201, 1, 1, "", "cholupdate"], [201, 1, 1, "", "cholupdate_eye"], [201, 1, 1, "", "cinv"], [201, 1, 1, "", "column"], [201, 1, 1, "", "csolve"], [201, 1, 1, "", "errmx"], [201, 1, 1, "", "kronsum"], [201, 1, 1, "", "laplace_kernel"], [201, 1, 1, "", "ldiv"], [201, 1, 1, "", "logdet"], [201, 1, 1, "", "match_covariance"], [201, 1, 1, "", "maxeig"], [201, 1, 1, "", "nearPDHigham"], [201, 1, 1, "", "nearPSDRebonatoJackel"], [201, 1, 1, "", "normedcovariance"], [201, 1, 1, "", "psd_eig"], [201, 1, 1, "", "qf"], [201, 1, 1, "", "rcond"], [201, 1, 1, "", "rdiv"], [201, 1, 1, "", "real_eig"], [201, 1, 1, "", "reglstsq"], [201, 1, 1, "", "rmatrix"], [201, 1, 1, "", "row"], [201, 1, 1, "", "rsolt"], [201, 1, 1, "", "rsolve"], [201, 1, 1, "", "selector_matrix"], [201, 1, 1, "", "solt"], [201, 1, 1, "", "top_v"], [201, 1, 1, "", "tril_elements"], [201, 1, 1, "", "triu_elements"], [201, 1, 1, "", "wheremax"], [201, 1, 1, "", "wheremin"]], "neurotools.linalg.operators": [[202, 1, 1, "", "adjacency1D"], [202, 1, 1, "", "adjacency2D"], [202, 1, 1, "", "adjacency2D_circular"], [202, 1, 1, "", "adjacency2d_rotational"], [202, 1, 1, "", "circular1DblurOperator"], [202, 1, 1, "", "cosine_kernel"], [202, 1, 1, "", "covfrom"], [202, 1, 1, "", "delta"], [202, 1, 1, "", "differentiator"], [202, 1, 1, "", "diffuseFT1D"], [202, 1, 1, "", "flatcov"], [202, 1, 1, "", "gaussian1DblurOperator"], [202, 1, 1, "", "gaussian2DblurOperator"], [202, 1, 1, "", "integrator"], [202, 1, 1, "", "laplacian1D"], [202, 1, 1, "", "laplacian1D_circular"], [202, 1, 1, "", "laplacian2D"], [202, 1, 1, "", "laplacianFT1D"], [202, 1, 1, "", "log_cosine_basis"], [202, 1, 1, "", "make_cosine_basis"], [202, 1, 1, "", "oucov"], [202, 1, 1, "", "separable_guassian_blur"], [202, 1, 1, "", "wienerFT1D"]], "neurotools.nlab": [[213, 1, 1, "", "beta"], [213, 1, 1, "", "binomial"], [213, 1, 1, "", "chisquare"], [213, 1, 1, "", "choice"], [213, 1, 1, "", "dirichlet"], [213, 1, 1, "", "exponential"], [213, 1, 1, "", "f"], [213, 1, 1, "", "gamma"], [213, 1, 1, "", "geometric"], [213, 1, 1, "", "get_state"], [213, 1, 1, "", "gumbel"], [213, 1, 1, "", "hypergeometric"], [213, 1, 1, "", "laplace"], [213, 1, 1, "", "logistic"], [213, 1, 1, "", "lognormal"], [213, 1, 1, "", "logseries"], [213, 1, 1, "", "multinomial"], [213, 1, 1, "", "multivariate_normal"], [213, 1, 1, "", "negative_binomial"], [213, 1, 1, "", "noncentral_chisquare"], [213, 1, 1, "", "noncentral_f"], [213, 1, 1, "", "normal"], [213, 1, 1, "", "pareto"], [213, 1, 1, "", "permutation"], [213, 1, 1, "", "poisson"], [213, 1, 1, "", "power"], [213, 1, 1, "", "rand"], [213, 1, 1, "", "randint"], [213, 1, 1, "", "randn"], [213, 1, 1, "", "random"], [213, 1, 1, "", "random_integers"], [213, 1, 1, "", "random_sample"], [213, 1, 1, "", "rayleigh"], [213, 1, 1, "", "seed"], [213, 1, 1, "", "set_state"], [213, 1, 1, "", "shuffle"], [213, 1, 1, "", "standard_cauchy"], [213, 1, 1, "", "standard_exponential"], [213, 1, 1, "", "standard_gamma"], [213, 1, 1, "", "standard_normal"], [213, 1, 1, "", "standard_t"], [213, 1, 1, "", "triangular"], [213, 1, 1, "", "uniform"], [213, 1, 1, "", "vonmises"], [213, 1, 1, "", "wald"], [213, 1, 1, "", "weibull"], [213, 1, 1, "", "zipf"]], "neurotools.obsolete": [[215, 0, 0, "-", "encoding"], [218, 0, 0, "-", "gpu"], [236, 0, 0, "-", "models"]], "neurotools.obsolete.encoding": [[216, 0, 0, "-", "Huffman"], [217, 0, 0, "-", "NaryHuffman"]], "neurotools.obsolete.encoding.Huffman": [[216, 2, 1, "", "Huffman"]], "neurotools.obsolete.encoding.Huffman.Huffman": [[216, 2, 1, "", "Leaf"], [216, 2, 1, "", "Node"], [216, 3, 1, "", "decode"], [216, 3, 1, "", "encode"], [216, 3, 1, "", "encode_packets"]], "neurotools.obsolete.encoding.Huffman.Huffman.Node": [[216, 3, 1, "", "walk"]], "neurotools.obsolete.encoding.NaryHuffman": [[217, 2, 1, "", "NaryHuffman"]], "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman": [[217, 2, 1, "", "Leaf"], [217, 2, 1, "", "Node"], [217, 3, 1, "", "decode"], [217, 3, 1, "", "encode"], [217, 3, 1, "", "encode_packets"]], "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Node": [[217, 3, 1, "", "walk"]], "neurotools.obsolete.gpu": [[219, 0, 0, "-", "cl"], [223, 0, 0, "-", "cpu"], [225, 0, 0, "-", "cu"]], "neurotools.obsolete.gpu.cl": [[219, 1, 1, "", "missing"]], "neurotools.obsolete.gpu.cpu": [[224, 0, 0, "-", "util"]], "neurotools.obsolete.gpu.cpu.util": [[224, 1, 1, "", "cmap"], [224, 1, 1, "", "compose"], [224, 1, 1, "", "corr"], [224, 1, 1, "", "cov"], [224, 1, 1, "", "cut"], [224, 1, 1, "", "document"], [224, 1, 1, "", "dot"], [224, 1, 1, "", "elem"], [224, 1, 1, "", "fancy"], [224, 1, 1, "", "flat"], [224, 1, 1, "", "idivup"], [224, 1, 1, "", "ldif"], [224, 1, 1, "", "ldif2"], [224, 1, 1, "", "ldiv"], [224, 1, 1, "", "ldiv2"], [224, 1, 1, "", "length"], [224, 1, 1, "", "lmul"], [224, 1, 1, "", "lmul2"], [224, 1, 1, "", "lpow"], [224, 1, 1, "", "lpow2"], [224, 1, 1, "", "lsum"], [224, 1, 1, "", "lsum2"], [224, 1, 1, "", "mdif"], [224, 1, 1, "", "mdiv"], [224, 1, 1, "", "mean"], [224, 1, 1, "", "mmap"], [224, 1, 1, "", "mmean"], [224, 1, 1, "", "mmul"], [224, 1, 1, "", "mpow"], [224, 1, 1, "", "mstd"], [224, 1, 1, "", "msum"], [224, 1, 1, "", "mu"], [224, 1, 1, "", "mvar"], [224, 1, 1, "", "norm"], [224, 1, 1, "", "rnorm"], [224, 1, 1, "", "scale"], [224, 1, 1, "", "sem"], [224, 1, 1, "", "shift"], [224, 1, 1, "", "sigma"], [224, 1, 1, "", "sstd"], [224, 1, 1, "", "std"], [224, 1, 1, "", "svar"], [224, 1, 1, "", "var"]], "neurotools.obsolete.gpu.cu": [[226, 0, 0, "-", "convolution"], [227, 0, 0, "-", "device"], [228, 0, 0, "-", "function"], [229, 0, 0, "-", "gpufun"], [230, 0, 0, "-", "graph"], [231, 0, 0, "-", "logic"], [233, 0, 0, "-", "plot"], [234, 0, 0, "-", "sequence"]], "neurotools.obsolete.gpu.cu.convolution": [[226, 1, 1, "", "gpuboxconv"], [226, 1, 1, "", "gpuboxconv_core"]], "neurotools.obsolete.gpu.cu.device": [[227, 1, 1, "", "card_info"], [227, 1, 1, "", "estimateBlocks"], [227, 1, 1, "", "estimateLoop"], [227, 1, 1, "", "estimateThreadsPerBlock"], [227, 1, 1, "", "missing"]], "neurotools.obsolete.gpu.cu.function": [[228, 1, 1, "", "cpu"], [228, 1, 1, "", "expsub"], [228, 1, 1, "", "ezkern"], [228, 1, 1, "", "format"], [228, 1, 1, "", "gpubin"], [228, 1, 1, "", "gpubinaryeq"], [228, 1, 1, "", "gpufloat"], [228, 1, 1, "", "gpufloatmat"], [228, 1, 1, "", "gpufloatred"], [228, 1, 1, "", "gpuint"], [228, 1, 1, "", "gpuintmap"], [228, 1, 1, "", "gpuintmat"], [228, 1, 1, "", "gpuintred"], [228, 1, 1, "", "gpumap"], [228, 1, 1, "", "gpumapeq"], [228, 1, 1, "", "gpupointer"], [228, 1, 1, "", "gpuscalar"], [228, 1, 1, "", "guessGPUType"], [228, 1, 1, "", "kernel"], [228, 1, 1, "", "printKernel"], [228, 1, 1, "", "toGPUType"]], "neurotools.obsolete.gpu.cu.gpufun": [[229, 1, 1, "", "gpuhill"], [229, 1, 1, "", "gpulcomb"], [229, 1, 1, "", "gpulogpdf"], [229, 1, 1, "", "gpumean"], [229, 1, 1, "", "gpunpdf"], [229, 1, 1, "", "gpurandexp"], [229, 1, 1, "", "gpurandf"], [229, 1, 1, "", "gpuuniform"]], "neurotools.obsolete.gpu.cu.graph": [[230, 1, 1, "", "connect_gaussian"], [230, 1, 1, "", "random_point_sheet"], [230, 1, 1, "", "spherepoints"], [230, 1, 1, "", "uniform_point_sheet"]], "neurotools.obsolete.gpu.cu.logic": [[231, 1, 1, "", "gpuand"], [231, 1, 1, "", "gpueq"], [231, 1, 1, "", "gpugt"], [231, 1, 1, "", "gpugteq"], [231, 1, 1, "", "gpuhzero"], [231, 1, 1, "", "gpult"], [231, 1, 1, "", "gpulteq"], [231, 1, 1, "", "gpuneq"], [231, 1, 1, "", "gpunor"], [231, 1, 1, "", "gpunot"], [231, 1, 1, "", "gpurange"], [231, 1, 1, "", "gpuyes"]], "neurotools.obsolete.gpu.cu.plot": [[233, 1, 1, "", "ElementwiseKernel"], [233, 1, 1, "", "gpubarlinedata"], [233, 1, 1, "", "gpuhistogram"], [233, 1, 1, "", "missing"], [233, 1, 1, "", "sebarline"], [233, 1, 1, "", "sebarline2"]], "neurotools.obsolete.gpu.cu.sequence": [[234, 1, 1, "", "FrameEater"], [234, 1, 1, "", "GPUAutometric"], [234, 1, 1, "", "GPUDotmetric"], [234, 1, 1, "", "GPUMagmetric"], [234, 1, 1, "", "GPUPointAutoDistance"], [234, 1, 1, "", "GPUSequenceAutoDetect"], [234, 1, 1, "", "deltamag"], [234, 1, 1, "", "fitgaussbimodal"], [234, 1, 1, "", "fitgausstrimodal"], [234, 1, 1, "", "gpuderivative"], [234, 1, 1, "", "gpulognpdf"], [234, 1, 1, "", "gpunpdf"], [234, 1, 1, "", "gpusmooth"], [234, 1, 1, "", "gpusubsetgfit"], [234, 1, 1, "", "gpusubsetmean"], [234, 1, 1, "", "gputhing"], [234, 1, 1, "", "mulmag"], [234, 1, 1, "", "summag"]], "neurotools.obsolete.models": [[237, 0, 0, "-", "izh"], [238, 0, 0, "-", "lif"]], "neurotools.obsolete.models.izh": [[237, 1, 1, "", "du_izh"], [237, 1, 1, "", "dv_izh"], [237, 1, 1, "", "sim_izh"], [237, 1, 1, "", "update_izh"]], "neurotools.obsolete.models.lif": [[238, 1, 1, "", "euler_integrate_LIF"], [238, 1, 1, "", "exponential_integrate_LIF"], [238, 1, 1, "", "exponential_moving_average"]], "neurotools.signal": [[248, 1, 1, "", "amp"], [248, 1, 1, "", "ang"], [248, 1, 1, "", "arenear"], [248, 1, 1, "", "aresafe"], [248, 1, 1, "", "autocorrelation"], [248, 1, 1, "", "band_stop_line_noise_removal"], [248, 1, 1, "", "bandpass_filter"], [248, 1, 1, "", "box_filter"], [248, 1, 1, "", "circular_cosine_basis"], [248, 1, 1, "", "circular_gaussian_smooth"], [248, 1, 1, "", "circular_gaussian_smooth_2D"], [249, 0, 0, "-", "coherence"], [248, 1, 1, "", "complex_to_nan"], [250, 0, 0, "-", "conv"], [248, 1, 1, "", "deltaovermean"], [248, 1, 1, "", "drop_nonfinite"], [248, 1, 1, "", "estimate_padding"], [248, 1, 1, "", "fdiff"], [248, 1, 1, "", "fftacorr1d"], [248, 1, 1, "", "fftsta"], [248, 1, 1, "", "fm_mod"], [248, 1, 1, "", "fudge_derivative"], [248, 1, 1, "", "gaussian_kernel"], [248, 1, 1, "", "gaussian_smooth"], [248, 1, 1, "", "gaussianize"], [248, 1, 1, "", "geometric_window"], [248, 1, 1, "", "get_edges"], [248, 1, 1, "", "get_snips"], [248, 1, 1, "", "get_triggered_stats"], [248, 1, 1, "", "highpass_filter"], [248, 1, 1, "", "ifreq"], [248, 1, 1, "", "interpmax1d"], [248, 1, 1, "", "interpolate_NaN"], [248, 1, 1, "", "interpolate_NaN_quadratic"], [248, 1, 1, "", "invert_uniformize"], [248, 1, 1, "", "killSpikes"], [248, 1, 1, "", "linear_cosine_basis"], [248, 1, 1, "", "linfilter"], [248, 1, 1, "", "local_maxima"], [248, 1, 1, "", "local_minima"], [248, 1, 1, "", "local_peak_within"], [248, 1, 1, "", "lowpass_filter"], [248, 1, 1, "", "make_lagged"], [248, 1, 1, "", "make_rebroadcast_slice"], [248, 1, 1, "", "mean_block"], [248, 1, 1, "", "median_block"], [248, 1, 1, "", "median_filter"], [252, 0, 0, "-", "morlet"], [254, 0, 0, "-", "multitaper"], [248, 1, 1, "", "ndargmax"], [248, 1, 1, "", "nice_interp"], [248, 1, 1, "", "nonnegative_bandpass_filter"], [248, 1, 1, "", "pad_signal"], [248, 1, 1, "", "padin"], [248, 1, 1, "", "padout"], [248, 1, 1, "", "pdiff"], [248, 1, 1, "", "peak_within"], [248, 1, 1, "", "percentile_filter"], [248, 1, 1, "", "pghilbert"], [248, 1, 1, "", "phase_randomize"], [248, 1, 1, "", "phase_randomize_from_amplitudes"], [248, 1, 1, "", "phase_rotate"], [248, 1, 1, "", "pieces"], [255, 0, 0, "-", "ppc"], [248, 1, 1, "", "randband"], [248, 1, 1, "", "remove_gaps"], [248, 1, 1, "", "remove_short"], [248, 1, 1, "", "rewrap"], [257, 0, 0, "-", "savitskygolay"], [258, 0, 0, "-", "sde"], [248, 1, 1, "", "set_edges"], [248, 1, 1, "", "sign_preserving_amplitude_demodulate"], [248, 1, 1, "", "spaced_derivative"], [248, 1, 1, "", "span"], [248, 1, 1, "", "split_into_groups"], [248, 1, 1, "", "stats_block"], [248, 1, 1, "", "topercentiles"], [248, 1, 1, "", "triggered_average"], [248, 1, 1, "", "uniformize"], [248, 1, 1, "", "unit_length"], [248, 1, 1, "", "unitscale"], [248, 1, 1, "", "unwrap"], [248, 1, 1, "", "upsample"], [248, 1, 1, "", "var_block"], [248, 1, 1, "", "variance_filter"], [248, 1, 1, "", "virtual_reference_line_noise_removal"], [248, 1, 1, "", "zeromean"], [248, 1, 1, "", "zgrid"], [248, 1, 1, "", "zscore"]], "neurotools.signal.coherence": [[249, 1, 1, "", "coherence_pvalue"], [249, 1, 1, "", "morlet_population_synchrony_spectrum"], [249, 1, 1, "", "multitaper_coherence"], [249, 1, 1, "", "multitaper_multitrial_coherence"], [249, 1, 1, "", "population_coherence_matrix"], [249, 1, 1, "", "population_eigencoherence"], [249, 1, 1, "", "sliding_multitaper_coherence"], [249, 1, 1, "", "sliding_multitaper_coherence_parallel"]], "neurotools.signal.conv": [[250, 1, 1, "", "convolve2dct"], [250, 1, 1, "", "gausskern1d"], [250, 1, 1, "", "gausskern2d"], [250, 1, 1, "", "mirror2d"], [250, 1, 1, "", "reflect2D"], [250, 1, 1, "", "reflect2D_1"], [250, 1, 1, "", "separable2d"]], "neurotools.signal.morlet": [[252, 1, 1, "", "fft_cwt"], [252, 1, 1, "", "fft_cwt_transposed"], [252, 1, 1, "", "fft_cwt_transposed_logspaced"], [252, 1, 1, "", "logfreqs"], [252, 1, 1, "", "normalized_morlet"], [252, 1, 1, "", "population_synchrony_spectrum"], [252, 1, 1, "", "prepare_wavelet_fft_basis"], [252, 1, 1, "", "prepare_wavelet_fft_basis_logspace"]], "neurotools.signal.multitaper": [[254, 1, 1, "", "dpss_cached"], [254, 1, 1, "", "multitaper_population_eigencoherence"], [254, 1, 1, "", "multitaper_spectrum"], [254, 1, 1, "", "multitaper_squared_spectrum"], [254, 1, 1, "", "sliding_multitaper_spectrum"]], "neurotools.signal.ppc": [[255, 1, 1, "", "discard_spikes_closer_than_delta"], [255, 1, 1, "", "estimate_bias_in_uncorrected_ppc"], [255, 1, 1, "", "fftppc"], [255, 1, 1, "", "fftppc_biased"], [255, 1, 1, "", "fftppc_biased_multitaper"], [255, 1, 1, "", "fftppc_multitaper"], [255, 1, 1, "", "pairwise_phase_consistancy"], [255, 1, 1, "", "phase_randomize"], [255, 1, 1, "", "phase_randomized_bias_correction"], [255, 1, 1, "", "ppc_chance_level"], [255, 1, 1, "", "ppc_phase_randomize_chance_level_sample"]], "neurotools.signal.savitskygolay": [[257, 1, 1, "", "SGKern"], [257, 1, 1, "", "SGKernA"], [257, 1, 1, "", "SGKernJ"], [257, 1, 1, "", "SGKernV"], [257, 1, 1, "", "SGOrd"], [257, 1, 1, "", "SGaccelerate"], [257, 1, 1, "", "SGdifferentiate"], [257, 1, 1, "", "SGfilt"], [257, 1, 1, "", "SGfiltA"], [257, 1, 1, "", "SGfiltJ"], [257, 1, 1, "", "SGfiltV"], [257, 1, 1, "", "SGjerk"], [257, 1, 1, "", "SGsmooth"]], "neurotools.signal.sde": [[258, 1, 1, "", "sample_ou_process"], [258, 1, 1, "", "sample_wiener_process"]], "neurotools.spatial": [[261, 0, 0, "-", "array"], [260, 1, 1, "", "brute_force_local_2d_maxima"], [262, 0, 0, "-", "dct"], [263, 0, 0, "-", "distance"], [264, 0, 0, "-", "fftzeros"], [266, 0, 0, "-", "kernels"], [268, 0, 0, "-", "phase"], [269, 0, 0, "-", "points"], [271, 0, 0, "-", "spiking"], [272, 0, 0, "-", "triangulation"]], "neurotools.spatial.array": [[261, 1, 1, "", "array_average_amplitude"], [261, 1, 1, "", "array_count_centers"], [261, 1, 1, "", "array_count_critical"], [261, 1, 1, "", "array_kuramoto"], [261, 1, 1, "", "array_kuramoto_pgd"], [261, 1, 1, "", "array_kuramoto_pgd_standard_deviation"], [261, 1, 1, "", "array_kuramoto_standard_deviation"], [261, 1, 1, "", "array_phase_gradient"], [261, 1, 1, "", "array_phasegradient_local"], [261, 1, 1, "", "array_phasegradient_magnitude_cv"], [261, 1, 1, "", "array_phasegradient_magnitude_sigma"], [261, 1, 1, "", "array_phasegradient_pgd_threshold"], [261, 1, 1, "", "array_phasegradient_planar"], [261, 1, 1, "", "array_speed_local"], [261, 1, 1, "", "array_speed_pgd_threshold"], [261, 1, 1, "", "array_synchrony"], [261, 1, 1, "", "array_synchrony_pgd"], [261, 1, 1, "", "array_synchrony_pgd_standard_deviation"], [261, 1, 1, "", "array_synchrony_standard_deviation"], [261, 1, 1, "", "array_wavelength_local"], [261, 1, 1, "", "array_wavelength_local_pgd_threshold"], [261, 1, 1, "", "array_wavelength_pgd_threshold"], [261, 1, 1, "", "array_wavelength_planar"], [261, 1, 1, "", "pack_array_data"], [261, 1, 1, "", "trim_array"], [261, 1, 1, "", "trim_array_as_if"]], "neurotools.spatial.dct": [[262, 1, 1, "", "dct_cut"], [262, 1, 1, "", "dct_cut_antialias"], [262, 1, 1, "", "dct_cut_downsampled"], [262, 1, 1, "", "dct_upsample"], [262, 1, 1, "", "dct_upsample_notrim"], [262, 1, 1, "", "get_mask"], [262, 1, 1, "", "get_mask_antialiased"], [262, 1, 1, "", "iterated_upsample"], [262, 1, 1, "", "outer_complex"]], "neurotools.spatial.distance": [[263, 1, 1, "", "distance_angular_deviation"], [263, 1, 1, "", "get_average_synchrony_length_constant_parallel"], [263, 1, 1, "", "get_averaged_angular_distance"], [263, 1, 1, "", "get_length_constant_trial"], [263, 1, 1, "", "get_pair_distance"], [263, 1, 1, "", "synchrony_length_constant_areas_summary"]], "neurotools.spatial.fftzeros": [[264, 1, 1, "", "coalesce"], [264, 1, 1, "", "coalesce_points"], [264, 1, 1, "", "cut_array_data"], [264, 1, 1, "", "dPhidx"], [264, 1, 1, "", "dPhidy"], [264, 1, 1, "", "find_critical_points"], [264, 1, 1, "", "find_critical_potential_points"], [264, 1, 1, "", "get_critical_spectra"], [264, 1, 1, "", "get_phase_gradient_as_complex"], [264, 1, 1, "", "getp"], [264, 1, 1, "", "getpeaks2d"], [264, 1, 1, "", "grad"], [264, 1, 1, "", "mirror2D"], [264, 1, 1, "", "plot_critical_points"], [264, 1, 1, "", "plot_critical_spectra"], [264, 1, 1, "", "plot_phase_direction"], [264, 1, 1, "", "plot_phase_gradient"], [264, 1, 1, "", "quickgrad"]], "neurotools.spatial.kernels": [[266, 1, 1, "", "absorbing_gaussian"], [266, 1, 1, "", "absorbing_laplacian"], [266, 1, 1, "", "continuum_kernel"], [266, 1, 1, "", "cosine_kernel"], [266, 1, 1, "", "diffusion_basis"], [266, 1, 1, "", "exponential_basis"], [266, 1, 1, "", "gaussian_2D_kernel"], [266, 1, 1, "", "iterative_orthogonalize_basis"], [266, 1, 1, "", "laplace_kernel"], [266, 1, 1, "", "laplacian"], [266, 1, 1, "", "log_cosine_basis"], [266, 1, 1, "", "log_spline_basis"], [266, 1, 1, "", "magickernel"], [266, 1, 1, "", "magicsharp"], [266, 1, 1, "", "make_cosine_basis"]], "neurotools.spatial.phase": [[268, 1, 1, "", "analytic_signal_coherence"], [268, 1, 1, "", "population_average_amplitude"], [268, 1, 1, "", "population_kuramoto"], [268, 1, 1, "", "population_median_frequency"], [268, 1, 1, "", "population_median_phase_velocity"], [268, 1, 1, "", "population_normalized_sliding_signal_coherence"], [268, 1, 1, "", "population_phase_coherence"], [268, 1, 1, "", "population_phase_relative_sliding_kuramoto"], [268, 1, 1, "", "population_polar_std"], [268, 1, 1, "", "population_signal_amplitude_dispersion"], [268, 1, 1, "", "population_signal_amplitude_precision"], [268, 1, 1, "", "population_signal_amplitude_std"], [268, 1, 1, "", "population_signal_concentration"], [268, 1, 1, "", "population_signal_description"], [268, 1, 1, "", "population_signal_dispersion"], [268, 1, 1, "", "population_signal_phase_dispersion"], [268, 1, 1, "", "population_signal_phase_precision"], [268, 1, 1, "", "population_signal_phase_std"], [268, 1, 1, "", "population_signal_precision"], [268, 1, 1, "", "population_sliding_signal_coherence"], [268, 1, 1, "", "population_synchrony"], [268, 1, 1, "", "population_synchrony_linear"], [268, 1, 1, "", "sliding_population_signal_coherence"]], "neurotools.spatial.points": [[269, 1, 1, "", "c2p"], [269, 1, 1, "", "closest"], [269, 1, 1, "", "p2c"], [269, 1, 1, "", "pair_neighbors"], [269, 1, 1, "", "paired_distances"], [269, 1, 1, "", "to_xypoint"]], "neurotools.spatial.spiking": [[271, 1, 1, "", "interp_bin"]], "neurotools.spatial.triangulation": [[272, 1, 1, "", "coalesce"], [272, 1, 1, "", "edgesNearby"], [272, 1, 1, "", "mergeNearby"], [272, 1, 1, "", "plot_edges"], [272, 1, 1, "", "plot_triangles"], [272, 1, 1, "", "trianglesToEdges"], [272, 1, 1, "", "uniquerow"], [272, 1, 1, "", "z2xy"]], "neurotools.spikes": [[275, 0, 0, "-", "spikes"], [276, 0, 0, "-", "waveform"]], "neurotools.spikes.spikes": [[275, 1, 1, "", "bin_spike_times"], [275, 1, 1, "", "bin_spikes_raster"], [275, 1, 1, "", "cut_spikes"], [275, 1, 1, "", "pack_cross_correlation_matrix"], [275, 1, 1, "", "pp_xcorr"], [275, 1, 1, "", "times_to_raster"], [275, 1, 1, "", "txcorr"]], "neurotools.spikes.waveform": [[276, 1, 1, "", "getFWHM"], [276, 1, 1, "", "getPHP"], [276, 1, 1, "", "getPT"], [276, 1, 1, "", "getPTHW"], [276, 1, 1, "", "getPVT"], [276, 1, 1, "", "getWAHP"], [276, 1, 1, "", "is_thin"], [276, 1, 1, "", "is_thin_pvt"], [276, 1, 1, "", "minmax"], [276, 1, 1, "", "normalized_waveform"], [276, 1, 1, "", "process"], [276, 1, 1, "", "realign"]], "neurotools.stats": [[277, 2, 1, "", "Description"], [277, 1, 1, "", "add_constant"], [277, 1, 1, "", "auc_to_g2"], [277, 1, 1, "", "block_shuffle"], [280, 0, 0, "-", "circular"], [281, 0, 0, "-", "convolutional"], [277, 1, 1, "", "covariance"], [277, 1, 1, "", "crossvalidated_least_squares"], [282, 0, 0, "-", "density"], [283, 0, 0, "-", "distributions"], [285, 0, 0, "-", "fast_kde"], [277, 1, 1, "", "fraction_explained_deviance"], [294, 0, 0, "-", "gaussian"], [295, 0, 0, "-", "glm"], [277, 1, 1, "", "glmfit"], [297, 0, 0, "-", "grid_search"], [299, 0, 0, "-", "hmm"], [300, 0, 0, "-", "information"], [304, 0, 0, "-", "mcint"], [305, 0, 0, "-", "minimize"], [306, 0, 0, "-", "mixtures"], [307, 0, 0, "-", "modefind"], [277, 1, 1, "", "nrmse"], [277, 1, 1, "", "outliers"], [277, 1, 1, "", "partition_data"], [277, 1, 1, "", "partition_data_for_crossvalidation"], [277, 1, 1, "", "partition_trials_for_crossvalidation"], [277, 1, 1, "", "pca"], [277, 1, 1, "", "polar_error"], [277, 1, 1, "", "print_stats"], [309, 0, 0, "-", "pvalues"], [310, 0, 0, "-", "regressions"], [277, 1, 1, "", "reject_outliers"], [277, 1, 1, "", "trial_crossvalidated_least_squares"], [277, 1, 1, "", "weighted_avg_and_std"]], "neurotools.stats.Description": [[277, 3, 1, "", "short"]], "neurotools.stats.circular": [[280, 1, 1, "", "abspolar_stats"], [280, 1, 1, "", "complex_gaussian"], [280, 1, 1, "", "fit_vonmises"], [280, 1, 1, "", "logpolar_gaussian"], [280, 1, 1, "", "logpolar_stats"], [280, 1, 1, "", "squared_first_circular_moment"]], "neurotools.stats.convolutional": [[281, 1, 1, "", "autocorrelation_bayes"], [281, 1, 1, "", "blockccm"], [281, 1, 1, "", "blocksta"], [281, 1, 1, "", "ccm"], [281, 1, 1, "", "ccor"], [281, 1, 1, "", "construct_lowpass_operator"], [281, 1, 1, "", "create_spectral_model"], [281, 1, 1, "", "cspect"], [281, 1, 1, "", "cspectm"], [281, 1, 1, "", "reconstruct"], [281, 1, 1, "", "spectreconstruct"], [281, 1, 1, "", "spike_lfp_filters"], [281, 1, 1, "", "sta"]], "neurotools.stats.density": [[282, 1, 1, "", "adaptive_density_grid"], [282, 1, 1, "", "gridhist"], [282, 1, 1, "", "kdepeak"], [282, 1, 1, "", "knn_1d_density"]], "neurotools.stats.distributions": [[283, 1, 1, "", "explogpdf"], [283, 1, 1, "", "gaussian_logpdf"], [283, 1, 1, "", "gaussian_pdf"], [283, 1, 1, "", "poisson_logpdf"], [283, 1, 1, "", "poisson_pdf"], [283, 1, 1, "", "sample_categorical"]], "neurotools.stats.fast_kde": [[285, 1, 1, "", "fast_kde"], [285, 1, 1, "", "image_cov"]], "neurotools.stats.gaussian": [[294, 2, 1, "", "Gaussian"], [294, 1, 1, "", "MVG_DKL"], [294, 1, 1, "", "MVG_DKL_CP"], [294, 1, 1, "", "MVG_PDF"], [294, 1, 1, "", "MVG_check"], [294, 1, 1, "", "MVG_conditional"], [294, 1, 1, "", "MVG_divide"], [294, 1, 1, "", "MVG_entropy"], [294, 1, 1, "", "MVG_kalman"], [294, 1, 1, "", "MVG_kalman_P_inverseA"], [294, 1, 1, "", "MVG_kalman_joint"], [294, 1, 1, "", "MVG_kalman_joint_P"], [294, 1, 1, "", "MVG_logPDF"], [294, 1, 1, "", "MVG_multiply"], [294, 1, 1, "", "MVG_multiply_C"], [294, 1, 1, "", "MVG_projection"], [294, 1, 1, "", "MVG_sample"], [294, 1, 1, "", "gaussian_quadrature"], [294, 1, 1, "", "gaussian_quadrature_logarithmic"]], "neurotools.stats.gaussian.Gaussian": [[294, 3, 1, "", "logpdf"], [294, 4, 1, "", "m"], [294, 4, 1, "", "t"]], "neurotools.stats.glm": [[295, 1, 1, "", "GLMPenaltyBernoulli"], [295, 1, 1, "", "GLMPenaltyL2"], [295, 1, 1, "", "GLMPenaltyPoisson"], [295, 1, 1, "", "cosine_kernel"], [295, 1, 1, "", "crossvalidatedAUC"], [295, 1, 1, "", "fitGLM"], [295, 1, 1, "", "gradientglmfit"], [295, 1, 1, "", "log_cosine_basis"], [295, 1, 1, "", "make_cosine_basis"], [295, 1, 1, "", "numeric_grad"], [295, 1, 1, "", "numeric_hess"], [295, 1, 1, "", "ppglmfit"], [295, 1, 1, "", "sexp"], [295, 1, 1, "", "sigmoid"]], "neurotools.stats.grid_search": [[297, 1, 1, "", "grid_search"]], "neurotools.stats.hmm": [[299, 2, 1, "", "BernoulliObservationApproximator"], [299, 2, 1, "", "BernoulliObservationModel"], [299, 2, 1, "", "ChisquareCoxApproximator"], [299, 2, 1, "", "ChisquareCoxModel"], [299, 2, 1, "", "DiffusionGaussian"], [299, 2, 1, "", "GaussianCoxApproximator"], [299, 2, 1, "", "GaussianCoxModel"], [299, 2, 1, "", "LogGaussianCoxApproximator"], [299, 2, 1, "", "LogGaussianCoxModel"], [299, 2, 1, "", "MVGOUUpdate"], [299, 2, 1, "", "MVGUpdate"], [299, 2, 1, "", "MVGaussian"], [299, 2, 1, "", "MVLogGaussianCox"], [299, 2, 1, "", "OUGaussian"], [299, 2, 1, "", "PoissonObservationApproximator"], [299, 2, 1, "", "PoissonObservationModel"], [299, 2, 1, "", "TruncatedLogGaussianCoxApproximator"], [299, 2, 1, "", "TruncatedLogGaussianCoxModel"], [299, 2, 1, "", "TruncatedPoissonObservationApproximator"], [299, 2, 1, "", "TruncatedPoissonObservationModel"], [299, 1, 1, "", "backward_abstract"], [299, 1, 1, "", "baum_welch"], [299, 1, 1, "", "forward_abstract"], [299, 1, 1, "", "forward_backward"], [299, 1, 1, "", "forward_backward_abstract"], [299, 1, 1, "", "hasNaN"], [299, 1, 1, "", "jump"], [299, 1, 1, "", "lgcp_observation_minimizer"], [299, 1, 1, "", "log_likelihood"], [299, 1, 1, "", "poisson_baum_welch"], [299, 1, 1, "", "poisson_parameter_guess"], [299, 1, 1, "", "poisson_viterbi_state_infer"], [299, 1, 1, "", "sample"], [299, 1, 1, "", "viterbi"], [299, 1, 1, "", "viterbi_log"]], "neurotools.stats.hmm.DiffusionGaussian": [[299, 3, 1, "", "bwd"], [299, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVGOUUpdate": [[299, 3, 1, "", "bwd"], [299, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVGUpdate": [[299, 3, 1, "", "bwd"], [299, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVLogGaussianCox": [[299, 2, 1, "", "MVPoissonApproximator"]], "neurotools.stats.hmm.OUGaussian": [[299, 3, 1, "", "bwd"], [299, 3, 1, "", "fwd"]], "neurotools.stats.information": [[300, 1, 1, "", "DKL_discrete"], [300, 1, 1, "", "discrete_entropy_distribution"], [300, 1, 1, "", "discrete_entropy_samples"], [300, 1, 1, "", "poisson_entropy_nats"], [300, 1, 1, "", "regularized_discrete_entropy"]], "neurotools.stats.mcint": [[304, 1, 1, "", "monte_carlo_expectation"], [304, 1, 1, "", "monte_carlo_moments"]], "neurotools.stats.minimize": [[305, 5, 1, "", "FailureError"], [305, 1, 1, "", "minimize_retry"]], "neurotools.stats.mixtures": [[306, 1, 1, "", "two_class_poisson_mixture_model"]], "neurotools.stats.modefind": [[307, 1, 1, "", "logmode"], [307, 1, 1, "", "logmodeplot"], [307, 1, 1, "", "modefind"], [307, 1, 1, "", "peakfinder5"]], "neurotools.stats.pvalues": [[309, 1, 1, "", "benjamini_hochberg_positive_correlations"], [309, 1, 1, "", "bootstrap_compare_mean"], [309, 1, 1, "", "bootstrap_compare_median"], [309, 1, 1, "", "bootstrap_compare_statistic_two_sided"], [309, 1, 1, "", "bootstrap_compare_statistic_two_sided_parallel"], [309, 1, 1, "", "bootstrap_mean"], [309, 1, 1, "", "bootstrap_median"], [309, 1, 1, "", "bootstrap_statistic_two_sided"], [309, 1, 1, "", "correct_pvalues"], [309, 1, 1, "", "correct_pvalues_positive_dependent"]], "neurotools.stats.regressions": [[310, 1, 1, "", "damped_cosine"], [310, 1, 1, "", "exponential_decay"], [310, 1, 1, "", "gaussian_function"], [310, 1, 1, "", "half_gaussian_function"], [310, 1, 1, "", "power_law"], [310, 1, 1, "", "robust_line"], [310, 1, 1, "", "weighted_least_squares"]], "neurotools.util": [[319, 0, 0, "-", "functions"], [320, 0, 0, "-", "getfftw"], [321, 0, 0, "-", "hdfmat"], [322, 0, 0, "-", "string"], [323, 0, 0, "-", "system"], [324, 0, 0, "-", "time"], [325, 0, 0, "-", "tools"]], "neurotools.util.functions": [[319, 1, 1, "", "dsigmoid"], [319, 1, 1, "", "f"], [319, 1, 1, "", "f1"], [319, 1, 1, "", "f2"], [319, 1, 1, "", "g"], [319, 1, 1, "", "inversesigmoid"], [319, 1, 1, "", "log_factorial"], [319, 1, 1, "", "npdf"], [319, 1, 1, "", "sexp"], [319, 1, 1, "", "sigmoid"], [319, 1, 1, "", "slog"]], "neurotools.util.getfftw": [[320, 1, 1, "", "ftwthr"]], "neurotools.util.hdfmat": [[321, 1, 1, "", "getHDF"], [321, 1, 1, "", "getHDFvalue"], [321, 1, 1, "", "hdf2dict"], [321, 1, 1, "", "printmatHDF5"], [321, 1, 1, "", "recursive_printmatHDF5"]], "neurotools.util.string": [[322, 1, 1, "", "eformat"], [322, 1, 1, "", "hcat"], [322, 1, 1, "", "incolumns"], [322, 1, 1, "", "isInt"], [322, 1, 1, "", "nicetable"], [322, 1, 1, "", "percent"], [322, 1, 1, "", "shortscientific"], [322, 1, 1, "", "v2str"], [322, 1, 1, "", "v2str_long"], [322, 1, 1, "", "wordwrap"]], "neurotools.util.system": [[323, 1, 1, "", "execfile"], [323, 1, 1, "", "query_yes_no"]], "neurotools.util.time": [[324, 1, 1, "", "current_milli_time"], [324, 1, 1, "", "now"], [324, 1, 1, "", "tic"], [324, 1, 1, "", "toc"], [324, 1, 1, "", "today"], [324, 1, 1, "", "waitfor"]], "neurotools.util.tools": [[325, 1, 1, "", "aap"], [325, 1, 1, "", "amap"], [325, 1, 1, "", "arraymap"], [325, 1, 1, "", "asiterable"], [325, 1, 1, "", "c2p"], [325, 1, 1, "", "camel2underscore"], [325, 1, 1, "", "clear"], [325, 1, 1, "", "debug"], [325, 1, 1, "", "dowarn"], [325, 2, 1, "", "emitter"], [325, 1, 1, "", "ensure_dir"], [325, 1, 1, "", "exists"], [325, 1, 1, "", "ezip"], [325, 1, 1, "", "find"], [325, 1, 1, "", "find_all_extension"], [325, 1, 1, "", "getVariable"], [325, 1, 1, "", "getdict"], [325, 1, 1, "", "getsize"], [325, 1, 1, "", "globalize"], [325, 1, 1, "", "history"], [325, 1, 1, "", "invert_permutation"], [325, 1, 1, "", "lap"], [325, 1, 1, "", "lmap"], [325, 1, 1, "", "mapdict"], [325, 1, 1, "", "matlab"], [325, 1, 1, "", "metaloadmat"], [325, 1, 1, "", "nowarn"], [325, 1, 1, "", "okwarn"], [325, 1, 1, "", "oneslike"], [325, 1, 1, "", "p2c"], [325, 2, 1, "", "piper"], [325, 1, 1, "", "restoreContext"], [325, 1, 1, "", "saveContext"], [325, 1, 1, "", "setinrange"], [325, 1, 1, "", "slist"], [325, 1, 1, "", "sls"], [325, 2, 1, "", "stuff"], [325, 1, 1, "", "underscore2camel"], [325, 1, 1, "", "varexists"], [325, 1, 1, "", "wait"], [325, 1, 1, "", "warn"], [325, 1, 1, "", "zeroslike"]], "neurotools.util.tools.stuff": [[325, 3, 1, "", "add"]], "nlab": [[326, 1, 1, "", "beta"], [326, 1, 1, "", "binomial"], [326, 1, 1, "", "chisquare"], [326, 1, 1, "", "choice"], [326, 1, 1, "", "dirichlet"], [326, 1, 1, "", "exponential"], [326, 1, 1, "", "f"], [326, 1, 1, "", "gamma"], [326, 1, 1, "", "geometric"], [326, 1, 1, "", "get_state"], [326, 1, 1, "", "gumbel"], [326, 1, 1, "", "hypergeometric"], [326, 1, 1, "", "laplace"], [326, 1, 1, "", "logistic"], [326, 1, 1, "", "lognormal"], [326, 1, 1, "", "logseries"], [326, 1, 1, "", "multinomial"], [326, 1, 1, "", "multivariate_normal"], [326, 1, 1, "", "negative_binomial"], [326, 1, 1, "", "noncentral_chisquare"], [326, 1, 1, "", "noncentral_f"], [326, 1, 1, "", "normal"], [326, 1, 1, "", "pareto"], [326, 1, 1, "", "permutation"], [326, 1, 1, "", "poisson"], [326, 1, 1, "", "power"], [326, 1, 1, "", "rand"], [326, 1, 1, "", "randint"], [326, 1, 1, "", "randn"], [326, 1, 1, "", "random"], [326, 1, 1, "", "random_integers"], [326, 1, 1, "", "random_sample"], [326, 1, 1, "", "rayleigh"], [326, 1, 1, "", "seed"], [326, 1, 1, "", "set_state"], [326, 1, 1, "", "shuffle"], [326, 1, 1, "", "standard_cauchy"], [326, 1, 1, "", "standard_exponential"], [326, 1, 1, "", "standard_gamma"], [326, 1, 1, "", "standard_normal"], [326, 1, 1, "", "standard_t"], [326, 1, 1, "", "triangular"], [326, 1, 1, "", "uniform"], [326, 1, 1, "", "vonmises"], [326, 1, 1, "", "wald"], [326, 1, 1, "", "weibull"], [326, 1, 1, "", "zipf"]], "signal": [[328, 2, 1, "", "Handlers"], [328, 4, 1, "", "ItimerError"], [328, 2, 1, "", "Sigmasks"], [328, 2, 1, "", "Signals"], [328, 1, 1, "", "getsignal"], [328, 1, 1, "", "pthread_sigmask"], [338, 0, 0, "-", "signal"], [328, 1, 1, "", "sigpending"], [328, 1, 1, "", "sigwait"], [328, 2, 1, "", "struct_siginfo"], [328, 1, 1, "", "valid_signals"]], "signal.Handlers": [[328, 4, 1, "", "SIG_DFL"], [328, 4, 1, "", "SIG_IGN"]], "signal.Sigmasks": [[328, 4, 1, "", "SIG_BLOCK"], [328, 4, 1, "", "SIG_SETMASK"], [328, 4, 1, "", "SIG_UNBLOCK"]], "signal.Signals": [[328, 4, 1, "", "SIGABRT"], [328, 4, 1, "", "SIGALRM"], [328, 4, 1, "", "SIGBUS"], [328, 4, 1, "", "SIGCHLD"], [328, 4, 1, "", "SIGCLD"], [328, 4, 1, "", "SIGCONT"], [328, 4, 1, "", "SIGFPE"], [328, 4, 1, "", "SIGHUP"], [328, 4, 1, "", "SIGILL"], [328, 4, 1, "", "SIGINT"], [328, 4, 1, "", "SIGIO"], [328, 4, 1, "", "SIGIOT"], [328, 4, 1, "", "SIGKILL"], [328, 4, 1, "", "SIGPIPE"], [328, 4, 1, "", "SIGPOLL"], [328, 4, 1, "", "SIGPROF"], [328, 4, 1, "", "SIGPWR"], [328, 4, 1, "", "SIGQUIT"], [328, 4, 1, "", "SIGRTMAX"], [328, 4, 1, "", "SIGRTMIN"], [328, 4, 1, "", "SIGSEGV"], [328, 4, 1, "", "SIGSTOP"], [328, 4, 1, "", "SIGSYS"], [328, 4, 1, "", "SIGTERM"], [328, 4, 1, "", "SIGTRAP"], [328, 4, 1, "", "SIGTSTP"], [328, 4, 1, "", "SIGTTIN"], [328, 4, 1, "", "SIGTTOU"], [328, 4, 1, "", "SIGURG"], [328, 4, 1, "", "SIGUSR1"], [328, 4, 1, "", "SIGUSR2"], [328, 4, 1, "", "SIGVTALRM"], [328, 4, 1, "", "SIGWINCH"], [328, 4, 1, "", "SIGXCPU"], [328, 4, 1, "", "SIGXFSZ"]], "signal.struct_siginfo": [[328, 4, 1, "", "n_fields"], [328, 4, 1, "", "n_sequence_fields"], [328, 4, 1, "", "n_unnamed_fields"], [328, 4, 1, "", "si_band"], [328, 4, 1, "", "si_code"], [328, 4, 1, "", "si_errno"], [328, 4, 1, "", "si_pid"], [328, 4, 1, "", "si_signo"], [328, 4, 1, "", "si_status"], [328, 4, 1, "", "si_uid"]], "spatial": [[340, 0, 0, "-", "array"], [339, 1, 1, "", "brute_force_local_2d_maxima"], [341, 0, 0, "-", "dct"], [342, 0, 0, "-", "distance"], [343, 0, 0, "-", "fftzeros"], [344, 0, 0, "-", "kernels"], [345, 0, 0, "-", "phase"], [347, 0, 0, "-", "spiking"], [348, 0, 0, "-", "triangulation"]], "spatial.array": [[340, 1, 1, "", "array_average_amplitude"], [340, 1, 1, "", "array_count_centers"], [340, 1, 1, "", "array_count_critical"], [340, 1, 1, "", "array_kuramoto"], [340, 1, 1, "", "array_kuramoto_pgd"], [340, 1, 1, "", "array_kuramoto_pgd_standard_deviation"], [340, 1, 1, "", "array_kuramoto_standard_deviation"], [340, 1, 1, "", "array_phase_gradient"], [340, 1, 1, "", "array_phasegradient_local"], [340, 1, 1, "", "array_phasegradient_magnitude_cv"], [340, 1, 1, "", "array_phasegradient_magnitude_sigma"], [340, 1, 1, "", "array_phasegradient_pgd_threshold"], [340, 1, 1, "", "array_phasegradient_planar"], [340, 1, 1, "", "array_speed_local"], [340, 1, 1, "", "array_speed_pgd_threshold"], [340, 1, 1, "", "array_synchrony"], [340, 1, 1, "", "array_synchrony_pgd"], [340, 1, 1, "", "array_synchrony_pgd_standard_deviation"], [340, 1, 1, "", "array_synchrony_standard_deviation"], [340, 1, 1, "", "array_wavelength_local"], [340, 1, 1, "", "array_wavelength_local_pgd_threshold"], [340, 1, 1, "", "array_wavelength_pgd_threshold"], [340, 1, 1, "", "array_wavelength_planar"], [340, 1, 1, "", "pack_array_data"], [340, 1, 1, "", "trim_array"], [340, 1, 1, "", "trim_array_as_if"]], "spatial.dct": [[341, 1, 1, "", "dct_cut"], [341, 1, 1, "", "dct_cut_antialias"], [341, 1, 1, "", "dct_cut_downsampled"], [341, 1, 1, "", "dct_upsample"], [341, 1, 1, "", "dct_upsample_notrim"], [341, 1, 1, "", "get_mask"], [341, 1, 1, "", "get_mask_antialiased"], [341, 1, 1, "", "iterated_upsample"], [341, 1, 1, "", "outer_complex"]], "spatial.distance": [[342, 1, 1, "", "distance_angular_deviation"], [342, 1, 1, "", "get_average_synchrony_length_constant_parallel"], [342, 1, 1, "", "get_averaged_angular_distance"], [342, 1, 1, "", "get_length_constant_trial"], [342, 1, 1, "", "get_pair_distance"], [342, 1, 1, "", "synchrony_length_constant_areas_summary"]], "spatial.fftzeros": [[343, 1, 1, "", "coalesce"], [343, 1, 1, "", "coalesce_points"], [343, 1, 1, "", "cut_array_data"], [343, 1, 1, "", "dPhidx"], [343, 1, 1, "", "dPhidy"], [343, 1, 1, "", "find_critical_points"], [343, 1, 1, "", "find_critical_potential_points"], [343, 1, 1, "", "get_critical_spectra"], [343, 1, 1, "", "get_phase_gradient_as_complex"], [343, 1, 1, "", "getp"], [343, 1, 1, "", "getpeaks2d"], [343, 1, 1, "", "grad"], [343, 1, 1, "", "mirror2D"], [343, 1, 1, "", "plot_critical_points"], [343, 1, 1, "", "plot_critical_spectra"], [343, 1, 1, "", "plot_phase_direction"], [343, 1, 1, "", "plot_phase_gradient"], [343, 1, 1, "", "quickgrad"]], "spatial.kernels": [[344, 1, 1, "", "absorbing_gaussian"], [344, 1, 1, "", "absorbing_laplacian"], [344, 1, 1, "", "continuum_kernel"], [344, 1, 1, "", "cosine_kernel"], [344, 1, 1, "", "diffusion_basis"], [344, 1, 1, "", "exponential_basis"], [344, 1, 1, "", "gaussian_2D_kernel"], [344, 1, 1, "", "iterative_orthogonalize_basis"], [344, 1, 1, "", "laplace_kernel"], [344, 1, 1, "", "laplacian"], [344, 1, 1, "", "log_cosine_basis"], [344, 1, 1, "", "log_spline_basis"], [344, 1, 1, "", "magickernel"], [344, 1, 1, "", "magicsharp"], [344, 1, 1, "", "make_cosine_basis"]], "spatial.phase": [[345, 1, 1, "", "analytic_signal_coherence"], [345, 1, 1, "", "population_average_amplitude"], [345, 1, 1, "", "population_kuramoto"], [345, 1, 1, "", "population_median_frequency"], [345, 1, 1, "", "population_median_phase_velocity"], [345, 1, 1, "", "population_normalized_sliding_signal_coherence"], [345, 1, 1, "", "population_phase_coherence"], [345, 1, 1, "", "population_phase_relative_sliding_kuramoto"], [345, 1, 1, "", "population_polar_std"], [345, 1, 1, "", "population_signal_amplitude_dispersion"], [345, 1, 1, "", "population_signal_amplitude_precision"], [345, 1, 1, "", "population_signal_amplitude_std"], [345, 1, 1, "", "population_signal_concentration"], [345, 1, 1, "", "population_signal_description"], [345, 1, 1, "", "population_signal_dispersion"], [345, 1, 1, "", "population_signal_phase_dispersion"], [345, 1, 1, "", "population_signal_phase_precision"], [345, 1, 1, "", "population_signal_phase_std"], [345, 1, 1, "", "population_signal_precision"], [345, 1, 1, "", "population_sliding_signal_coherence"], [345, 1, 1, "", "population_synchrony"], [345, 1, 1, "", "population_synchrony_linear"], [345, 1, 1, "", "sliding_population_signal_coherence"]], "spatial.spiking": [[347, 1, 1, "", "interp_bin"]], "spatial.triangulation": [[348, 1, 1, "", "coalesce"], [348, 1, 1, "", "edgesNearby"], [348, 1, 1, "", "mergeNearby"], [348, 1, 1, "", "plot_edges"], [348, 1, 1, "", "plot_triangles"], [348, 1, 1, "", "trianglesToEdges"], [348, 1, 1, "", "uniquerow"], [348, 1, 1, "", "z2xy"]], "spikes": [[350, 0, 0, "-", "spikes"], [351, 0, 0, "-", "waveform"]], "spikes.spikes": [[350, 1, 1, "", "bin_spike_times"], [350, 1, 1, "", "bin_spikes_raster"], [350, 1, 1, "", "cut_spikes"], [350, 1, 1, "", "pack_cross_correlation_matrix"], [350, 1, 1, "", "pp_xcorr"], [350, 1, 1, "", "times_to_raster"], [350, 1, 1, "", "txcorr"]], "spikes.waveform": [[351, 1, 1, "", "getFWHM"], [351, 1, 1, "", "getPHP"], [351, 1, 1, "", "getPT"], [351, 1, 1, "", "getPTHW"], [351, 1, 1, "", "getPVT"], [351, 1, 1, "", "getWAHP"], [351, 1, 1, "", "is_thin"], [351, 1, 1, "", "is_thin_pvt"], [351, 1, 1, "", "minmax"], [351, 1, 1, "", "normalized_waveform"], [351, 1, 1, "", "process"], [351, 1, 1, "", "realign"]], "stats": [[354, 0, 0, "-", "circular"], [355, 0, 0, "-", "convolutional"], [356, 0, 0, "-", "density"], [357, 0, 0, "-", "distributions"], [359, 0, 0, "-", "fast_kde"], [360, 0, 0, "-", "glm"], [363, 0, 0, "-", "hmm"], [364, 0, 0, "-", "information"], [368, 0, 0, "-", "mcint"], [369, 0, 0, "-", "minimize"], [370, 0, 0, "-", "mixtures"], [371, 0, 0, "-", "modefind"], [373, 0, 0, "-", "pvalues"], [374, 0, 0, "-", "regressions"]], "stats.circular": [[354, 1, 1, "", "abspolar_stats"], [354, 1, 1, "", "complex_gaussian"], [354, 1, 1, "", "fit_vonmises"], [354, 1, 1, "", "logpolar_gaussian"], [354, 1, 1, "", "logpolar_stats"], [354, 1, 1, "", "squared_first_circular_moment"]], "stats.convolutional": [[355, 1, 1, "", "autocorrelation_bayes"], [355, 1, 1, "", "blockccm"], [355, 1, 1, "", "blocksta"], [355, 1, 1, "", "ccm"], [355, 1, 1, "", "ccor"], [355, 1, 1, "", "construct_lowpass_operator"], [355, 1, 1, "", "create_spectral_model"], [355, 1, 1, "", "cspect"], [355, 1, 1, "", "cspectm"], [355, 1, 1, "", "reconstruct"], [355, 1, 1, "", "spectreconstruct"], [355, 1, 1, "", "spike_lfp_filters"], [355, 1, 1, "", "sta"]], "stats.density": [[356, 1, 1, "", "adaptive_density_grid"], [356, 1, 1, "", "gridhist"], [356, 1, 1, "", "kdepeak"], [356, 1, 1, "", "knn_1d_density"]], "stats.distributions": [[357, 1, 1, "", "explogpdf"], [357, 1, 1, "", "gaussian_logpdf"], [357, 1, 1, "", "gaussian_pdf"], [357, 1, 1, "", "poisson_logpdf"], [357, 1, 1, "", "poisson_pdf"], [357, 1, 1, "", "sample_categorical"]], "stats.fast_kde": [[359, 1, 1, "", "fast_kde"], [359, 1, 1, "", "image_cov"]], "stats.glm": [[360, 1, 1, "", "GLMPenaltyBernoulli"], [360, 1, 1, "", "GLMPenaltyL2"], [360, 1, 1, "", "GLMPenaltyPoisson"], [360, 1, 1, "", "cosine_kernel"], [360, 1, 1, "", "crossvalidatedAUC"], [360, 1, 1, "", "fitGLM"], [360, 1, 1, "", "gradientglmfit"], [360, 1, 1, "", "log_cosine_basis"], [360, 1, 1, "", "make_cosine_basis"], [360, 1, 1, "", "numeric_grad"], [360, 1, 1, "", "numeric_hess"], [360, 1, 1, "", "ppglmfit"], [360, 1, 1, "", "sexp"], [360, 1, 1, "", "sigmoid"]], "stats.hmm": [[363, 2, 1, "", "BernoulliObservationApproximator"], [363, 2, 1, "", "BernoulliObservationModel"], [363, 2, 1, "", "ChisquareCoxApproximator"], [363, 2, 1, "", "ChisquareCoxModel"], [363, 2, 1, "", "DiffusionGaussian"], [363, 2, 1, "", "GaussianCoxApproximator"], [363, 2, 1, "", "GaussianCoxModel"], [363, 2, 1, "", "LogGaussianCoxApproximator"], [363, 2, 1, "", "LogGaussianCoxModel"], [363, 2, 1, "", "MVGOUUpdate"], [363, 2, 1, "", "MVGUpdate"], [363, 2, 1, "", "MVGaussian"], [363, 2, 1, "", "MVLogGaussianCox"], [363, 2, 1, "", "OUGaussian"], [363, 2, 1, "", "PoissonObservationApproximator"], [363, 2, 1, "", "PoissonObservationModel"], [363, 2, 1, "", "TruncatedLogGaussianCoxApproximator"], [363, 2, 1, "", "TruncatedLogGaussianCoxModel"], [363, 2, 1, "", "TruncatedPoissonObservationApproximator"], [363, 2, 1, "", "TruncatedPoissonObservationModel"], [363, 1, 1, "", "backward_abstract"], [363, 1, 1, "", "baum_welch"], [363, 1, 1, "", "forward_abstract"], [363, 1, 1, "", "forward_backward"], [363, 1, 1, "", "forward_backward_abstract"], [363, 1, 1, "", "hasNaN"], [363, 1, 1, "", "jump"], [363, 1, 1, "", "lgcp_observation_minimizer"], [363, 1, 1, "", "log_likelihood"], [363, 1, 1, "", "poisson_baum_welch"], [363, 1, 1, "", "poisson_parameter_guess"], [363, 1, 1, "", "poisson_viterbi_state_infer"], [363, 1, 1, "", "sample"], [363, 1, 1, "", "viterbi"], [363, 1, 1, "", "viterbi_log"]], "stats.hmm.DiffusionGaussian": [[363, 3, 1, "", "bwd"], [363, 3, 1, "", "fwd"]], "stats.hmm.MVGOUUpdate": [[363, 3, 1, "", "bwd"], [363, 3, 1, "", "fwd"]], "stats.hmm.MVGUpdate": [[363, 3, 1, "", "bwd"], [363, 3, 1, "", "fwd"]], "stats.hmm.MVLogGaussianCox": [[363, 2, 1, "", "MVPoissonApproximator"]], "stats.hmm.OUGaussian": [[363, 3, 1, "", "bwd"], [363, 3, 1, "", "fwd"]], "stats.information": [[364, 1, 1, "", "DKL_discrete"], [364, 1, 1, "", "discrete_entropy_distribution"], [364, 1, 1, "", "discrete_entropy_samples"], [364, 1, 1, "", "poisson_entropy_nats"], [364, 1, 1, "", "regularized_discrete_entropy"]], "stats.mcint": [[368, 1, 1, "", "monte_carlo_expectation"], [368, 1, 1, "", "monte_carlo_moments"]], "stats.minimize": [[369, 5, 1, "", "FailureError"], [369, 1, 1, "", "minimize_retry"]], "stats.mixtures": [[370, 1, 1, "", "two_class_poisson_mixture_model"]], "stats.modefind": [[371, 1, 1, "", "logmode"], [371, 1, 1, "", "logmodeplot"], [371, 1, 1, "", "modefind"], [371, 1, 1, "", "peakfinder5"]], "stats.pvalues": [[373, 1, 1, "", "benjamini_hochberg_positive_correlations"], [373, 1, 1, "", "bootstrap_compare_mean"], [373, 1, 1, "", "bootstrap_compare_median"], [373, 1, 1, "", "bootstrap_compare_statistic_two_sided"], [373, 1, 1, "", "bootstrap_compare_statistic_two_sided_parallel"], [373, 1, 1, "", "bootstrap_mean"], [373, 1, 1, "", "bootstrap_median"], [373, 1, 1, "", "bootstrap_statistic_two_sided"], [373, 1, 1, "", "correct_pvalues"], [373, 1, 1, "", "correct_pvalues_positive_dependent"]], "stats.regressions": [[374, 1, 1, "", "damped_cosine"], [374, 1, 1, "", "exponential_decay"], [374, 1, 1, "", "gaussian_function"], [374, 1, 1, "", "half_gaussian_function"], [374, 1, 1, "", "power_law"], [374, 1, 1, "", "robust_line"], [374, 1, 1, "", "weighted_least_squares"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"depend": [0, 100, 157, 318], "modul": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "neurotool": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "indic": 1, "tabl": 1, "subpackag": [1, 3, 26, 30, 52, 110, 145, 148, 156, 163, 203, 206, 214, 218, 240], "packag": [3, 4, 14, 21, 26, 27, 30, 31, 35, 37, 48, 52, 56, 59, 67, 79, 82, 99, 110, 111, 115, 117, 128, 134, 141, 145, 148, 152, 156, 158, 163, 164, 168, 170, 181, 192, 199, 203, 206, 210, 214, 215, 218, 219, 223, 225, 236, 240, 244, 248, 260, 274, 277, 317, 328, 339], "submodul": [3, 4, 14, 21, 26, 27, 31, 35, 37, 48, 52, 56, 59, 67, 79, 82, 99, 111, 115, 117, 128, 134, 141, 145, 148, 152, 156, 158, 164, 168, 170, 181, 192, 199, 203, 206, 210, 214, 215, 219, 223, 225, 236, 240, 244, 248, 260, 274, 277, 317, 328, 339], "content": [3, 4, 14, 21, 26, 27, 30, 31, 35, 37, 48, 52, 56, 59, 67, 79, 82, 99, 110, 111, 115, 117, 128, 134, 141, 145, 148, 152, 156, 158, 163, 164, 168, 170, 181, 192, 199, 203, 206, 210, 214, 215, 218, 219, 223, 225, 236, 240, 244, 248, 260, 274, 277, 317, 328, 339], "graphic": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 128, 129, 130, 131, 132, 133, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190], "color": [5, 129, 182], "colormap": [6, 183], "dendron": [7, 184], "fabio_map": [8, 185], "imag": [9, 130, 186], "matplotlib": [10, 131, 187], "plot": [11, 45, 125, 132, 178, 188, 233], "pygam": [12, 133, 189], "ztransform_plot_help": [13, 190], "job": [14, 15, 16, 17, 18, 19, 20, 134, 135, 136, 137, 138, 139, 140, 192, 193, 194, 195, 196, 197, 198], "cach": [15, 135, 193], "closur": [16, 136, 194], "filenam": [17, 138, 195], "initialize_system_cach": [18, 139, 196], "ndecor": [19, 197], "parallel": [20, 140, 198], "linalg": [21, 22, 23, 24, 141, 142, 143, 144, 199, 200, 201, 202], "argument": [22, 142, 200], "matrix": [23, 34, 44, 114, 124, 143, 167, 177, 201, 222, 232], "oper": [24, 144, 202], "nlab": [25, 213, 326], "obsolet": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "encod": [27, 28, 29, 158, 159, 160, 215, 216, 217], "huffman": [28, 159, 216], "naryhuffman": [29, 160, 217], "gpu": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "cl": [31, 32, 33, 34, 111, 112, 113, 114, 164, 165, 166, 167, 219, 220, 221, 222], "devic": [32, 39, 112, 119, 165, 172, 220, 227], "function": [33, 40, 101, 108, 113, 120, 161, 166, 173, 221, 228, 319], "cpu": [35, 36, 115, 116, 168, 169, 223, 224], "util": [36, 99, 100, 101, 102, 103, 104, 105, 106, 107, 116, 169, 224, 317, 318, 319, 320, 321, 322, 323, 324, 325], "cu": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "convolut": [38, 84, 118, 171, 226, 281, 355], "gpufun": [41, 121, 174, 229], "graph": [42, 122, 175, 230], "logic": [43, 123, 176, 231], "sequenc": [46, 126, 179, 234], "statist": [47, 127, 180, 235], "model": [48, 49, 50, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 236, 237, 238], "izh": [49, 146, 204, 237], "lif": [50, 147, 205, 238], "opto": [51, 239, 247, 327], "rbm": [52, 53, 54, 55, 56, 57, 58, 148, 149, 150, 151, 152, 153, 154, 206, 207, 208, 209, 210, 211, 212, 240, 241, 242, 243, 244, 245, 246], "rbm_helper": [54, 150, 208, 242], "rbm_sampl": [55, 151, 209, 243], "rbm_util": [56, 57, 58, 152, 153, 154, 210, 211, 212, 244, 245, 246], "stutil": [58, 154, 212, 246], "signal": [59, 60, 61, 62, 63, 64, 65, 66, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338], "coher": [60, 249, 329], "conv": [61, 250, 330], "morlet": [62, 252, 332], "multitap": [63, 254, 334], "ppc": [64, 255, 335], "savitskygolai": [65, 257, 337], "sde": [66, 258, 311, 375], "spatial": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349], "arrai": [68, 261, 340], "dct": [69, 262, 341], "distanc": [70, 263, 342], "fftzero": [71, 264, 343], "geometri": [72, 265], "kernel": [73, 266, 344], "mask": [74, 267], "phase": [75, 268, 345], "point": [76, 269], "spike": [77, 79, 80, 81, 271, 274, 275, 276, 347, 350, 351], "triangul": [78, 272, 348], "waveform": [81, 276, 351], "stat": [82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377], "circular": [83, 280, 354], "densiti": [85, 282, 356], "distribut": [86, 283, 357], "fast_kd": [87, 285, 359], "gaussian": [88, 279, 286, 287, 288, 289, 290, 291, 292, 293, 294, 353], "glm": [89, 295, 360], "grid_search": [90, 297], "hmm": [91, 299, 363], "inform": [92, 300, 364], "mcint": [93, 304, 368], "minim": [94, 305, 369], "mixtur": [95, 306, 370], "modefind": [96, 307, 371], "pvalu": [97, 309, 373], "regress": [98, 310, 374], "getfftw": [102, 109, 162, 320], "hdfmat": [103, 191, 321], "string": [104, 322], "system": [105, 314, 323], "time": [106, 324], "tool": [107, 316, 325], "decor": 137, "linenois": [251, 331], "morlet_coher": [253, 333], "reson": [256, 336], "spatialpsd": [270, 346], "wave_parametric_model": [273, 349], "glmfit": [278, 352], "entropi": [284, 358], "gmm": [296, 361], "history_basi": [298, 362], "kent_reimann": [301, 365], "lesson": [302, 366], "matzner_bar": [303, 367], "gad_plos_2015": [303, 367], "mvg": [308, 372], "spatiotemporal_glm_util": [312, 376], "text": 315}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"dependencies module": [[0, "dependencies-module"]], "Neurotools": [[1, "neurotools"]], "Indices and tables": [[1, "indices-and-tables"]], "Subpackages:": [[1, null]], "neurotools": [[2, "neurotools"], [155, "neurotools"]], "neurotools package": [[3, "neurotools-package"], [156, "neurotools-package"]], "Subpackages": [[3, "subpackages"], [26, "subpackages"], [30, "subpackages"], [52, "subpackages"], [110, "subpackages"], [145, "subpackages"], [148, "subpackages"], [156, "subpackages"], [163, "subpackages"], [203, "subpackages"], [206, "subpackages"], [214, "subpackages"], [218, "subpackages"], [240, "subpackages"]], "Submodules": [[3, "submodules"], [4, "submodules"], [14, "submodules"], [21, "submodules"], [26, "submodules"], [27, "submodules"], [31, "submodules"], [35, "submodules"], [37, "submodules"], [48, "submodules"], [52, "submodules"], [56, "submodules"], [59, "submodules"], [67, "submodules"], [79, "submodules"], [82, "submodules"], [99, "submodules"], [111, "submodules"], [115, "submodules"], [117, "submodules"], [128, "submodules"], [134, "submodules"], [141, "submodules"], [145, "submodules"], [148, "submodules"], [152, "submodules"], [156, "submodules"], [158, "submodules"], [164, "submodules"], [168, "submodules"], [170, "submodules"], [181, "submodules"], [192, "submodules"], [199, "submodules"], [203, "submodules"], [206, "submodules"], [210, "submodules"], [214, "submodules"], [215, "submodules"], [219, "submodules"], [223, "submodules"], [225, "submodules"], [236, "submodules"], [240, "submodules"], [244, "submodules"], [248, "submodules"], [260, "submodules"], [274, "submodules"], [277, "submodules"], [317, "submodules"], [328, "submodules"], [339, "submodules"]], "Module contents": [[3, "module-neurotools"], [4, "module-neurotools.graphics"], [14, "module-neurotools.jobs"], [21, "module-neurotools.linalg"], [26, "module-neurotools.obsolete"], [27, "module-neurotools.obsolete.encoding"], [30, "module-neurotools.obsolete.gpu"], [31, "module-neurotools.obsolete.gpu.cl"], [35, "module-neurotools.obsolete.gpu.cpu"], [37, "module-neurotools.obsolete.gpu.cu"], [48, "module-neurotools.obsolete.models"], [52, "module-contents"], [56, "module-contents"], [59, "module-neurotools.signal"], [67, "module-neurotools.spatial"], [79, "module-neurotools.spikes"], [82, "module-neurotools.stats"], [99, "module-neurotools.util"], [110, "module-gpu"], [111, "module-gpu.cl"], [115, "module-gpu.cpu"], [117, "module-gpu.cu"], [128, "module-graphics"], [134, "module-jobs"], [141, "module-linalg"], [145, "module-models"], [148, "module-contents"], [152, "module-contents"], [156, "module-neurotools"], [158, "module-contents"], [163, "module-contents"], [164, "module-contents"], [168, "module-contents"], [170, "module-contents"], [181, "module-neurotools.graphics"], [192, "module-neurotools.jobs"], [199, "module-neurotools.linalg"], [203, "module-contents"], [206, "module-contents"], [210, "module-contents"], [214, "module-neurotools.obsolete"], [215, "module-neurotools.obsolete.encoding"], [218, "module-neurotools.obsolete.gpu"], [219, "module-neurotools.obsolete.gpu.cl"], [223, "module-neurotools.obsolete.gpu.cpu"], [225, "module-neurotools.obsolete.gpu.cu"], [236, "module-neurotools.obsolete.models"], [240, "module-contents"], [244, "module-contents"], [248, "module-neurotools.signal"], [260, "module-neurotools.spatial"], [274, "module-neurotools.spikes"], [277, "module-neurotools.stats"], [317, "module-neurotools.util"], [328, "module-signal"], [339, "module-spatial"]], "neurotools.graphics package": [[4, "neurotools-graphics-package"], [181, "neurotools-graphics-package"]], "neurotools.graphics.color module": [[5, "module-neurotools.graphics.color"], [182, "module-neurotools.graphics.color"]], "neurotools.graphics.colormaps module": [[6, "module-neurotools.graphics.colormaps"], [183, "module-neurotools.graphics.colormaps"]], "neurotools.graphics.dendron module": [[7, "module-neurotools.graphics.dendron"], [184, "module-neurotools.graphics.dendron"]], "neurotools.graphics.fabio_maps module": [[8, "module-neurotools.graphics.fabio_maps"], [185, "module-neurotools.graphics.fabio_maps"]], "neurotools.graphics.image module": [[9, "module-neurotools.graphics.image"], [186, "module-neurotools.graphics.image"]], "neurotools.graphics.matplotlib module": [[10, "module-neurotools.graphics.matplotlib"], [187, "module-neurotools.graphics.matplotlib"]], "neurotools.graphics.plot module": [[11, "module-neurotools.graphics.plot"], [188, "module-neurotools.graphics.plot"]], "neurotools.graphics.pygame module": [[12, "module-neurotools.graphics.pygame"], [189, "module-neurotools.graphics.pygame"]], "neurotools.graphics.ztransform_plot_helpers module": [[13, "neurotools-graphics-ztransform-plot-helpers-module"], [190, "neurotools-graphics-ztransform-plot-helpers-module"]], "neurotools.jobs package": [[14, "neurotools-jobs-package"], [192, "neurotools-jobs-package"]], "neurotools.jobs.cache module": [[15, "module-neurotools.jobs.cache"], [193, "module-neurotools.jobs.cache"]], "neurotools.jobs.closure module": [[16, "module-neurotools.jobs.closure"], [194, "module-neurotools.jobs.closure"]], "neurotools.jobs.filenames module": [[17, "module-neurotools.jobs.filenames"], [195, "module-neurotools.jobs.filenames"]], "neurotools.jobs.initialize_system_cache module": [[18, "module-neurotools.jobs.initialize_system_cache"], [196, "module-neurotools.jobs.initialize_system_cache"]], "neurotools.jobs.ndecorator module": [[19, "module-neurotools.jobs.ndecorator"], [197, "module-neurotools.jobs.ndecorator"]], "neurotools.jobs.parallel module": [[20, "module-neurotools.jobs.parallel"], [198, "module-neurotools.jobs.parallel"]], "neurotools.linalg package": [[21, "neurotools-linalg-package"], [199, "neurotools-linalg-package"]], "neurotools.linalg.arguments module": [[22, "module-neurotools.linalg.arguments"], [200, "module-neurotools.linalg.arguments"]], "neurotools.linalg.matrix module": [[23, "module-neurotools.linalg.matrix"], [201, "module-neurotools.linalg.matrix"]], "neurotools.linalg.operators module": [[24, "module-neurotools.linalg.operators"], [202, "module-neurotools.linalg.operators"]], "neurotools.nlab module": [[25, "module-neurotools.nlab"], [213, "module-neurotools.nlab"]], "neurotools.obsolete package": [[26, "neurotools-obsolete-package"], [214, "neurotools-obsolete-package"]], "neurotools.obsolete.encoding package": [[27, "neurotools-obsolete-encoding-package"], [215, "neurotools-obsolete-encoding-package"]], "neurotools.obsolete.encoding.Huffman module": [[28, "module-neurotools.obsolete.encoding.Huffman"], [216, "module-neurotools.obsolete.encoding.Huffman"]], "neurotools.obsolete.encoding.NaryHuffman module": [[29, "module-neurotools.obsolete.encoding.NaryHuffman"], [217, "module-neurotools.obsolete.encoding.NaryHuffman"]], "neurotools.obsolete.gpu package": [[30, "neurotools-obsolete-gpu-package"], [218, "neurotools-obsolete-gpu-package"]], "neurotools.obsolete.gpu.cl package": [[31, "neurotools-obsolete-gpu-cl-package"], [219, "neurotools-obsolete-gpu-cl-package"]], "neurotools.obsolete.gpu.cl.device module": [[32, "neurotools-obsolete-gpu-cl-device-module"], [220, "neurotools-obsolete-gpu-cl-device-module"]], "neurotools.obsolete.gpu.cl.function module": [[33, "neurotools-obsolete-gpu-cl-function-module"], [221, "neurotools-obsolete-gpu-cl-function-module"]], "neurotools.obsolete.gpu.cl.matrix module": [[34, "neurotools-obsolete-gpu-cl-matrix-module"], [222, "neurotools-obsolete-gpu-cl-matrix-module"]], "neurotools.obsolete.gpu.cpu package": [[35, "neurotools-obsolete-gpu-cpu-package"], [223, "neurotools-obsolete-gpu-cpu-package"]], "neurotools.obsolete.gpu.cpu.util module": [[36, "module-neurotools.obsolete.gpu.cpu.util"], [224, "module-neurotools.obsolete.gpu.cpu.util"]], "neurotools.obsolete.gpu.cu package": [[37, "neurotools-obsolete-gpu-cu-package"], [225, "neurotools-obsolete-gpu-cu-package"]], "neurotools.obsolete.gpu.cu.convolution module": [[38, "module-neurotools.obsolete.gpu.cu.convolution"], [226, "module-neurotools.obsolete.gpu.cu.convolution"]], "neurotools.obsolete.gpu.cu.device module": [[39, "module-neurotools.obsolete.gpu.cu.device"], [227, "module-neurotools.obsolete.gpu.cu.device"]], "neurotools.obsolete.gpu.cu.function module": [[40, "module-neurotools.obsolete.gpu.cu.function"], [228, "module-neurotools.obsolete.gpu.cu.function"]], "neurotools.obsolete.gpu.cu.gpufun module": [[41, "module-neurotools.obsolete.gpu.cu.gpufun"], [229, "module-neurotools.obsolete.gpu.cu.gpufun"]], "neurotools.obsolete.gpu.cu.graph module": [[42, "module-neurotools.obsolete.gpu.cu.graph"], [230, "module-neurotools.obsolete.gpu.cu.graph"]], "neurotools.obsolete.gpu.cu.logic module": [[43, "module-neurotools.obsolete.gpu.cu.logic"], [231, "module-neurotools.obsolete.gpu.cu.logic"]], "neurotools.obsolete.gpu.cu.matrix module": [[44, "neurotools-obsolete-gpu-cu-matrix-module"], [232, "neurotools-obsolete-gpu-cu-matrix-module"]], "neurotools.obsolete.gpu.cu.plot module": [[45, "module-neurotools.obsolete.gpu.cu.plot"], [233, "module-neurotools.obsolete.gpu.cu.plot"]], "neurotools.obsolete.gpu.cu.sequence module": [[46, "module-neurotools.obsolete.gpu.cu.sequence"], [234, "module-neurotools.obsolete.gpu.cu.sequence"]], "neurotools.obsolete.gpu.cu.statistics module": [[47, "neurotools-obsolete-gpu-cu-statistics-module"], [235, "neurotools-obsolete-gpu-cu-statistics-module"]], "neurotools.obsolete.models package": [[48, "neurotools-obsolete-models-package"], [236, "neurotools-obsolete-models-package"]], "neurotools.obsolete.models.izh module": [[49, "module-neurotools.obsolete.models.izh"], [237, "module-neurotools.obsolete.models.izh"]], "neurotools.obsolete.models.lif module": [[50, "module-neurotools.obsolete.models.lif"], [238, "module-neurotools.obsolete.models.lif"]], "neurotools.obsolete.opto module": [[51, "neurotools-obsolete-opto-module"], [239, "neurotools-obsolete-opto-module"]], "neurotools.obsolete.rbm package": [[52, "neurotools-obsolete-rbm-package"], [240, "neurotools-obsolete-rbm-package"]], "neurotools.obsolete.rbm.rbm module": [[53, "neurotools-obsolete-rbm-rbm-module"], [241, "neurotools-obsolete-rbm-rbm-module"]], "neurotools.obsolete.rbm.rbm_helper module": [[54, "neurotools-obsolete-rbm-rbm-helper-module"], [242, "neurotools-obsolete-rbm-rbm-helper-module"]], "neurotools.obsolete.rbm.rbm_sample module": [[55, "neurotools-obsolete-rbm-rbm-sample-module"], [243, "neurotools-obsolete-rbm-rbm-sample-module"]], "neurotools.obsolete.rbm.rbm_utils package": [[56, "neurotools-obsolete-rbm-rbm-utils-package"], [244, "neurotools-obsolete-rbm-rbm-utils-package"]], "neurotools.obsolete.rbm.rbm_utils.rbm module": [[57, "neurotools-obsolete-rbm-rbm-utils-rbm-module"], [245, "neurotools-obsolete-rbm-rbm-utils-rbm-module"]], "neurotools.obsolete.rbm.rbm_utils.stutils module": [[58, "neurotools-obsolete-rbm-rbm-utils-stutils-module"], [246, "neurotools-obsolete-rbm-rbm-utils-stutils-module"]], "neurotools.signal package": [[59, "neurotools-signal-package"], [248, "neurotools-signal-package"]], "neurotools.signal.coherence module": [[60, "module-neurotools.signal.coherence"], [249, "module-neurotools.signal.coherence"]], "neurotools.signal.conv module": [[61, "module-neurotools.signal.conv"], [250, "module-neurotools.signal.conv"]], "neurotools.signal.morlet module": [[62, "module-neurotools.signal.morlet"], [252, "module-neurotools.signal.morlet"]], "neurotools.signal.multitaper module": [[63, "module-neurotools.signal.multitaper"], [254, "module-neurotools.signal.multitaper"]], "neurotools.signal.ppc module": [[64, "module-neurotools.signal.ppc"], [255, "module-neurotools.signal.ppc"]], "neurotools.signal.savitskygolay module": [[65, "module-neurotools.signal.savitskygolay"], [257, "module-neurotools.signal.savitskygolay"]], "neurotools.signal.sde module": [[66, "module-neurotools.signal.sde"], [258, "module-neurotools.signal.sde"]], "neurotools.spatial package": [[67, "neurotools-spatial-package"], [260, "neurotools-spatial-package"]], "neurotools.spatial.array module": [[68, "module-neurotools.spatial.array"], [261, "module-neurotools.spatial.array"]], "neurotools.spatial.dct module": [[69, "module-neurotools.spatial.dct"], [262, "module-neurotools.spatial.dct"]], "neurotools.spatial.distance module": [[70, "module-neurotools.spatial.distance"], [263, "module-neurotools.spatial.distance"]], "neurotools.spatial.fftzeros module": [[71, "module-neurotools.spatial.fftzeros"], [264, "module-neurotools.spatial.fftzeros"]], "neurotools.spatial.geometry module": [[72, "neurotools-spatial-geometry-module"], [265, "neurotools-spatial-geometry-module"]], "neurotools.spatial.kernels module": [[73, "module-neurotools.spatial.kernels"], [266, "module-neurotools.spatial.kernels"]], "neurotools.spatial.masking module": [[74, "neurotools-spatial-masking-module"], [267, "neurotools-spatial-masking-module"]], "neurotools.spatial.phase module": [[75, "module-neurotools.spatial.phase"], [268, "module-neurotools.spatial.phase"]], "neurotools.spatial.points module": [[76, "module-neurotools.spatial.points"], [269, "module-neurotools.spatial.points"]], "neurotools.spatial.spiking module": [[77, "module-neurotools.spatial.spiking"], [271, "module-neurotools.spatial.spiking"]], "neurotools.spatial.triangulation module": [[78, "module-neurotools.spatial.triangulation"], [272, "module-neurotools.spatial.triangulation"]], "neurotools.spikes package": [[79, "neurotools-spikes-package"], [274, "neurotools-spikes-package"]], "neurotools.spikes.spikes module": [[80, "module-neurotools.spikes.spikes"], [275, "module-neurotools.spikes.spikes"]], "neurotools.spikes.waveform module": [[81, "module-neurotools.spikes.waveform"], [276, "module-neurotools.spikes.waveform"]], "neurotools.stats package": [[82, "neurotools-stats-package"], [277, "neurotools-stats-package"]], "neurotools.stats.circular module": [[83, "module-neurotools.stats.circular"], [280, "module-neurotools.stats.circular"]], "neurotools.stats.convolutional module": [[84, "module-neurotools.stats.convolutional"], [281, "module-neurotools.stats.convolutional"]], "neurotools.stats.density module": [[85, "module-neurotools.stats.density"], [282, "module-neurotools.stats.density"]], "neurotools.stats.distributions module": [[86, "module-neurotools.stats.distributions"], [283, "module-neurotools.stats.distributions"]], "neurotools.stats.fast_kde module": [[87, "module-neurotools.stats.fast_kde"], [285, "module-neurotools.stats.fast_kde"]], "neurotools.stats.gaussian module": [[88, "module-neurotools.stats.gaussian"], [286, "module-neurotools.stats.gaussian"], [287, "module-neurotools.stats.gaussian"], [288, "module-neurotools.stats.gaussian"], [289, "module-neurotools.stats.gaussian"], [290, "module-neurotools.stats.gaussian"], [291, "module-neurotools.stats.gaussian"], [292, "module-neurotools.stats.gaussian"], [293, "module-neurotools.stats.gaussian"], [294, "module-neurotools.stats.gaussian"]], "neurotools.stats.glm module": [[89, "module-neurotools.stats.glm"], [295, "module-neurotools.stats.glm"]], "neurotools.stats.grid_search module": [[90, "module-neurotools.stats.grid_search"], [297, "module-neurotools.stats.grid_search"]], "neurotools.stats.hmm module": [[91, "module-neurotools.stats.hmm"], [299, "module-neurotools.stats.hmm"]], "neurotools.stats.information module": [[92, "module-neurotools.stats.information"], [300, "module-neurotools.stats.information"]], "neurotools.stats.mcint module": [[93, "module-neurotools.stats.mcint"], [304, "module-neurotools.stats.mcint"]], "neurotools.stats.minimize module": [[94, "module-neurotools.stats.minimize"], [305, "module-neurotools.stats.minimize"]], "neurotools.stats.mixtures module": [[95, "module-neurotools.stats.mixtures"], [306, "module-neurotools.stats.mixtures"]], "neurotools.stats.modefind module": [[96, "module-neurotools.stats.modefind"], [307, "module-neurotools.stats.modefind"]], "neurotools.stats.pvalues module": [[97, "module-neurotools.stats.pvalues"], [309, "module-neurotools.stats.pvalues"]], "neurotools.stats.regressions module": [[98, "module-neurotools.stats.regressions"], [310, "module-neurotools.stats.regressions"]], "neurotools.util package": [[99, "neurotools-util-package"], [317, "neurotools-util-package"]], "neurotools.util.dependencies module": [[100, "neurotools-util-dependencies-module"], [318, "neurotools-util-dependencies-module"]], "neurotools.util.functions module": [[101, "module-neurotools.util.functions"], [319, "module-neurotools.util.functions"]], "neurotools.util.getfftw module": [[102, "module-neurotools.util.getfftw"], [320, "module-neurotools.util.getfftw"]], "neurotools.util.hdfmat module": [[103, "module-neurotools.util.hdfmat"], [321, "module-neurotools.util.hdfmat"]], "neurotools.util.string module": [[104, "module-neurotools.util.string"], [322, "module-neurotools.util.string"]], "neurotools.util.system module": [[105, "module-neurotools.util.system"], [323, "module-neurotools.util.system"]], "neurotools.util.time module": [[106, "module-neurotools.util.time"], [324, "module-neurotools.util.time"]], "neurotools.util.tools module": [[107, "module-neurotools.util.tools"], [325, "module-neurotools.util.tools"]], "functions module": [[108, "module-functions"]], "getfftw module": [[109, "module-getfftw"]], "gpu package": [[110, "gpu-package"]], "gpu.cl package": [[111, "gpu-cl-package"]], "gpu.cl.device module": [[112, "gpu-cl-device-module"]], "gpu.cl.function module": [[113, "gpu-cl-function-module"]], "gpu.cl.matrix module": [[114, "gpu-cl-matrix-module"]], "gpu.cpu package": [[115, "gpu-cpu-package"]], "gpu.cpu.util module": [[116, "module-gpu.cpu.util"]], "gpu.cu package": [[117, "gpu-cu-package"]], "gpu.cu.convolution module": [[118, "module-gpu.cu.convolution"]], "gpu.cu.device module": [[119, "module-gpu.cu.device"]], "gpu.cu.function module": [[120, "module-gpu.cu.function"]], "gpu.cu.gpufun module": [[121, "module-gpu.cu.gpufun"]], "gpu.cu.graph module": [[122, "module-gpu.cu.graph"]], "gpu.cu.logic module": [[123, "module-gpu.cu.logic"]], "gpu.cu.matrix module": [[124, "gpu-cu-matrix-module"]], "gpu.cu.plot module": [[125, "module-gpu.cu.plot"]], "gpu.cu.sequence module": [[126, "module-gpu.cu.sequence"]], "gpu.cu.statistics module": [[127, "gpu-cu-statistics-module"]], "graphics package": [[128, "graphics-package"]], "graphics.color module": [[129, "module-graphics.color"]], "graphics.image module": [[130, "module-graphics.image"]], "graphics.matplotlib module": [[131, "module-graphics.matplotlib"]], "graphics.plot module": [[132, "module-graphics.plot"]], "graphics.pygame module": [[133, "module-graphics.pygame"]], "jobs package": [[134, "jobs-package"]], "jobs.cache module": [[135, "module-jobs.cache"]], "jobs.closure module": [[136, "module-jobs.closure"]], "jobs.decorator module": [[137, "jobs-decorator-module"]], "jobs.filenames module": [[138, "module-jobs.filenames"]], "jobs.initialize_system_cache module": [[139, "module-jobs.initialize_system_cache"]], "jobs.parallel module": [[140, "module-jobs.parallel"]], "linalg package": [[141, "linalg-package"]], "linalg.arguments module": [[142, "module-linalg.arguments"]], "linalg.matrix module": [[143, "module-linalg.matrix"]], "linalg.operators module": [[144, "module-linalg.operators"]], "models package": [[145, "models-package"]], "models.izh module": [[146, "module-models.izh"]], "models.lif module": [[147, "module-models.lif"]], "models.rbm package": [[148, "models-rbm-package"]], "models.rbm.rbm module": [[149, "models-rbm-rbm-module"]], "models.rbm.rbm_helper module": [[150, "models-rbm-rbm-helper-module"]], "models.rbm.rbm_sample module": [[151, "models-rbm-rbm-sample-module"]], "models.rbm.rbm_utils package": [[152, "models-rbm-rbm-utils-package"]], "models.rbm.rbm_utils.rbm module": [[153, "models-rbm-rbm-utils-rbm-module"]], "models.rbm.rbm_utils.stutils module": [[154, "models-rbm-rbm-utils-stutils-module"]], "neurotools.dependencies module": [[157, "neurotools-dependencies-module"]], "neurotools.encoding package": [[158, "neurotools-encoding-package"]], "neurotools.encoding.Huffman module": [[159, "neurotools-encoding-huffman-module"]], "neurotools.encoding.NaryHuffman module": [[160, "neurotools-encoding-naryhuffman-module"]], "neurotools.functions module": [[161, "neurotools-functions-module"]], "neurotools.getfftw module": [[162, "neurotools-getfftw-module"]], "neurotools.gpu package": [[163, "neurotools-gpu-package"]], "neurotools.gpu.cl package": [[164, "neurotools-gpu-cl-package"]], "neurotools.gpu.cl.device module": [[165, "neurotools-gpu-cl-device-module"]], "neurotools.gpu.cl.function module": [[166, "neurotools-gpu-cl-function-module"]], "neurotools.gpu.cl.matrix module": [[167, "neurotools-gpu-cl-matrix-module"]], "neurotools.gpu.cpu package": [[168, "neurotools-gpu-cpu-package"]], "neurotools.gpu.cpu.util module": [[169, "neurotools-gpu-cpu-util-module"]], "neurotools.gpu.cu package": [[170, "neurotools-gpu-cu-package"]], "neurotools.gpu.cu.convolution module": [[171, "neurotools-gpu-cu-convolution-module"]], "neurotools.gpu.cu.device module": [[172, "neurotools-gpu-cu-device-module"]], "neurotools.gpu.cu.function module": [[173, "neurotools-gpu-cu-function-module"]], "neurotools.gpu.cu.gpufun module": [[174, "neurotools-gpu-cu-gpufun-module"]], "neurotools.gpu.cu.graph module": [[175, "neurotools-gpu-cu-graph-module"]], "neurotools.gpu.cu.logic module": [[176, "neurotools-gpu-cu-logic-module"]], "neurotools.gpu.cu.matrix module": [[177, "neurotools-gpu-cu-matrix-module"]], "neurotools.gpu.cu.plot module": [[178, "neurotools-gpu-cu-plot-module"]], "neurotools.gpu.cu.sequence module": [[179, "neurotools-gpu-cu-sequence-module"]], "neurotools.gpu.cu.statistics module": [[180, "neurotools-gpu-cu-statistics-module"]], "neurotools.hdfmat module": [[191, "neurotools-hdfmat-module"]], "neurotools.models package": [[203, "neurotools-models-package"]], "neurotools.models.izh module": [[204, "neurotools-models-izh-module"]], "neurotools.models.lif module": [[205, "neurotools-models-lif-module"]], "neurotools.models.rbm package": [[206, "neurotools-models-rbm-package"]], "neurotools.models.rbm.rbm module": [[207, "neurotools-models-rbm-rbm-module"]], "neurotools.models.rbm.rbm_helper module": [[208, "neurotools-models-rbm-rbm-helper-module"]], "neurotools.models.rbm.rbm_sample module": [[209, "neurotools-models-rbm-rbm-sample-module"]], "neurotools.models.rbm.rbm_utils package": [[210, "neurotools-models-rbm-rbm-utils-package"]], "neurotools.models.rbm.rbm_utils.rbm module": [[211, "neurotools-models-rbm-rbm-utils-rbm-module"]], "neurotools.models.rbm.rbm_utils.stutils module": [[212, "neurotools-models-rbm-rbm-utils-stutils-module"]], "neurotools.opto module": [[247, "neurotools-opto-module"]], "neurotools.signal.linenoise module": [[251, "neurotools-signal-linenoise-module"]], "neurotools.signal.morlet_coherence module": [[253, "neurotools-signal-morlet-coherence-module"]], "neurotools.signal.resonator module": [[256, "neurotools-signal-resonator-module"]], "neurotools.signal.signal module": [[259, "neurotools-signal-signal-module"]], "neurotools.spatial.spatialPSD module": [[270, "neurotools-spatial-spatialpsd-module"]], "neurotools.spatial.wave_parametric_models module": [[273, "neurotools-spatial-wave-parametric-models-module"]], "neurotools.stats.GLMFit module": [[278, "neurotools-stats-glmfit-module"]], "neurotools.stats.Gaussian module": [[279, "neurotools-stats-gaussian-module"]], "neurotools.stats.entropy module": [[284, "neurotools-stats-entropy-module"]], "neurotools.stats.gmm module": [[296, "neurotools-stats-gmm-module"]], "neurotools.stats.history_basis module": [[298, "neurotools-stats-history-basis-module"]], "neurotools.stats.kent_reimann module": [[301, "neurotools-stats-kent-reimann-module"]], "neurotools.stats.lessons module": [[302, "neurotools-stats-lessons-module"]], "neurotools.stats.matzner_bar-gad_PLoS_2015 module": [[303, "neurotools-stats-matzner-bar-gad-plos-2015-module"]], "neurotools.stats.mvg module": [[308, "neurotools-stats-mvg-module"]], "neurotools.stats.sde module": [[311, "neurotools-stats-sde-module"]], "neurotools.stats.spatiotemporal_glm_utils module": [[312, "neurotools-stats-spatiotemporal-glm-utils-module"]], "neurotools.stats.stats module": [[313, "neurotools-stats-stats-module"]], "neurotools.system module": [[314, "neurotools-system-module"]], "neurotools.text module": [[315, "neurotools-text-module"]], "neurotools.tools module": [[316, "neurotools-tools-module"]], "nlab module": [[326, "module-nlab"]], "opto module": [[327, "opto-module"]], "signal package": [[328, "signal-package"]], "signal.coherence module": [[329, "signal-coherence-module"]], "signal.conv module": [[330, "signal-conv-module"]], "signal.linenoise module": [[331, "signal-linenoise-module"]], "signal.morlet module": [[332, "signal-morlet-module"]], "signal.morlet_coherence module": [[333, "signal-morlet-coherence-module"]], "signal.multitaper module": [[334, "signal-multitaper-module"]], "signal.ppc module": [[335, "signal-ppc-module"]], "signal.resonator module": [[336, "signal-resonator-module"]], "signal.savitskygolay module": [[337, "signal-savitskygolay-module"]], "signal.signal module": [[338, "module-signal.signal"]], "spatial package": [[339, "spatial-package"]], "spatial.array module": [[340, "module-spatial.array"]], "spatial.dct module": [[341, "module-spatial.dct"]], "spatial.distance module": [[342, "module-spatial.distance"]], "spatial.fftzeros module": [[343, "module-spatial.fftzeros"]], "spatial.kernels module": [[344, "module-spatial.kernels"]], "spatial.phase module": [[345, "module-spatial.phase"]], "spatial.spatialPSD module": [[346, "spatial-spatialpsd-module"]], "spatial.spiking module": [[347, "module-spatial.spiking"]], "spatial.triangulation module": [[348, "module-spatial.triangulation"]], "spatial.wave_parametric_models module": [[349, "spatial-wave-parametric-models-module"]], "spikes.spikes module": [[350, "module-spikes.spikes"]], "spikes.waveform module": [[351, "module-spikes.waveform"]], "stats.GLMFit module": [[352, "stats-glmfit-module"]], "stats.Gaussian module": [[353, "stats-gaussian-module"]], "stats.circular module": [[354, "module-stats.circular"]], "stats.convolutional module": [[355, "module-stats.convolutional"]], "stats.density module": [[356, "module-stats.density"]], "stats.distributions module": [[357, "module-stats.distributions"]], "stats.entropy module": [[358, "stats-entropy-module"]], "stats.fast_kde module": [[359, "module-stats.fast_kde"]], "stats.glm module": [[360, "module-stats.glm"]], "stats.gmm module": [[361, "stats-gmm-module"]], "stats.history_basis module": [[362, "stats-history-basis-module"]], "stats.hmm module": [[363, "module-stats.hmm"]], "stats.information module": [[364, "module-stats.information"]], "stats.kent_reimann module": [[365, "stats-kent-reimann-module"]], "stats.lessons module": [[366, "stats-lessons-module"]], "stats.matzner_bar-gad_PLoS_2015 module": [[367, "stats-matzner-bar-gad-plos-2015-module"]], "stats.mcint module": [[368, "module-stats.mcint"]], "stats.minimize module": [[369, "module-stats.minimize"]], "stats.mixtures module": [[370, "module-stats.mixtures"]], "stats.modefind module": [[371, "module-stats.modefind"]], "stats.mvg module": [[372, "stats-mvg-module"]], "stats.pvalues module": [[373, "module-stats.pvalues"]], "stats.regressions module": [[374, "module-stats.regressions"]], "stats.sde module": [[375, "stats-sde-module"]], "stats.spatiotemporal_glm_utils module": [[376, "stats-spatiotemporal-glm-utils-module"]], "stats.stats module": [[377, "stats-stats-module"]]}, "indexentries": {"module": [[3, "module-neurotools"], [4, "module-neurotools.graphics"], [5, "module-neurotools.graphics.color"], [6, "module-neurotools.graphics.colormaps"], [7, "module-neurotools.graphics.dendron"], [8, "module-neurotools.graphics.fabio_maps"], [9, "module-neurotools.graphics.image"], [10, "module-neurotools.graphics.matplotlib"], [11, "module-neurotools.graphics.plot"], [12, "module-neurotools.graphics.pygame"], [14, "module-neurotools.jobs"], [15, "module-neurotools.jobs.cache"], [16, "module-neurotools.jobs.closure"], [17, "module-neurotools.jobs.filenames"], [18, "module-neurotools.jobs.initialize_system_cache"], [19, "module-neurotools.jobs.ndecorator"], [20, "module-neurotools.jobs.parallel"], [21, "module-neurotools.linalg"], [22, "module-neurotools.linalg.arguments"], [23, "module-neurotools.linalg.matrix"], [24, "module-neurotools.linalg.operators"], [25, "module-neurotools.nlab"], [26, "module-neurotools.obsolete"], [27, "module-neurotools.obsolete.encoding"], [28, "module-neurotools.obsolete.encoding.Huffman"], [29, "module-neurotools.obsolete.encoding.NaryHuffman"], [30, "module-neurotools.obsolete.gpu"], [31, "module-neurotools.obsolete.gpu.cl"], [35, "module-neurotools.obsolete.gpu.cpu"], [36, "module-neurotools.obsolete.gpu.cpu.util"], [37, "module-neurotools.obsolete.gpu.cu"], [38, "module-neurotools.obsolete.gpu.cu.convolution"], [39, "module-neurotools.obsolete.gpu.cu.device"], [40, "module-neurotools.obsolete.gpu.cu.function"], [41, "module-neurotools.obsolete.gpu.cu.gpufun"], [42, "module-neurotools.obsolete.gpu.cu.graph"], [43, "module-neurotools.obsolete.gpu.cu.logic"], [45, "module-neurotools.obsolete.gpu.cu.plot"], [46, "module-neurotools.obsolete.gpu.cu.sequence"], [48, "module-neurotools.obsolete.models"], [49, "module-neurotools.obsolete.models.izh"], [50, "module-neurotools.obsolete.models.lif"], [59, "module-neurotools.signal"], [60, "module-neurotools.signal.coherence"], [61, "module-neurotools.signal.conv"], [62, "module-neurotools.signal.morlet"], [63, "module-neurotools.signal.multitaper"], [64, "module-neurotools.signal.ppc"], [65, "module-neurotools.signal.savitskygolay"], [66, "module-neurotools.signal.sde"], [67, "module-neurotools.spatial"], [68, "module-neurotools.spatial.array"], [69, "module-neurotools.spatial.dct"], [70, "module-neurotools.spatial.distance"], [71, "module-neurotools.spatial.fftzeros"], [73, "module-neurotools.spatial.kernels"], [75, "module-neurotools.spatial.phase"], [76, "module-neurotools.spatial.points"], [77, "module-neurotools.spatial.spiking"], [78, "module-neurotools.spatial.triangulation"], [79, "module-neurotools.spikes"], [80, "module-neurotools.spikes.spikes"], [81, "module-neurotools.spikes.waveform"], [82, "module-neurotools.stats"], [83, "module-neurotools.stats.circular"], [84, "module-neurotools.stats.convolutional"], [85, "module-neurotools.stats.density"], [86, "module-neurotools.stats.distributions"], [87, "module-neurotools.stats.fast_kde"], [88, "module-neurotools.stats.gaussian"], [89, "module-neurotools.stats.glm"], [90, "module-neurotools.stats.grid_search"], [91, "module-neurotools.stats.hmm"], [92, "module-neurotools.stats.information"], [93, "module-neurotools.stats.mcint"], [94, "module-neurotools.stats.minimize"], [95, "module-neurotools.stats.mixtures"], [96, "module-neurotools.stats.modefind"], [97, "module-neurotools.stats.pvalues"], [98, "module-neurotools.stats.regressions"], [99, "module-neurotools.util"], [101, "module-neurotools.util.functions"], [102, "module-neurotools.util.getfftw"], [103, "module-neurotools.util.hdfmat"], [104, "module-neurotools.util.string"], [105, "module-neurotools.util.system"], [106, "module-neurotools.util.time"], [107, "module-neurotools.util.tools"], [108, "module-functions"], [109, "module-getfftw"], [110, "module-gpu"], [111, "module-gpu.cl"], [115, "module-gpu.cpu"], [116, "module-gpu.cpu.util"], [117, "module-gpu.cu"], [118, "module-gpu.cu.convolution"], [119, "module-gpu.cu.device"], [120, "module-gpu.cu.function"], [121, "module-gpu.cu.gpufun"], [122, "module-gpu.cu.graph"], [123, "module-gpu.cu.logic"], [125, "module-gpu.cu.plot"], [126, "module-gpu.cu.sequence"], [128, "module-graphics"], [129, "module-graphics.color"], [130, "module-graphics.image"], [131, "module-graphics.matplotlib"], [132, "module-graphics.plot"], [133, "module-graphics.pygame"], [134, "module-jobs"], [135, "module-jobs.cache"], [136, "module-jobs.closure"], [138, "module-jobs.filenames"], [139, "module-jobs.initialize_system_cache"], [140, "module-jobs.parallel"], [141, "module-linalg"], [142, "module-linalg.arguments"], [143, "module-linalg.matrix"], [144, "module-linalg.operators"], [145, "module-models"], [146, "module-models.izh"], [147, "module-models.lif"], [156, "module-neurotools"], [181, "module-neurotools.graphics"], [182, "module-neurotools.graphics.color"], [183, "module-neurotools.graphics.colormaps"], [184, "module-neurotools.graphics.dendron"], [185, "module-neurotools.graphics.fabio_maps"], [186, "module-neurotools.graphics.image"], [187, "module-neurotools.graphics.matplotlib"], [188, "module-neurotools.graphics.plot"], [189, "module-neurotools.graphics.pygame"], [192, "module-neurotools.jobs"], [193, "module-neurotools.jobs.cache"], [194, "module-neurotools.jobs.closure"], [195, "module-neurotools.jobs.filenames"], [196, "module-neurotools.jobs.initialize_system_cache"], [197, "module-neurotools.jobs.ndecorator"], [198, "module-neurotools.jobs.parallel"], [199, "module-neurotools.linalg"], [200, "module-neurotools.linalg.arguments"], [201, "module-neurotools.linalg.matrix"], [202, "module-neurotools.linalg.operators"], [213, "module-neurotools.nlab"], [214, "module-neurotools.obsolete"], [215, "module-neurotools.obsolete.encoding"], [216, "module-neurotools.obsolete.encoding.Huffman"], [217, "module-neurotools.obsolete.encoding.NaryHuffman"], [218, "module-neurotools.obsolete.gpu"], [219, "module-neurotools.obsolete.gpu.cl"], [223, "module-neurotools.obsolete.gpu.cpu"], [224, "module-neurotools.obsolete.gpu.cpu.util"], [225, "module-neurotools.obsolete.gpu.cu"], [226, "module-neurotools.obsolete.gpu.cu.convolution"], [227, "module-neurotools.obsolete.gpu.cu.device"], [228, "module-neurotools.obsolete.gpu.cu.function"], [229, "module-neurotools.obsolete.gpu.cu.gpufun"], [230, "module-neurotools.obsolete.gpu.cu.graph"], [231, "module-neurotools.obsolete.gpu.cu.logic"], [233, "module-neurotools.obsolete.gpu.cu.plot"], [234, "module-neurotools.obsolete.gpu.cu.sequence"], [236, "module-neurotools.obsolete.models"], [237, "module-neurotools.obsolete.models.izh"], [238, "module-neurotools.obsolete.models.lif"], [248, "module-neurotools.signal"], [249, "module-neurotools.signal.coherence"], [250, "module-neurotools.signal.conv"], [252, "module-neurotools.signal.morlet"], [254, "module-neurotools.signal.multitaper"], [255, "module-neurotools.signal.ppc"], [257, "module-neurotools.signal.savitskygolay"], [258, "module-neurotools.signal.sde"], [260, "module-neurotools.spatial"], [261, "module-neurotools.spatial.array"], [262, "module-neurotools.spatial.dct"], [263, "module-neurotools.spatial.distance"], [264, "module-neurotools.spatial.fftzeros"], [266, "module-neurotools.spatial.kernels"], [268, "module-neurotools.spatial.phase"], [269, "module-neurotools.spatial.points"], [271, "module-neurotools.spatial.spiking"], [272, "module-neurotools.spatial.triangulation"], [274, "module-neurotools.spikes"], [275, "module-neurotools.spikes.spikes"], [276, "module-neurotools.spikes.waveform"], [277, "module-neurotools.stats"], [280, "module-neurotools.stats.circular"], [281, "module-neurotools.stats.convolutional"], [282, "module-neurotools.stats.density"], [283, "module-neurotools.stats.distributions"], [285, "module-neurotools.stats.fast_kde"], [286, "module-neurotools.stats.gaussian"], [287, "module-neurotools.stats.gaussian"], [288, "module-neurotools.stats.gaussian"], [289, "module-neurotools.stats.gaussian"], [290, "module-neurotools.stats.gaussian"], [291, "module-neurotools.stats.gaussian"], [292, "module-neurotools.stats.gaussian"], [293, "module-neurotools.stats.gaussian"], [294, "module-neurotools.stats.gaussian"], [295, "module-neurotools.stats.glm"], [297, "module-neurotools.stats.grid_search"], [299, "module-neurotools.stats.hmm"], [300, "module-neurotools.stats.information"], [304, "module-neurotools.stats.mcint"], [305, "module-neurotools.stats.minimize"], [306, "module-neurotools.stats.mixtures"], [307, "module-neurotools.stats.modefind"], [309, "module-neurotools.stats.pvalues"], [310, "module-neurotools.stats.regressions"], [317, "module-neurotools.util"], [319, "module-neurotools.util.functions"], [320, "module-neurotools.util.getfftw"], [321, "module-neurotools.util.hdfmat"], [322, "module-neurotools.util.string"], [323, "module-neurotools.util.system"], [324, "module-neurotools.util.time"], [325, "module-neurotools.util.tools"], [326, "module-nlab"], [328, "module-signal"], [338, "module-signal.signal"], [339, "module-spatial"], [340, "module-spatial.array"], [341, "module-spatial.dct"], [342, "module-spatial.distance"], [343, "module-spatial.fftzeros"], [344, "module-spatial.kernels"], [345, "module-spatial.phase"], [347, "module-spatial.spiking"], [348, "module-spatial.triangulation"], [350, "module-spikes.spikes"], [351, "module-spikes.waveform"], [354, "module-stats.circular"], [355, "module-stats.convolutional"], [356, "module-stats.density"], [357, "module-stats.distributions"], [359, "module-stats.fast_kde"], [360, "module-stats.glm"], [363, "module-stats.hmm"], [364, "module-stats.information"], [368, "module-stats.mcint"], [369, "module-stats.minimize"], [370, "module-stats.mixtures"], [371, "module-stats.modefind"], [373, "module-stats.pvalues"], [374, "module-stats.regressions"]], "neurotools": [[3, "module-neurotools"], [156, "module-neurotools"]], "neurotools.graphics": [[4, "module-neurotools.graphics"], [181, "module-neurotools.graphics"]], "rgbtohcl() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.RGBtoHCL"], [182, "neurotools.graphics.color.RGBtoHCL"]], "bit16_rgb_to_tuple() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.bit16_RGB_to_tuple"], [182, "neurotools.graphics.color.bit16_RGB_to_tuple"]], "bit16_print_color() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.bit16_print_color"], [182, "neurotools.graphics.color.bit16_print_color"]], "circularly_smooth_colormap() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.circularly_smooth_colormap"], [182, "neurotools.graphics.color.circularly_smooth_colormap"]], "code_to_16bit() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.code_to_16bit"], [182, "neurotools.graphics.color.code_to_16bit"]], "color_boxplot() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.color_boxplot"], [182, "neurotools.graphics.color.color_boxplot"]], "complexhlarr2rgb() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.complexHLArr2RGB"], [182, "neurotools.graphics.color.complexHLArr2RGB"]], "darkhues() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.darkhues"], [182, "neurotools.graphics.color.darkhues"]], "enumerate_fast_colors() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.enumerate_fast_colors"], [182, "neurotools.graphics.color.enumerate_fast_colors"]], "hcl2rgb() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.hcl2rgb"], [182, "neurotools.graphics.color.hcl2rgb"]], "hex2rgb() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.hex2rgb"], [182, "neurotools.graphics.color.hex2rgb"]], "hex_pack_bgr() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.hex_pack_BGR"], [182, "neurotools.graphics.color.hex_pack_BGR"]], "hsv2rgb() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.hsv2rgb"], [182, "neurotools.graphics.color.hsv2rgb"]], "hue_angle() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.hue_angle"], [182, "neurotools.graphics.color.hue_angle"]], "isoluminance1() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.isoluminance1"], [182, "neurotools.graphics.color.isoluminance1"]], "isoluminance2() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.isoluminance2"], [182, "neurotools.graphics.color.isoluminance2"]], "isoluminance3() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.isoluminance3"], [182, "neurotools.graphics.color.isoluminance3"]], "isoluminance4() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.isoluminance4"], [182, "neurotools.graphics.color.isoluminance4"]], "lighthues() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.lighthues"], [182, "neurotools.graphics.color.lighthues"]], "lightness() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.lightness"], [182, "neurotools.graphics.color.lightness"]], "luminance_matrix() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.luminance_matrix"], [182, "neurotools.graphics.color.luminance_matrix"]], "match_luminance() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.match_luminance"], [182, "neurotools.graphics.color.match_luminance"]], "medhues() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.medhues"], [182, "neurotools.graphics.color.medhues"]], "neurotools.graphics.color": [[5, "module-neurotools.graphics.color"], [182, "module-neurotools.graphics.color"]], "radl2rgb() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.radl2rgb"], [182, "neurotools.graphics.color.radl2rgb"]], "radl2rgblut() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.radl2rgbLUT"], [182, "neurotools.graphics.color.radl2rgbLUT"]], "rgb2hex() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.rgb2hex"], [182, "neurotools.graphics.color.rgb2hex"]], "rotate() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.rotate"], [182, "neurotools.graphics.color.rotate"]], "show_complete_fast_pallet() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.show_complete_fast_pallet"], [182, "neurotools.graphics.color.show_complete_fast_pallet"]], "show_complete_fastest_pallet() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.show_complete_fastest_pallet"], [182, "neurotools.graphics.color.show_complete_fastest_pallet"]], "show_fast_pallet() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.show_fast_pallet"], [182, "neurotools.graphics.color.show_fast_pallet"]], "show_hex_pallet() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.show_hex_pallet"], [182, "neurotools.graphics.color.show_hex_pallet"]], "tuple_to_bit16() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.tuple_to_bit16"], [182, "neurotools.graphics.color.tuple_to_bit16"]], "tuple_to_bit24() (in module neurotools.graphics.color)": [[5, "neurotools.graphics.color.tuple_to_bit24"], [182, "neurotools.graphics.color.tuple_to_bit24"]], "neurotools.graphics.colormaps": [[6, "module-neurotools.graphics.colormaps"], [183, "module-neurotools.graphics.colormaps"]], "test_colormaps() (in module neurotools.graphics.colormaps)": [[6, "neurotools.graphics.colormaps.test_colormaps"], [183, "neurotools.graphics.colormaps.test_colormaps"]], "count_nodes() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.count_nodes"], [184, "neurotools.graphics.dendron.count_nodes"]], "get_depth() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.get_depth"], [184, "neurotools.graphics.dendron.get_depth"]], "inorder_traversal() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.inorder_traversal"], [184, "neurotools.graphics.dendron.inorder_traversal"]], "list_like() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.list_like"], [184, "neurotools.graphics.dendron.list_like"]], "neurotools.graphics.dendron": [[7, "module-neurotools.graphics.dendron"], [184, "module-neurotools.graphics.dendron"]], "plot_brackets() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.plot_brackets"], [184, "neurotools.graphics.dendron.plot_brackets"]], "plot_brackets_polar() (in module neurotools.graphics.dendron)": [[7, "neurotools.graphics.dendron.plot_brackets_polar"], [184, "neurotools.graphics.dendron.plot_brackets_polar"]], "neurotools.graphics.fabio_maps": [[8, "module-neurotools.graphics.fabio_maps"], [185, "module-neurotools.graphics.fabio_maps"]], "mean_center() (in module neurotools.graphics.image)": [[9, "neurotools.graphics.image.mean_center"], [186, "neurotools.graphics.image.mean_center"]], "median_center() (in module neurotools.graphics.image)": [[9, "neurotools.graphics.image.median_center"], [186, "neurotools.graphics.image.median_center"]], "neurotools.graphics.image": [[9, "module-neurotools.graphics.image"], [186, "module-neurotools.graphics.image"]], "unitize() (in module neurotools.graphics.image)": [[9, "neurotools.graphics.image.unitize"], [186, "neurotools.graphics.image.unitize"]], "visualize_derivatives() (in module neurotools.graphics.image)": [[9, "neurotools.graphics.image.visualize_derivatives"], [186, "neurotools.graphics.image.visualize_derivatives"]], "draw_array() (in module neurotools.graphics.matplotlib)": [[10, "neurotools.graphics.matplotlib.draw_array"], [187, "neurotools.graphics.matplotlib.draw_array"]], "hide_toolbar() (in module neurotools.graphics.matplotlib)": [[10, "neurotools.graphics.matplotlib.hide_toolbar"], [187, "neurotools.graphics.matplotlib.hide_toolbar"]], "neurotools.graphics.matplotlib": [[10, "module-neurotools.graphics.matplotlib"], [187, "module-neurotools.graphics.matplotlib"]], "start() (in module neurotools.graphics.matplotlib)": [[10, "neurotools.graphics.matplotlib.start"], [187, "neurotools.graphics.matplotlib.start"]], "gaussian2d_covellipse() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.Gaussian2D_covellipse"], [188, "neurotools.graphics.plot.Gaussian2D_covellipse"]], "handlersquare (class in neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.HandlerSquare"], [188, "neurotools.graphics.plot.HandlerSquare"]], "addspikes() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.addspikes"], [188, "neurotools.graphics.plot.addspikes"]], "adjust_axis_height_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.adjust_axis_height_pixels"], [188, "neurotools.graphics.plot.adjust_axis_height_pixels"]], "adjust_xlabel_space() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.adjust_xlabel_space"], [188, "neurotools.graphics.plot.adjust_xlabel_space"]], "adjust_ylabel_space() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.adjust_ylabel_space"], [188, "neurotools.graphics.plot.adjust_ylabel_space"]], "adjustmap() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.adjustmap"], [188, "neurotools.graphics.plot.adjustmap"]], "animate_complex() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.animate_complex"], [188, "neurotools.graphics.plot.animate_complex"]], "arrow_between() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.arrow_between"], [188, "neurotools.graphics.plot.arrow_between"]], "axvbands() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.axvbands"], [188, "neurotools.graphics.plot.axvbands"]], "axvstripe() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.axvstripe"], [188, "neurotools.graphics.plot.axvstripe"]], "barcompare() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.barcompare"], [188, "neurotools.graphics.plot.barcompare"]], "base_legend() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.base_legend"], [188, "neurotools.graphics.plot.base_legend"]], "border_width() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.border_width"], [188, "neurotools.graphics.plot.border_width"]], "boxplot_significance() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.boxplot_significance"], [188, "neurotools.graphics.plot.boxplot_significance"]], "broken_step() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.broken_step"], [188, "neurotools.graphics.plot.broken_step"]], "ceil_to_precision() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.ceil_to_precision"], [188, "neurotools.graphics.plot.ceil_to_precision"]], "centers() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.centers"], [188, "neurotools.graphics.plot.centers"]], "clean_y_range() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.clean_y_range"], [188, "neurotools.graphics.plot.clean_y_range"]], "cleartop() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.cleartop"], [188, "neurotools.graphics.plot.cleartop"]], "colored_boxplot() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.colored_boxplot"], [188, "neurotools.graphics.plot.colored_boxplot"]], "complex_axis() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.complex_axis"], [188, "neurotools.graphics.plot.complex_axis"]], "covariance_crosshairs() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.covariance_crosshairs"], [188, "neurotools.graphics.plot.covariance_crosshairs"]], "create_artists() (neurotools.graphics.plot.handlersquare method)": [[11, "neurotools.graphics.plot.HandlerSquare.create_artists"], [188, "neurotools.graphics.plot.HandlerSquare.create_artists"]], "darken() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.darken"], [188, "neurotools.graphics.plot.darken"]], "domask() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.domask"], [188, "neurotools.graphics.plot.domask"]], "draw_circle() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.draw_circle"], [188, "neurotools.graphics.plot.draw_circle"]], "expand_axis_x() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.expand_axis_x"], [188, "neurotools.graphics.plot.expand_axis_x"]], "expand_axis_y() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.expand_axis_y"], [188, "neurotools.graphics.plot.expand_axis_y"]], "expand_y_range() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.expand_y_range"], [188, "neurotools.graphics.plot.expand_y_range"]], "figurebox() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.figurebox"], [188, "neurotools.graphics.plot.figurebox"]], "flathist() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.flathist"], [188, "neurotools.graphics.plot.flathist"]], "floor_to_precision() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.floor_to_precision"], [188, "neurotools.graphics.plot.floor_to_precision"]], "force_aspect() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.force_aspect"], [188, "neurotools.graphics.plot.force_aspect"]], "fsize() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.fsize"], [188, "neurotools.graphics.plot.fsize"]], "fudgex() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.fudgex"], [188, "neurotools.graphics.plot.fudgex"]], "fudgexy() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.fudgexy"], [188, "neurotools.graphics.plot.fudgexy"]], "fudgey() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.fudgey"], [188, "neurotools.graphics.plot.fudgey"]], "get_aspect() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.get_aspect"], [188, "neurotools.graphics.plot.get_aspect"]], "get_ax_pixel() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.get_ax_pixel"], [188, "neurotools.graphics.plot.get_ax_pixel"]], "get_ax_pixel_ratio() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.get_ax_pixel_ratio"], [188, "neurotools.graphics.plot.get_ax_pixel_ratio"]], "get_ax_size() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.get_ax_size"], [188, "neurotools.graphics.plot.get_ax_size"]], "get_bbox() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.get_bbox"], [188, "neurotools.graphics.plot.get_bbox"]], "good_colorbar() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.good_colorbar"], [188, "neurotools.graphics.plot.good_colorbar"]], "hsigbar() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.hsigbar"], [188, "neurotools.graphics.plot.hsigbar"]], "inhibition_arrow() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.inhibition_arrow"], [188, "neurotools.graphics.plot.inhibition_arrow"]], "label() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.label"], [188, "neurotools.graphics.plot.label"]], "left_legend() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.left_legend"], [188, "neurotools.graphics.plot.left_legend"]], "lighten() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.lighten"], [188, "neurotools.graphics.plot.lighten"]], "match_image_aspect() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.match_image_aspect"], [188, "neurotools.graphics.plot.match_image_aspect"]], "mock_legend() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.mock_legend"], [188, "neurotools.graphics.plot.mock_legend"]], "more_xticks() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.more_xticks"], [188, "neurotools.graphics.plot.more_xticks"]], "more_yticks() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.more_yticks"], [188, "neurotools.graphics.plot.more_yticks"]], "neurotools.graphics.plot": [[11, "module-neurotools.graphics.plot"], [188, "module-neurotools.graphics.plot"]], "nice_legend() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nice_legend"], [188, "neurotools.graphics.plot.nice_legend"]], "nicebp() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nicebp"], [188, "neurotools.graphics.plot.nicebp"]], "nicex() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nicex"], [188, "neurotools.graphics.plot.nicex"]], "nicexy() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nicexy"], [188, "neurotools.graphics.plot.nicexy"]], "nicey() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nicey"], [188, "neurotools.graphics.plot.nicey"]], "noaxis() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noaxis"], [188, "neurotools.graphics.plot.noaxis"]], "noclip() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noclip"], [188, "neurotools.graphics.plot.noclip"]], "nolabels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nolabels"], [188, "neurotools.graphics.plot.nolabels"]], "notick() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.notick"], [188, "neurotools.graphics.plot.notick"]], "nox() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nox"], [188, "neurotools.graphics.plot.nox"]], "noxlabels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noxlabels"], [188, "neurotools.graphics.plot.noxlabels"]], "noxyaxes() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noxyaxes"], [188, "neurotools.graphics.plot.noxyaxes"]], "noy() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noy"], [188, "neurotools.graphics.plot.noy"]], "noylabels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.noylabels"], [188, "neurotools.graphics.plot.noylabels"]], "nudge_axis_baseline() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nudge_axis_baseline"], [188, "neurotools.graphics.plot.nudge_axis_baseline"]], "nudge_axis_left() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nudge_axis_left"], [188, "neurotools.graphics.plot.nudge_axis_left"]], "nudge_axis_x() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nudge_axis_x"], [188, "neurotools.graphics.plot.nudge_axis_x"]], "nudge_axis_y() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nudge_axis_y"], [188, "neurotools.graphics.plot.nudge_axis_y"]], "nudge_axis_y_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.nudge_axis_y_pixels"], [188, "neurotools.graphics.plot.nudge_axis_y_pixels"]], "pikeplot() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.pikeplot"], [188, "neurotools.graphics.plot.pikeplot"]], "pixels_to_xfigureunits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.pixels_to_xfigureunits"], [188, "neurotools.graphics.plot.pixels_to_xfigureunits"]], "pixels_to_xunits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.pixels_to_xunits"], [188, "neurotools.graphics.plot.pixels_to_xunits"]], "pixels_to_yfigureunits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.pixels_to_yfigureunits"], [188, "neurotools.graphics.plot.pixels_to_yfigureunits"]], "pixels_to_yunits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.pixels_to_yunits"], [188, "neurotools.graphics.plot.pixels_to_yunits"]], "plotcwt() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.plotCWT"], [188, "neurotools.graphics.plot.plotCWT"]], "plotwtphase() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.plotWTPhase"], [188, "neurotools.graphics.plot.plotWTPhase"]], "plotwtphasefig() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.plotWTPhaseFig"], [188, "neurotools.graphics.plot.plotWTPhaseFig"]], "plot_complex() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.plot_complex"], [188, "neurotools.graphics.plot.plot_complex"]], "plotz() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.plotz"], [188, "neurotools.graphics.plot.plotz"]], "positivex() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.positivex"], [188, "neurotools.graphics.plot.positivex"]], "positivexy() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.positivexy"], [188, "neurotools.graphics.plot.positivexy"]], "positivey() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.positivey"], [188, "neurotools.graphics.plot.positivey"]], "px2x() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.px2x"], [188, "neurotools.graphics.plot.px2x"]], "px2y() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.px2y"], [188, "neurotools.graphics.plot.px2y"]], "rangeover() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.rangeover"], [188, "neurotools.graphics.plot.rangeover"]], "rangeto() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.rangeto"], [188, "neurotools.graphics.plot.rangeto"]], "restore_limits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.restore_limits"], [188, "neurotools.graphics.plot.restore_limits"]], "right_legend() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.right_legend"], [188, "neurotools.graphics.plot.right_legend"]], "rightaxis() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.rightaxis"], [188, "neurotools.graphics.plot.rightaxis"]], "righty() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.righty"], [188, "neurotools.graphics.plot.righty"]], "round_to_precision() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.round_to_precision"], [188, "neurotools.graphics.plot.round_to_precision"]], "save_limits() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.save_limits"], [188, "neurotools.graphics.plot.save_limits"]], "savefigure() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.savefigure"], [188, "neurotools.graphics.plot.savefigure"]], "shade_edges() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.shade_edges"], [188, "neurotools.graphics.plot.shade_edges"]], "shellmean() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.shellmean"], [188, "neurotools.graphics.plot.shellmean"]], "shellplot() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.shellplot"], [188, "neurotools.graphics.plot.shellplot"]], "sigbar() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.sigbar"], [188, "neurotools.graphics.plot.sigbar"]], "simple_arrow() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.simple_arrow"], [188, "neurotools.graphics.plot.simple_arrow"]], "simpleaxis() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.simpleaxis"], [188, "neurotools.graphics.plot.simpleaxis"]], "simpleraxis() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.simpleraxis"], [188, "neurotools.graphics.plot.simpleraxis"]], "simplerright() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.simplerright"], [188, "neurotools.graphics.plot.simplerright"]], "splitz() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.splitz"], [188, "neurotools.graphics.plot.splitz"]], "stderrplot() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.stderrplot"], [188, "neurotools.graphics.plot.stderrplot"]], "subfigurelabel() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.subfigurelabel"], [188, "neurotools.graphics.plot.subfigurelabel"]], "trendline() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.trendline"], [188, "neurotools.graphics.plot.trendline"]], "unit_crosshairs() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.unit_crosshairs"], [188, "neurotools.graphics.plot.unit_crosshairs"]], "unitaxes() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.unitaxes"], [188, "neurotools.graphics.plot.unitaxes"]], "unitx() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.unitx"], [188, "neurotools.graphics.plot.unitx"]], "unity() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.unity"], [188, "neurotools.graphics.plot.unity"]], "widths_to_centers() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.widths_to_centers"], [188, "neurotools.graphics.plot.widths_to_centers"]], "widths_to_edges() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.widths_to_edges"], [188, "neurotools.graphics.plot.widths_to_edges"]], "wtpshow() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.wtpshow"], [188, "neurotools.graphics.plot.wtpshow"]], "xbartext() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xbartext"], [188, "neurotools.graphics.plot.xbartext"]], "xfigureunits_to_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xfigureunits_to_pixels"], [188, "neurotools.graphics.plot.xfigureunits_to_pixels"]], "xin() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xin"], [188, "neurotools.graphics.plot.xin"]], "xscalebar() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xscalebar"], [188, "neurotools.graphics.plot.xscalebar"]], "xticklen() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xticklen"], [188, "neurotools.graphics.plot.xticklen"]], "xtickpad() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xtickpad"], [188, "neurotools.graphics.plot.xtickpad"]], "xunits_to_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xunits_to_pixels"], [188, "neurotools.graphics.plot.xunits_to_pixels"]], "xylim() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.xylim"], [188, "neurotools.graphics.plot.xylim"]], "ybartext() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.ybartext"], [188, "neurotools.graphics.plot.ybartext"]], "yfigureunits_to_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.yfigureunits_to_pixels"], [188, "neurotools.graphics.plot.yfigureunits_to_pixels"]], "yin() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.yin"], [188, "neurotools.graphics.plot.yin"]], "yscalebar() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.yscalebar"], [188, "neurotools.graphics.plot.yscalebar"]], "yticklen() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.yticklen"], [188, "neurotools.graphics.plot.yticklen"]], "ytickpad() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.ytickpad"], [188, "neurotools.graphics.plot.ytickpad"]], "yunits_to_pixels() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.yunits_to_pixels"], [188, "neurotools.graphics.plot.yunits_to_pixels"]], "zerohline() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.zerohline"], [188, "neurotools.graphics.plot.zerohline"]], "zerovline() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.zerovline"], [188, "neurotools.graphics.plot.zerovline"]], "zoombox() (in module neurotools.graphics.plot)": [[11, "neurotools.graphics.plot.zoombox"], [188, "neurotools.graphics.plot.zoombox"]], "draw_array() (in module neurotools.graphics.pygame)": [[12, "neurotools.graphics.pygame.draw_array"], [189, "neurotools.graphics.pygame.draw_array"]], "enable_vsync() (in module neurotools.graphics.pygame)": [[12, "neurotools.graphics.pygame.enable_vsync"], [189, "neurotools.graphics.pygame.enable_vsync"]], "neurotools.graphics.pygame": [[12, "module-neurotools.graphics.pygame"], [189, "module-neurotools.graphics.pygame"]], "start() (in module neurotools.graphics.pygame)": [[12, "neurotools.graphics.pygame.start"], [189, "neurotools.graphics.pygame.start"]], "neurotools.jobs": [[14, "module-neurotools.jobs"], [192, "module-neurotools.jobs"]], "base64hash() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.base64hash"], [193, "neurotools.jobs.cache.base64hash"]], "base64hash2byte() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.base64hash2byte"], [193, "neurotools.jobs.cache.base64hash2byte"]], "disk_cacher() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.disk_cacher"], [193, "neurotools.jobs.cache.disk_cacher"]], "file_string_to_signature() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.file_string_to_signature"], [193, "neurotools.jobs.cache.file_string_to_signature"]], "function_hash_no_subroutines() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.function_hash_no_subroutines"], [193, "neurotools.jobs.cache.function_hash_no_subroutines"]], "function_hash_with_subroutines() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.function_hash_with_subroutines"], [193, "neurotools.jobs.cache.function_hash_with_subroutines"]], "function_signature() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.function_signature"], [193, "neurotools.jobs.cache.function_signature"]], "get_cache_path() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.get_cache_path"], [193, "neurotools.jobs.cache.get_cache_path"]], "get_source() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.get_source"], [193, "neurotools.jobs.cache.get_source"]], "hierarchical_cacher() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.hierarchical_cacher"], [193, "neurotools.jobs.cache.hierarchical_cacher"]], "human_decode() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.human_decode"], [193, "neurotools.jobs.cache.human_decode"]], "human_encode() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.human_encode"], [193, "neurotools.jobs.cache.human_encode"]], "locate_cached() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.locate_cached"], [193, "neurotools.jobs.cache.locate_cached"]], "neurotools.jobs.cache": [[15, "module-neurotools.jobs.cache"], [193, "module-neurotools.jobs.cache"]], "read_cache_entry() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.read_cache_entry"], [193, "neurotools.jobs.cache.read_cache_entry"]], "signature_to_file_string() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.signature_to_file_string"], [193, "neurotools.jobs.cache.signature_to_file_string"]], "validate_for_matfile() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.validate_for_matfile"], [193, "neurotools.jobs.cache.validate_for_matfile"]], "validate_for_numpy() (in module neurotools.jobs.cache)": [[15, "neurotools.jobs.cache.validate_for_numpy"], [193, "neurotools.jobs.cache.validate_for_numpy"]], "csv() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.csv"], [194, "neurotools.jobs.closure.csv"]], "get_subroutines() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.get_subroutines"], [194, "neurotools.jobs.closure.get_subroutines"]], "inspect_function_closure() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.inspect_function_closure"], [194, "neurotools.jobs.closure.inspect_function_closure"]], "is_immutable() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.is_immutable"], [194, "neurotools.jobs.closure.is_immutable"]], "is_probably_safe() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.is_probably_safe"], [194, "neurotools.jobs.closure.is_probably_safe"]], "neurotools.jobs.closure": [[16, "module-neurotools.jobs.closure"], [194, "module-neurotools.jobs.closure"]], "verify_function_closure() (in module neurotools.jobs.closure)": [[16, "neurotools.jobs.closure.verify_function_closure"], [194, "neurotools.jobs.closure.verify_function_closure"]], "check_filename() (in module neurotools.jobs.filenames)": [[17, "neurotools.jobs.filenames.check_filename"], [195, "neurotools.jobs.filenames.check_filename"]], "is_dangerous_filename() (in module neurotools.jobs.filenames)": [[17, "neurotools.jobs.filenames.is_dangerous_filename"], [195, "neurotools.jobs.filenames.is_dangerous_filename"]], "neurotools.jobs.filenames": [[17, "module-neurotools.jobs.filenames"], [195, "module-neurotools.jobs.filenames"]], "validate_argument_signature() (in module neurotools.jobs.filenames)": [[17, "neurotools.jobs.filenames.validate_argument_signature"], [195, "neurotools.jobs.filenames.validate_argument_signature"]], "cache_test() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.cache_test"], [196, "neurotools.jobs.initialize_system_cache.cache_test"]], "du() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.du"], [196, "neurotools.jobs.initialize_system_cache.du"]], "initialize_caches() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.initialize_caches"], [196, "neurotools.jobs.initialize_system_cache.initialize_caches"]], "launch_cache_synchronizers() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.launch_cache_synchronizers"], [196, "neurotools.jobs.initialize_system_cache.launch_cache_synchronizers"]], "neurotools.jobs.initialize_system_cache": [[18, "module-neurotools.jobs.initialize_system_cache"], [196, "module-neurotools.jobs.initialize_system_cache"]], "purge_ram_cache() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.purge_ram_cache"], [196, "neurotools.jobs.initialize_system_cache.purge_ram_cache"]], "purge_ssd_cache() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.purge_ssd_cache"], [196, "neurotools.jobs.initialize_system_cache.purge_ssd_cache"]], "reset_ramdisk() (in module neurotools.jobs.initialize_system_cache)": [[18, "neurotools.jobs.initialize_system_cache.reset_ramdisk"], [196, "neurotools.jobs.initialize_system_cache.reset_ramdisk"]], "argument_signature() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.argument_signature"], [197, "neurotools.jobs.ndecorator.argument_signature"]], "clear_memoized() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.clear_memoized"], [197, "neurotools.jobs.ndecorator.clear_memoized"]], "listit() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.listit"], [197, "neurotools.jobs.ndecorator.listit"]], "memoize() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.memoize"], [197, "neurotools.jobs.ndecorator.memoize"]], "neurotools.jobs.ndecorator": [[19, "module-neurotools.jobs.ndecorator"], [197, "module-neurotools.jobs.ndecorator"]], "print_signature() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.print_signature"], [197, "neurotools.jobs.ndecorator.print_signature"]], "sanitize() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.sanitize"], [197, "neurotools.jobs.ndecorator.sanitize"]], "summarize_function() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.summarize_function"], [197, "neurotools.jobs.ndecorator.summarize_function"]], "timed() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.timed"], [197, "neurotools.jobs.ndecorator.timed"]], "tupleit() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.tupleit"], [197, "neurotools.jobs.ndecorator.tupleit"]], "unwrap() (in module neurotools.jobs.ndecorator)": [[19, "neurotools.jobs.ndecorator.unwrap"], [197, "neurotools.jobs.ndecorator.unwrap"]], "close_pool() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.close_pool"], [198, "neurotools.jobs.parallel.close_pool"]], "eval_from_cached() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.eval_from_cached"], [198, "neurotools.jobs.parallel.eval_from_cached"]], "function_fingerprint() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.function_fingerprint"], [198, "neurotools.jobs.parallel.function_fingerprint"]], "neurotools.jobs.parallel": [[20, "module-neurotools.jobs.parallel"], [198, "module-neurotools.jobs.parallel"]], "parallel_cached_wrapper() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parallel_cached_wrapper"], [198, "neurotools.jobs.parallel.parallel_cached_wrapper"]], "parallel_error_handling() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parallel_error_handling"], [198, "neurotools.jobs.parallel.parallel_error_handling"]], "parallel_indirect_wrapper() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parallel_indirect_wrapper"], [198, "neurotools.jobs.parallel.parallel_indirect_wrapper"]], "pararraymap() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.pararraymap"], [198, "neurotools.jobs.parallel.pararraymap"]], "parimap() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parimap"], [198, "neurotools.jobs.parallel.parimap"]], "parmap() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parmap"], [198, "neurotools.jobs.parallel.parmap"]], "parmap_dict() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.parmap_dict"], [198, "neurotools.jobs.parallel.parmap_dict"]], "reset_pool() (in module neurotools.jobs.parallel)": [[20, "neurotools.jobs.parallel.reset_pool"], [198, "neurotools.jobs.parallel.reset_pool"]], "neurotools.linalg": [[21, "module-neurotools.linalg"], [199, "module-neurotools.linalg"]], "ascolumn() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.ascolumn"], [200, "neurotools.linalg.arguments.ascolumn"]], "asrow() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.asrow"], [200, "neurotools.linalg.arguments.asrow"]], "assertcolumn() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertcolumn"], [200, "neurotools.linalg.arguments.assertcolumn"]], "assertfinite() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertfinite"], [200, "neurotools.linalg.arguments.assertfinite"]], "assertfinitereal() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertfinitereal"], [200, "neurotools.linalg.arguments.assertfinitereal"]], "assertreal() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertreal"], [200, "neurotools.linalg.arguments.assertreal"]], "assertrow() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertrow"], [200, "neurotools.linalg.arguments.assertrow"]], "assertshape() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertshape"], [200, "neurotools.linalg.arguments.assertshape"]], "assertsquare() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertsquare"], [200, "neurotools.linalg.arguments.assertsquare"]], "assertvector() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assertvector"], [200, "neurotools.linalg.arguments.assertvector"]], "assquare() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.assquare"], [200, "neurotools.linalg.arguments.assquare"]], "asvector() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.asvector"], [200, "neurotools.linalg.arguments.asvector"]], "iscolumn() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.iscolumn"], [200, "neurotools.linalg.arguments.iscolumn"]], "isrow() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.isrow"], [200, "neurotools.linalg.arguments.isrow"]], "issquare() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.issquare"], [200, "neurotools.linalg.arguments.issquare"]], "neurotools.linalg.arguments": [[22, "module-neurotools.linalg.arguments"], [200, "module-neurotools.linalg.arguments"]], "scalar() (in module neurotools.linalg.arguments)": [[22, "neurotools.linalg.arguments.scalar"], [200, "neurotools.linalg.arguments.scalar"]], "ldistance() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.Ldistance"], [201, "neurotools.linalg.matrix.Ldistance"]], "llasso() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.Llasso"], [201, "neurotools.linalg.matrix.Llasso"]], "abserr() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.abserr"], [201, "neurotools.linalg.matrix.abserr"]], "autopredict() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.autopredict"], [201, "neurotools.linalg.matrix.autopredict"]], "cartesian_product() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.cartesian_product"], [201, "neurotools.linalg.matrix.cartesian_product"]], "check_covmat() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.check_covmat"], [201, "neurotools.linalg.matrix.check_covmat"]], "check_covmat_fast() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.check_covmat_fast"], [201, "neurotools.linalg.matrix.check_covmat_fast"]], "check_finite_real() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.check_finite_real"], [201, "neurotools.linalg.matrix.check_finite_real"]], "cholupdate() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.cholupdate"], [201, "neurotools.linalg.matrix.cholupdate"]], "cholupdate_eye() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.cholupdate_eye"], [201, "neurotools.linalg.matrix.cholupdate_eye"]], "cinv() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.cinv"], [201, "neurotools.linalg.matrix.cinv"]], "column() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.column"], [201, "neurotools.linalg.matrix.column"]], "csolve() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.csolve"], [201, "neurotools.linalg.matrix.csolve"]], "errmx() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.errmx"], [201, "neurotools.linalg.matrix.errmx"]], "kronsum() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.kronsum"], [201, "neurotools.linalg.matrix.kronsum"]], "laplace_kernel() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.laplace_kernel"], [201, "neurotools.linalg.matrix.laplace_kernel"]], "ldiv() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.ldiv"], [201, "neurotools.linalg.matrix.ldiv"]], "logdet() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.logdet"], [201, "neurotools.linalg.matrix.logdet"]], "match_covariance() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.match_covariance"], [201, "neurotools.linalg.matrix.match_covariance"]], "maxeig() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.maxeig"], [201, "neurotools.linalg.matrix.maxeig"]], "nearpdhigham() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.nearPDHigham"], [201, "neurotools.linalg.matrix.nearPDHigham"]], "nearpsdrebonatojackel() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.nearPSDRebonatoJackel"], [201, "neurotools.linalg.matrix.nearPSDRebonatoJackel"]], "neurotools.linalg.matrix": [[23, "module-neurotools.linalg.matrix"], [201, "module-neurotools.linalg.matrix"]], "normedcovariance() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.normedcovariance"], [201, "neurotools.linalg.matrix.normedcovariance"]], "psd_eig() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.psd_eig"], [201, "neurotools.linalg.matrix.psd_eig"]], "qf() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.qf"], [201, "neurotools.linalg.matrix.qf"]], "rcond() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.rcond"], [201, "neurotools.linalg.matrix.rcond"]], "rdiv() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.rdiv"], [201, "neurotools.linalg.matrix.rdiv"]], "real_eig() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.real_eig"], [201, "neurotools.linalg.matrix.real_eig"]], "reglstsq() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.reglstsq"], [201, "neurotools.linalg.matrix.reglstsq"]], "rmatrix() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.rmatrix"], [201, "neurotools.linalg.matrix.rmatrix"]], "row() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.row"], [201, "neurotools.linalg.matrix.row"]], "rsolt() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.rsolt"], [201, "neurotools.linalg.matrix.rsolt"]], "rsolve() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.rsolve"], [201, "neurotools.linalg.matrix.rsolve"]], "selector_matrix() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.selector_matrix"], [201, "neurotools.linalg.matrix.selector_matrix"]], "solt() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.solt"], [201, "neurotools.linalg.matrix.solt"]], "top_v() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.top_v"], [201, "neurotools.linalg.matrix.top_v"]], "tril_elements() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.tril_elements"], [201, "neurotools.linalg.matrix.tril_elements"]], "triu_elements() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.triu_elements"], [201, "neurotools.linalg.matrix.triu_elements"]], "wheremax() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.wheremax"], [201, "neurotools.linalg.matrix.wheremax"]], "wheremin() (in module neurotools.linalg.matrix)": [[23, "neurotools.linalg.matrix.wheremin"], [201, "neurotools.linalg.matrix.wheremin"]], "adjacency1d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.adjacency1D"], [202, "neurotools.linalg.operators.adjacency1D"]], "adjacency2d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.adjacency2D"], [202, "neurotools.linalg.operators.adjacency2D"]], "adjacency2d_circular() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.adjacency2D_circular"], [202, "neurotools.linalg.operators.adjacency2D_circular"]], "adjacency2d_rotational() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.adjacency2d_rotational"], [202, "neurotools.linalg.operators.adjacency2d_rotational"]], "circular1dbluroperator() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.circular1DblurOperator"], [202, "neurotools.linalg.operators.circular1DblurOperator"]], "cosine_kernel() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.cosine_kernel"], [202, "neurotools.linalg.operators.cosine_kernel"]], "covfrom() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.covfrom"], [202, "neurotools.linalg.operators.covfrom"]], "delta() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.delta"], [202, "neurotools.linalg.operators.delta"]], "differentiator() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.differentiator"], [202, "neurotools.linalg.operators.differentiator"]], "diffuseft1d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.diffuseFT1D"], [202, "neurotools.linalg.operators.diffuseFT1D"]], "flatcov() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.flatcov"], [202, "neurotools.linalg.operators.flatcov"]], "gaussian1dbluroperator() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.gaussian1DblurOperator"], [202, "neurotools.linalg.operators.gaussian1DblurOperator"]], "gaussian2dbluroperator() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.gaussian2DblurOperator"], [202, "neurotools.linalg.operators.gaussian2DblurOperator"]], "integrator() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.integrator"], [202, "neurotools.linalg.operators.integrator"]], "laplacian1d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.laplacian1D"], [202, "neurotools.linalg.operators.laplacian1D"]], "laplacian1d_circular() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.laplacian1D_circular"], [202, "neurotools.linalg.operators.laplacian1D_circular"]], "laplacian2d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.laplacian2D"], [202, "neurotools.linalg.operators.laplacian2D"]], "laplacianft1d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.laplacianFT1D"], [202, "neurotools.linalg.operators.laplacianFT1D"]], "log_cosine_basis() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.log_cosine_basis"], [202, "neurotools.linalg.operators.log_cosine_basis"]], "make_cosine_basis() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.make_cosine_basis"], [202, "neurotools.linalg.operators.make_cosine_basis"]], "neurotools.linalg.operators": [[24, "module-neurotools.linalg.operators"], [202, "module-neurotools.linalg.operators"]], "oucov() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.oucov"], [202, "neurotools.linalg.operators.oucov"]], "separable_guassian_blur() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.separable_guassian_blur"], [202, "neurotools.linalg.operators.separable_guassian_blur"]], "wienerft1d() (in module neurotools.linalg.operators)": [[24, "neurotools.linalg.operators.wienerFT1D"], [202, "neurotools.linalg.operators.wienerFT1D"]], "beta() (in module neurotools.nlab)": [[25, "neurotools.nlab.beta"], [213, "neurotools.nlab.beta"]], "binomial() (in module neurotools.nlab)": [[25, "neurotools.nlab.binomial"], [213, "neurotools.nlab.binomial"]], "chisquare() (in module neurotools.nlab)": [[25, "neurotools.nlab.chisquare"], [213, "neurotools.nlab.chisquare"]], "choice() (in module neurotools.nlab)": [[25, "neurotools.nlab.choice"], [213, "neurotools.nlab.choice"]], "dirichlet() (in module neurotools.nlab)": [[25, "neurotools.nlab.dirichlet"], [213, "neurotools.nlab.dirichlet"]], "exponential() (in module neurotools.nlab)": [[25, "neurotools.nlab.exponential"], [213, "neurotools.nlab.exponential"]], "f() (in module neurotools.nlab)": [[25, "neurotools.nlab.f"], [213, "neurotools.nlab.f"]], "gamma() (in module neurotools.nlab)": [[25, "neurotools.nlab.gamma"], [213, "neurotools.nlab.gamma"]], "geometric() (in module neurotools.nlab)": [[25, "neurotools.nlab.geometric"], [213, "neurotools.nlab.geometric"]], "get_state() (in module neurotools.nlab)": [[25, "neurotools.nlab.get_state"], [213, "neurotools.nlab.get_state"]], "gumbel() (in module neurotools.nlab)": [[25, "neurotools.nlab.gumbel"], [213, "neurotools.nlab.gumbel"]], "hypergeometric() (in module neurotools.nlab)": [[25, "neurotools.nlab.hypergeometric"], [213, "neurotools.nlab.hypergeometric"]], "laplace() (in module neurotools.nlab)": [[25, "neurotools.nlab.laplace"], [213, "neurotools.nlab.laplace"]], "logistic() (in module neurotools.nlab)": [[25, "neurotools.nlab.logistic"], [213, "neurotools.nlab.logistic"]], "lognormal() (in module neurotools.nlab)": [[25, "neurotools.nlab.lognormal"], [213, "neurotools.nlab.lognormal"]], "logseries() (in module neurotools.nlab)": [[25, "neurotools.nlab.logseries"], [213, "neurotools.nlab.logseries"]], "multinomial() (in module neurotools.nlab)": [[25, "neurotools.nlab.multinomial"], [213, "neurotools.nlab.multinomial"]], "multivariate_normal() (in module neurotools.nlab)": [[25, "neurotools.nlab.multivariate_normal"], [213, "neurotools.nlab.multivariate_normal"]], "negative_binomial() (in module neurotools.nlab)": [[25, "neurotools.nlab.negative_binomial"], [213, "neurotools.nlab.negative_binomial"]], "neurotools.nlab": [[25, "module-neurotools.nlab"], [213, "module-neurotools.nlab"]], "noncentral_chisquare() (in module neurotools.nlab)": [[25, "neurotools.nlab.noncentral_chisquare"], [213, "neurotools.nlab.noncentral_chisquare"]], "noncentral_f() (in module neurotools.nlab)": [[25, "neurotools.nlab.noncentral_f"], [213, "neurotools.nlab.noncentral_f"]], "normal() (in module neurotools.nlab)": [[25, "neurotools.nlab.normal"], [213, "neurotools.nlab.normal"]], "pareto() (in module neurotools.nlab)": [[25, "neurotools.nlab.pareto"], [213, "neurotools.nlab.pareto"]], "permutation() (in module neurotools.nlab)": [[25, "neurotools.nlab.permutation"], [213, "neurotools.nlab.permutation"]], "poisson() (in module neurotools.nlab)": [[25, "neurotools.nlab.poisson"], [213, "neurotools.nlab.poisson"]], "power() (in module neurotools.nlab)": [[25, "neurotools.nlab.power"], [213, "neurotools.nlab.power"]], "rand() (in module neurotools.nlab)": [[25, "neurotools.nlab.rand"], [213, "neurotools.nlab.rand"]], "randint() (in module neurotools.nlab)": [[25, "neurotools.nlab.randint"], [213, "neurotools.nlab.randint"]], "randn() (in module neurotools.nlab)": [[25, "neurotools.nlab.randn"], [213, "neurotools.nlab.randn"]], "random() (in module neurotools.nlab)": [[25, "neurotools.nlab.random"], [213, "neurotools.nlab.random"]], "random_integers() (in module neurotools.nlab)": [[25, "neurotools.nlab.random_integers"], [213, "neurotools.nlab.random_integers"]], "random_sample() (in module neurotools.nlab)": [[25, "neurotools.nlab.random_sample"], [213, "neurotools.nlab.random_sample"]], "rayleigh() (in module neurotools.nlab)": [[25, "neurotools.nlab.rayleigh"], [213, "neurotools.nlab.rayleigh"]], "seed() (in module neurotools.nlab)": [[25, "neurotools.nlab.seed"], [213, "neurotools.nlab.seed"]], "set_state() (in module neurotools.nlab)": [[25, "neurotools.nlab.set_state"], [213, "neurotools.nlab.set_state"]], "shuffle() (in module neurotools.nlab)": [[25, "neurotools.nlab.shuffle"], [213, "neurotools.nlab.shuffle"]], "standard_cauchy() (in module neurotools.nlab)": [[25, "neurotools.nlab.standard_cauchy"], [213, "neurotools.nlab.standard_cauchy"]], "standard_exponential() (in module neurotools.nlab)": [[25, "neurotools.nlab.standard_exponential"], [213, "neurotools.nlab.standard_exponential"]], "standard_gamma() (in module neurotools.nlab)": [[25, "neurotools.nlab.standard_gamma"], [213, "neurotools.nlab.standard_gamma"]], "standard_normal() (in module neurotools.nlab)": [[25, "neurotools.nlab.standard_normal"], [213, "neurotools.nlab.standard_normal"]], "standard_t() (in module neurotools.nlab)": [[25, "neurotools.nlab.standard_t"], [213, "neurotools.nlab.standard_t"]], "triangular() (in module neurotools.nlab)": [[25, "neurotools.nlab.triangular"], [213, "neurotools.nlab.triangular"]], "uniform() (in module neurotools.nlab)": [[25, "neurotools.nlab.uniform"], [213, "neurotools.nlab.uniform"]], "vonmises() (in module neurotools.nlab)": [[25, "neurotools.nlab.vonmises"], [213, "neurotools.nlab.vonmises"]], "wald() (in module neurotools.nlab)": [[25, "neurotools.nlab.wald"], [213, "neurotools.nlab.wald"]], "weibull() (in module neurotools.nlab)": [[25, "neurotools.nlab.weibull"], [213, "neurotools.nlab.weibull"]], "zipf() (in module neurotools.nlab)": [[25, "neurotools.nlab.zipf"], [213, "neurotools.nlab.zipf"]], "neurotools.obsolete": [[26, "module-neurotools.obsolete"], [214, "module-neurotools.obsolete"]], "neurotools.obsolete.encoding": [[27, "module-neurotools.obsolete.encoding"], [215, "module-neurotools.obsolete.encoding"]], "huffman (class in neurotools.obsolete.encoding.huffman)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman"], [216, "neurotools.obsolete.encoding.Huffman.Huffman"]], "huffman.leaf (class in neurotools.obsolete.encoding.huffman)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.Leaf"], [216, "neurotools.obsolete.encoding.Huffman.Huffman.Leaf"]], "huffman.node (class in neurotools.obsolete.encoding.huffman)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.Node"], [216, "neurotools.obsolete.encoding.Huffman.Huffman.Node"]], "decode() (neurotools.obsolete.encoding.huffman.huffman method)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.decode"], [216, "neurotools.obsolete.encoding.Huffman.Huffman.decode"]], "encode() (neurotools.obsolete.encoding.huffman.huffman method)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.encode"], [216, "neurotools.obsolete.encoding.Huffman.Huffman.encode"]], "encode_packets() (neurotools.obsolete.encoding.huffman.huffman method)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.encode_packets"], [216, "neurotools.obsolete.encoding.Huffman.Huffman.encode_packets"]], "neurotools.obsolete.encoding.huffman": [[28, "module-neurotools.obsolete.encoding.Huffman"], [216, "module-neurotools.obsolete.encoding.Huffman"]], "walk() (neurotools.obsolete.encoding.huffman.huffman.node method)": [[28, "neurotools.obsolete.encoding.Huffman.Huffman.Node.walk"], [216, "neurotools.obsolete.encoding.Huffman.Huffman.Node.walk"]], "naryhuffman (class in neurotools.obsolete.encoding.naryhuffman)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman"], [217, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman"]], "naryhuffman.leaf (class in neurotools.obsolete.encoding.naryhuffman)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Leaf"], [217, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Leaf"]], "naryhuffman.node (class in neurotools.obsolete.encoding.naryhuffman)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Node"], [217, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Node"]], "decode() (neurotools.obsolete.encoding.naryhuffman.naryhuffman method)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.decode"], [217, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.decode"]], "encode() (neurotools.obsolete.encoding.naryhuffman.naryhuffman method)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.encode"], [217, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.encode"]], "encode_packets() (neurotools.obsolete.encoding.naryhuffman.naryhuffman method)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.encode_packets"], [217, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.encode_packets"]], "neurotools.obsolete.encoding.naryhuffman": [[29, "module-neurotools.obsolete.encoding.NaryHuffman"], [217, "module-neurotools.obsolete.encoding.NaryHuffman"]], "walk() (neurotools.obsolete.encoding.naryhuffman.naryhuffman.node method)": [[29, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Node.walk"], [217, "neurotools.obsolete.encoding.NaryHuffman.NaryHuffman.Node.walk"]], "neurotools.obsolete.gpu": [[30, "module-neurotools.obsolete.gpu"], [218, "module-neurotools.obsolete.gpu"]], "missing() (in module neurotools.obsolete.gpu.cl)": [[31, "neurotools.obsolete.gpu.cl.missing"], [219, "neurotools.obsolete.gpu.cl.missing"]], "neurotools.obsolete.gpu.cl": [[31, "module-neurotools.obsolete.gpu.cl"], [219, "module-neurotools.obsolete.gpu.cl"]], "neurotools.obsolete.gpu.cpu": [[35, "module-neurotools.obsolete.gpu.cpu"], [223, "module-neurotools.obsolete.gpu.cpu"]], "cmap() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.cmap"], [224, "neurotools.obsolete.gpu.cpu.util.cmap"]], "compose() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.compose"], [224, "neurotools.obsolete.gpu.cpu.util.compose"]], "corr() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.corr"], [224, "neurotools.obsolete.gpu.cpu.util.corr"]], "cov() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.cov"], [224, "neurotools.obsolete.gpu.cpu.util.cov"]], "cut() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.cut"], [224, "neurotools.obsolete.gpu.cpu.util.cut"]], "document() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.document"], [224, "neurotools.obsolete.gpu.cpu.util.document"]], "dot() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.dot"], [224, "neurotools.obsolete.gpu.cpu.util.dot"]], "elem() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.elem"], [224, "neurotools.obsolete.gpu.cpu.util.elem"]], "fancy() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.fancy"], [224, "neurotools.obsolete.gpu.cpu.util.fancy"]], "flat() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.flat"], [224, "neurotools.obsolete.gpu.cpu.util.flat"]], "idivup() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.idivup"], [224, "neurotools.obsolete.gpu.cpu.util.idivup"]], "ldif() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.ldif"], [224, "neurotools.obsolete.gpu.cpu.util.ldif"]], "ldif2() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.ldif2"], [224, "neurotools.obsolete.gpu.cpu.util.ldif2"]], "ldiv() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.ldiv"], [224, "neurotools.obsolete.gpu.cpu.util.ldiv"]], "ldiv2() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.ldiv2"], [224, "neurotools.obsolete.gpu.cpu.util.ldiv2"]], "length() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.length"], [224, "neurotools.obsolete.gpu.cpu.util.length"]], "lmul() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lmul"], [224, "neurotools.obsolete.gpu.cpu.util.lmul"]], "lmul2() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lmul2"], [224, "neurotools.obsolete.gpu.cpu.util.lmul2"]], "lpow() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lpow"], [224, "neurotools.obsolete.gpu.cpu.util.lpow"]], "lpow2() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lpow2"], [224, "neurotools.obsolete.gpu.cpu.util.lpow2"]], "lsum() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lsum"], [224, "neurotools.obsolete.gpu.cpu.util.lsum"]], "lsum2() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.lsum2"], [224, "neurotools.obsolete.gpu.cpu.util.lsum2"]], "mdif() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mdif"], [224, "neurotools.obsolete.gpu.cpu.util.mdif"]], "mdiv() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mdiv"], [224, "neurotools.obsolete.gpu.cpu.util.mdiv"]], "mean() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mean"], [224, "neurotools.obsolete.gpu.cpu.util.mean"]], "mmap() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mmap"], [224, "neurotools.obsolete.gpu.cpu.util.mmap"]], "mmean() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mmean"], [224, "neurotools.obsolete.gpu.cpu.util.mmean"]], "mmul() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mmul"], [224, "neurotools.obsolete.gpu.cpu.util.mmul"]], "mpow() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mpow"], [224, "neurotools.obsolete.gpu.cpu.util.mpow"]], "mstd() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mstd"], [224, "neurotools.obsolete.gpu.cpu.util.mstd"]], "msum() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.msum"], [224, "neurotools.obsolete.gpu.cpu.util.msum"]], "mu() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mu"], [224, "neurotools.obsolete.gpu.cpu.util.mu"]], "mvar() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.mvar"], [224, "neurotools.obsolete.gpu.cpu.util.mvar"]], "neurotools.obsolete.gpu.cpu.util": [[36, "module-neurotools.obsolete.gpu.cpu.util"], [224, "module-neurotools.obsolete.gpu.cpu.util"]], "norm() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.norm"], [224, "neurotools.obsolete.gpu.cpu.util.norm"]], "rnorm() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.rnorm"], [224, "neurotools.obsolete.gpu.cpu.util.rnorm"]], "scale() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.scale"], [224, "neurotools.obsolete.gpu.cpu.util.scale"]], "sem() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.sem"], [224, "neurotools.obsolete.gpu.cpu.util.sem"]], "shift() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.shift"], [224, "neurotools.obsolete.gpu.cpu.util.shift"]], "sigma() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.sigma"], [224, "neurotools.obsolete.gpu.cpu.util.sigma"]], "sstd() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.sstd"], [224, "neurotools.obsolete.gpu.cpu.util.sstd"]], "std() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.std"], [224, "neurotools.obsolete.gpu.cpu.util.std"]], "svar() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.svar"], [224, "neurotools.obsolete.gpu.cpu.util.svar"]], "var() (in module neurotools.obsolete.gpu.cpu.util)": [[36, "neurotools.obsolete.gpu.cpu.util.var"], [224, "neurotools.obsolete.gpu.cpu.util.var"]], "neurotools.obsolete.gpu.cu": [[37, "module-neurotools.obsolete.gpu.cu"], [225, "module-neurotools.obsolete.gpu.cu"]], "gpuboxconv() (in module neurotools.obsolete.gpu.cu.convolution)": [[38, "neurotools.obsolete.gpu.cu.convolution.gpuboxconv"], [226, "neurotools.obsolete.gpu.cu.convolution.gpuboxconv"]], "gpuboxconv_core() (in module neurotools.obsolete.gpu.cu.convolution)": [[38, "neurotools.obsolete.gpu.cu.convolution.gpuboxconv_core"], [226, "neurotools.obsolete.gpu.cu.convolution.gpuboxconv_core"]], "neurotools.obsolete.gpu.cu.convolution": [[38, "module-neurotools.obsolete.gpu.cu.convolution"], [226, "module-neurotools.obsolete.gpu.cu.convolution"]], "card_info() (in module neurotools.obsolete.gpu.cu.device)": [[39, "neurotools.obsolete.gpu.cu.device.card_info"], [227, "neurotools.obsolete.gpu.cu.device.card_info"]], "estimateblocks() (in module neurotools.obsolete.gpu.cu.device)": [[39, "neurotools.obsolete.gpu.cu.device.estimateBlocks"], [227, "neurotools.obsolete.gpu.cu.device.estimateBlocks"]], "estimateloop() (in module neurotools.obsolete.gpu.cu.device)": [[39, "neurotools.obsolete.gpu.cu.device.estimateLoop"], [227, "neurotools.obsolete.gpu.cu.device.estimateLoop"]], "estimatethreadsperblock() (in module neurotools.obsolete.gpu.cu.device)": [[39, "neurotools.obsolete.gpu.cu.device.estimateThreadsPerBlock"], [227, "neurotools.obsolete.gpu.cu.device.estimateThreadsPerBlock"]], "missing() (in module neurotools.obsolete.gpu.cu.device)": [[39, "neurotools.obsolete.gpu.cu.device.missing"], [227, "neurotools.obsolete.gpu.cu.device.missing"]], "neurotools.obsolete.gpu.cu.device": [[39, "module-neurotools.obsolete.gpu.cu.device"], [227, "module-neurotools.obsolete.gpu.cu.device"]], "cpu() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.cpu"], [228, "neurotools.obsolete.gpu.cu.function.cpu"]], "expsub() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.expsub"], [228, "neurotools.obsolete.gpu.cu.function.expsub"]], "ezkern() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.ezkern"], [228, "neurotools.obsolete.gpu.cu.function.ezkern"]], "format() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.format"], [228, "neurotools.obsolete.gpu.cu.function.format"]], "gpubin() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpubin"], [228, "neurotools.obsolete.gpu.cu.function.gpubin"]], "gpubinaryeq() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpubinaryeq"], [228, "neurotools.obsolete.gpu.cu.function.gpubinaryeq"]], "gpufloat() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpufloat"], [228, "neurotools.obsolete.gpu.cu.function.gpufloat"]], "gpufloatmat() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpufloatmat"], [228, "neurotools.obsolete.gpu.cu.function.gpufloatmat"]], "gpufloatred() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpufloatred"], [228, "neurotools.obsolete.gpu.cu.function.gpufloatred"]], "gpuint() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpuint"], [228, "neurotools.obsolete.gpu.cu.function.gpuint"]], "gpuintmap() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpuintmap"], [228, "neurotools.obsolete.gpu.cu.function.gpuintmap"]], "gpuintmat() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpuintmat"], [228, "neurotools.obsolete.gpu.cu.function.gpuintmat"]], "gpuintred() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpuintred"], [228, "neurotools.obsolete.gpu.cu.function.gpuintred"]], "gpumap() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpumap"], [228, "neurotools.obsolete.gpu.cu.function.gpumap"]], "gpumapeq() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpumapeq"], [228, "neurotools.obsolete.gpu.cu.function.gpumapeq"]], "gpupointer() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpupointer"], [228, "neurotools.obsolete.gpu.cu.function.gpupointer"]], "gpuscalar() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.gpuscalar"], [228, "neurotools.obsolete.gpu.cu.function.gpuscalar"]], "guessgputype() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.guessGPUType"], [228, "neurotools.obsolete.gpu.cu.function.guessGPUType"]], "kernel() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.kernel"], [228, "neurotools.obsolete.gpu.cu.function.kernel"]], "neurotools.obsolete.gpu.cu.function": [[40, "module-neurotools.obsolete.gpu.cu.function"], [228, "module-neurotools.obsolete.gpu.cu.function"]], "printkernel() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.printKernel"], [228, "neurotools.obsolete.gpu.cu.function.printKernel"]], "togputype() (in module neurotools.obsolete.gpu.cu.function)": [[40, "neurotools.obsolete.gpu.cu.function.toGPUType"], [228, "neurotools.obsolete.gpu.cu.function.toGPUType"]], "gpuhill() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpuhill"], [229, "neurotools.obsolete.gpu.cu.gpufun.gpuhill"]], "gpulcomb() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpulcomb"], [229, "neurotools.obsolete.gpu.cu.gpufun.gpulcomb"]], "gpulogpdf() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpulogpdf"], [229, "neurotools.obsolete.gpu.cu.gpufun.gpulogpdf"]], "gpumean() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpumean"], [229, "neurotools.obsolete.gpu.cu.gpufun.gpumean"]], "gpunpdf() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpunpdf"], [229, "neurotools.obsolete.gpu.cu.gpufun.gpunpdf"]], "gpurandexp() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpurandexp"], [229, "neurotools.obsolete.gpu.cu.gpufun.gpurandexp"]], "gpurandf() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpurandf"], [229, "neurotools.obsolete.gpu.cu.gpufun.gpurandf"]], "gpuuniform() (in module neurotools.obsolete.gpu.cu.gpufun)": [[41, "neurotools.obsolete.gpu.cu.gpufun.gpuuniform"], [229, "neurotools.obsolete.gpu.cu.gpufun.gpuuniform"]], "neurotools.obsolete.gpu.cu.gpufun": [[41, "module-neurotools.obsolete.gpu.cu.gpufun"], [229, "module-neurotools.obsolete.gpu.cu.gpufun"]], "connect_gaussian() (in module neurotools.obsolete.gpu.cu.graph)": [[42, "neurotools.obsolete.gpu.cu.graph.connect_gaussian"], [230, "neurotools.obsolete.gpu.cu.graph.connect_gaussian"]], "neurotools.obsolete.gpu.cu.graph": [[42, "module-neurotools.obsolete.gpu.cu.graph"], [230, "module-neurotools.obsolete.gpu.cu.graph"]], "random_point_sheet() (in module neurotools.obsolete.gpu.cu.graph)": [[42, "neurotools.obsolete.gpu.cu.graph.random_point_sheet"], [230, "neurotools.obsolete.gpu.cu.graph.random_point_sheet"]], "spherepoints() (in module neurotools.obsolete.gpu.cu.graph)": [[42, "neurotools.obsolete.gpu.cu.graph.spherepoints"], [230, "neurotools.obsolete.gpu.cu.graph.spherepoints"]], "uniform_point_sheet() (in module neurotools.obsolete.gpu.cu.graph)": [[42, "neurotools.obsolete.gpu.cu.graph.uniform_point_sheet"], [230, "neurotools.obsolete.gpu.cu.graph.uniform_point_sheet"]], "gpuand() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpuand"], [231, "neurotools.obsolete.gpu.cu.logic.gpuand"]], "gpueq() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpueq"], [231, "neurotools.obsolete.gpu.cu.logic.gpueq"]], "gpugt() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpugt"], [231, "neurotools.obsolete.gpu.cu.logic.gpugt"]], "gpugteq() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpugteq"], [231, "neurotools.obsolete.gpu.cu.logic.gpugteq"]], "gpuhzero() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpuhzero"], [231, "neurotools.obsolete.gpu.cu.logic.gpuhzero"]], "gpult() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpult"], [231, "neurotools.obsolete.gpu.cu.logic.gpult"]], "gpulteq() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpulteq"], [231, "neurotools.obsolete.gpu.cu.logic.gpulteq"]], "gpuneq() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpuneq"], [231, "neurotools.obsolete.gpu.cu.logic.gpuneq"]], "gpunor() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpunor"], [231, "neurotools.obsolete.gpu.cu.logic.gpunor"]], "gpunot() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpunot"], [231, "neurotools.obsolete.gpu.cu.logic.gpunot"]], "gpurange() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpurange"], [231, "neurotools.obsolete.gpu.cu.logic.gpurange"]], "gpuyes() (in module neurotools.obsolete.gpu.cu.logic)": [[43, "neurotools.obsolete.gpu.cu.logic.gpuyes"], [231, "neurotools.obsolete.gpu.cu.logic.gpuyes"]], "neurotools.obsolete.gpu.cu.logic": [[43, "module-neurotools.obsolete.gpu.cu.logic"], [231, "module-neurotools.obsolete.gpu.cu.logic"]], "elementwisekernel() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.ElementwiseKernel"], [233, "neurotools.obsolete.gpu.cu.plot.ElementwiseKernel"]], "gpubarlinedata() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.gpubarlinedata"], [233, "neurotools.obsolete.gpu.cu.plot.gpubarlinedata"]], "gpuhistogram() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.gpuhistogram"], [233, "neurotools.obsolete.gpu.cu.plot.gpuhistogram"]], "missing() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.missing"], [233, "neurotools.obsolete.gpu.cu.plot.missing"]], "neurotools.obsolete.gpu.cu.plot": [[45, "module-neurotools.obsolete.gpu.cu.plot"], [233, "module-neurotools.obsolete.gpu.cu.plot"]], "sebarline() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.sebarline"], [233, "neurotools.obsolete.gpu.cu.plot.sebarline"]], "sebarline2() (in module neurotools.obsolete.gpu.cu.plot)": [[45, "neurotools.obsolete.gpu.cu.plot.sebarline2"], [233, "neurotools.obsolete.gpu.cu.plot.sebarline2"]], "frameeater() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.FrameEater"], [234, "neurotools.obsolete.gpu.cu.sequence.FrameEater"]], "gpuautometric() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.GPUAutometric"], [234, "neurotools.obsolete.gpu.cu.sequence.GPUAutometric"]], "gpudotmetric() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.GPUDotmetric"], [234, "neurotools.obsolete.gpu.cu.sequence.GPUDotmetric"]], "gpumagmetric() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.GPUMagmetric"], [234, "neurotools.obsolete.gpu.cu.sequence.GPUMagmetric"]], "gpupointautodistance() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.GPUPointAutoDistance"], [234, "neurotools.obsolete.gpu.cu.sequence.GPUPointAutoDistance"]], "gpusequenceautodetect() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.GPUSequenceAutoDetect"], [234, "neurotools.obsolete.gpu.cu.sequence.GPUSequenceAutoDetect"]], "deltamag() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.deltamag"], [234, "neurotools.obsolete.gpu.cu.sequence.deltamag"]], "fitgaussbimodal() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.fitgaussbimodal"], [234, "neurotools.obsolete.gpu.cu.sequence.fitgaussbimodal"]], "fitgausstrimodal() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.fitgausstrimodal"], [234, "neurotools.obsolete.gpu.cu.sequence.fitgausstrimodal"]], "gpuderivative() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpuderivative"], [234, "neurotools.obsolete.gpu.cu.sequence.gpuderivative"]], "gpulognpdf() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpulognpdf"], [234, "neurotools.obsolete.gpu.cu.sequence.gpulognpdf"]], "gpunpdf() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpunpdf"], [234, "neurotools.obsolete.gpu.cu.sequence.gpunpdf"]], "gpusmooth() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpusmooth"], [234, "neurotools.obsolete.gpu.cu.sequence.gpusmooth"]], "gpusubsetgfit() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpusubsetgfit"], [234, "neurotools.obsolete.gpu.cu.sequence.gpusubsetgfit"]], "gpusubsetmean() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gpusubsetmean"], [234, "neurotools.obsolete.gpu.cu.sequence.gpusubsetmean"]], "gputhing() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.gputhing"], [234, "neurotools.obsolete.gpu.cu.sequence.gputhing"]], "mulmag() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.mulmag"], [234, "neurotools.obsolete.gpu.cu.sequence.mulmag"]], "neurotools.obsolete.gpu.cu.sequence": [[46, "module-neurotools.obsolete.gpu.cu.sequence"], [234, "module-neurotools.obsolete.gpu.cu.sequence"]], "summag() (in module neurotools.obsolete.gpu.cu.sequence)": [[46, "neurotools.obsolete.gpu.cu.sequence.summag"], [234, "neurotools.obsolete.gpu.cu.sequence.summag"]], "neurotools.obsolete.models": [[48, "module-neurotools.obsolete.models"], [236, "module-neurotools.obsolete.models"]], "du_izh() (in module neurotools.obsolete.models.izh)": [[49, "neurotools.obsolete.models.izh.du_izh"], [237, "neurotools.obsolete.models.izh.du_izh"]], "dv_izh() (in module neurotools.obsolete.models.izh)": [[49, "neurotools.obsolete.models.izh.dv_izh"], [237, "neurotools.obsolete.models.izh.dv_izh"]], "neurotools.obsolete.models.izh": [[49, "module-neurotools.obsolete.models.izh"], [237, "module-neurotools.obsolete.models.izh"]], "sim_izh() (in module neurotools.obsolete.models.izh)": [[49, "neurotools.obsolete.models.izh.sim_izh"], [237, "neurotools.obsolete.models.izh.sim_izh"]], "update_izh() (in module neurotools.obsolete.models.izh)": [[49, "neurotools.obsolete.models.izh.update_izh"], [237, "neurotools.obsolete.models.izh.update_izh"]], "euler_integrate_lif() (in module neurotools.obsolete.models.lif)": [[50, "neurotools.obsolete.models.lif.euler_integrate_LIF"], [238, "neurotools.obsolete.models.lif.euler_integrate_LIF"]], "exponential_integrate_lif() (in module neurotools.obsolete.models.lif)": [[50, "neurotools.obsolete.models.lif.exponential_integrate_LIF"], [238, "neurotools.obsolete.models.lif.exponential_integrate_LIF"]], "exponential_moving_average() (in module neurotools.obsolete.models.lif)": [[50, "neurotools.obsolete.models.lif.exponential_moving_average"], [238, "neurotools.obsolete.models.lif.exponential_moving_average"]], "neurotools.obsolete.models.lif": [[50, "module-neurotools.obsolete.models.lif"], [238, "module-neurotools.obsolete.models.lif"]], "amp() (in module neurotools.signal)": [[59, "neurotools.signal.amp"], [248, "neurotools.signal.amp"]], "ang() (in module neurotools.signal)": [[59, "neurotools.signal.ang"], [248, "neurotools.signal.ang"]], "arenear() (in module neurotools.signal)": [[59, "neurotools.signal.arenear"], [248, "neurotools.signal.arenear"]], "aresafe() (in module neurotools.signal)": [[59, "neurotools.signal.aresafe"], [248, "neurotools.signal.aresafe"]], "autocorrelation() (in module neurotools.signal)": [[59, "neurotools.signal.autocorrelation"], [248, "neurotools.signal.autocorrelation"]], "band_stop_line_noise_removal() (in module neurotools.signal)": [[59, "neurotools.signal.band_stop_line_noise_removal"], [248, "neurotools.signal.band_stop_line_noise_removal"]], "bandpass_filter() (in module neurotools.signal)": [[59, "neurotools.signal.bandpass_filter"], [248, "neurotools.signal.bandpass_filter"]], "box_filter() (in module neurotools.signal)": [[59, "neurotools.signal.box_filter"], [248, "neurotools.signal.box_filter"]], "circular_cosine_basis() (in module neurotools.signal)": [[59, "neurotools.signal.circular_cosine_basis"], [248, "neurotools.signal.circular_cosine_basis"]], "circular_gaussian_smooth() (in module neurotools.signal)": [[59, "neurotools.signal.circular_gaussian_smooth"], [248, "neurotools.signal.circular_gaussian_smooth"]], "circular_gaussian_smooth_2d() (in module neurotools.signal)": [[59, "neurotools.signal.circular_gaussian_smooth_2D"], [248, "neurotools.signal.circular_gaussian_smooth_2D"]], "complex_to_nan() (in module neurotools.signal)": [[59, "neurotools.signal.complex_to_nan"], [248, "neurotools.signal.complex_to_nan"]], "deltaovermean() (in module neurotools.signal)": [[59, "neurotools.signal.deltaovermean"], [248, "neurotools.signal.deltaovermean"]], "drop_nonfinite() (in module neurotools.signal)": [[59, "neurotools.signal.drop_nonfinite"], [248, "neurotools.signal.drop_nonfinite"]], "estimate_padding() (in module neurotools.signal)": [[59, "neurotools.signal.estimate_padding"], [248, "neurotools.signal.estimate_padding"]], "fdiff() (in module neurotools.signal)": [[59, "neurotools.signal.fdiff"], [248, "neurotools.signal.fdiff"]], "fftacorr1d() (in module neurotools.signal)": [[59, "neurotools.signal.fftacorr1d"], [248, "neurotools.signal.fftacorr1d"]], "fftsta() (in module neurotools.signal)": [[59, "neurotools.signal.fftsta"], [248, "neurotools.signal.fftsta"]], "fm_mod() (in module neurotools.signal)": [[59, "neurotools.signal.fm_mod"], [248, "neurotools.signal.fm_mod"]], "fudge_derivative() (in module neurotools.signal)": [[59, "neurotools.signal.fudge_derivative"], [248, "neurotools.signal.fudge_derivative"]], "gaussian_kernel() (in module neurotools.signal)": [[59, "neurotools.signal.gaussian_kernel"], [248, "neurotools.signal.gaussian_kernel"]], "gaussian_smooth() (in module neurotools.signal)": [[59, "neurotools.signal.gaussian_smooth"], [248, "neurotools.signal.gaussian_smooth"]], "gaussianize() (in module neurotools.signal)": [[59, "neurotools.signal.gaussianize"], [248, "neurotools.signal.gaussianize"]], "geometric_window() (in module neurotools.signal)": [[59, "neurotools.signal.geometric_window"], [248, "neurotools.signal.geometric_window"]], "get_edges() (in module neurotools.signal)": [[59, "neurotools.signal.get_edges"], [248, "neurotools.signal.get_edges"]], "get_snips() (in module neurotools.signal)": [[59, "neurotools.signal.get_snips"], [248, "neurotools.signal.get_snips"]], "get_triggered_stats() (in module neurotools.signal)": [[59, "neurotools.signal.get_triggered_stats"], [248, "neurotools.signal.get_triggered_stats"]], "highpass_filter() (in module neurotools.signal)": [[59, "neurotools.signal.highpass_filter"], [248, "neurotools.signal.highpass_filter"]], "ifreq() (in module neurotools.signal)": [[59, "neurotools.signal.ifreq"], [248, "neurotools.signal.ifreq"]], "interpmax1d() (in module neurotools.signal)": [[59, "neurotools.signal.interpmax1d"], [248, "neurotools.signal.interpmax1d"]], "interpolate_nan() (in module neurotools.signal)": [[59, "neurotools.signal.interpolate_NaN"], [248, "neurotools.signal.interpolate_NaN"]], "interpolate_nan_quadratic() (in module neurotools.signal)": [[59, "neurotools.signal.interpolate_NaN_quadratic"], [248, "neurotools.signal.interpolate_NaN_quadratic"]], "invert_uniformize() (in module neurotools.signal)": [[59, "neurotools.signal.invert_uniformize"], [248, "neurotools.signal.invert_uniformize"]], "killspikes() (in module neurotools.signal)": [[59, "neurotools.signal.killSpikes"], [248, "neurotools.signal.killSpikes"]], "linear_cosine_basis() (in module neurotools.signal)": [[59, "neurotools.signal.linear_cosine_basis"], [248, "neurotools.signal.linear_cosine_basis"]], "linfilter() (in module neurotools.signal)": [[59, "neurotools.signal.linfilter"], [248, "neurotools.signal.linfilter"]], "local_maxima() (in module neurotools.signal)": [[59, "neurotools.signal.local_maxima"], [248, "neurotools.signal.local_maxima"]], "local_minima() (in module neurotools.signal)": [[59, "neurotools.signal.local_minima"], [248, "neurotools.signal.local_minima"]], "local_peak_within() (in module neurotools.signal)": [[59, "neurotools.signal.local_peak_within"], [248, "neurotools.signal.local_peak_within"]], "lowpass_filter() (in module neurotools.signal)": [[59, "neurotools.signal.lowpass_filter"], [248, "neurotools.signal.lowpass_filter"]], "make_lagged() (in module neurotools.signal)": [[59, "neurotools.signal.make_lagged"], [248, "neurotools.signal.make_lagged"]], "make_rebroadcast_slice() (in module neurotools.signal)": [[59, "neurotools.signal.make_rebroadcast_slice"], [248, "neurotools.signal.make_rebroadcast_slice"]], "mean_block() (in module neurotools.signal)": [[59, "neurotools.signal.mean_block"], [248, "neurotools.signal.mean_block"]], "median_block() (in module neurotools.signal)": [[59, "neurotools.signal.median_block"], [248, "neurotools.signal.median_block"]], "median_filter() (in module neurotools.signal)": [[59, "neurotools.signal.median_filter"], [248, "neurotools.signal.median_filter"]], "ndargmax() (in module neurotools.signal)": [[59, "neurotools.signal.ndargmax"], [248, "neurotools.signal.ndargmax"]], "neurotools.signal": [[59, "module-neurotools.signal"], [248, "module-neurotools.signal"]], "nice_interp() (in module neurotools.signal)": [[59, "neurotools.signal.nice_interp"], [248, "neurotools.signal.nice_interp"]], "nonnegative_bandpass_filter() (in module neurotools.signal)": [[59, "neurotools.signal.nonnegative_bandpass_filter"], [248, "neurotools.signal.nonnegative_bandpass_filter"]], "pad_signal() (in module neurotools.signal)": [[59, "neurotools.signal.pad_signal"], [248, "neurotools.signal.pad_signal"]], "padin() (in module neurotools.signal)": [[59, "neurotools.signal.padin"], [248, "neurotools.signal.padin"]], "padout() (in module neurotools.signal)": [[59, "neurotools.signal.padout"], [248, "neurotools.signal.padout"]], "pdiff() (in module neurotools.signal)": [[59, "neurotools.signal.pdiff"], [248, "neurotools.signal.pdiff"]], "peak_within() (in module neurotools.signal)": [[59, "neurotools.signal.peak_within"], [248, "neurotools.signal.peak_within"]], "percentile_filter() (in module neurotools.signal)": [[59, "neurotools.signal.percentile_filter"], [248, "neurotools.signal.percentile_filter"]], "pghilbert() (in module neurotools.signal)": [[59, "neurotools.signal.pghilbert"], [248, "neurotools.signal.pghilbert"]], "phase_randomize() (in module neurotools.signal)": [[59, "neurotools.signal.phase_randomize"], [248, "neurotools.signal.phase_randomize"]], "phase_randomize_from_amplitudes() (in module neurotools.signal)": [[59, "neurotools.signal.phase_randomize_from_amplitudes"], [248, "neurotools.signal.phase_randomize_from_amplitudes"]], "phase_rotate() (in module neurotools.signal)": [[59, "neurotools.signal.phase_rotate"], [248, "neurotools.signal.phase_rotate"]], "pieces() (in module neurotools.signal)": [[59, "neurotools.signal.pieces"], [248, "neurotools.signal.pieces"]], "randband() (in module neurotools.signal)": [[59, "neurotools.signal.randband"], [248, "neurotools.signal.randband"]], "remove_gaps() (in module neurotools.signal)": [[59, "neurotools.signal.remove_gaps"], [248, "neurotools.signal.remove_gaps"]], "remove_short() (in module neurotools.signal)": [[59, "neurotools.signal.remove_short"], [248, "neurotools.signal.remove_short"]], "rewrap() (in module neurotools.signal)": [[59, "neurotools.signal.rewrap"], [248, "neurotools.signal.rewrap"]], "set_edges() (in module neurotools.signal)": [[59, "neurotools.signal.set_edges"], [248, "neurotools.signal.set_edges"]], "sign_preserving_amplitude_demodulate() (in module neurotools.signal)": [[59, "neurotools.signal.sign_preserving_amplitude_demodulate"], [248, "neurotools.signal.sign_preserving_amplitude_demodulate"]], "spaced_derivative() (in module neurotools.signal)": [[59, "neurotools.signal.spaced_derivative"], [248, "neurotools.signal.spaced_derivative"]], "span() (in module neurotools.signal)": [[59, "neurotools.signal.span"], [248, "neurotools.signal.span"]], "split_into_groups() (in module neurotools.signal)": [[59, "neurotools.signal.split_into_groups"], [248, "neurotools.signal.split_into_groups"]], "stats_block() (in module neurotools.signal)": [[59, "neurotools.signal.stats_block"], [248, "neurotools.signal.stats_block"]], "topercentiles() (in module neurotools.signal)": [[59, "neurotools.signal.topercentiles"], [248, "neurotools.signal.topercentiles"]], "triggered_average() (in module neurotools.signal)": [[59, "neurotools.signal.triggered_average"], [248, "neurotools.signal.triggered_average"]], "uniformize() (in module neurotools.signal)": [[59, "neurotools.signal.uniformize"], [248, "neurotools.signal.uniformize"]], "unit_length() (in module neurotools.signal)": [[59, "neurotools.signal.unit_length"], [248, "neurotools.signal.unit_length"]], "unitscale() (in module neurotools.signal)": [[59, "neurotools.signal.unitscale"], [248, "neurotools.signal.unitscale"]], "unwrap() (in module neurotools.signal)": [[59, "neurotools.signal.unwrap"], [248, "neurotools.signal.unwrap"]], "upsample() (in module neurotools.signal)": [[59, "neurotools.signal.upsample"], [248, "neurotools.signal.upsample"]], "var_block() (in module neurotools.signal)": [[59, "neurotools.signal.var_block"], [248, "neurotools.signal.var_block"]], "variance_filter() (in module neurotools.signal)": [[59, "neurotools.signal.variance_filter"], [248, "neurotools.signal.variance_filter"]], "virtual_reference_line_noise_removal() (in module neurotools.signal)": [[59, "neurotools.signal.virtual_reference_line_noise_removal"], [248, "neurotools.signal.virtual_reference_line_noise_removal"]], "zeromean() (in module neurotools.signal)": [[59, "neurotools.signal.zeromean"], [248, "neurotools.signal.zeromean"]], "zgrid() (in module neurotools.signal)": [[59, "neurotools.signal.zgrid"], [248, "neurotools.signal.zgrid"]], "zscore() (in module neurotools.signal)": [[59, "neurotools.signal.zscore"], [248, "neurotools.signal.zscore"]], "coherence_pvalue() (in module neurotools.signal.coherence)": [[60, "neurotools.signal.coherence.coherence_pvalue"], [249, "neurotools.signal.coherence.coherence_pvalue"]], "morlet_population_synchrony_spectrum() (in module neurotools.signal.coherence)": [[60, "neurotools.signal.coherence.morlet_population_synchrony_spectrum"], [249, "neurotools.signal.coherence.morlet_population_synchrony_spectrum"]], "multitaper_coherence() (in module neurotools.signal.coherence)": [[60, "neurotools.signal.coherence.multitaper_coherence"], [249, "neurotools.signal.coherence.multitaper_coherence"]], "multitaper_multitrial_coherence() (in module neurotools.signal.coherence)": [[60, "neurotools.signal.coherence.multitaper_multitrial_coherence"], [249, "neurotools.signal.coherence.multitaper_multitrial_coherence"]], "neurotools.signal.coherence": [[60, "module-neurotools.signal.coherence"], [249, "module-neurotools.signal.coherence"]], "population_coherence_matrix() (in module neurotools.signal.coherence)": [[60, "neurotools.signal.coherence.population_coherence_matrix"], [249, "neurotools.signal.coherence.population_coherence_matrix"]], "population_eigencoherence() (in module neurotools.signal.coherence)": [[60, "neurotools.signal.coherence.population_eigencoherence"], [249, "neurotools.signal.coherence.population_eigencoherence"]], "sliding_multitaper_coherence() (in module neurotools.signal.coherence)": [[60, "neurotools.signal.coherence.sliding_multitaper_coherence"], [249, "neurotools.signal.coherence.sliding_multitaper_coherence"]], "sliding_multitaper_coherence_parallel() (in module neurotools.signal.coherence)": [[60, "neurotools.signal.coherence.sliding_multitaper_coherence_parallel"], [249, "neurotools.signal.coherence.sliding_multitaper_coherence_parallel"]], "convolve2dct() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.convolve2dct"], [250, "neurotools.signal.conv.convolve2dct"]], "gausskern1d() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.gausskern1d"], [250, "neurotools.signal.conv.gausskern1d"]], "gausskern2d() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.gausskern2d"], [250, "neurotools.signal.conv.gausskern2d"]], "mirror2d() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.mirror2d"], [250, "neurotools.signal.conv.mirror2d"]], "neurotools.signal.conv": [[61, "module-neurotools.signal.conv"], [250, "module-neurotools.signal.conv"]], "reflect2d() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.reflect2D"], [250, "neurotools.signal.conv.reflect2D"]], "reflect2d_1() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.reflect2D_1"], [250, "neurotools.signal.conv.reflect2D_1"]], "separable2d() (in module neurotools.signal.conv)": [[61, "neurotools.signal.conv.separable2d"], [250, "neurotools.signal.conv.separable2d"]], "fft_cwt() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.fft_cwt"], [252, "neurotools.signal.morlet.fft_cwt"]], "fft_cwt_transposed() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.fft_cwt_transposed"], [252, "neurotools.signal.morlet.fft_cwt_transposed"]], "fft_cwt_transposed_logspaced() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.fft_cwt_transposed_logspaced"], [252, "neurotools.signal.morlet.fft_cwt_transposed_logspaced"]], "logfreqs() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.logfreqs"], [252, "neurotools.signal.morlet.logfreqs"]], "neurotools.signal.morlet": [[62, "module-neurotools.signal.morlet"], [252, "module-neurotools.signal.morlet"]], "normalized_morlet() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.normalized_morlet"], [252, "neurotools.signal.morlet.normalized_morlet"]], "population_synchrony_spectrum() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.population_synchrony_spectrum"], [252, "neurotools.signal.morlet.population_synchrony_spectrum"]], "prepare_wavelet_fft_basis() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.prepare_wavelet_fft_basis"], [252, "neurotools.signal.morlet.prepare_wavelet_fft_basis"]], "prepare_wavelet_fft_basis_logspace() (in module neurotools.signal.morlet)": [[62, "neurotools.signal.morlet.prepare_wavelet_fft_basis_logspace"], [252, "neurotools.signal.morlet.prepare_wavelet_fft_basis_logspace"]], "dpss_cached() (in module neurotools.signal.multitaper)": [[63, "neurotools.signal.multitaper.dpss_cached"], [254, "neurotools.signal.multitaper.dpss_cached"]], "multitaper_population_eigencoherence() (in module neurotools.signal.multitaper)": [[63, "neurotools.signal.multitaper.multitaper_population_eigencoherence"], [254, "neurotools.signal.multitaper.multitaper_population_eigencoherence"]], "multitaper_spectrum() (in module neurotools.signal.multitaper)": [[63, "neurotools.signal.multitaper.multitaper_spectrum"], [254, "neurotools.signal.multitaper.multitaper_spectrum"]], "multitaper_squared_spectrum() (in module neurotools.signal.multitaper)": [[63, "neurotools.signal.multitaper.multitaper_squared_spectrum"], [254, "neurotools.signal.multitaper.multitaper_squared_spectrum"]], "neurotools.signal.multitaper": [[63, "module-neurotools.signal.multitaper"], [254, "module-neurotools.signal.multitaper"]], "sliding_multitaper_spectrum() (in module neurotools.signal.multitaper)": [[63, "neurotools.signal.multitaper.sliding_multitaper_spectrum"], [254, "neurotools.signal.multitaper.sliding_multitaper_spectrum"]], "discard_spikes_closer_than_delta() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.discard_spikes_closer_than_delta"], [255, "neurotools.signal.ppc.discard_spikes_closer_than_delta"]], "estimate_bias_in_uncorrected_ppc() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.estimate_bias_in_uncorrected_ppc"], [255, "neurotools.signal.ppc.estimate_bias_in_uncorrected_ppc"]], "fftppc() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.fftppc"], [255, "neurotools.signal.ppc.fftppc"]], "fftppc_biased() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.fftppc_biased"], [255, "neurotools.signal.ppc.fftppc_biased"]], "fftppc_biased_multitaper() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.fftppc_biased_multitaper"], [255, "neurotools.signal.ppc.fftppc_biased_multitaper"]], "fftppc_multitaper() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.fftppc_multitaper"], [255, "neurotools.signal.ppc.fftppc_multitaper"]], "neurotools.signal.ppc": [[64, "module-neurotools.signal.ppc"], [255, "module-neurotools.signal.ppc"]], "pairwise_phase_consistancy() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.pairwise_phase_consistancy"], [255, "neurotools.signal.ppc.pairwise_phase_consistancy"]], "phase_randomize() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.phase_randomize"], [255, "neurotools.signal.ppc.phase_randomize"]], "phase_randomized_bias_correction() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.phase_randomized_bias_correction"], [255, "neurotools.signal.ppc.phase_randomized_bias_correction"]], "ppc_chance_level() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.ppc_chance_level"], [255, "neurotools.signal.ppc.ppc_chance_level"]], "ppc_phase_randomize_chance_level_sample() (in module neurotools.signal.ppc)": [[64, "neurotools.signal.ppc.ppc_phase_randomize_chance_level_sample"], [255, "neurotools.signal.ppc.ppc_phase_randomize_chance_level_sample"]], "sgkern() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGKern"], [257, "neurotools.signal.savitskygolay.SGKern"]], "sgkerna() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGKernA"], [257, "neurotools.signal.savitskygolay.SGKernA"]], "sgkernj() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGKernJ"], [257, "neurotools.signal.savitskygolay.SGKernJ"]], "sgkernv() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGKernV"], [257, "neurotools.signal.savitskygolay.SGKernV"]], "sgord() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGOrd"], [257, "neurotools.signal.savitskygolay.SGOrd"]], "sgaccelerate() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGaccelerate"], [257, "neurotools.signal.savitskygolay.SGaccelerate"]], "sgdifferentiate() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGdifferentiate"], [257, "neurotools.signal.savitskygolay.SGdifferentiate"]], "sgfilt() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGfilt"], [257, "neurotools.signal.savitskygolay.SGfilt"]], "sgfilta() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGfiltA"], [257, "neurotools.signal.savitskygolay.SGfiltA"]], "sgfiltj() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGfiltJ"], [257, "neurotools.signal.savitskygolay.SGfiltJ"]], "sgfiltv() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGfiltV"], [257, "neurotools.signal.savitskygolay.SGfiltV"]], "sgjerk() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGjerk"], [257, "neurotools.signal.savitskygolay.SGjerk"]], "sgsmooth() (in module neurotools.signal.savitskygolay)": [[65, "neurotools.signal.savitskygolay.SGsmooth"], [257, "neurotools.signal.savitskygolay.SGsmooth"]], "neurotools.signal.savitskygolay": [[65, "module-neurotools.signal.savitskygolay"], [257, "module-neurotools.signal.savitskygolay"]], "neurotools.signal.sde": [[66, "module-neurotools.signal.sde"], [258, "module-neurotools.signal.sde"]], "sample_ou_process() (in module neurotools.signal.sde)": [[66, "neurotools.signal.sde.sample_ou_process"], [258, "neurotools.signal.sde.sample_ou_process"]], "sample_wiener_process() (in module neurotools.signal.sde)": [[66, "neurotools.signal.sde.sample_wiener_process"], [258, "neurotools.signal.sde.sample_wiener_process"]], "brute_force_local_2d_maxima() (in module neurotools.spatial)": [[67, "neurotools.spatial.brute_force_local_2d_maxima"], [260, "neurotools.spatial.brute_force_local_2d_maxima"]], "neurotools.spatial": [[67, "module-neurotools.spatial"], [260, "module-neurotools.spatial"]], "array_average_amplitude() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_average_amplitude"], [261, "neurotools.spatial.array.array_average_amplitude"]], "array_count_centers() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_count_centers"], [261, "neurotools.spatial.array.array_count_centers"]], "array_count_critical() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_count_critical"], [261, "neurotools.spatial.array.array_count_critical"]], "array_kuramoto() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_kuramoto"], [261, "neurotools.spatial.array.array_kuramoto"]], "array_kuramoto_pgd() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_kuramoto_pgd"], [261, "neurotools.spatial.array.array_kuramoto_pgd"]], "array_kuramoto_pgd_standard_deviation() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_kuramoto_pgd_standard_deviation"], [261, "neurotools.spatial.array.array_kuramoto_pgd_standard_deviation"]], "array_kuramoto_standard_deviation() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_kuramoto_standard_deviation"], [261, "neurotools.spatial.array.array_kuramoto_standard_deviation"]], "array_phase_gradient() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phase_gradient"], [261, "neurotools.spatial.array.array_phase_gradient"]], "array_phasegradient_local() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phasegradient_local"], [261, "neurotools.spatial.array.array_phasegradient_local"]], "array_phasegradient_magnitude_cv() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phasegradient_magnitude_cv"], [261, "neurotools.spatial.array.array_phasegradient_magnitude_cv"]], "array_phasegradient_magnitude_sigma() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phasegradient_magnitude_sigma"], [261, "neurotools.spatial.array.array_phasegradient_magnitude_sigma"]], "array_phasegradient_pgd_threshold() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phasegradient_pgd_threshold"], [261, "neurotools.spatial.array.array_phasegradient_pgd_threshold"]], "array_phasegradient_planar() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_phasegradient_planar"], [261, "neurotools.spatial.array.array_phasegradient_planar"]], "array_speed_local() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_speed_local"], [261, "neurotools.spatial.array.array_speed_local"]], "array_speed_pgd_threshold() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_speed_pgd_threshold"], [261, "neurotools.spatial.array.array_speed_pgd_threshold"]], "array_synchrony() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_synchrony"], [261, "neurotools.spatial.array.array_synchrony"]], "array_synchrony_pgd() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_synchrony_pgd"], [261, "neurotools.spatial.array.array_synchrony_pgd"]], "array_synchrony_pgd_standard_deviation() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_synchrony_pgd_standard_deviation"], [261, "neurotools.spatial.array.array_synchrony_pgd_standard_deviation"]], "array_synchrony_standard_deviation() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_synchrony_standard_deviation"], [261, "neurotools.spatial.array.array_synchrony_standard_deviation"]], "array_wavelength_local() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_wavelength_local"], [261, "neurotools.spatial.array.array_wavelength_local"]], "array_wavelength_local_pgd_threshold() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_wavelength_local_pgd_threshold"], [261, "neurotools.spatial.array.array_wavelength_local_pgd_threshold"]], "array_wavelength_pgd_threshold() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_wavelength_pgd_threshold"], [261, "neurotools.spatial.array.array_wavelength_pgd_threshold"]], "array_wavelength_planar() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.array_wavelength_planar"], [261, "neurotools.spatial.array.array_wavelength_planar"]], "neurotools.spatial.array": [[68, "module-neurotools.spatial.array"], [261, "module-neurotools.spatial.array"]], "pack_array_data() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.pack_array_data"], [261, "neurotools.spatial.array.pack_array_data"]], "trim_array() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.trim_array"], [261, "neurotools.spatial.array.trim_array"]], "trim_array_as_if() (in module neurotools.spatial.array)": [[68, "neurotools.spatial.array.trim_array_as_if"], [261, "neurotools.spatial.array.trim_array_as_if"]], "dct_cut() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.dct_cut"], [262, "neurotools.spatial.dct.dct_cut"]], "dct_cut_antialias() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.dct_cut_antialias"], [262, "neurotools.spatial.dct.dct_cut_antialias"]], "dct_cut_downsampled() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.dct_cut_downsampled"], [262, "neurotools.spatial.dct.dct_cut_downsampled"]], "dct_upsample() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.dct_upsample"], [262, "neurotools.spatial.dct.dct_upsample"]], "dct_upsample_notrim() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.dct_upsample_notrim"], [262, "neurotools.spatial.dct.dct_upsample_notrim"]], "get_mask() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.get_mask"], [262, "neurotools.spatial.dct.get_mask"]], "get_mask_antialiased() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.get_mask_antialiased"], [262, "neurotools.spatial.dct.get_mask_antialiased"]], "iterated_upsample() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.iterated_upsample"], [262, "neurotools.spatial.dct.iterated_upsample"]], "neurotools.spatial.dct": [[69, "module-neurotools.spatial.dct"], [262, "module-neurotools.spatial.dct"]], "outer_complex() (in module neurotools.spatial.dct)": [[69, "neurotools.spatial.dct.outer_complex"], [262, "neurotools.spatial.dct.outer_complex"]], "distance_angular_deviation() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.distance_angular_deviation"], [263, "neurotools.spatial.distance.distance_angular_deviation"]], "get_average_synchrony_length_constant_parallel() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.get_average_synchrony_length_constant_parallel"], [263, "neurotools.spatial.distance.get_average_synchrony_length_constant_parallel"]], "get_averaged_angular_distance() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.get_averaged_angular_distance"], [263, "neurotools.spatial.distance.get_averaged_angular_distance"]], "get_length_constant_trial() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.get_length_constant_trial"], [263, "neurotools.spatial.distance.get_length_constant_trial"]], "get_pair_distance() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.get_pair_distance"], [263, "neurotools.spatial.distance.get_pair_distance"]], "neurotools.spatial.distance": [[70, "module-neurotools.spatial.distance"], [263, "module-neurotools.spatial.distance"]], "synchrony_length_constant_areas_summary() (in module neurotools.spatial.distance)": [[70, "neurotools.spatial.distance.synchrony_length_constant_areas_summary"], [263, "neurotools.spatial.distance.synchrony_length_constant_areas_summary"]], "coalesce() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.coalesce"], [264, "neurotools.spatial.fftzeros.coalesce"]], "coalesce_points() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.coalesce_points"], [264, "neurotools.spatial.fftzeros.coalesce_points"]], "cut_array_data() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.cut_array_data"], [264, "neurotools.spatial.fftzeros.cut_array_data"]], "dphidx() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.dPhidx"], [264, "neurotools.spatial.fftzeros.dPhidx"]], "dphidy() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.dPhidy"], [264, "neurotools.spatial.fftzeros.dPhidy"]], "find_critical_points() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.find_critical_points"], [264, "neurotools.spatial.fftzeros.find_critical_points"]], "find_critical_potential_points() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.find_critical_potential_points"], [264, "neurotools.spatial.fftzeros.find_critical_potential_points"]], "get_critical_spectra() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.get_critical_spectra"], [264, "neurotools.spatial.fftzeros.get_critical_spectra"]], "get_phase_gradient_as_complex() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.get_phase_gradient_as_complex"], [264, "neurotools.spatial.fftzeros.get_phase_gradient_as_complex"]], "getp() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.getp"], [264, "neurotools.spatial.fftzeros.getp"]], "getpeaks2d() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.getpeaks2d"], [264, "neurotools.spatial.fftzeros.getpeaks2d"]], "grad() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.grad"], [264, "neurotools.spatial.fftzeros.grad"]], "mirror2d() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.mirror2D"], [264, "neurotools.spatial.fftzeros.mirror2D"]], "neurotools.spatial.fftzeros": [[71, "module-neurotools.spatial.fftzeros"], [264, "module-neurotools.spatial.fftzeros"]], "plot_critical_points() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.plot_critical_points"], [264, "neurotools.spatial.fftzeros.plot_critical_points"]], "plot_critical_spectra() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.plot_critical_spectra"], [264, "neurotools.spatial.fftzeros.plot_critical_spectra"]], "plot_phase_direction() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.plot_phase_direction"], [264, "neurotools.spatial.fftzeros.plot_phase_direction"]], "plot_phase_gradient() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.plot_phase_gradient"], [264, "neurotools.spatial.fftzeros.plot_phase_gradient"]], "quickgrad() (in module neurotools.spatial.fftzeros)": [[71, "neurotools.spatial.fftzeros.quickgrad"], [264, "neurotools.spatial.fftzeros.quickgrad"]], "absorbing_gaussian() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.absorbing_gaussian"], [266, "neurotools.spatial.kernels.absorbing_gaussian"]], "absorbing_laplacian() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.absorbing_laplacian"], [266, "neurotools.spatial.kernels.absorbing_laplacian"]], "continuum_kernel() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.continuum_kernel"], [266, "neurotools.spatial.kernels.continuum_kernel"]], "cosine_kernel() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.cosine_kernel"], [266, "neurotools.spatial.kernels.cosine_kernel"]], "diffusion_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.diffusion_basis"], [266, "neurotools.spatial.kernels.diffusion_basis"]], "exponential_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.exponential_basis"], [266, "neurotools.spatial.kernels.exponential_basis"]], "gaussian_2d_kernel() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.gaussian_2D_kernel"], [266, "neurotools.spatial.kernels.gaussian_2D_kernel"]], "iterative_orthogonalize_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.iterative_orthogonalize_basis"], [266, "neurotools.spatial.kernels.iterative_orthogonalize_basis"]], "laplace_kernel() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.laplace_kernel"], [266, "neurotools.spatial.kernels.laplace_kernel"]], "laplacian() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.laplacian"], [266, "neurotools.spatial.kernels.laplacian"]], "log_cosine_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.log_cosine_basis"], [266, "neurotools.spatial.kernels.log_cosine_basis"]], "log_spline_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.log_spline_basis"], [266, "neurotools.spatial.kernels.log_spline_basis"]], "magickernel() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.magickernel"], [266, "neurotools.spatial.kernels.magickernel"]], "magicsharp() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.magicsharp"], [266, "neurotools.spatial.kernels.magicsharp"]], "make_cosine_basis() (in module neurotools.spatial.kernels)": [[73, "neurotools.spatial.kernels.make_cosine_basis"], [266, "neurotools.spatial.kernels.make_cosine_basis"]], "neurotools.spatial.kernels": [[73, "module-neurotools.spatial.kernels"], [266, "module-neurotools.spatial.kernels"]], "analytic_signal_coherence() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.analytic_signal_coherence"], [268, "neurotools.spatial.phase.analytic_signal_coherence"]], "neurotools.spatial.phase": [[75, "module-neurotools.spatial.phase"], [268, "module-neurotools.spatial.phase"]], "population_average_amplitude() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_average_amplitude"], [268, "neurotools.spatial.phase.population_average_amplitude"]], "population_kuramoto() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_kuramoto"], [268, "neurotools.spatial.phase.population_kuramoto"]], "population_median_frequency() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_median_frequency"], [268, "neurotools.spatial.phase.population_median_frequency"]], "population_median_phase_velocity() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_median_phase_velocity"], [268, "neurotools.spatial.phase.population_median_phase_velocity"]], "population_normalized_sliding_signal_coherence() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_normalized_sliding_signal_coherence"], [268, "neurotools.spatial.phase.population_normalized_sliding_signal_coherence"]], "population_phase_coherence() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_phase_coherence"], [268, "neurotools.spatial.phase.population_phase_coherence"]], "population_phase_relative_sliding_kuramoto() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_phase_relative_sliding_kuramoto"], [268, "neurotools.spatial.phase.population_phase_relative_sliding_kuramoto"]], "population_polar_std() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_polar_std"], [268, "neurotools.spatial.phase.population_polar_std"]], "population_signal_amplitude_dispersion() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_amplitude_dispersion"], [268, "neurotools.spatial.phase.population_signal_amplitude_dispersion"]], "population_signal_amplitude_precision() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_amplitude_precision"], [268, "neurotools.spatial.phase.population_signal_amplitude_precision"]], "population_signal_amplitude_std() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_amplitude_std"], [268, "neurotools.spatial.phase.population_signal_amplitude_std"]], "population_signal_concentration() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_concentration"], [268, "neurotools.spatial.phase.population_signal_concentration"]], "population_signal_description() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_description"], [268, "neurotools.spatial.phase.population_signal_description"]], "population_signal_dispersion() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_dispersion"], [268, "neurotools.spatial.phase.population_signal_dispersion"]], "population_signal_phase_dispersion() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_phase_dispersion"], [268, "neurotools.spatial.phase.population_signal_phase_dispersion"]], "population_signal_phase_precision() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_phase_precision"], [268, "neurotools.spatial.phase.population_signal_phase_precision"]], "population_signal_phase_std() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_phase_std"], [268, "neurotools.spatial.phase.population_signal_phase_std"]], "population_signal_precision() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_signal_precision"], [268, "neurotools.spatial.phase.population_signal_precision"]], "population_sliding_signal_coherence() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_sliding_signal_coherence"], [268, "neurotools.spatial.phase.population_sliding_signal_coherence"]], "population_synchrony() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_synchrony"], [268, "neurotools.spatial.phase.population_synchrony"]], "population_synchrony_linear() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.population_synchrony_linear"], [268, "neurotools.spatial.phase.population_synchrony_linear"]], "sliding_population_signal_coherence() (in module neurotools.spatial.phase)": [[75, "neurotools.spatial.phase.sliding_population_signal_coherence"], [268, "neurotools.spatial.phase.sliding_population_signal_coherence"]], "c2p() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.c2p"], [269, "neurotools.spatial.points.c2p"]], "closest() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.closest"], [269, "neurotools.spatial.points.closest"]], "neurotools.spatial.points": [[76, "module-neurotools.spatial.points"], [269, "module-neurotools.spatial.points"]], "p2c() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.p2c"], [269, "neurotools.spatial.points.p2c"]], "pair_neighbors() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.pair_neighbors"], [269, "neurotools.spatial.points.pair_neighbors"]], "paired_distances() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.paired_distances"], [269, "neurotools.spatial.points.paired_distances"]], "to_xypoint() (in module neurotools.spatial.points)": [[76, "neurotools.spatial.points.to_xypoint"], [269, "neurotools.spatial.points.to_xypoint"]], "interp_bin() (in module neurotools.spatial.spiking)": [[77, "neurotools.spatial.spiking.interp_bin"], [271, "neurotools.spatial.spiking.interp_bin"]], "neurotools.spatial.spiking": [[77, "module-neurotools.spatial.spiking"], [271, "module-neurotools.spatial.spiking"]], "coalesce() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.coalesce"], [272, "neurotools.spatial.triangulation.coalesce"]], "edgesnearby() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.edgesNearby"], [272, "neurotools.spatial.triangulation.edgesNearby"]], "mergenearby() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.mergeNearby"], [272, "neurotools.spatial.triangulation.mergeNearby"]], "neurotools.spatial.triangulation": [[78, "module-neurotools.spatial.triangulation"], [272, "module-neurotools.spatial.triangulation"]], "plot_edges() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.plot_edges"], [272, "neurotools.spatial.triangulation.plot_edges"]], "plot_triangles() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.plot_triangles"], [272, "neurotools.spatial.triangulation.plot_triangles"]], "trianglestoedges() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.trianglesToEdges"], [272, "neurotools.spatial.triangulation.trianglesToEdges"]], "uniquerow() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.uniquerow"], [272, "neurotools.spatial.triangulation.uniquerow"]], "z2xy() (in module neurotools.spatial.triangulation)": [[78, "neurotools.spatial.triangulation.z2xy"], [272, "neurotools.spatial.triangulation.z2xy"]], "neurotools.spikes": [[79, "module-neurotools.spikes"], [274, "module-neurotools.spikes"]], "bin_spike_times() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.bin_spike_times"], [275, "neurotools.spikes.spikes.bin_spike_times"]], "bin_spikes_raster() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.bin_spikes_raster"], [275, "neurotools.spikes.spikes.bin_spikes_raster"]], "cut_spikes() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.cut_spikes"], [275, "neurotools.spikes.spikes.cut_spikes"]], "neurotools.spikes.spikes": [[80, "module-neurotools.spikes.spikes"], [275, "module-neurotools.spikes.spikes"]], "pack_cross_correlation_matrix() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.pack_cross_correlation_matrix"], [275, "neurotools.spikes.spikes.pack_cross_correlation_matrix"]], "pp_xcorr() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.pp_xcorr"], [275, "neurotools.spikes.spikes.pp_xcorr"]], "times_to_raster() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.times_to_raster"], [275, "neurotools.spikes.spikes.times_to_raster"]], "txcorr() (in module neurotools.spikes.spikes)": [[80, "neurotools.spikes.spikes.txcorr"], [275, "neurotools.spikes.spikes.txcorr"]], "getfwhm() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getFWHM"], [276, "neurotools.spikes.waveform.getFWHM"]], "getphp() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getPHP"], [276, "neurotools.spikes.waveform.getPHP"]], "getpt() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getPT"], [276, "neurotools.spikes.waveform.getPT"]], "getpthw() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getPTHW"], [276, "neurotools.spikes.waveform.getPTHW"]], "getpvt() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getPVT"], [276, "neurotools.spikes.waveform.getPVT"]], "getwahp() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.getWAHP"], [276, "neurotools.spikes.waveform.getWAHP"]], "is_thin() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.is_thin"], [276, "neurotools.spikes.waveform.is_thin"]], "is_thin_pvt() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.is_thin_pvt"], [276, "neurotools.spikes.waveform.is_thin_pvt"]], "minmax() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.minmax"], [276, "neurotools.spikes.waveform.minmax"]], "neurotools.spikes.waveform": [[81, "module-neurotools.spikes.waveform"], [276, "module-neurotools.spikes.waveform"]], "normalized_waveform() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.normalized_waveform"], [276, "neurotools.spikes.waveform.normalized_waveform"]], "process() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.process"], [276, "neurotools.spikes.waveform.process"]], "realign() (in module neurotools.spikes.waveform)": [[81, "neurotools.spikes.waveform.realign"], [276, "neurotools.spikes.waveform.realign"]], "description (class in neurotools.stats)": [[82, "neurotools.stats.Description"], [277, "neurotools.stats.Description"]], "add_constant() (in module neurotools.stats)": [[82, "neurotools.stats.add_constant"], [277, "neurotools.stats.add_constant"]], "auc_to_g2() (in module neurotools.stats)": [[82, "neurotools.stats.auc_to_g2"], [277, "neurotools.stats.auc_to_g2"]], "block_shuffle() (in module neurotools.stats)": [[82, "neurotools.stats.block_shuffle"], [277, "neurotools.stats.block_shuffle"]], "covariance() (in module neurotools.stats)": [[82, "neurotools.stats.covariance"], [277, "neurotools.stats.covariance"]], "crossvalidated_least_squares() (in module neurotools.stats)": [[82, "neurotools.stats.crossvalidated_least_squares"], [277, "neurotools.stats.crossvalidated_least_squares"]], "fraction_explained_deviance() (in module neurotools.stats)": [[82, "neurotools.stats.fraction_explained_deviance"], [277, "neurotools.stats.fraction_explained_deviance"]], "glmfit() (in module neurotools.stats)": [[82, "neurotools.stats.glmfit"], [277, "neurotools.stats.glmfit"]], "neurotools.stats": [[82, "module-neurotools.stats"], [277, "module-neurotools.stats"]], "nrmse() (in module neurotools.stats)": [[82, "neurotools.stats.nrmse"], [277, "neurotools.stats.nrmse"]], "outliers() (in module neurotools.stats)": [[82, "neurotools.stats.outliers"], [277, "neurotools.stats.outliers"]], "partition_data() (in module neurotools.stats)": [[82, "neurotools.stats.partition_data"], [277, "neurotools.stats.partition_data"]], "partition_data_for_crossvalidation() (in module neurotools.stats)": [[82, "neurotools.stats.partition_data_for_crossvalidation"], [277, "neurotools.stats.partition_data_for_crossvalidation"]], "partition_trials_for_crossvalidation() (in module neurotools.stats)": [[82, "neurotools.stats.partition_trials_for_crossvalidation"], [277, "neurotools.stats.partition_trials_for_crossvalidation"]], "pca() (in module neurotools.stats)": [[82, "neurotools.stats.pca"], [277, "neurotools.stats.pca"]], "polar_error() (in module neurotools.stats)": [[82, "neurotools.stats.polar_error"], [277, "neurotools.stats.polar_error"]], "print_stats() (in module neurotools.stats)": [[82, "neurotools.stats.print_stats"], [277, "neurotools.stats.print_stats"]], "reject_outliers() (in module neurotools.stats)": [[82, "neurotools.stats.reject_outliers"], [277, "neurotools.stats.reject_outliers"]], "short() (neurotools.stats.description method)": [[82, "neurotools.stats.Description.short"], [277, "neurotools.stats.Description.short"]], "trial_crossvalidated_least_squares() (in module neurotools.stats)": [[82, "neurotools.stats.trial_crossvalidated_least_squares"], [277, "neurotools.stats.trial_crossvalidated_least_squares"]], "weighted_avg_and_std() (in module neurotools.stats)": [[82, "neurotools.stats.weighted_avg_and_std"], [277, "neurotools.stats.weighted_avg_and_std"]], "abspolar_stats() (in module neurotools.stats.circular)": [[83, "neurotools.stats.circular.abspolar_stats"], [280, "neurotools.stats.circular.abspolar_stats"]], "complex_gaussian() (in module neurotools.stats.circular)": [[83, "neurotools.stats.circular.complex_gaussian"], [280, "neurotools.stats.circular.complex_gaussian"]], "fit_vonmises() (in module neurotools.stats.circular)": [[83, "neurotools.stats.circular.fit_vonmises"], [280, "neurotools.stats.circular.fit_vonmises"]], "logpolar_gaussian() (in module neurotools.stats.circular)": [[83, "neurotools.stats.circular.logpolar_gaussian"], [280, "neurotools.stats.circular.logpolar_gaussian"]], "logpolar_stats() (in module neurotools.stats.circular)": [[83, "neurotools.stats.circular.logpolar_stats"], [280, "neurotools.stats.circular.logpolar_stats"]], "neurotools.stats.circular": [[83, "module-neurotools.stats.circular"], [280, "module-neurotools.stats.circular"]], "squared_first_circular_moment() (in module neurotools.stats.circular)": [[83, "neurotools.stats.circular.squared_first_circular_moment"], [280, "neurotools.stats.circular.squared_first_circular_moment"]], "autocorrelation_bayes() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.autocorrelation_bayes"], [281, "neurotools.stats.convolutional.autocorrelation_bayes"]], "blockccm() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.blockccm"], [281, "neurotools.stats.convolutional.blockccm"]], "blocksta() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.blocksta"], [281, "neurotools.stats.convolutional.blocksta"]], "ccm() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.ccm"], [281, "neurotools.stats.convolutional.ccm"]], "ccor() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.ccor"], [281, "neurotools.stats.convolutional.ccor"]], "construct_lowpass_operator() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.construct_lowpass_operator"], [281, "neurotools.stats.convolutional.construct_lowpass_operator"]], "create_spectral_model() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.create_spectral_model"], [281, "neurotools.stats.convolutional.create_spectral_model"]], "cspect() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.cspect"], [281, "neurotools.stats.convolutional.cspect"]], "cspectm() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.cspectm"], [281, "neurotools.stats.convolutional.cspectm"]], "neurotools.stats.convolutional": [[84, "module-neurotools.stats.convolutional"], [281, "module-neurotools.stats.convolutional"]], "reconstruct() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.reconstruct"], [281, "neurotools.stats.convolutional.reconstruct"]], "spectreconstruct() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.spectreconstruct"], [281, "neurotools.stats.convolutional.spectreconstruct"]], "spike_lfp_filters() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.spike_lfp_filters"], [281, "neurotools.stats.convolutional.spike_lfp_filters"]], "sta() (in module neurotools.stats.convolutional)": [[84, "neurotools.stats.convolutional.sta"], [281, "neurotools.stats.convolutional.sta"]], "adaptive_density_grid() (in module neurotools.stats.density)": [[85, "neurotools.stats.density.adaptive_density_grid"], [282, "neurotools.stats.density.adaptive_density_grid"]], "gridhist() (in module neurotools.stats.density)": [[85, "neurotools.stats.density.gridhist"], [282, "neurotools.stats.density.gridhist"]], "kdepeak() (in module neurotools.stats.density)": [[85, "neurotools.stats.density.kdepeak"], [282, "neurotools.stats.density.kdepeak"]], "knn_1d_density() (in module neurotools.stats.density)": [[85, "neurotools.stats.density.knn_1d_density"], [282, "neurotools.stats.density.knn_1d_density"]], "neurotools.stats.density": [[85, "module-neurotools.stats.density"], [282, "module-neurotools.stats.density"]], "explogpdf() (in module neurotools.stats.distributions)": [[86, "neurotools.stats.distributions.explogpdf"], [283, "neurotools.stats.distributions.explogpdf"]], "gaussian_logpdf() (in module neurotools.stats.distributions)": [[86, "neurotools.stats.distributions.gaussian_logpdf"], [283, "neurotools.stats.distributions.gaussian_logpdf"]], "gaussian_pdf() (in module neurotools.stats.distributions)": [[86, "neurotools.stats.distributions.gaussian_pdf"], [283, "neurotools.stats.distributions.gaussian_pdf"]], "neurotools.stats.distributions": [[86, "module-neurotools.stats.distributions"], [283, "module-neurotools.stats.distributions"]], "poisson_logpdf() (in module neurotools.stats.distributions)": [[86, "neurotools.stats.distributions.poisson_logpdf"], [283, "neurotools.stats.distributions.poisson_logpdf"]], "poisson_pdf() (in module neurotools.stats.distributions)": [[86, "neurotools.stats.distributions.poisson_pdf"], [283, "neurotools.stats.distributions.poisson_pdf"]], "sample_categorical() (in module neurotools.stats.distributions)": [[86, "neurotools.stats.distributions.sample_categorical"], [283, "neurotools.stats.distributions.sample_categorical"]], "fast_kde() (in module neurotools.stats.fast_kde)": [[87, "neurotools.stats.fast_kde.fast_kde"], [285, "neurotools.stats.fast_kde.fast_kde"]], "image_cov() (in module neurotools.stats.fast_kde)": [[87, "neurotools.stats.fast_kde.image_cov"], [285, "neurotools.stats.fast_kde.image_cov"]], "neurotools.stats.fast_kde": [[87, "module-neurotools.stats.fast_kde"], [285, "module-neurotools.stats.fast_kde"]], "gaussian (class in neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.Gaussian"], [286, "neurotools.stats.gaussian.Gaussian"], [287, "neurotools.stats.gaussian.Gaussian"], [288, "neurotools.stats.gaussian.Gaussian"], [289, "neurotools.stats.gaussian.Gaussian"], [290, "neurotools.stats.gaussian.Gaussian"], [291, "neurotools.stats.gaussian.Gaussian"], [292, "neurotools.stats.gaussian.Gaussian"], [293, "neurotools.stats.gaussian.Gaussian"], [294, "neurotools.stats.gaussian.Gaussian"]], "mvg_dkl() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_DKL"], [286, "neurotools.stats.gaussian.MVG_DKL"], [287, "neurotools.stats.gaussian.MVG_DKL"], [288, "neurotools.stats.gaussian.MVG_DKL"], [289, "neurotools.stats.gaussian.MVG_DKL"], [290, "neurotools.stats.gaussian.MVG_DKL"], [291, "neurotools.stats.gaussian.MVG_DKL"], [292, "neurotools.stats.gaussian.MVG_DKL"], [293, "neurotools.stats.gaussian.MVG_DKL"], [294, "neurotools.stats.gaussian.MVG_DKL"]], "mvg_dkl_cp() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_DKL_CP"], [286, "neurotools.stats.gaussian.MVG_DKL_CP"], [287, "neurotools.stats.gaussian.MVG_DKL_CP"], [288, "neurotools.stats.gaussian.MVG_DKL_CP"], [289, "neurotools.stats.gaussian.MVG_DKL_CP"], [290, "neurotools.stats.gaussian.MVG_DKL_CP"], [291, "neurotools.stats.gaussian.MVG_DKL_CP"], [292, "neurotools.stats.gaussian.MVG_DKL_CP"], [293, "neurotools.stats.gaussian.MVG_DKL_CP"], [294, "neurotools.stats.gaussian.MVG_DKL_CP"]], "mvg_pdf() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_PDF"], [286, "neurotools.stats.gaussian.MVG_PDF"], [287, "neurotools.stats.gaussian.MVG_PDF"], [288, "neurotools.stats.gaussian.MVG_PDF"], [289, "neurotools.stats.gaussian.MVG_PDF"], [290, "neurotools.stats.gaussian.MVG_PDF"], [291, "neurotools.stats.gaussian.MVG_PDF"], [292, "neurotools.stats.gaussian.MVG_PDF"], [293, "neurotools.stats.gaussian.MVG_PDF"], [294, "neurotools.stats.gaussian.MVG_PDF"]], "mvg_check() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_check"], [286, "neurotools.stats.gaussian.MVG_check"], [287, "neurotools.stats.gaussian.MVG_check"], [288, "neurotools.stats.gaussian.MVG_check"], [289, "neurotools.stats.gaussian.MVG_check"], [290, "neurotools.stats.gaussian.MVG_check"], [291, "neurotools.stats.gaussian.MVG_check"], [292, "neurotools.stats.gaussian.MVG_check"], [293, "neurotools.stats.gaussian.MVG_check"], [294, "neurotools.stats.gaussian.MVG_check"]], "mvg_conditional() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_conditional"], [286, "neurotools.stats.gaussian.MVG_conditional"], [287, "neurotools.stats.gaussian.MVG_conditional"], [288, "neurotools.stats.gaussian.MVG_conditional"], [289, "neurotools.stats.gaussian.MVG_conditional"], [290, "neurotools.stats.gaussian.MVG_conditional"], [291, "neurotools.stats.gaussian.MVG_conditional"], [292, "neurotools.stats.gaussian.MVG_conditional"], [293, "neurotools.stats.gaussian.MVG_conditional"], [294, "neurotools.stats.gaussian.MVG_conditional"]], "mvg_divide() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_divide"], [286, "neurotools.stats.gaussian.MVG_divide"], [287, "neurotools.stats.gaussian.MVG_divide"], [288, "neurotools.stats.gaussian.MVG_divide"], [289, "neurotools.stats.gaussian.MVG_divide"], [290, "neurotools.stats.gaussian.MVG_divide"], [291, "neurotools.stats.gaussian.MVG_divide"], [292, "neurotools.stats.gaussian.MVG_divide"], [293, "neurotools.stats.gaussian.MVG_divide"], [294, "neurotools.stats.gaussian.MVG_divide"]], "mvg_entropy() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_entropy"], [286, "neurotools.stats.gaussian.MVG_entropy"], [287, "neurotools.stats.gaussian.MVG_entropy"], [288, "neurotools.stats.gaussian.MVG_entropy"], [289, "neurotools.stats.gaussian.MVG_entropy"], [290, "neurotools.stats.gaussian.MVG_entropy"], [291, "neurotools.stats.gaussian.MVG_entropy"], [292, "neurotools.stats.gaussian.MVG_entropy"], [293, "neurotools.stats.gaussian.MVG_entropy"], [294, "neurotools.stats.gaussian.MVG_entropy"]], "mvg_kalman() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_kalman"], [286, "neurotools.stats.gaussian.MVG_kalman"], [287, "neurotools.stats.gaussian.MVG_kalman"], [288, "neurotools.stats.gaussian.MVG_kalman"], [289, "neurotools.stats.gaussian.MVG_kalman"], [290, "neurotools.stats.gaussian.MVG_kalman"], [291, "neurotools.stats.gaussian.MVG_kalman"], [292, "neurotools.stats.gaussian.MVG_kalman"], [293, "neurotools.stats.gaussian.MVG_kalman"], [294, "neurotools.stats.gaussian.MVG_kalman"]], "mvg_kalman_p_inversea() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [286, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [287, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [288, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [289, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [290, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [291, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [292, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [293, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [294, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"]], "mvg_kalman_joint() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_kalman_joint"], [286, "neurotools.stats.gaussian.MVG_kalman_joint"], [287, "neurotools.stats.gaussian.MVG_kalman_joint"], [288, "neurotools.stats.gaussian.MVG_kalman_joint"], [289, "neurotools.stats.gaussian.MVG_kalman_joint"], [290, "neurotools.stats.gaussian.MVG_kalman_joint"], [291, "neurotools.stats.gaussian.MVG_kalman_joint"], [292, "neurotools.stats.gaussian.MVG_kalman_joint"], [293, "neurotools.stats.gaussian.MVG_kalman_joint"], [294, "neurotools.stats.gaussian.MVG_kalman_joint"]], "mvg_kalman_joint_p() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [286, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [287, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [288, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [289, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [290, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [291, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [292, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [293, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [294, "neurotools.stats.gaussian.MVG_kalman_joint_P"]], "mvg_logpdf() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_logPDF"], [286, "neurotools.stats.gaussian.MVG_logPDF"], [287, "neurotools.stats.gaussian.MVG_logPDF"], [288, "neurotools.stats.gaussian.MVG_logPDF"], [289, "neurotools.stats.gaussian.MVG_logPDF"], [290, "neurotools.stats.gaussian.MVG_logPDF"], [291, "neurotools.stats.gaussian.MVG_logPDF"], [292, "neurotools.stats.gaussian.MVG_logPDF"], [293, "neurotools.stats.gaussian.MVG_logPDF"], [294, "neurotools.stats.gaussian.MVG_logPDF"]], "mvg_multiply() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_multiply"], [286, "neurotools.stats.gaussian.MVG_multiply"], [287, "neurotools.stats.gaussian.MVG_multiply"], [288, "neurotools.stats.gaussian.MVG_multiply"], [289, "neurotools.stats.gaussian.MVG_multiply"], [290, "neurotools.stats.gaussian.MVG_multiply"], [291, "neurotools.stats.gaussian.MVG_multiply"], [292, "neurotools.stats.gaussian.MVG_multiply"], [293, "neurotools.stats.gaussian.MVG_multiply"], [294, "neurotools.stats.gaussian.MVG_multiply"]], "mvg_multiply_c() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_multiply_C"], [286, "neurotools.stats.gaussian.MVG_multiply_C"], [287, "neurotools.stats.gaussian.MVG_multiply_C"], [288, "neurotools.stats.gaussian.MVG_multiply_C"], [289, "neurotools.stats.gaussian.MVG_multiply_C"], [290, "neurotools.stats.gaussian.MVG_multiply_C"], [291, "neurotools.stats.gaussian.MVG_multiply_C"], [292, "neurotools.stats.gaussian.MVG_multiply_C"], [293, "neurotools.stats.gaussian.MVG_multiply_C"], [294, "neurotools.stats.gaussian.MVG_multiply_C"]], "mvg_projection() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_projection"], [286, "neurotools.stats.gaussian.MVG_projection"], [287, "neurotools.stats.gaussian.MVG_projection"], [288, "neurotools.stats.gaussian.MVG_projection"], [289, "neurotools.stats.gaussian.MVG_projection"], [290, "neurotools.stats.gaussian.MVG_projection"], [291, "neurotools.stats.gaussian.MVG_projection"], [292, "neurotools.stats.gaussian.MVG_projection"], [293, "neurotools.stats.gaussian.MVG_projection"], [294, "neurotools.stats.gaussian.MVG_projection"]], "mvg_sample() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.MVG_sample"], [286, "neurotools.stats.gaussian.MVG_sample"], [287, "neurotools.stats.gaussian.MVG_sample"], [288, "neurotools.stats.gaussian.MVG_sample"], [289, "neurotools.stats.gaussian.MVG_sample"], [290, "neurotools.stats.gaussian.MVG_sample"], [291, "neurotools.stats.gaussian.MVG_sample"], [292, "neurotools.stats.gaussian.MVG_sample"], [293, "neurotools.stats.gaussian.MVG_sample"], [294, "neurotools.stats.gaussian.MVG_sample"]], "gaussian_quadrature() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.gaussian_quadrature"], [286, "neurotools.stats.gaussian.gaussian_quadrature"], [287, "neurotools.stats.gaussian.gaussian_quadrature"], [288, "neurotools.stats.gaussian.gaussian_quadrature"], [289, "neurotools.stats.gaussian.gaussian_quadrature"], [290, "neurotools.stats.gaussian.gaussian_quadrature"], [291, "neurotools.stats.gaussian.gaussian_quadrature"], [292, "neurotools.stats.gaussian.gaussian_quadrature"], [293, "neurotools.stats.gaussian.gaussian_quadrature"], [294, "neurotools.stats.gaussian.gaussian_quadrature"]], "gaussian_quadrature_logarithmic() (in module neurotools.stats.gaussian)": [[88, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [286, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [287, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [288, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [289, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [290, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [291, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [292, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [293, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [294, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"]], "logpdf() (neurotools.stats.gaussian.gaussian method)": [[88, "neurotools.stats.gaussian.Gaussian.logpdf"], [286, "neurotools.stats.gaussian.Gaussian.logpdf"], [287, "neurotools.stats.gaussian.Gaussian.logpdf"], [288, "neurotools.stats.gaussian.Gaussian.logpdf"], [289, "neurotools.stats.gaussian.Gaussian.logpdf"], [290, "neurotools.stats.gaussian.Gaussian.logpdf"], [291, "neurotools.stats.gaussian.Gaussian.logpdf"], [292, "neurotools.stats.gaussian.Gaussian.logpdf"], [293, "neurotools.stats.gaussian.Gaussian.logpdf"], [294, "neurotools.stats.gaussian.Gaussian.logpdf"]], "m (neurotools.stats.gaussian.gaussian attribute)": [[88, "neurotools.stats.gaussian.Gaussian.m"], [286, "neurotools.stats.gaussian.Gaussian.m"], [287, "neurotools.stats.gaussian.Gaussian.m"], [288, "neurotools.stats.gaussian.Gaussian.m"], [289, "neurotools.stats.gaussian.Gaussian.m"], [290, "neurotools.stats.gaussian.Gaussian.m"], [291, "neurotools.stats.gaussian.Gaussian.m"], [292, "neurotools.stats.gaussian.Gaussian.m"], [293, "neurotools.stats.gaussian.Gaussian.m"], [294, "neurotools.stats.gaussian.Gaussian.m"]], "neurotools.stats.gaussian": [[88, "module-neurotools.stats.gaussian"], [286, "module-neurotools.stats.gaussian"], [287, "module-neurotools.stats.gaussian"], [288, "module-neurotools.stats.gaussian"], [289, "module-neurotools.stats.gaussian"], [290, "module-neurotools.stats.gaussian"], [291, "module-neurotools.stats.gaussian"], [292, "module-neurotools.stats.gaussian"], [293, "module-neurotools.stats.gaussian"], [294, "module-neurotools.stats.gaussian"]], "t (neurotools.stats.gaussian.gaussian attribute)": [[88, "neurotools.stats.gaussian.Gaussian.t"], [286, "neurotools.stats.gaussian.Gaussian.t"], [287, "neurotools.stats.gaussian.Gaussian.t"], [288, "neurotools.stats.gaussian.Gaussian.t"], [289, "neurotools.stats.gaussian.Gaussian.t"], [290, "neurotools.stats.gaussian.Gaussian.t"], [291, "neurotools.stats.gaussian.Gaussian.t"], [292, "neurotools.stats.gaussian.Gaussian.t"], [293, "neurotools.stats.gaussian.Gaussian.t"], [294, "neurotools.stats.gaussian.Gaussian.t"]], "glmpenaltybernoulli() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.GLMPenaltyBernoulli"], [295, "neurotools.stats.glm.GLMPenaltyBernoulli"]], "glmpenaltyl2() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.GLMPenaltyL2"], [295, "neurotools.stats.glm.GLMPenaltyL2"]], "glmpenaltypoisson() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.GLMPenaltyPoisson"], [295, "neurotools.stats.glm.GLMPenaltyPoisson"]], "cosine_kernel() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.cosine_kernel"], [295, "neurotools.stats.glm.cosine_kernel"]], "crossvalidatedauc() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.crossvalidatedAUC"], [295, "neurotools.stats.glm.crossvalidatedAUC"]], "fitglm() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.fitGLM"], [295, "neurotools.stats.glm.fitGLM"]], "gradientglmfit() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.gradientglmfit"], [295, "neurotools.stats.glm.gradientglmfit"]], "log_cosine_basis() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.log_cosine_basis"], [295, "neurotools.stats.glm.log_cosine_basis"]], "make_cosine_basis() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.make_cosine_basis"], [295, "neurotools.stats.glm.make_cosine_basis"]], "neurotools.stats.glm": [[89, "module-neurotools.stats.glm"], [295, "module-neurotools.stats.glm"]], "numeric_grad() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.numeric_grad"], [295, "neurotools.stats.glm.numeric_grad"]], "numeric_hess() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.numeric_hess"], [295, "neurotools.stats.glm.numeric_hess"]], "ppglmfit() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.ppglmfit"], [295, "neurotools.stats.glm.ppglmfit"]], "sexp() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.sexp"], [295, "neurotools.stats.glm.sexp"]], "sigmoid() (in module neurotools.stats.glm)": [[89, "neurotools.stats.glm.sigmoid"], [295, "neurotools.stats.glm.sigmoid"]], "grid_search() (in module neurotools.stats.grid_search)": [[90, "neurotools.stats.grid_search.grid_search"], [297, "neurotools.stats.grid_search.grid_search"]], "neurotools.stats.grid_search": [[90, "module-neurotools.stats.grid_search"], [297, "module-neurotools.stats.grid_search"]], "bernoulliobservationapproximator (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.BernoulliObservationApproximator"], [299, "neurotools.stats.hmm.BernoulliObservationApproximator"]], "bernoulliobservationmodel (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.BernoulliObservationModel"], [299, "neurotools.stats.hmm.BernoulliObservationModel"]], "chisquarecoxapproximator (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.ChisquareCoxApproximator"], [299, "neurotools.stats.hmm.ChisquareCoxApproximator"]], "chisquarecoxmodel (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.ChisquareCoxModel"], [299, "neurotools.stats.hmm.ChisquareCoxModel"]], "diffusiongaussian (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.DiffusionGaussian"], [299, "neurotools.stats.hmm.DiffusionGaussian"]], "gaussiancoxapproximator (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.GaussianCoxApproximator"], [299, "neurotools.stats.hmm.GaussianCoxApproximator"]], "gaussiancoxmodel (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.GaussianCoxModel"], [299, "neurotools.stats.hmm.GaussianCoxModel"]], "loggaussiancoxapproximator (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.LogGaussianCoxApproximator"], [299, "neurotools.stats.hmm.LogGaussianCoxApproximator"]], "loggaussiancoxmodel (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.LogGaussianCoxModel"], [299, "neurotools.stats.hmm.LogGaussianCoxModel"]], "mvgouupdate (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.MVGOUUpdate"], [299, "neurotools.stats.hmm.MVGOUUpdate"]], "mvgupdate (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.MVGUpdate"], [299, "neurotools.stats.hmm.MVGUpdate"]], "mvgaussian (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.MVGaussian"], [299, "neurotools.stats.hmm.MVGaussian"]], "mvloggaussiancox (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.MVLogGaussianCox"], [299, "neurotools.stats.hmm.MVLogGaussianCox"]], "mvloggaussiancox.mvpoissonapproximator (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.MVLogGaussianCox.MVPoissonApproximator"], [299, "neurotools.stats.hmm.MVLogGaussianCox.MVPoissonApproximator"]], "ougaussian (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.OUGaussian"], [299, "neurotools.stats.hmm.OUGaussian"]], "poissonobservationapproximator (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.PoissonObservationApproximator"], [299, "neurotools.stats.hmm.PoissonObservationApproximator"]], "poissonobservationmodel (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.PoissonObservationModel"], [299, "neurotools.stats.hmm.PoissonObservationModel"]], "truncatedloggaussiancoxapproximator (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.TruncatedLogGaussianCoxApproximator"], [299, "neurotools.stats.hmm.TruncatedLogGaussianCoxApproximator"]], "truncatedloggaussiancoxmodel (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.TruncatedLogGaussianCoxModel"], [299, "neurotools.stats.hmm.TruncatedLogGaussianCoxModel"]], "truncatedpoissonobservationapproximator (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.TruncatedPoissonObservationApproximator"], [299, "neurotools.stats.hmm.TruncatedPoissonObservationApproximator"]], "truncatedpoissonobservationmodel (class in neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.TruncatedPoissonObservationModel"], [299, "neurotools.stats.hmm.TruncatedPoissonObservationModel"]], "backward_abstract() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.backward_abstract"], [299, "neurotools.stats.hmm.backward_abstract"]], "baum_welch() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.baum_welch"], [299, "neurotools.stats.hmm.baum_welch"]], "bwd() (neurotools.stats.hmm.diffusiongaussian method)": [[91, "neurotools.stats.hmm.DiffusionGaussian.bwd"], [299, "neurotools.stats.hmm.DiffusionGaussian.bwd"]], "bwd() (neurotools.stats.hmm.mvgouupdate method)": [[91, "neurotools.stats.hmm.MVGOUUpdate.bwd"], [299, "neurotools.stats.hmm.MVGOUUpdate.bwd"]], "bwd() (neurotools.stats.hmm.mvgupdate method)": [[91, "neurotools.stats.hmm.MVGUpdate.bwd"], [299, "neurotools.stats.hmm.MVGUpdate.bwd"]], "bwd() (neurotools.stats.hmm.ougaussian method)": [[91, "neurotools.stats.hmm.OUGaussian.bwd"], [299, "neurotools.stats.hmm.OUGaussian.bwd"]], "forward_abstract() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.forward_abstract"], [299, "neurotools.stats.hmm.forward_abstract"]], "forward_backward() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.forward_backward"], [299, "neurotools.stats.hmm.forward_backward"]], "forward_backward_abstract() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.forward_backward_abstract"], [299, "neurotools.stats.hmm.forward_backward_abstract"]], "fwd() (neurotools.stats.hmm.diffusiongaussian method)": [[91, "neurotools.stats.hmm.DiffusionGaussian.fwd"], [299, "neurotools.stats.hmm.DiffusionGaussian.fwd"]], "fwd() (neurotools.stats.hmm.mvgouupdate method)": [[91, "neurotools.stats.hmm.MVGOUUpdate.fwd"], [299, "neurotools.stats.hmm.MVGOUUpdate.fwd"]], "fwd() (neurotools.stats.hmm.mvgupdate method)": [[91, "neurotools.stats.hmm.MVGUpdate.fwd"], [299, "neurotools.stats.hmm.MVGUpdate.fwd"]], "fwd() (neurotools.stats.hmm.ougaussian method)": [[91, "neurotools.stats.hmm.OUGaussian.fwd"], [299, "neurotools.stats.hmm.OUGaussian.fwd"]], "hasnan() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.hasNaN"], [299, "neurotools.stats.hmm.hasNaN"]], "jump() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.jump"], [299, "neurotools.stats.hmm.jump"]], "lgcp_observation_minimizer() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.lgcp_observation_minimizer"], [299, "neurotools.stats.hmm.lgcp_observation_minimizer"]], "log_likelihood() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.log_likelihood"], [299, "neurotools.stats.hmm.log_likelihood"]], "neurotools.stats.hmm": [[91, "module-neurotools.stats.hmm"], [299, "module-neurotools.stats.hmm"]], "poisson_baum_welch() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.poisson_baum_welch"], [299, "neurotools.stats.hmm.poisson_baum_welch"]], "poisson_parameter_guess() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.poisson_parameter_guess"], [299, "neurotools.stats.hmm.poisson_parameter_guess"]], "poisson_viterbi_state_infer() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.poisson_viterbi_state_infer"], [299, "neurotools.stats.hmm.poisson_viterbi_state_infer"]], "sample() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.sample"], [299, "neurotools.stats.hmm.sample"]], "viterbi() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.viterbi"], [299, "neurotools.stats.hmm.viterbi"]], "viterbi_log() (in module neurotools.stats.hmm)": [[91, "neurotools.stats.hmm.viterbi_log"], [299, "neurotools.stats.hmm.viterbi_log"]], "dkl_discrete() (in module neurotools.stats.information)": [[92, "neurotools.stats.information.DKL_discrete"], [300, "neurotools.stats.information.DKL_discrete"]], "discrete_entropy_distribution() (in module neurotools.stats.information)": [[92, "neurotools.stats.information.discrete_entropy_distribution"], [300, "neurotools.stats.information.discrete_entropy_distribution"]], "discrete_entropy_samples() (in module neurotools.stats.information)": [[92, "neurotools.stats.information.discrete_entropy_samples"], [300, "neurotools.stats.information.discrete_entropy_samples"]], "neurotools.stats.information": [[92, "module-neurotools.stats.information"], [300, "module-neurotools.stats.information"]], "poisson_entropy_nats() (in module neurotools.stats.information)": [[92, "neurotools.stats.information.poisson_entropy_nats"], [300, "neurotools.stats.information.poisson_entropy_nats"]], "regularized_discrete_entropy() (in module neurotools.stats.information)": [[92, "neurotools.stats.information.regularized_discrete_entropy"], [300, "neurotools.stats.information.regularized_discrete_entropy"]], "monte_carlo_expectation() (in module neurotools.stats.mcint)": [[93, "neurotools.stats.mcint.monte_carlo_expectation"], [304, "neurotools.stats.mcint.monte_carlo_expectation"]], "monte_carlo_moments() (in module neurotools.stats.mcint)": [[93, "neurotools.stats.mcint.monte_carlo_moments"], [304, "neurotools.stats.mcint.monte_carlo_moments"]], "neurotools.stats.mcint": [[93, "module-neurotools.stats.mcint"], [304, "module-neurotools.stats.mcint"]], "failureerror": [[94, "neurotools.stats.minimize.FailureError"], [305, "neurotools.stats.minimize.FailureError"], [369, "stats.minimize.FailureError"]], "minimize_retry() (in module neurotools.stats.minimize)": [[94, "neurotools.stats.minimize.minimize_retry"], [305, "neurotools.stats.minimize.minimize_retry"]], "neurotools.stats.minimize": [[94, "module-neurotools.stats.minimize"], [305, "module-neurotools.stats.minimize"]], "neurotools.stats.mixtures": [[95, "module-neurotools.stats.mixtures"], [306, "module-neurotools.stats.mixtures"]], "two_class_poisson_mixture_model() (in module neurotools.stats.mixtures)": [[95, "neurotools.stats.mixtures.two_class_poisson_mixture_model"], [306, "neurotools.stats.mixtures.two_class_poisson_mixture_model"]], "logmode() (in module neurotools.stats.modefind)": [[96, "neurotools.stats.modefind.logmode"], [307, "neurotools.stats.modefind.logmode"]], "logmodeplot() (in module neurotools.stats.modefind)": [[96, "neurotools.stats.modefind.logmodeplot"], [307, "neurotools.stats.modefind.logmodeplot"]], "modefind() (in module neurotools.stats.modefind)": [[96, "neurotools.stats.modefind.modefind"], [307, "neurotools.stats.modefind.modefind"]], "neurotools.stats.modefind": [[96, "module-neurotools.stats.modefind"], [307, "module-neurotools.stats.modefind"]], "peakfinder5() (in module neurotools.stats.modefind)": [[96, "neurotools.stats.modefind.peakfinder5"], [307, "neurotools.stats.modefind.peakfinder5"]], "benjamini_hochberg_positive_correlations() (in module neurotools.stats.pvalues)": [[97, "neurotools.stats.pvalues.benjamini_hochberg_positive_correlations"], [309, "neurotools.stats.pvalues.benjamini_hochberg_positive_correlations"]], "bootstrap_compare_mean() (in module neurotools.stats.pvalues)": [[97, "neurotools.stats.pvalues.bootstrap_compare_mean"], [309, "neurotools.stats.pvalues.bootstrap_compare_mean"]], "bootstrap_compare_median() (in module neurotools.stats.pvalues)": [[97, "neurotools.stats.pvalues.bootstrap_compare_median"], [309, "neurotools.stats.pvalues.bootstrap_compare_median"]], "bootstrap_compare_statistic_two_sided() (in module neurotools.stats.pvalues)": [[97, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided"], [309, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided"]], "bootstrap_compare_statistic_two_sided_parallel() (in module neurotools.stats.pvalues)": [[97, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided_parallel"], [309, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided_parallel"]], "bootstrap_mean() (in module neurotools.stats.pvalues)": [[97, "neurotools.stats.pvalues.bootstrap_mean"], [309, "neurotools.stats.pvalues.bootstrap_mean"]], "bootstrap_median() (in module neurotools.stats.pvalues)": [[97, "neurotools.stats.pvalues.bootstrap_median"], [309, "neurotools.stats.pvalues.bootstrap_median"]], "bootstrap_statistic_two_sided() (in module neurotools.stats.pvalues)": [[97, "neurotools.stats.pvalues.bootstrap_statistic_two_sided"], [309, "neurotools.stats.pvalues.bootstrap_statistic_two_sided"]], "correct_pvalues() (in module neurotools.stats.pvalues)": [[97, "neurotools.stats.pvalues.correct_pvalues"], [309, "neurotools.stats.pvalues.correct_pvalues"]], "correct_pvalues_positive_dependent() (in module neurotools.stats.pvalues)": [[97, "neurotools.stats.pvalues.correct_pvalues_positive_dependent"], [309, "neurotools.stats.pvalues.correct_pvalues_positive_dependent"]], "neurotools.stats.pvalues": [[97, "module-neurotools.stats.pvalues"], [309, "module-neurotools.stats.pvalues"]], "damped_cosine() (in module neurotools.stats.regressions)": [[98, "neurotools.stats.regressions.damped_cosine"], [310, "neurotools.stats.regressions.damped_cosine"]], "exponential_decay() (in module neurotools.stats.regressions)": [[98, "neurotools.stats.regressions.exponential_decay"], [310, "neurotools.stats.regressions.exponential_decay"]], "gaussian_function() (in module neurotools.stats.regressions)": [[98, "neurotools.stats.regressions.gaussian_function"], [310, "neurotools.stats.regressions.gaussian_function"]], "half_gaussian_function() (in module neurotools.stats.regressions)": [[98, "neurotools.stats.regressions.half_gaussian_function"], [310, "neurotools.stats.regressions.half_gaussian_function"]], "neurotools.stats.regressions": [[98, "module-neurotools.stats.regressions"], [310, "module-neurotools.stats.regressions"]], "power_law() (in module neurotools.stats.regressions)": [[98, "neurotools.stats.regressions.power_law"], [310, "neurotools.stats.regressions.power_law"]], "robust_line() (in module neurotools.stats.regressions)": [[98, "neurotools.stats.regressions.robust_line"], [310, "neurotools.stats.regressions.robust_line"]], "weighted_least_squares() (in module neurotools.stats.regressions)": [[98, "neurotools.stats.regressions.weighted_least_squares"], [310, "neurotools.stats.regressions.weighted_least_squares"]], "neurotools.util": [[99, "module-neurotools.util"], [317, "module-neurotools.util"]], "dsigmoid() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.dsigmoid"], [319, "neurotools.util.functions.dsigmoid"]], "f() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.f"], [319, "neurotools.util.functions.f"]], "f1() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.f1"], [319, "neurotools.util.functions.f1"]], "f2() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.f2"], [319, "neurotools.util.functions.f2"]], "g() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.g"], [319, "neurotools.util.functions.g"]], "inversesigmoid() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.inversesigmoid"], [319, "neurotools.util.functions.inversesigmoid"]], "log_factorial() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.log_factorial"], [319, "neurotools.util.functions.log_factorial"]], "neurotools.util.functions": [[101, "module-neurotools.util.functions"], [319, "module-neurotools.util.functions"]], "npdf() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.npdf"], [319, "neurotools.util.functions.npdf"]], "sexp() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.sexp"], [319, "neurotools.util.functions.sexp"]], "sigmoid() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.sigmoid"], [319, "neurotools.util.functions.sigmoid"]], "slog() (in module neurotools.util.functions)": [[101, "neurotools.util.functions.slog"], [319, "neurotools.util.functions.slog"]], "ftwthr() (in module neurotools.util.getfftw)": [[102, "neurotools.util.getfftw.ftwthr"], [320, "neurotools.util.getfftw.ftwthr"]], "neurotools.util.getfftw": [[102, "module-neurotools.util.getfftw"], [320, "module-neurotools.util.getfftw"]], "gethdf() (in module neurotools.util.hdfmat)": [[103, "neurotools.util.hdfmat.getHDF"], [321, "neurotools.util.hdfmat.getHDF"]], "gethdfvalue() (in module neurotools.util.hdfmat)": [[103, "neurotools.util.hdfmat.getHDFvalue"], [321, "neurotools.util.hdfmat.getHDFvalue"]], "hdf2dict() (in module neurotools.util.hdfmat)": [[103, "neurotools.util.hdfmat.hdf2dict"], [321, "neurotools.util.hdfmat.hdf2dict"]], "neurotools.util.hdfmat": [[103, "module-neurotools.util.hdfmat"], [321, "module-neurotools.util.hdfmat"]], "printmathdf5() (in module neurotools.util.hdfmat)": [[103, "neurotools.util.hdfmat.printmatHDF5"], [321, "neurotools.util.hdfmat.printmatHDF5"]], "recursive_printmathdf5() (in module neurotools.util.hdfmat)": [[103, "neurotools.util.hdfmat.recursive_printmatHDF5"], [321, "neurotools.util.hdfmat.recursive_printmatHDF5"]], "eformat() (in module neurotools.util.string)": [[104, "neurotools.util.string.eformat"], [322, "neurotools.util.string.eformat"]], "hcat() (in module neurotools.util.string)": [[104, "neurotools.util.string.hcat"], [322, "neurotools.util.string.hcat"]], "incolumns() (in module neurotools.util.string)": [[104, "neurotools.util.string.incolumns"], [322, "neurotools.util.string.incolumns"]], "isint() (in module neurotools.util.string)": [[104, "neurotools.util.string.isInt"], [322, "neurotools.util.string.isInt"]], "neurotools.util.string": [[104, "module-neurotools.util.string"], [322, "module-neurotools.util.string"]], "nicetable() (in module neurotools.util.string)": [[104, "neurotools.util.string.nicetable"], [322, "neurotools.util.string.nicetable"]], "percent() (in module neurotools.util.string)": [[104, "neurotools.util.string.percent"], [322, "neurotools.util.string.percent"]], "shortscientific() (in module neurotools.util.string)": [[104, "neurotools.util.string.shortscientific"], [322, "neurotools.util.string.shortscientific"]], "v2str() (in module neurotools.util.string)": [[104, "neurotools.util.string.v2str"], [322, "neurotools.util.string.v2str"]], "v2str_long() (in module neurotools.util.string)": [[104, "neurotools.util.string.v2str_long"], [322, "neurotools.util.string.v2str_long"]], "wordwrap() (in module neurotools.util.string)": [[104, "neurotools.util.string.wordwrap"], [322, "neurotools.util.string.wordwrap"]], "execfile() (in module neurotools.util.system)": [[105, "neurotools.util.system.execfile"], [323, "neurotools.util.system.execfile"]], "neurotools.util.system": [[105, "module-neurotools.util.system"], [323, "module-neurotools.util.system"]], "query_yes_no() (in module neurotools.util.system)": [[105, "neurotools.util.system.query_yes_no"], [323, "neurotools.util.system.query_yes_no"]], "current_milli_time() (in module neurotools.util.time)": [[106, "neurotools.util.time.current_milli_time"], [324, "neurotools.util.time.current_milli_time"]], "neurotools.util.time": [[106, "module-neurotools.util.time"], [324, "module-neurotools.util.time"]], "now() (in module neurotools.util.time)": [[106, "neurotools.util.time.now"], [324, "neurotools.util.time.now"]], "tic() (in module neurotools.util.time)": [[106, "neurotools.util.time.tic"], [324, "neurotools.util.time.tic"]], "toc() (in module neurotools.util.time)": [[106, "neurotools.util.time.toc"], [324, "neurotools.util.time.toc"]], "today() (in module neurotools.util.time)": [[106, "neurotools.util.time.today"], [324, "neurotools.util.time.today"]], "waitfor() (in module neurotools.util.time)": [[106, "neurotools.util.time.waitfor"], [324, "neurotools.util.time.waitfor"]], "aap() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.aap"], [325, "neurotools.util.tools.aap"]], "add() (neurotools.util.tools.stuff method)": [[107, "neurotools.util.tools.stuff.add"], [325, "neurotools.util.tools.stuff.add"]], "amap() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.amap"], [325, "neurotools.util.tools.amap"]], "arraymap() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.arraymap"], [325, "neurotools.util.tools.arraymap"]], "asiterable() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.asiterable"], [325, "neurotools.util.tools.asiterable"]], "c2p() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.c2p"], [325, "neurotools.util.tools.c2p"]], "camel2underscore() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.camel2underscore"], [325, "neurotools.util.tools.camel2underscore"]], "clear() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.clear"], [325, "neurotools.util.tools.clear"]], "debug() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.debug"], [325, "neurotools.util.tools.debug"]], "dowarn() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.dowarn"], [325, "neurotools.util.tools.dowarn"]], "emitter (class in neurotools.util.tools)": [[107, "neurotools.util.tools.emitter"], [325, "neurotools.util.tools.emitter"]], "ensure_dir() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.ensure_dir"], [325, "neurotools.util.tools.ensure_dir"]], "exists() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.exists"], [325, "neurotools.util.tools.exists"]], "ezip() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.ezip"], [325, "neurotools.util.tools.ezip"]], "find() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.find"], [325, "neurotools.util.tools.find"]], "find_all_extension() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.find_all_extension"], [325, "neurotools.util.tools.find_all_extension"]], "getvariable() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.getVariable"], [325, "neurotools.util.tools.getVariable"]], "getdict() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.getdict"], [325, "neurotools.util.tools.getdict"]], "getsize() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.getsize"], [325, "neurotools.util.tools.getsize"]], "globalize() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.globalize"], [325, "neurotools.util.tools.globalize"]], "history() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.history"], [325, "neurotools.util.tools.history"]], "invert_permutation() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.invert_permutation"], [325, "neurotools.util.tools.invert_permutation"]], "lap() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.lap"], [325, "neurotools.util.tools.lap"]], "lmap() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.lmap"], [325, "neurotools.util.tools.lmap"]], "mapdict() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.mapdict"], [325, "neurotools.util.tools.mapdict"]], "matlab() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.matlab"], [325, "neurotools.util.tools.matlab"]], "metaloadmat() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.metaloadmat"], [325, "neurotools.util.tools.metaloadmat"]], "neurotools.util.tools": [[107, "module-neurotools.util.tools"], [325, "module-neurotools.util.tools"]], "nowarn() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.nowarn"], [325, "neurotools.util.tools.nowarn"]], "okwarn() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.okwarn"], [325, "neurotools.util.tools.okwarn"]], "oneslike() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.oneslike"], [325, "neurotools.util.tools.oneslike"]], "p2c() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.p2c"], [325, "neurotools.util.tools.p2c"]], "piper (class in neurotools.util.tools)": [[107, "neurotools.util.tools.piper"], [325, "neurotools.util.tools.piper"]], "restorecontext() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.restoreContext"], [325, "neurotools.util.tools.restoreContext"]], "savecontext() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.saveContext"], [325, "neurotools.util.tools.saveContext"]], "setinrange() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.setinrange"], [325, "neurotools.util.tools.setinrange"]], "slist() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.slist"], [325, "neurotools.util.tools.slist"]], "sls() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.sls"], [325, "neurotools.util.tools.sls"]], "stuff (class in neurotools.util.tools)": [[107, "neurotools.util.tools.stuff"], [325, "neurotools.util.tools.stuff"]], "underscore2camel() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.underscore2camel"], [325, "neurotools.util.tools.underscore2camel"]], "varexists() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.varexists"], [325, "neurotools.util.tools.varexists"]], "wait() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.wait"], [325, "neurotools.util.tools.wait"]], "warn() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.warn"], [325, "neurotools.util.tools.warn"]], "zeroslike() (in module neurotools.util.tools)": [[107, "neurotools.util.tools.zeroslike"], [325, "neurotools.util.tools.zeroslike"]], "dsigmoid() (in module functions)": [[108, "functions.dsigmoid"]], "f() (in module functions)": [[108, "functions.f"]], "f1() (in module functions)": [[108, "functions.f1"]], "f2() (in module functions)": [[108, "functions.f2"]], "functions": [[108, "module-functions"]], "g() (in module functions)": [[108, "functions.g"]], "inversesigmoid() (in module functions)": [[108, "functions.inversesigmoid"]], "log_factorial() (in module functions)": [[108, "functions.log_factorial"]], "npdf() (in module functions)": [[108, "functions.npdf"]], "sexp() (in module functions)": [[108, "functions.sexp"]], "sigmoid() (in module functions)": [[108, "functions.sigmoid"]], "slog() (in module functions)": [[108, "functions.slog"]], "ftwthr() (in module getfftw)": [[109, "getfftw.ftwthr"]], "getfftw": [[109, "module-getfftw"]], "gpu": [[110, "module-gpu"]], "gpu.cl": [[111, "module-gpu.cl"]], "missing() (in module gpu.cl)": [[111, "gpu.cl.missing"]], "gpu.cpu": [[115, "module-gpu.cpu"]], "cmap() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.cmap"]], "compose() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.compose"]], "corr() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.corr"]], "cov() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.cov"]], "cut() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.cut"]], "document() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.document"]], "dot() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.dot"]], "elem() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.elem"]], "fancy() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.fancy"]], "flat() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.flat"]], "gpu.cpu.util": [[116, "module-gpu.cpu.util"]], "idivup() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.idivup"]], "ldif() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.ldif"]], "ldif2() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.ldif2"]], "ldiv() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.ldiv"]], "ldiv2() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.ldiv2"]], "length() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.length"]], "lmul() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.lmul"]], "lmul2() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.lmul2"]], "lpow() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.lpow"]], "lpow2() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.lpow2"]], "lsum() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.lsum"]], "lsum2() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.lsum2"]], "mdif() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.mdif"]], "mdiv() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.mdiv"]], "mean() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.mean"]], "mmap() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.mmap"]], "mmean() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.mmean"]], "mmul() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.mmul"]], "mpow() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.mpow"]], "mstd() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.mstd"]], "msum() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.msum"]], "mu() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.mu"]], "mvar() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.mvar"]], "norm() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.norm"]], "rnorm() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.rnorm"]], "scale() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.scale"]], "sem() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.sem"]], "shift() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.shift"]], "sigma() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.sigma"]], "sstd() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.sstd"]], "std() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.std"]], "svar() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.svar"]], "var() (in module gpu.cpu.util)": [[116, "gpu.cpu.util.var"]], "gpu.cu": [[117, "module-gpu.cu"]], "gpu.cu.convolution": [[118, "module-gpu.cu.convolution"]], "gpuboxconv() (in module gpu.cu.convolution)": [[118, "gpu.cu.convolution.gpuboxconv"]], "gpuboxconv_core() (in module gpu.cu.convolution)": [[118, "gpu.cu.convolution.gpuboxconv_core"]], "card_info() (in module gpu.cu.device)": [[119, "gpu.cu.device.card_info"]], "estimateblocks() (in module gpu.cu.device)": [[119, "gpu.cu.device.estimateBlocks"]], "estimateloop() (in module gpu.cu.device)": [[119, "gpu.cu.device.estimateLoop"]], "estimatethreadsperblock() (in module gpu.cu.device)": [[119, "gpu.cu.device.estimateThreadsPerBlock"]], "gpu.cu.device": [[119, "module-gpu.cu.device"]], "missing() (in module gpu.cu.device)": [[119, "gpu.cu.device.missing"]], "cpu() (in module gpu.cu.function)": [[120, "gpu.cu.function.cpu"]], "expsub() (in module gpu.cu.function)": [[120, "gpu.cu.function.expsub"]], "ezkern() (in module gpu.cu.function)": [[120, "gpu.cu.function.ezkern"]], "format() (in module gpu.cu.function)": [[120, "gpu.cu.function.format"]], "gpu.cu.function": [[120, "module-gpu.cu.function"]], "gpubin() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpubin"]], "gpubinaryeq() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpubinaryeq"]], "gpufloat() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpufloat"]], "gpufloatmat() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpufloatmat"]], "gpufloatred() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpufloatred"]], "gpuint() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpuint"]], "gpuintmap() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpuintmap"]], "gpuintmat() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpuintmat"]], "gpuintred() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpuintred"]], "gpumap() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpumap"]], "gpumapeq() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpumapeq"]], "gpupointer() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpupointer"]], "gpuscalar() (in module gpu.cu.function)": [[120, "gpu.cu.function.gpuscalar"]], "guessgputype() (in module gpu.cu.function)": [[120, "gpu.cu.function.guessGPUType"]], "kernel() (in module gpu.cu.function)": [[120, "gpu.cu.function.kernel"]], "printkernel() (in module gpu.cu.function)": [[120, "gpu.cu.function.printKernel"]], "togputype() (in module gpu.cu.function)": [[120, "gpu.cu.function.toGPUType"]], "gpu.cu.gpufun": [[121, "module-gpu.cu.gpufun"]], "gpuhill() (in module gpu.cu.gpufun)": [[121, "gpu.cu.gpufun.gpuhill"]], "gpulcomb() (in module gpu.cu.gpufun)": [[121, "gpu.cu.gpufun.gpulcomb"]], "gpulogpdf() (in module gpu.cu.gpufun)": [[121, "gpu.cu.gpufun.gpulogpdf"]], "gpumean() (in module gpu.cu.gpufun)": [[121, "gpu.cu.gpufun.gpumean"]], "gpunpdf() (in module gpu.cu.gpufun)": [[121, "gpu.cu.gpufun.gpunpdf"]], "gpurandexp() (in module gpu.cu.gpufun)": [[121, "gpu.cu.gpufun.gpurandexp"]], "gpurandf() (in module gpu.cu.gpufun)": [[121, "gpu.cu.gpufun.gpurandf"]], "gpuuniform() (in module gpu.cu.gpufun)": [[121, "gpu.cu.gpufun.gpuuniform"]], "connect_gaussian() (in module gpu.cu.graph)": [[122, "gpu.cu.graph.connect_gaussian"]], "gpu.cu.graph": [[122, "module-gpu.cu.graph"]], "random_point_sheet() (in module gpu.cu.graph)": [[122, "gpu.cu.graph.random_point_sheet"]], "spherepoints() (in module gpu.cu.graph)": [[122, "gpu.cu.graph.spherepoints"]], "uniform_point_sheet() (in module gpu.cu.graph)": [[122, "gpu.cu.graph.uniform_point_sheet"]], "gpu.cu.logic": [[123, "module-gpu.cu.logic"]], "gpuand() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpuand"]], "gpueq() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpueq"]], "gpugt() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpugt"]], "gpugteq() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpugteq"]], "gpuhzero() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpuhzero"]], "gpult() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpult"]], "gpulteq() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpulteq"]], "gpuneq() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpuneq"]], "gpunor() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpunor"]], "gpunot() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpunot"]], "gpurange() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpurange"]], "gpuyes() (in module gpu.cu.logic)": [[123, "gpu.cu.logic.gpuyes"]], "elementwisekernel() (in module gpu.cu.plot)": [[125, "gpu.cu.plot.ElementwiseKernel"]], "gpu.cu.plot": [[125, "module-gpu.cu.plot"]], "gpubarlinedata() (in module gpu.cu.plot)": [[125, "gpu.cu.plot.gpubarlinedata"]], "gpuhistogram() (in module gpu.cu.plot)": [[125, "gpu.cu.plot.gpuhistogram"]], "missing() (in module gpu.cu.plot)": [[125, "gpu.cu.plot.missing"]], "sebarline() (in module gpu.cu.plot)": [[125, "gpu.cu.plot.sebarline"]], "sebarline2() (in module gpu.cu.plot)": [[125, "gpu.cu.plot.sebarline2"]], "frameeater() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.FrameEater"]], "gpuautometric() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.GPUAutometric"]], "gpudotmetric() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.GPUDotmetric"]], "gpumagmetric() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.GPUMagmetric"]], "gpupointautodistance() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.GPUPointAutoDistance"]], "gpusequenceautodetect() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.GPUSequenceAutoDetect"]], "deltamag() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.deltamag"]], "fitgaussbimodal() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.fitgaussbimodal"]], "fitgausstrimodal() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.fitgausstrimodal"]], "gpu.cu.sequence": [[126, "module-gpu.cu.sequence"]], "gpuderivative() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.gpuderivative"]], "gpulognpdf() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.gpulognpdf"]], "gpunpdf() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.gpunpdf"]], "gpusmooth() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.gpusmooth"]], "gpusubsetgfit() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.gpusubsetgfit"]], "gpusubsetmean() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.gpusubsetmean"]], "gputhing() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.gputhing"]], "mulmag() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.mulmag"]], "summag() (in module gpu.cu.sequence)": [[126, "gpu.cu.sequence.summag"]], "graphics": [[128, "module-graphics"]], "rgbtohcl() (in module graphics.color)": [[129, "graphics.color.RGBtoHCL"]], "bit16_rgb_to_tuple() (in module graphics.color)": [[129, "graphics.color.bit16_RGB_to_tuple"]], "bit16_print_color() (in module graphics.color)": [[129, "graphics.color.bit16_print_color"]], "circularly_smooth_colormap() (in module graphics.color)": [[129, "graphics.color.circularly_smooth_colormap"]], "code_to_16bit() (in module graphics.color)": [[129, "graphics.color.code_to_16bit"]], "color_boxplot() (in module graphics.color)": [[129, "graphics.color.color_boxplot"]], "complexhlarr2rgb() (in module graphics.color)": [[129, "graphics.color.complexHLArr2RGB"]], "darkhues() (in module graphics.color)": [[129, "graphics.color.darkhues"]], "enumerate_fast_colors() (in module graphics.color)": [[129, "graphics.color.enumerate_fast_colors"]], "graphics.color": [[129, "module-graphics.color"]], "hcl2rgb() (in module graphics.color)": [[129, "graphics.color.hcl2rgb"]], "hex2rgb() (in module graphics.color)": [[129, "graphics.color.hex2rgb"]], "hex_pack_bgr() (in module graphics.color)": [[129, "graphics.color.hex_pack_BGR"]], "hsv2rgb() (in module graphics.color)": [[129, "graphics.color.hsv2rgb"]], "hue_angle() (in module graphics.color)": [[129, "graphics.color.hue_angle"]], "isoluminance1() (in module graphics.color)": [[129, "graphics.color.isoluminance1"]], "isoluminance2() (in module graphics.color)": [[129, "graphics.color.isoluminance2"]], "isoluminance3() (in module graphics.color)": [[129, "graphics.color.isoluminance3"]], "isoluminance4() (in module graphics.color)": [[129, "graphics.color.isoluminance4"]], "lighthues() (in module graphics.color)": [[129, "graphics.color.lighthues"]], "lightness() (in module graphics.color)": [[129, "graphics.color.lightness"]], "luminance_matrix() (in module graphics.color)": [[129, "graphics.color.luminance_matrix"]], "match_luminance() (in module graphics.color)": [[129, "graphics.color.match_luminance"]], "medhues() (in module graphics.color)": [[129, "graphics.color.medhues"]], "radl2rgb() (in module graphics.color)": [[129, "graphics.color.radl2rgb"]], "radl2rgblut() (in module graphics.color)": [[129, "graphics.color.radl2rgbLUT"]], "rgb2hex() (in module graphics.color)": [[129, "graphics.color.rgb2hex"]], "rotate() (in module graphics.color)": [[129, "graphics.color.rotate"]], "show_complete_fast_pallet() (in module graphics.color)": [[129, "graphics.color.show_complete_fast_pallet"]], "show_complete_fastest_pallet() (in module graphics.color)": [[129, "graphics.color.show_complete_fastest_pallet"]], "show_fast_pallet() (in module graphics.color)": [[129, "graphics.color.show_fast_pallet"]], "show_hex_pallet() (in module graphics.color)": [[129, "graphics.color.show_hex_pallet"]], "tuple_to_bit16() (in module graphics.color)": [[129, "graphics.color.tuple_to_bit16"]], "tuple_to_bit24() (in module graphics.color)": [[129, "graphics.color.tuple_to_bit24"]], "graphics.image": [[130, "module-graphics.image"]], "mean_center() (in module graphics.image)": [[130, "graphics.image.mean_center"]], "median_center() (in module graphics.image)": [[130, "graphics.image.median_center"]], "unitize() (in module graphics.image)": [[130, "graphics.image.unitize"]], "visualize_derivatives() (in module graphics.image)": [[130, "graphics.image.visualize_derivatives"]], "draw_array() (in module graphics.matplotlib)": [[131, "graphics.matplotlib.draw_array"]], "graphics.matplotlib": [[131, "module-graphics.matplotlib"]], "hide_toolbar() (in module graphics.matplotlib)": [[131, "graphics.matplotlib.hide_toolbar"]], "start() (in module graphics.matplotlib)": [[131, "graphics.matplotlib.start"]], "gaussian2d_covellipse() (in module graphics.plot)": [[132, "graphics.plot.Gaussian2D_covellipse"]], "handlersquare (class in graphics.plot)": [[132, "graphics.plot.HandlerSquare"]], "addspikes() (in module graphics.plot)": [[132, "graphics.plot.addspikes"]], "adjust_axis_height_pixels() (in module graphics.plot)": [[132, "graphics.plot.adjust_axis_height_pixels"]], "adjust_xlabel_space() (in module graphics.plot)": [[132, "graphics.plot.adjust_xlabel_space"]], "adjust_ylabel_space() (in module graphics.plot)": [[132, "graphics.plot.adjust_ylabel_space"]], "adjustmap() (in module graphics.plot)": [[132, "graphics.plot.adjustmap"]], "animate_complex() (in module graphics.plot)": [[132, "graphics.plot.animate_complex"]], "arrow_between() (in module graphics.plot)": [[132, "graphics.plot.arrow_between"]], "axvbands() (in module graphics.plot)": [[132, "graphics.plot.axvbands"]], "axvstripe() (in module graphics.plot)": [[132, "graphics.plot.axvstripe"]], "barcompare() (in module graphics.plot)": [[132, "graphics.plot.barcompare"]], "base_legend() (in module graphics.plot)": [[132, "graphics.plot.base_legend"]], "border_width() (in module graphics.plot)": [[132, "graphics.plot.border_width"]], "boxplot_significance() (in module graphics.plot)": [[132, "graphics.plot.boxplot_significance"]], "broken_step() (in module graphics.plot)": [[132, "graphics.plot.broken_step"]], "ceil_to_precision() (in module graphics.plot)": [[132, "graphics.plot.ceil_to_precision"]], "centers() (in module graphics.plot)": [[132, "graphics.plot.centers"]], "clean_y_range() (in module graphics.plot)": [[132, "graphics.plot.clean_y_range"]], "cleartop() (in module graphics.plot)": [[132, "graphics.plot.cleartop"]], "colored_boxplot() (in module graphics.plot)": [[132, "graphics.plot.colored_boxplot"]], "complex_axis() (in module graphics.plot)": [[132, "graphics.plot.complex_axis"]], "covariance_crosshairs() (in module graphics.plot)": [[132, "graphics.plot.covariance_crosshairs"]], "create_artists() (graphics.plot.handlersquare method)": [[132, "graphics.plot.HandlerSquare.create_artists"]], "darken() (in module graphics.plot)": [[132, "graphics.plot.darken"]], "domask() (in module graphics.plot)": [[132, "graphics.plot.domask"]], "draw_circle() (in module graphics.plot)": [[132, "graphics.plot.draw_circle"]], "expand_axis_x() (in module graphics.plot)": [[132, "graphics.plot.expand_axis_x"]], "expand_axis_y() (in module graphics.plot)": [[132, "graphics.plot.expand_axis_y"]], "expand_y_range() (in module graphics.plot)": [[132, "graphics.plot.expand_y_range"]], "figurebox() (in module graphics.plot)": [[132, "graphics.plot.figurebox"]], "flathist() (in module graphics.plot)": [[132, "graphics.plot.flathist"]], "floor_to_precision() (in module graphics.plot)": [[132, "graphics.plot.floor_to_precision"]], "force_aspect() (in module graphics.plot)": [[132, "graphics.plot.force_aspect"]], "fsize() (in module graphics.plot)": [[132, "graphics.plot.fsize"]], "fudgex() (in module graphics.plot)": [[132, "graphics.plot.fudgex"]], "fudgexy() (in module graphics.plot)": [[132, "graphics.plot.fudgexy"]], "fudgey() (in module graphics.plot)": [[132, "graphics.plot.fudgey"]], "get_aspect() (in module graphics.plot)": [[132, "graphics.plot.get_aspect"]], "get_ax_pixel() (in module graphics.plot)": [[132, "graphics.plot.get_ax_pixel"]], "get_ax_pixel_ratio() (in module graphics.plot)": [[132, "graphics.plot.get_ax_pixel_ratio"]], "get_ax_size() (in module graphics.plot)": [[132, "graphics.plot.get_ax_size"]], "get_bbox() (in module graphics.plot)": [[132, "graphics.plot.get_bbox"]], "good_colorbar() (in module graphics.plot)": [[132, "graphics.plot.good_colorbar"]], "graphics.plot": [[132, "module-graphics.plot"]], "hsigbar() (in module graphics.plot)": [[132, "graphics.plot.hsigbar"]], "inhibition_arrow() (in module graphics.plot)": [[132, "graphics.plot.inhibition_arrow"]], "label() (in module graphics.plot)": [[132, "graphics.plot.label"]], "left_legend() (in module graphics.plot)": [[132, "graphics.plot.left_legend"]], "lighten() (in module graphics.plot)": [[132, "graphics.plot.lighten"]], "match_image_aspect() (in module graphics.plot)": [[132, "graphics.plot.match_image_aspect"]], "mock_legend() (in module graphics.plot)": [[132, "graphics.plot.mock_legend"]], "more_xticks() (in module graphics.plot)": [[132, "graphics.plot.more_xticks"]], "more_yticks() (in module graphics.plot)": [[132, "graphics.plot.more_yticks"]], "nice_legend() (in module graphics.plot)": [[132, "graphics.plot.nice_legend"]], "nicebp() (in module graphics.plot)": [[132, "graphics.plot.nicebp"]], "nicex() (in module graphics.plot)": [[132, "graphics.plot.nicex"]], "nicexy() (in module graphics.plot)": [[132, "graphics.plot.nicexy"]], "nicey() (in module graphics.plot)": [[132, "graphics.plot.nicey"]], "noaxis() (in module graphics.plot)": [[132, "graphics.plot.noaxis"]], "noclip() (in module graphics.plot)": [[132, "graphics.plot.noclip"]], "nolabels() (in module graphics.plot)": [[132, "graphics.plot.nolabels"]], "notick() (in module graphics.plot)": [[132, "graphics.plot.notick"]], "nox() (in module graphics.plot)": [[132, "graphics.plot.nox"]], "noxlabels() (in module graphics.plot)": [[132, "graphics.plot.noxlabels"]], "noxyaxes() (in module graphics.plot)": [[132, "graphics.plot.noxyaxes"]], "noy() (in module graphics.plot)": [[132, "graphics.plot.noy"]], "noylabels() (in module graphics.plot)": [[132, "graphics.plot.noylabels"]], "nudge_axis_baseline() (in module graphics.plot)": [[132, "graphics.plot.nudge_axis_baseline"]], "nudge_axis_left() (in module graphics.plot)": [[132, "graphics.plot.nudge_axis_left"]], "nudge_axis_x() (in module graphics.plot)": [[132, "graphics.plot.nudge_axis_x"]], "nudge_axis_y() (in module graphics.plot)": [[132, "graphics.plot.nudge_axis_y"]], "nudge_axis_y_pixels() (in module graphics.plot)": [[132, "graphics.plot.nudge_axis_y_pixels"]], "pikeplot() (in module graphics.plot)": [[132, "graphics.plot.pikeplot"]], "pixels_to_xfigureunits() (in module graphics.plot)": [[132, "graphics.plot.pixels_to_xfigureunits"]], "pixels_to_xunits() (in module graphics.plot)": [[132, "graphics.plot.pixels_to_xunits"]], "pixels_to_yfigureunits() (in module graphics.plot)": [[132, "graphics.plot.pixels_to_yfigureunits"]], "pixels_to_yunits() (in module graphics.plot)": [[132, "graphics.plot.pixels_to_yunits"]], "plotcwt() (in module graphics.plot)": [[132, "graphics.plot.plotCWT"]], "plotwtphase() (in module graphics.plot)": [[132, "graphics.plot.plotWTPhase"]], "plotwtphasefig() (in module graphics.plot)": [[132, "graphics.plot.plotWTPhaseFig"]], "plot_complex() (in module graphics.plot)": [[132, "graphics.plot.plot_complex"]], "plotz() (in module graphics.plot)": [[132, "graphics.plot.plotz"]], "positivex() (in module graphics.plot)": [[132, "graphics.plot.positivex"]], "positivexy() (in module graphics.plot)": [[132, "graphics.plot.positivexy"]], "positivey() (in module graphics.plot)": [[132, "graphics.plot.positivey"]], "px2x() (in module graphics.plot)": [[132, "graphics.plot.px2x"]], "px2y() (in module graphics.plot)": [[132, "graphics.plot.px2y"]], "rangeover() (in module graphics.plot)": [[132, "graphics.plot.rangeover"]], "rangeto() (in module graphics.plot)": [[132, "graphics.plot.rangeto"]], "restore_limits() (in module graphics.plot)": [[132, "graphics.plot.restore_limits"]], "right_legend() (in module graphics.plot)": [[132, "graphics.plot.right_legend"]], "rightaxis() (in module graphics.plot)": [[132, "graphics.plot.rightaxis"]], "righty() (in module graphics.plot)": [[132, "graphics.plot.righty"]], "round_to_precision() (in module graphics.plot)": [[132, "graphics.plot.round_to_precision"]], "save_limits() (in module graphics.plot)": [[132, "graphics.plot.save_limits"]], "savefigure() (in module graphics.plot)": [[132, "graphics.plot.savefigure"]], "shade_edges() (in module graphics.plot)": [[132, "graphics.plot.shade_edges"]], "shellmean() (in module graphics.plot)": [[132, "graphics.plot.shellmean"]], "shellplot() (in module graphics.plot)": [[132, "graphics.plot.shellplot"]], "sigbar() (in module graphics.plot)": [[132, "graphics.plot.sigbar"]], "simple_arrow() (in module graphics.plot)": [[132, "graphics.plot.simple_arrow"]], "simpleaxis() (in module graphics.plot)": [[132, "graphics.plot.simpleaxis"]], "simpleraxis() (in module graphics.plot)": [[132, "graphics.plot.simpleraxis"]], "simplerright() (in module graphics.plot)": [[132, "graphics.plot.simplerright"]], "splitz() (in module graphics.plot)": [[132, "graphics.plot.splitz"]], "stderrplot() (in module graphics.plot)": [[132, "graphics.plot.stderrplot"]], "subfigurelabel() (in module graphics.plot)": [[132, "graphics.plot.subfigurelabel"]], "trendline() (in module graphics.plot)": [[132, "graphics.plot.trendline"]], "unit_crosshairs() (in module graphics.plot)": [[132, "graphics.plot.unit_crosshairs"]], "unitaxes() (in module graphics.plot)": [[132, "graphics.plot.unitaxes"]], "unitx() (in module graphics.plot)": [[132, "graphics.plot.unitx"]], "unity() (in module graphics.plot)": [[132, "graphics.plot.unity"]], "widths_to_centers() (in module graphics.plot)": [[132, "graphics.plot.widths_to_centers"]], "widths_to_edges() (in module graphics.plot)": [[132, "graphics.plot.widths_to_edges"]], "wtpshow() (in module graphics.plot)": [[132, "graphics.plot.wtpshow"]], "xbartext() (in module graphics.plot)": [[132, "graphics.plot.xbartext"]], "xfigureunits_to_pixels() (in module graphics.plot)": [[132, "graphics.plot.xfigureunits_to_pixels"]], "xin() (in module graphics.plot)": [[132, "graphics.plot.xin"]], "xscalebar() (in module graphics.plot)": [[132, "graphics.plot.xscalebar"]], "xticklen() (in module graphics.plot)": [[132, "graphics.plot.xticklen"]], "xtickpad() (in module graphics.plot)": [[132, "graphics.plot.xtickpad"]], "xunits_to_pixels() (in module graphics.plot)": [[132, "graphics.plot.xunits_to_pixels"]], "xylim() (in module graphics.plot)": [[132, "graphics.plot.xylim"]], "ybartext() (in module graphics.plot)": [[132, "graphics.plot.ybartext"]], "yfigureunits_to_pixels() (in module graphics.plot)": [[132, "graphics.plot.yfigureunits_to_pixels"]], "yin() (in module graphics.plot)": [[132, "graphics.plot.yin"]], "yscalebar() (in module graphics.plot)": [[132, "graphics.plot.yscalebar"]], "yticklen() (in module graphics.plot)": [[132, "graphics.plot.yticklen"]], "ytickpad() (in module graphics.plot)": [[132, "graphics.plot.ytickpad"]], "yunits_to_pixels() (in module graphics.plot)": [[132, "graphics.plot.yunits_to_pixels"]], "zerohline() (in module graphics.plot)": [[132, "graphics.plot.zerohline"]], "zerovline() (in module graphics.plot)": [[132, "graphics.plot.zerovline"]], "zoombox() (in module graphics.plot)": [[132, "graphics.plot.zoombox"]], "draw_array() (in module graphics.pygame)": [[133, "graphics.pygame.draw_array"]], "enable_vsync() (in module graphics.pygame)": [[133, "graphics.pygame.enable_vsync"]], "graphics.pygame": [[133, "module-graphics.pygame"]], "start() (in module graphics.pygame)": [[133, "graphics.pygame.start"]], "jobs": [[134, "module-jobs"]], "base64hash() (in module jobs.cache)": [[135, "jobs.cache.base64hash"]], "base64hash2byte() (in module jobs.cache)": [[135, "jobs.cache.base64hash2byte"]], "disk_cacher() (in module jobs.cache)": [[135, "jobs.cache.disk_cacher"]], "file_string_to_signature() (in module jobs.cache)": [[135, "jobs.cache.file_string_to_signature"]], "function_hash_no_subroutines() (in module jobs.cache)": [[135, "jobs.cache.function_hash_no_subroutines"]], "function_hash_with_subroutines() (in module jobs.cache)": [[135, "jobs.cache.function_hash_with_subroutines"]], "function_signature() (in module jobs.cache)": [[135, "jobs.cache.function_signature"]], "get_cache_path() (in module jobs.cache)": [[135, "jobs.cache.get_cache_path"]], "get_source() (in module jobs.cache)": [[135, "jobs.cache.get_source"]], "hierarchical_cacher() (in module jobs.cache)": [[135, "jobs.cache.hierarchical_cacher"]], "human_decode() (in module jobs.cache)": [[135, "jobs.cache.human_decode"]], "human_encode() (in module jobs.cache)": [[135, "jobs.cache.human_encode"]], "jobs.cache": [[135, "module-jobs.cache"]], "locate_cached() (in module jobs.cache)": [[135, "jobs.cache.locate_cached"]], "read_cache_entry() (in module jobs.cache)": [[135, "jobs.cache.read_cache_entry"]], "signature_to_file_string() (in module jobs.cache)": [[135, "jobs.cache.signature_to_file_string"]], "validate_for_matfile() (in module jobs.cache)": [[135, "jobs.cache.validate_for_matfile"]], "validate_for_numpy() (in module jobs.cache)": [[135, "jobs.cache.validate_for_numpy"]], "csv() (in module jobs.closure)": [[136, "jobs.closure.csv"]], "get_subroutines() (in module jobs.closure)": [[136, "jobs.closure.get_subroutines"]], "inspect_function_closure() (in module jobs.closure)": [[136, "jobs.closure.inspect_function_closure"]], "is_immutable() (in module jobs.closure)": [[136, "jobs.closure.is_immutable"]], "is_probably_safe() (in module jobs.closure)": [[136, "jobs.closure.is_probably_safe"]], "jobs.closure": [[136, "module-jobs.closure"]], "verify_function_closure() (in module jobs.closure)": [[136, "jobs.closure.verify_function_closure"]], "check_filename() (in module jobs.filenames)": [[138, "jobs.filenames.check_filename"]], "is_dangerous_filename() (in module jobs.filenames)": [[138, "jobs.filenames.is_dangerous_filename"]], "jobs.filenames": [[138, "module-jobs.filenames"]], "validate_argument_signature() (in module jobs.filenames)": [[138, "jobs.filenames.validate_argument_signature"]], "cache_test() (in module jobs.initialize_system_cache)": [[139, "jobs.initialize_system_cache.cache_test"]], "du() (in module jobs.initialize_system_cache)": [[139, "jobs.initialize_system_cache.du"]], "initialize_caches() (in module jobs.initialize_system_cache)": [[139, "jobs.initialize_system_cache.initialize_caches"]], "jobs.initialize_system_cache": [[139, "module-jobs.initialize_system_cache"]], "launch_cache_synchronizers() (in module jobs.initialize_system_cache)": [[139, "jobs.initialize_system_cache.launch_cache_synchronizers"]], "purge_ram_cache() (in module jobs.initialize_system_cache)": [[139, "jobs.initialize_system_cache.purge_ram_cache"]], "purge_ssd_cache() (in module jobs.initialize_system_cache)": [[139, "jobs.initialize_system_cache.purge_ssd_cache"]], "reset_ramdisk() (in module jobs.initialize_system_cache)": [[139, "jobs.initialize_system_cache.reset_ramdisk"]], "close_pool() (in module jobs.parallel)": [[140, "jobs.parallel.close_pool"]], "eval_from_cached() (in module jobs.parallel)": [[140, "jobs.parallel.eval_from_cached"]], "function_fingerprint() (in module jobs.parallel)": [[140, "jobs.parallel.function_fingerprint"]], "jobs.parallel": [[140, "module-jobs.parallel"]], "parallel_cached_wrapper() (in module jobs.parallel)": [[140, "jobs.parallel.parallel_cached_wrapper"]], "parallel_error_handling() (in module jobs.parallel)": [[140, "jobs.parallel.parallel_error_handling"]], "parallel_indirect_wrapper() (in module jobs.parallel)": [[140, "jobs.parallel.parallel_indirect_wrapper"]], "pararraymap() (in module jobs.parallel)": [[140, "jobs.parallel.pararraymap"]], "parimap() (in module jobs.parallel)": [[140, "jobs.parallel.parimap"]], "parmap() (in module jobs.parallel)": [[140, "jobs.parallel.parmap"]], "parmap_dict() (in module jobs.parallel)": [[140, "jobs.parallel.parmap_dict"]], "reset_pool() (in module jobs.parallel)": [[140, "jobs.parallel.reset_pool"]], "linalg": [[141, "module-linalg"]], "ascolumn() (in module linalg.arguments)": [[142, "linalg.arguments.ascolumn"]], "asrow() (in module linalg.arguments)": [[142, "linalg.arguments.asrow"]], "assertcolumn() (in module linalg.arguments)": [[142, "linalg.arguments.assertcolumn"]], "assertfinite() (in module linalg.arguments)": [[142, "linalg.arguments.assertfinite"]], "assertfinitereal() (in module linalg.arguments)": [[142, "linalg.arguments.assertfinitereal"]], "assertreal() (in module linalg.arguments)": [[142, "linalg.arguments.assertreal"]], "assertrow() (in module linalg.arguments)": [[142, "linalg.arguments.assertrow"]], "assertshape() (in module linalg.arguments)": [[142, "linalg.arguments.assertshape"]], "assertsquare() (in module linalg.arguments)": [[142, "linalg.arguments.assertsquare"]], "assertvector() (in module linalg.arguments)": [[142, "linalg.arguments.assertvector"]], "assquare() (in module linalg.arguments)": [[142, "linalg.arguments.assquare"]], "asvector() (in module linalg.arguments)": [[142, "linalg.arguments.asvector"]], "iscolumn() (in module linalg.arguments)": [[142, "linalg.arguments.iscolumn"]], "isrow() (in module linalg.arguments)": [[142, "linalg.arguments.isrow"]], "issquare() (in module linalg.arguments)": [[142, "linalg.arguments.issquare"]], "linalg.arguments": [[142, "module-linalg.arguments"]], "scalar() (in module linalg.arguments)": [[142, "linalg.arguments.scalar"]], "ldistance() (in module linalg.matrix)": [[143, "linalg.matrix.Ldistance"]], "llasso() (in module linalg.matrix)": [[143, "linalg.matrix.Llasso"]], "abserr() (in module linalg.matrix)": [[143, "linalg.matrix.abserr"]], "autopredict() (in module linalg.matrix)": [[143, "linalg.matrix.autopredict"]], "cartesian_product() (in module linalg.matrix)": [[143, "linalg.matrix.cartesian_product"]], "check_covmat() (in module linalg.matrix)": [[143, "linalg.matrix.check_covmat"]], "check_covmat_fast() (in module linalg.matrix)": [[143, "linalg.matrix.check_covmat_fast"]], "check_finite_real() (in module linalg.matrix)": [[143, "linalg.matrix.check_finite_real"]], "cholupdate() (in module linalg.matrix)": [[143, "linalg.matrix.cholupdate"]], "cholupdate_eye() (in module linalg.matrix)": [[143, "linalg.matrix.cholupdate_eye"]], "cinv() (in module linalg.matrix)": [[143, "linalg.matrix.cinv"]], "column() (in module linalg.matrix)": [[143, "linalg.matrix.column"]], "csolve() (in module linalg.matrix)": [[143, "linalg.matrix.csolve"]], "errmx() (in module linalg.matrix)": [[143, "linalg.matrix.errmx"]], "kronsum() (in module linalg.matrix)": [[143, "linalg.matrix.kronsum"]], "laplace_kernel() (in module linalg.matrix)": [[143, "linalg.matrix.laplace_kernel"]], "ldiv() (in module linalg.matrix)": [[143, "linalg.matrix.ldiv"]], "linalg.matrix": [[143, "module-linalg.matrix"]], "logdet() (in module linalg.matrix)": [[143, "linalg.matrix.logdet"]], "match_covariance() (in module linalg.matrix)": [[143, "linalg.matrix.match_covariance"]], "maxeig() (in module linalg.matrix)": [[143, "linalg.matrix.maxeig"]], "nearpdhigham() (in module linalg.matrix)": [[143, "linalg.matrix.nearPDHigham"]], "nearpsdrebonatojackel() (in module linalg.matrix)": [[143, "linalg.matrix.nearPSDRebonatoJackel"]], "normedcovariance() (in module linalg.matrix)": [[143, "linalg.matrix.normedcovariance"]], "psd_eig() (in module linalg.matrix)": [[143, "linalg.matrix.psd_eig"]], "qf() (in module linalg.matrix)": [[143, "linalg.matrix.qf"]], "rcond() (in module linalg.matrix)": [[143, "linalg.matrix.rcond"]], "rdiv() (in module linalg.matrix)": [[143, "linalg.matrix.rdiv"]], "real_eig() (in module linalg.matrix)": [[143, "linalg.matrix.real_eig"]], "reglstsq() (in module linalg.matrix)": [[143, "linalg.matrix.reglstsq"]], "rmatrix() (in module linalg.matrix)": [[143, "linalg.matrix.rmatrix"]], "row() (in module linalg.matrix)": [[143, "linalg.matrix.row"]], "rsolt() (in module linalg.matrix)": [[143, "linalg.matrix.rsolt"]], "rsolve() (in module linalg.matrix)": [[143, "linalg.matrix.rsolve"]], "selector_matrix() (in module linalg.matrix)": [[143, "linalg.matrix.selector_matrix"]], "solt() (in module linalg.matrix)": [[143, "linalg.matrix.solt"]], "top_v() (in module linalg.matrix)": [[143, "linalg.matrix.top_v"]], "tril_elements() (in module linalg.matrix)": [[143, "linalg.matrix.tril_elements"]], "triu_elements() (in module linalg.matrix)": [[143, "linalg.matrix.triu_elements"]], "wheremax() (in module linalg.matrix)": [[143, "linalg.matrix.wheremax"]], "wheremin() (in module linalg.matrix)": [[143, "linalg.matrix.wheremin"]], "adjacency1d() (in module linalg.operators)": [[144, "linalg.operators.adjacency1D"]], "adjacency2d() (in module linalg.operators)": [[144, "linalg.operators.adjacency2D"]], "adjacency2d_circular() (in module linalg.operators)": [[144, "linalg.operators.adjacency2D_circular"]], "adjacency2d_rotational() (in module linalg.operators)": [[144, "linalg.operators.adjacency2d_rotational"]], "circular1dbluroperator() (in module linalg.operators)": [[144, "linalg.operators.circular1DblurOperator"]], "cosine_kernel() (in module linalg.operators)": [[144, "linalg.operators.cosine_kernel"]], "covfrom() (in module linalg.operators)": [[144, "linalg.operators.covfrom"]], "delta() (in module linalg.operators)": [[144, "linalg.operators.delta"]], "differentiator() (in module linalg.operators)": [[144, "linalg.operators.differentiator"]], "diffuseft1d() (in module linalg.operators)": [[144, "linalg.operators.diffuseFT1D"]], "flatcov() (in module linalg.operators)": [[144, "linalg.operators.flatcov"]], "gaussian1dbluroperator() (in module linalg.operators)": [[144, "linalg.operators.gaussian1DblurOperator"]], "gaussian2dbluroperator() (in module linalg.operators)": [[144, "linalg.operators.gaussian2DblurOperator"]], "integrator() (in module linalg.operators)": [[144, "linalg.operators.integrator"]], "laplacian1d() (in module linalg.operators)": [[144, "linalg.operators.laplacian1D"]], "laplacian1d_circular() (in module linalg.operators)": [[144, "linalg.operators.laplacian1D_circular"]], "laplacian2d() (in module linalg.operators)": [[144, "linalg.operators.laplacian2D"]], "laplacianft1d() (in module linalg.operators)": [[144, "linalg.operators.laplacianFT1D"]], "linalg.operators": [[144, "module-linalg.operators"]], "log_cosine_basis() (in module linalg.operators)": [[144, "linalg.operators.log_cosine_basis"]], "make_cosine_basis() (in module linalg.operators)": [[144, "linalg.operators.make_cosine_basis"]], "oucov() (in module linalg.operators)": [[144, "linalg.operators.oucov"]], "separable_guassian_blur() (in module linalg.operators)": [[144, "linalg.operators.separable_guassian_blur"]], "wienerft1d() (in module linalg.operators)": [[144, "linalg.operators.wienerFT1D"]], "models": [[145, "module-models"]], "du_izh() (in module models.izh)": [[146, "models.izh.du_izh"]], "dv_izh() (in module models.izh)": [[146, "models.izh.dv_izh"]], "models.izh": [[146, "module-models.izh"]], "sim_izh() (in module models.izh)": [[146, "models.izh.sim_izh"]], "update_izh() (in module models.izh)": [[146, "models.izh.update_izh"]], "euler_integrate_lif() (in module models.lif)": [[147, "models.lif.euler_integrate_LIF"]], "exponential_integrate_lif() (in module models.lif)": [[147, "models.lif.exponential_integrate_LIF"]], "exponential_moving_average() (in module models.lif)": [[147, "models.lif.exponential_moving_average"]], "models.lif": [[147, "module-models.lif"]], "beta() (in module nlab)": [[326, "nlab.beta"]], "binomial() (in module nlab)": [[326, "nlab.binomial"]], "chisquare() (in module nlab)": [[326, "nlab.chisquare"]], "choice() (in module nlab)": [[326, "nlab.choice"]], "dirichlet() (in module nlab)": [[326, "nlab.dirichlet"]], "exponential() (in module nlab)": [[326, "nlab.exponential"]], "f() (in module nlab)": [[326, "nlab.f"]], "gamma() (in module nlab)": [[326, "nlab.gamma"]], "geometric() (in module nlab)": [[326, "nlab.geometric"]], "get_state() (in module nlab)": [[326, "nlab.get_state"]], "gumbel() (in module nlab)": [[326, "nlab.gumbel"]], "hypergeometric() (in module nlab)": [[326, "nlab.hypergeometric"]], "laplace() (in module nlab)": [[326, "nlab.laplace"]], "logistic() (in module nlab)": [[326, "nlab.logistic"]], "lognormal() (in module nlab)": [[326, "nlab.lognormal"]], "logseries() (in module nlab)": [[326, "nlab.logseries"]], "multinomial() (in module nlab)": [[326, "nlab.multinomial"]], "multivariate_normal() (in module nlab)": [[326, "nlab.multivariate_normal"]], "negative_binomial() (in module nlab)": [[326, "nlab.negative_binomial"]], "nlab": [[326, "module-nlab"]], "noncentral_chisquare() (in module nlab)": [[326, "nlab.noncentral_chisquare"]], "noncentral_f() (in module nlab)": [[326, "nlab.noncentral_f"]], "normal() (in module nlab)": [[326, "nlab.normal"]], "pareto() (in module nlab)": [[326, "nlab.pareto"]], "permutation() (in module nlab)": [[326, "nlab.permutation"]], "poisson() (in module nlab)": [[326, "nlab.poisson"]], "power() (in module nlab)": [[326, "nlab.power"]], "rand() (in module nlab)": [[326, "nlab.rand"]], "randint() (in module nlab)": [[326, "nlab.randint"]], "randn() (in module nlab)": [[326, "nlab.randn"]], "random() (in module nlab)": [[326, "nlab.random"]], "random_integers() (in module nlab)": [[326, "nlab.random_integers"]], "random_sample() (in module nlab)": [[326, "nlab.random_sample"]], "rayleigh() (in module nlab)": [[326, "nlab.rayleigh"]], "seed() (in module nlab)": [[326, "nlab.seed"]], "set_state() (in module nlab)": [[326, "nlab.set_state"]], "shuffle() (in module nlab)": [[326, "nlab.shuffle"]], "standard_cauchy() (in module nlab)": [[326, "nlab.standard_cauchy"]], "standard_exponential() (in module nlab)": [[326, "nlab.standard_exponential"]], "standard_gamma() (in module nlab)": [[326, "nlab.standard_gamma"]], "standard_normal() (in module nlab)": [[326, "nlab.standard_normal"]], "standard_t() (in module nlab)": [[326, "nlab.standard_t"]], "triangular() (in module nlab)": [[326, "nlab.triangular"]], "uniform() (in module nlab)": [[326, "nlab.uniform"]], "vonmises() (in module nlab)": [[326, "nlab.vonmises"]], "wald() (in module nlab)": [[326, "nlab.wald"]], "weibull() (in module nlab)": [[326, "nlab.weibull"]], "zipf() (in module nlab)": [[326, "nlab.zipf"]], "handlers (class in signal)": [[328, "signal.Handlers"]], "itimererror (in module signal)": [[328, "signal.ItimerError"]], "sigabrt (signal.signals attribute)": [[328, "signal.Signals.SIGABRT"]], "sigalrm (signal.signals attribute)": [[328, "signal.Signals.SIGALRM"]], "sigbus (signal.signals attribute)": [[328, "signal.Signals.SIGBUS"]], "sigchld (signal.signals attribute)": [[328, "signal.Signals.SIGCHLD"]], "sigcld (signal.signals attribute)": [[328, "signal.Signals.SIGCLD"]], "sigcont (signal.signals attribute)": [[328, "signal.Signals.SIGCONT"]], "sigfpe (signal.signals attribute)": [[328, "signal.Signals.SIGFPE"]], "sighup (signal.signals attribute)": [[328, "signal.Signals.SIGHUP"]], "sigill (signal.signals attribute)": [[328, "signal.Signals.SIGILL"]], "sigint (signal.signals attribute)": [[328, "signal.Signals.SIGINT"]], "sigio (signal.signals attribute)": [[328, "signal.Signals.SIGIO"]], "sigiot (signal.signals attribute)": [[328, "signal.Signals.SIGIOT"]], "sigkill (signal.signals attribute)": [[328, "signal.Signals.SIGKILL"]], "sigpipe (signal.signals attribute)": [[328, "signal.Signals.SIGPIPE"]], "sigpoll (signal.signals attribute)": [[328, "signal.Signals.SIGPOLL"]], "sigprof (signal.signals attribute)": [[328, "signal.Signals.SIGPROF"]], "sigpwr (signal.signals attribute)": [[328, "signal.Signals.SIGPWR"]], "sigquit (signal.signals attribute)": [[328, "signal.Signals.SIGQUIT"]], "sigrtmax (signal.signals attribute)": [[328, "signal.Signals.SIGRTMAX"]], "sigrtmin (signal.signals attribute)": [[328, "signal.Signals.SIGRTMIN"]], "sigsegv (signal.signals attribute)": [[328, "signal.Signals.SIGSEGV"]], "sigstop (signal.signals attribute)": [[328, "signal.Signals.SIGSTOP"]], "sigsys (signal.signals attribute)": [[328, "signal.Signals.SIGSYS"]], "sigterm (signal.signals attribute)": [[328, "signal.Signals.SIGTERM"]], "sigtrap (signal.signals attribute)": [[328, "signal.Signals.SIGTRAP"]], "sigtstp (signal.signals attribute)": [[328, "signal.Signals.SIGTSTP"]], "sigttin (signal.signals attribute)": [[328, "signal.Signals.SIGTTIN"]], "sigttou (signal.signals attribute)": [[328, "signal.Signals.SIGTTOU"]], "sigurg (signal.signals attribute)": [[328, "signal.Signals.SIGURG"]], "sigusr1 (signal.signals attribute)": [[328, "signal.Signals.SIGUSR1"]], "sigusr2 (signal.signals attribute)": [[328, "signal.Signals.SIGUSR2"]], "sigvtalrm (signal.signals attribute)": [[328, "signal.Signals.SIGVTALRM"]], "sigwinch (signal.signals attribute)": [[328, "signal.Signals.SIGWINCH"]], "sigxcpu (signal.signals attribute)": [[328, "signal.Signals.SIGXCPU"]], "sigxfsz (signal.signals attribute)": [[328, "signal.Signals.SIGXFSZ"]], "sig_block (signal.sigmasks attribute)": [[328, "signal.Sigmasks.SIG_BLOCK"]], "sig_dfl (signal.handlers attribute)": [[328, "signal.Handlers.SIG_DFL"]], "sig_ign (signal.handlers attribute)": [[328, "signal.Handlers.SIG_IGN"]], "sig_setmask (signal.sigmasks attribute)": [[328, "signal.Sigmasks.SIG_SETMASK"]], "sig_unblock (signal.sigmasks attribute)": [[328, "signal.Sigmasks.SIG_UNBLOCK"]], "sigmasks (class in signal)": [[328, "signal.Sigmasks"]], "signals (class in signal)": [[328, "signal.Signals"]], "getsignal() (in module signal)": [[328, "signal.getsignal"]], "n_fields (signal.struct_siginfo attribute)": [[328, "signal.struct_siginfo.n_fields"]], "n_sequence_fields (signal.struct_siginfo attribute)": [[328, "signal.struct_siginfo.n_sequence_fields"]], "n_unnamed_fields (signal.struct_siginfo attribute)": [[328, "signal.struct_siginfo.n_unnamed_fields"]], "pthread_sigmask() (in module signal)": [[328, "signal.pthread_sigmask"]], "si_band (signal.struct_siginfo attribute)": [[328, "signal.struct_siginfo.si_band"]], "si_code (signal.struct_siginfo attribute)": [[328, "signal.struct_siginfo.si_code"]], "si_errno (signal.struct_siginfo attribute)": [[328, "signal.struct_siginfo.si_errno"]], "si_pid (signal.struct_siginfo attribute)": [[328, "signal.struct_siginfo.si_pid"]], "si_signo (signal.struct_siginfo attribute)": [[328, "signal.struct_siginfo.si_signo"]], "si_status (signal.struct_siginfo attribute)": [[328, "signal.struct_siginfo.si_status"]], "si_uid (signal.struct_siginfo attribute)": [[328, "signal.struct_siginfo.si_uid"]], "signal": [[328, "module-signal"]], "signal() (in module signal)": [[328, "signal.signal"]], "sigpending() (in module signal)": [[328, "signal.sigpending"]], "sigwait() (in module signal)": [[328, "signal.sigwait"]], "struct_siginfo (class in signal)": [[328, "signal.struct_siginfo"]], "valid_signals() (in module signal)": [[328, "signal.valid_signals"]], "signal.signal": [[338, "module-signal.signal"]], "brute_force_local_2d_maxima() (in module spatial)": [[339, "spatial.brute_force_local_2d_maxima"]], "spatial": [[339, "module-spatial"]], "array_average_amplitude() (in module spatial.array)": [[340, "spatial.array.array_average_amplitude"]], "array_count_centers() (in module spatial.array)": [[340, "spatial.array.array_count_centers"]], "array_count_critical() (in module spatial.array)": [[340, "spatial.array.array_count_critical"]], "array_kuramoto() (in module spatial.array)": [[340, "spatial.array.array_kuramoto"]], "array_kuramoto_pgd() (in module spatial.array)": [[340, "spatial.array.array_kuramoto_pgd"]], "array_kuramoto_pgd_standard_deviation() (in module spatial.array)": [[340, "spatial.array.array_kuramoto_pgd_standard_deviation"]], "array_kuramoto_standard_deviation() (in module spatial.array)": [[340, "spatial.array.array_kuramoto_standard_deviation"]], "array_phase_gradient() (in module spatial.array)": [[340, "spatial.array.array_phase_gradient"]], "array_phasegradient_local() (in module spatial.array)": [[340, "spatial.array.array_phasegradient_local"]], "array_phasegradient_magnitude_cv() (in module spatial.array)": [[340, "spatial.array.array_phasegradient_magnitude_cv"]], "array_phasegradient_magnitude_sigma() (in module spatial.array)": [[340, "spatial.array.array_phasegradient_magnitude_sigma"]], "array_phasegradient_pgd_threshold() (in module spatial.array)": [[340, "spatial.array.array_phasegradient_pgd_threshold"]], "array_phasegradient_planar() (in module spatial.array)": [[340, "spatial.array.array_phasegradient_planar"]], "array_speed_local() (in module spatial.array)": [[340, "spatial.array.array_speed_local"]], "array_speed_pgd_threshold() (in module spatial.array)": [[340, "spatial.array.array_speed_pgd_threshold"]], "array_synchrony() (in module spatial.array)": [[340, "spatial.array.array_synchrony"]], "array_synchrony_pgd() (in module spatial.array)": [[340, "spatial.array.array_synchrony_pgd"]], "array_synchrony_pgd_standard_deviation() (in module spatial.array)": [[340, "spatial.array.array_synchrony_pgd_standard_deviation"]], "array_synchrony_standard_deviation() (in module spatial.array)": [[340, "spatial.array.array_synchrony_standard_deviation"]], "array_wavelength_local() (in module spatial.array)": [[340, "spatial.array.array_wavelength_local"]], "array_wavelength_local_pgd_threshold() (in module spatial.array)": [[340, "spatial.array.array_wavelength_local_pgd_threshold"]], "array_wavelength_pgd_threshold() (in module spatial.array)": [[340, "spatial.array.array_wavelength_pgd_threshold"]], "array_wavelength_planar() (in module spatial.array)": [[340, "spatial.array.array_wavelength_planar"]], "pack_array_data() (in module spatial.array)": [[340, "spatial.array.pack_array_data"]], "spatial.array": [[340, "module-spatial.array"]], "trim_array() (in module spatial.array)": [[340, "spatial.array.trim_array"]], "trim_array_as_if() (in module spatial.array)": [[340, "spatial.array.trim_array_as_if"]], "dct_cut() (in module spatial.dct)": [[341, "spatial.dct.dct_cut"]], "dct_cut_antialias() (in module spatial.dct)": [[341, "spatial.dct.dct_cut_antialias"]], "dct_cut_downsampled() (in module spatial.dct)": [[341, "spatial.dct.dct_cut_downsampled"]], "dct_upsample() (in module spatial.dct)": [[341, "spatial.dct.dct_upsample"]], "dct_upsample_notrim() (in module spatial.dct)": [[341, "spatial.dct.dct_upsample_notrim"]], "get_mask() (in module spatial.dct)": [[341, "spatial.dct.get_mask"]], "get_mask_antialiased() (in module spatial.dct)": [[341, "spatial.dct.get_mask_antialiased"]], "iterated_upsample() (in module spatial.dct)": [[341, "spatial.dct.iterated_upsample"]], "outer_complex() (in module spatial.dct)": [[341, "spatial.dct.outer_complex"]], "spatial.dct": [[341, "module-spatial.dct"]], "distance_angular_deviation() (in module spatial.distance)": [[342, "spatial.distance.distance_angular_deviation"]], "get_average_synchrony_length_constant_parallel() (in module spatial.distance)": [[342, "spatial.distance.get_average_synchrony_length_constant_parallel"]], "get_averaged_angular_distance() (in module spatial.distance)": [[342, "spatial.distance.get_averaged_angular_distance"]], "get_length_constant_trial() (in module spatial.distance)": [[342, "spatial.distance.get_length_constant_trial"]], "get_pair_distance() (in module spatial.distance)": [[342, "spatial.distance.get_pair_distance"]], "spatial.distance": [[342, "module-spatial.distance"]], "synchrony_length_constant_areas_summary() (in module spatial.distance)": [[342, "spatial.distance.synchrony_length_constant_areas_summary"]], "coalesce() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.coalesce"]], "coalesce_points() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.coalesce_points"]], "cut_array_data() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.cut_array_data"]], "dphidx() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.dPhidx"]], "dphidy() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.dPhidy"]], "find_critical_points() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.find_critical_points"]], "find_critical_potential_points() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.find_critical_potential_points"]], "get_critical_spectra() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.get_critical_spectra"]], "get_phase_gradient_as_complex() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.get_phase_gradient_as_complex"]], "getp() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.getp"]], "getpeaks2d() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.getpeaks2d"]], "grad() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.grad"]], "mirror2d() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.mirror2D"]], "plot_critical_points() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.plot_critical_points"]], "plot_critical_spectra() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.plot_critical_spectra"]], "plot_phase_direction() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.plot_phase_direction"]], "plot_phase_gradient() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.plot_phase_gradient"]], "quickgrad() (in module spatial.fftzeros)": [[343, "spatial.fftzeros.quickgrad"]], "spatial.fftzeros": [[343, "module-spatial.fftzeros"]], "absorbing_gaussian() (in module spatial.kernels)": [[344, "spatial.kernels.absorbing_gaussian"]], "absorbing_laplacian() (in module spatial.kernels)": [[344, "spatial.kernels.absorbing_laplacian"]], "continuum_kernel() (in module spatial.kernels)": [[344, "spatial.kernels.continuum_kernel"]], "cosine_kernel() (in module spatial.kernels)": [[344, "spatial.kernels.cosine_kernel"]], "diffusion_basis() (in module spatial.kernels)": [[344, "spatial.kernels.diffusion_basis"]], "exponential_basis() (in module spatial.kernels)": [[344, "spatial.kernels.exponential_basis"]], "gaussian_2d_kernel() (in module spatial.kernels)": [[344, "spatial.kernels.gaussian_2D_kernel"]], "iterative_orthogonalize_basis() (in module spatial.kernels)": [[344, "spatial.kernels.iterative_orthogonalize_basis"]], "laplace_kernel() (in module spatial.kernels)": [[344, "spatial.kernels.laplace_kernel"]], "laplacian() (in module spatial.kernels)": [[344, "spatial.kernels.laplacian"]], "log_cosine_basis() (in module spatial.kernels)": [[344, "spatial.kernels.log_cosine_basis"]], "log_spline_basis() (in module spatial.kernels)": [[344, "spatial.kernels.log_spline_basis"]], "magickernel() (in module spatial.kernels)": [[344, "spatial.kernels.magickernel"]], "magicsharp() (in module spatial.kernels)": [[344, "spatial.kernels.magicsharp"]], "make_cosine_basis() (in module spatial.kernels)": [[344, "spatial.kernels.make_cosine_basis"]], "spatial.kernels": [[344, "module-spatial.kernels"]], "analytic_signal_coherence() (in module spatial.phase)": [[345, "spatial.phase.analytic_signal_coherence"]], "population_average_amplitude() (in module spatial.phase)": [[345, "spatial.phase.population_average_amplitude"]], "population_kuramoto() (in module spatial.phase)": [[345, "spatial.phase.population_kuramoto"]], "population_median_frequency() (in module spatial.phase)": [[345, "spatial.phase.population_median_frequency"]], "population_median_phase_velocity() (in module spatial.phase)": [[345, "spatial.phase.population_median_phase_velocity"]], "population_normalized_sliding_signal_coherence() (in module spatial.phase)": [[345, "spatial.phase.population_normalized_sliding_signal_coherence"]], "population_phase_coherence() (in module spatial.phase)": [[345, "spatial.phase.population_phase_coherence"]], "population_phase_relative_sliding_kuramoto() (in module spatial.phase)": [[345, "spatial.phase.population_phase_relative_sliding_kuramoto"]], "population_polar_std() (in module spatial.phase)": [[345, "spatial.phase.population_polar_std"]], "population_signal_amplitude_dispersion() (in module spatial.phase)": [[345, "spatial.phase.population_signal_amplitude_dispersion"]], "population_signal_amplitude_precision() (in module spatial.phase)": [[345, "spatial.phase.population_signal_amplitude_precision"]], "population_signal_amplitude_std() (in module spatial.phase)": [[345, "spatial.phase.population_signal_amplitude_std"]], "population_signal_concentration() (in module spatial.phase)": [[345, "spatial.phase.population_signal_concentration"]], "population_signal_description() (in module spatial.phase)": [[345, "spatial.phase.population_signal_description"]], "population_signal_dispersion() (in module spatial.phase)": [[345, "spatial.phase.population_signal_dispersion"]], "population_signal_phase_dispersion() (in module spatial.phase)": [[345, "spatial.phase.population_signal_phase_dispersion"]], "population_signal_phase_precision() (in module spatial.phase)": [[345, "spatial.phase.population_signal_phase_precision"]], "population_signal_phase_std() (in module spatial.phase)": [[345, "spatial.phase.population_signal_phase_std"]], "population_signal_precision() (in module spatial.phase)": [[345, "spatial.phase.population_signal_precision"]], "population_sliding_signal_coherence() (in module spatial.phase)": [[345, "spatial.phase.population_sliding_signal_coherence"]], "population_synchrony() (in module spatial.phase)": [[345, "spatial.phase.population_synchrony"]], "population_synchrony_linear() (in module spatial.phase)": [[345, "spatial.phase.population_synchrony_linear"]], "sliding_population_signal_coherence() (in module spatial.phase)": [[345, "spatial.phase.sliding_population_signal_coherence"]], "spatial.phase": [[345, "module-spatial.phase"]], "interp_bin() (in module spatial.spiking)": [[347, "spatial.spiking.interp_bin"]], "spatial.spiking": [[347, "module-spatial.spiking"]], "coalesce() (in module spatial.triangulation)": [[348, "spatial.triangulation.coalesce"]], "edgesnearby() (in module spatial.triangulation)": [[348, "spatial.triangulation.edgesNearby"]], "mergenearby() (in module spatial.triangulation)": [[348, "spatial.triangulation.mergeNearby"]], "plot_edges() (in module spatial.triangulation)": [[348, "spatial.triangulation.plot_edges"]], "plot_triangles() (in module spatial.triangulation)": [[348, "spatial.triangulation.plot_triangles"]], "spatial.triangulation": [[348, "module-spatial.triangulation"]], "trianglestoedges() (in module spatial.triangulation)": [[348, "spatial.triangulation.trianglesToEdges"]], "uniquerow() (in module spatial.triangulation)": [[348, "spatial.triangulation.uniquerow"]], "z2xy() (in module spatial.triangulation)": [[348, "spatial.triangulation.z2xy"]], "bin_spike_times() (in module spikes.spikes)": [[350, "spikes.spikes.bin_spike_times"]], "bin_spikes_raster() (in module spikes.spikes)": [[350, "spikes.spikes.bin_spikes_raster"]], "cut_spikes() (in module spikes.spikes)": [[350, "spikes.spikes.cut_spikes"]], "pack_cross_correlation_matrix() (in module spikes.spikes)": [[350, "spikes.spikes.pack_cross_correlation_matrix"]], "pp_xcorr() (in module spikes.spikes)": [[350, "spikes.spikes.pp_xcorr"]], "spikes.spikes": [[350, "module-spikes.spikes"]], "times_to_raster() (in module spikes.spikes)": [[350, "spikes.spikes.times_to_raster"]], "txcorr() (in module spikes.spikes)": [[350, "spikes.spikes.txcorr"]], "getfwhm() (in module spikes.waveform)": [[351, "spikes.waveform.getFWHM"]], "getphp() (in module spikes.waveform)": [[351, "spikes.waveform.getPHP"]], "getpt() (in module spikes.waveform)": [[351, "spikes.waveform.getPT"]], "getpthw() (in module spikes.waveform)": [[351, "spikes.waveform.getPTHW"]], "getpvt() (in module spikes.waveform)": [[351, "spikes.waveform.getPVT"]], "getwahp() (in module spikes.waveform)": [[351, "spikes.waveform.getWAHP"]], "is_thin() (in module spikes.waveform)": [[351, "spikes.waveform.is_thin"]], "is_thin_pvt() (in module spikes.waveform)": [[351, "spikes.waveform.is_thin_pvt"]], "minmax() (in module spikes.waveform)": [[351, "spikes.waveform.minmax"]], "normalized_waveform() (in module spikes.waveform)": [[351, "spikes.waveform.normalized_waveform"]], "process() (in module spikes.waveform)": [[351, "spikes.waveform.process"]], "realign() (in module spikes.waveform)": [[351, "spikes.waveform.realign"]], "spikes.waveform": [[351, "module-spikes.waveform"]], "abspolar_stats() (in module stats.circular)": [[354, "stats.circular.abspolar_stats"]], "complex_gaussian() (in module stats.circular)": [[354, "stats.circular.complex_gaussian"]], "fit_vonmises() (in module stats.circular)": [[354, "stats.circular.fit_vonmises"]], "logpolar_gaussian() (in module stats.circular)": [[354, "stats.circular.logpolar_gaussian"]], "logpolar_stats() (in module stats.circular)": [[354, "stats.circular.logpolar_stats"]], "squared_first_circular_moment() (in module stats.circular)": [[354, "stats.circular.squared_first_circular_moment"]], "stats.circular": [[354, "module-stats.circular"]], "autocorrelation_bayes() (in module stats.convolutional)": [[355, "stats.convolutional.autocorrelation_bayes"]], "blockccm() (in module stats.convolutional)": [[355, "stats.convolutional.blockccm"]], "blocksta() (in module stats.convolutional)": [[355, "stats.convolutional.blocksta"]], "ccm() (in module stats.convolutional)": [[355, "stats.convolutional.ccm"]], "ccor() (in module stats.convolutional)": [[355, "stats.convolutional.ccor"]], "construct_lowpass_operator() (in module stats.convolutional)": [[355, "stats.convolutional.construct_lowpass_operator"]], "create_spectral_model() (in module stats.convolutional)": [[355, "stats.convolutional.create_spectral_model"]], "cspect() (in module stats.convolutional)": [[355, "stats.convolutional.cspect"]], "cspectm() (in module stats.convolutional)": [[355, "stats.convolutional.cspectm"]], "reconstruct() (in module stats.convolutional)": [[355, "stats.convolutional.reconstruct"]], "spectreconstruct() (in module stats.convolutional)": [[355, "stats.convolutional.spectreconstruct"]], "spike_lfp_filters() (in module stats.convolutional)": [[355, "stats.convolutional.spike_lfp_filters"]], "sta() (in module stats.convolutional)": [[355, "stats.convolutional.sta"]], "stats.convolutional": [[355, "module-stats.convolutional"]], "adaptive_density_grid() (in module stats.density)": [[356, "stats.density.adaptive_density_grid"]], "gridhist() (in module stats.density)": [[356, "stats.density.gridhist"]], "kdepeak() (in module stats.density)": [[356, "stats.density.kdepeak"]], "knn_1d_density() (in module stats.density)": [[356, "stats.density.knn_1d_density"]], "stats.density": [[356, "module-stats.density"]], "explogpdf() (in module stats.distributions)": [[357, "stats.distributions.explogpdf"]], "gaussian_logpdf() (in module stats.distributions)": [[357, "stats.distributions.gaussian_logpdf"]], "gaussian_pdf() (in module stats.distributions)": [[357, "stats.distributions.gaussian_pdf"]], "poisson_logpdf() (in module stats.distributions)": [[357, "stats.distributions.poisson_logpdf"]], "poisson_pdf() (in module stats.distributions)": [[357, "stats.distributions.poisson_pdf"]], "sample_categorical() (in module stats.distributions)": [[357, "stats.distributions.sample_categorical"]], "stats.distributions": [[357, "module-stats.distributions"]], "fast_kde() (in module stats.fast_kde)": [[359, "stats.fast_kde.fast_kde"]], "image_cov() (in module stats.fast_kde)": [[359, "stats.fast_kde.image_cov"]], "stats.fast_kde": [[359, "module-stats.fast_kde"]], "glmpenaltybernoulli() (in module stats.glm)": [[360, "stats.glm.GLMPenaltyBernoulli"]], "glmpenaltyl2() (in module stats.glm)": [[360, "stats.glm.GLMPenaltyL2"]], "glmpenaltypoisson() (in module stats.glm)": [[360, "stats.glm.GLMPenaltyPoisson"]], "cosine_kernel() (in module stats.glm)": [[360, "stats.glm.cosine_kernel"]], "crossvalidatedauc() (in module stats.glm)": [[360, "stats.glm.crossvalidatedAUC"]], "fitglm() (in module stats.glm)": [[360, "stats.glm.fitGLM"]], "gradientglmfit() (in module stats.glm)": [[360, "stats.glm.gradientglmfit"]], "log_cosine_basis() (in module stats.glm)": [[360, "stats.glm.log_cosine_basis"]], "make_cosine_basis() (in module stats.glm)": [[360, "stats.glm.make_cosine_basis"]], "numeric_grad() (in module stats.glm)": [[360, "stats.glm.numeric_grad"]], "numeric_hess() (in module stats.glm)": [[360, "stats.glm.numeric_hess"]], "ppglmfit() (in module stats.glm)": [[360, "stats.glm.ppglmfit"]], "sexp() (in module stats.glm)": [[360, "stats.glm.sexp"]], "sigmoid() (in module stats.glm)": [[360, "stats.glm.sigmoid"]], "stats.glm": [[360, "module-stats.glm"]], "bernoulliobservationapproximator (class in stats.hmm)": [[363, "stats.hmm.BernoulliObservationApproximator"]], "bernoulliobservationmodel (class in stats.hmm)": [[363, "stats.hmm.BernoulliObservationModel"]], "chisquarecoxapproximator (class in stats.hmm)": [[363, "stats.hmm.ChisquareCoxApproximator"]], "chisquarecoxmodel (class in stats.hmm)": [[363, "stats.hmm.ChisquareCoxModel"]], "diffusiongaussian (class in stats.hmm)": [[363, "stats.hmm.DiffusionGaussian"]], "gaussiancoxapproximator (class in stats.hmm)": [[363, "stats.hmm.GaussianCoxApproximator"]], "gaussiancoxmodel (class in stats.hmm)": [[363, "stats.hmm.GaussianCoxModel"]], "loggaussiancoxapproximator (class in stats.hmm)": [[363, "stats.hmm.LogGaussianCoxApproximator"]], "loggaussiancoxmodel (class in stats.hmm)": [[363, "stats.hmm.LogGaussianCoxModel"]], "mvgouupdate (class in stats.hmm)": [[363, "stats.hmm.MVGOUUpdate"]], "mvgupdate (class in stats.hmm)": [[363, "stats.hmm.MVGUpdate"]], "mvgaussian (class in stats.hmm)": [[363, "stats.hmm.MVGaussian"]], "mvloggaussiancox (class in stats.hmm)": [[363, "stats.hmm.MVLogGaussianCox"]], "mvloggaussiancox.mvpoissonapproximator (class in stats.hmm)": [[363, "stats.hmm.MVLogGaussianCox.MVPoissonApproximator"]], "ougaussian (class in stats.hmm)": [[363, "stats.hmm.OUGaussian"]], "poissonobservationapproximator (class in stats.hmm)": [[363, "stats.hmm.PoissonObservationApproximator"]], "poissonobservationmodel (class in stats.hmm)": [[363, "stats.hmm.PoissonObservationModel"]], "truncatedloggaussiancoxapproximator (class in stats.hmm)": [[363, "stats.hmm.TruncatedLogGaussianCoxApproximator"]], "truncatedloggaussiancoxmodel (class in stats.hmm)": [[363, "stats.hmm.TruncatedLogGaussianCoxModel"]], "truncatedpoissonobservationapproximator (class in stats.hmm)": [[363, "stats.hmm.TruncatedPoissonObservationApproximator"]], "truncatedpoissonobservationmodel (class in stats.hmm)": [[363, "stats.hmm.TruncatedPoissonObservationModel"]], "backward_abstract() (in module stats.hmm)": [[363, "stats.hmm.backward_abstract"]], "baum_welch() (in module stats.hmm)": [[363, "stats.hmm.baum_welch"]], "bwd() (stats.hmm.diffusiongaussian method)": [[363, "stats.hmm.DiffusionGaussian.bwd"]], "bwd() (stats.hmm.mvgouupdate method)": [[363, "stats.hmm.MVGOUUpdate.bwd"]], "bwd() (stats.hmm.mvgupdate method)": [[363, "stats.hmm.MVGUpdate.bwd"]], "bwd() (stats.hmm.ougaussian method)": [[363, "stats.hmm.OUGaussian.bwd"]], "forward_abstract() (in module stats.hmm)": [[363, "stats.hmm.forward_abstract"]], "forward_backward() (in module stats.hmm)": [[363, "stats.hmm.forward_backward"]], "forward_backward_abstract() (in module stats.hmm)": [[363, "stats.hmm.forward_backward_abstract"]], "fwd() (stats.hmm.diffusiongaussian method)": [[363, "stats.hmm.DiffusionGaussian.fwd"]], "fwd() (stats.hmm.mvgouupdate method)": [[363, "stats.hmm.MVGOUUpdate.fwd"]], "fwd() (stats.hmm.mvgupdate method)": [[363, "stats.hmm.MVGUpdate.fwd"]], "fwd() (stats.hmm.ougaussian method)": [[363, "stats.hmm.OUGaussian.fwd"]], "hasnan() (in module stats.hmm)": [[363, "stats.hmm.hasNaN"]], "jump() (in module stats.hmm)": [[363, "stats.hmm.jump"]], "lgcp_observation_minimizer() (in module stats.hmm)": [[363, "stats.hmm.lgcp_observation_minimizer"]], "log_likelihood() (in module stats.hmm)": [[363, "stats.hmm.log_likelihood"]], "poisson_baum_welch() (in module stats.hmm)": [[363, "stats.hmm.poisson_baum_welch"]], "poisson_parameter_guess() (in module stats.hmm)": [[363, "stats.hmm.poisson_parameter_guess"]], "poisson_viterbi_state_infer() (in module stats.hmm)": [[363, "stats.hmm.poisson_viterbi_state_infer"]], "sample() (in module stats.hmm)": [[363, "stats.hmm.sample"]], "stats.hmm": [[363, "module-stats.hmm"]], "viterbi() (in module stats.hmm)": [[363, "stats.hmm.viterbi"]], "viterbi_log() (in module stats.hmm)": [[363, "stats.hmm.viterbi_log"]], "dkl_discrete() (in module stats.information)": [[364, "stats.information.DKL_discrete"]], "discrete_entropy_distribution() (in module stats.information)": [[364, "stats.information.discrete_entropy_distribution"]], "discrete_entropy_samples() (in module stats.information)": [[364, "stats.information.discrete_entropy_samples"]], "poisson_entropy_nats() (in module stats.information)": [[364, "stats.information.poisson_entropy_nats"]], "regularized_discrete_entropy() (in module stats.information)": [[364, "stats.information.regularized_discrete_entropy"]], "stats.information": [[364, "module-stats.information"]], "monte_carlo_expectation() (in module stats.mcint)": [[368, "stats.mcint.monte_carlo_expectation"]], "monte_carlo_moments() (in module stats.mcint)": [[368, "stats.mcint.monte_carlo_moments"]], "stats.mcint": [[368, "module-stats.mcint"]], "minimize_retry() (in module stats.minimize)": [[369, "stats.minimize.minimize_retry"]], "stats.minimize": [[369, "module-stats.minimize"]], "stats.mixtures": [[370, "module-stats.mixtures"]], "two_class_poisson_mixture_model() (in module stats.mixtures)": [[370, "stats.mixtures.two_class_poisson_mixture_model"]], "logmode() (in module stats.modefind)": [[371, "stats.modefind.logmode"]], "logmodeplot() (in module stats.modefind)": [[371, "stats.modefind.logmodeplot"]], "modefind() (in module stats.modefind)": [[371, "stats.modefind.modefind"]], "peakfinder5() (in module stats.modefind)": [[371, "stats.modefind.peakfinder5"]], "stats.modefind": [[371, "module-stats.modefind"]], "benjamini_hochberg_positive_correlations() (in module stats.pvalues)": [[373, "stats.pvalues.benjamini_hochberg_positive_correlations"]], "bootstrap_compare_mean() (in module stats.pvalues)": [[373, "stats.pvalues.bootstrap_compare_mean"]], "bootstrap_compare_median() (in module stats.pvalues)": [[373, "stats.pvalues.bootstrap_compare_median"]], "bootstrap_compare_statistic_two_sided() (in module stats.pvalues)": [[373, "stats.pvalues.bootstrap_compare_statistic_two_sided"]], "bootstrap_compare_statistic_two_sided_parallel() (in module stats.pvalues)": [[373, "stats.pvalues.bootstrap_compare_statistic_two_sided_parallel"]], "bootstrap_mean() (in module stats.pvalues)": [[373, "stats.pvalues.bootstrap_mean"]], "bootstrap_median() (in module stats.pvalues)": [[373, "stats.pvalues.bootstrap_median"]], "bootstrap_statistic_two_sided() (in module stats.pvalues)": [[373, "stats.pvalues.bootstrap_statistic_two_sided"]], "correct_pvalues() (in module stats.pvalues)": [[373, "stats.pvalues.correct_pvalues"]], "correct_pvalues_positive_dependent() (in module stats.pvalues)": [[373, "stats.pvalues.correct_pvalues_positive_dependent"]], "stats.pvalues": [[373, "module-stats.pvalues"]], "damped_cosine() (in module stats.regressions)": [[374, "stats.regressions.damped_cosine"]], "exponential_decay() (in module stats.regressions)": [[374, "stats.regressions.exponential_decay"]], "gaussian_function() (in module stats.regressions)": [[374, "stats.regressions.gaussian_function"]], "half_gaussian_function() (in module stats.regressions)": [[374, "stats.regressions.half_gaussian_function"]], "power_law() (in module stats.regressions)": [[374, "stats.regressions.power_law"]], "robust_line() (in module stats.regressions)": [[374, "stats.regressions.robust_line"]], "stats.regressions": [[374, "module-stats.regressions"]], "weighted_least_squares() (in module stats.regressions)": [[374, "stats.regressions.weighted_least_squares"]]}})