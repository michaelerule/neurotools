Search.setIndex({"docnames": ["dependencies", "functions", "getfftw", "gpu", "gpu.cl", "gpu.cl.device", "gpu.cl.function", "gpu.cl.matrix", "gpu.cpu", "gpu.cpu.util", "gpu.cu", "gpu.cu.convolution", "gpu.cu.device", "gpu.cu.function", "gpu.cu.gpufun", "gpu.cu.graph", "gpu.cu.logic", "gpu.cu.matrix", "gpu.cu.plot", "gpu.cu.sequence", "gpu.cu.statistics", "graphics", "graphics.color", "graphics.image", "graphics.matplotlib", "graphics.plot", "graphics.pygame", "index", "jobs", "jobs.cache", "jobs.closure", "jobs.decorator", "jobs.filenames", "jobs.initialize_system_cache", "jobs.parallel", "linalg", "linalg.arguments", "linalg.matrix", "linalg.operators", "models", "models.izh", "models.lif", "models.rbm", "models.rbm.rbm", "models.rbm.rbm_helper", "models.rbm.rbm_sample", "models.rbm.rbm_utils", "models.rbm.rbm_utils.rbm", "models.rbm.rbm_utils.stutils", "modules", "neurotools", "neurotools.dependencies", "neurotools.encoding", "neurotools.encoding.Huffman", "neurotools.encoding.NaryHuffman", "neurotools.functions", "neurotools.getfftw", "neurotools.gpu", "neurotools.gpu.cl", "neurotools.gpu.cl.device", "neurotools.gpu.cl.function", "neurotools.gpu.cl.matrix", "neurotools.gpu.cpu", "neurotools.gpu.cpu.util", "neurotools.gpu.cu", "neurotools.gpu.cu.convolution", "neurotools.gpu.cu.device", "neurotools.gpu.cu.function", "neurotools.gpu.cu.gpufun", "neurotools.gpu.cu.graph", "neurotools.gpu.cu.logic", "neurotools.gpu.cu.matrix", "neurotools.gpu.cu.plot", "neurotools.gpu.cu.sequence", "neurotools.gpu.cu.statistics", "neurotools.graphics", "neurotools.graphics.color", "neurotools.graphics.colormaps", "neurotools.graphics.dendron", "neurotools.graphics.fabio_maps", "neurotools.graphics.image", "neurotools.graphics.matplotlib", "neurotools.graphics.plot", "neurotools.graphics.pygame", "neurotools.graphics.ztransform_plot_helpers", "neurotools.hdfmat", "neurotools.jobs", "neurotools.jobs.cache", "neurotools.jobs.closure", "neurotools.jobs.filenames", "neurotools.jobs.initialize_system_cache", "neurotools.jobs.ndecorator", "neurotools.jobs.parallel", "neurotools.linalg", "neurotools.linalg.arguments", "neurotools.linalg.matrix", "neurotools.linalg.operators", "neurotools.models", "neurotools.models.izh", "neurotools.models.lif", "neurotools.models.rbm", "neurotools.models.rbm.rbm", "neurotools.models.rbm.rbm_helper", "neurotools.models.rbm.rbm_sample", "neurotools.models.rbm.rbm_utils", "neurotools.models.rbm.rbm_utils.rbm", "neurotools.models.rbm.rbm_utils.stutils", "neurotools.nlab", "neurotools.obsolete", "neurotools.obsolete.encoding", "neurotools.obsolete.encoding.Huffman", "neurotools.obsolete.encoding.NaryHuffman", "neurotools.obsolete.gpu", "neurotools.obsolete.gpu.cl", "neurotools.obsolete.gpu.cl.device", "neurotools.obsolete.gpu.cl.function", "neurotools.obsolete.gpu.cl.matrix", "neurotools.obsolete.gpu.cpu", "neurotools.obsolete.gpu.cpu.util", "neurotools.obsolete.gpu.cu", "neurotools.obsolete.gpu.cu.convolution", "neurotools.obsolete.gpu.cu.device", "neurotools.obsolete.gpu.cu.function", "neurotools.obsolete.gpu.cu.gpufun", "neurotools.obsolete.gpu.cu.graph", "neurotools.obsolete.gpu.cu.logic", "neurotools.obsolete.gpu.cu.matrix", "neurotools.obsolete.gpu.cu.plot", "neurotools.obsolete.gpu.cu.sequence", "neurotools.obsolete.gpu.cu.statistics", "neurotools.obsolete.models", "neurotools.obsolete.models.izh", "neurotools.obsolete.models.lif", "neurotools.obsolete.opto", "neurotools.obsolete.rbm", "neurotools.obsolete.rbm.rbm", "neurotools.obsolete.rbm.rbm_helper", "neurotools.obsolete.rbm.rbm_sample", "neurotools.obsolete.rbm.rbm_utils", "neurotools.obsolete.rbm.rbm_utils.rbm", "neurotools.obsolete.rbm.rbm_utils.stutils", "neurotools.opto", "neurotools.signal", "neurotools.signal.coherence", "neurotools.signal.conv", "neurotools.signal.linenoise", "neurotools.signal.morlet", "neurotools.signal.morlet_coherence", "neurotools.signal.multitaper", "neurotools.signal.ppc", "neurotools.signal.resonator", "neurotools.signal.savitskygolay", "neurotools.signal.sde", "neurotools.signal.signal", "neurotools.spatial", "neurotools.spatial.array", "neurotools.spatial.dct", "neurotools.spatial.distance", "neurotools.spatial.fftzeros", "neurotools.spatial.geometry", "neurotools.spatial.kernels", "neurotools.spatial.masking", "neurotools.spatial.phase", "neurotools.spatial.points", "neurotools.spatial.spatialPSD", "neurotools.spatial.spiking", "neurotools.spatial.triangulation", "neurotools.spatial.wave_parametric_models", "neurotools.spikes", "neurotools.spikes.spikes", "neurotools.spikes.waveform", "neurotools.stats", "neurotools.stats.GLMFit", "neurotools.stats.Gaussian", "neurotools.stats.circular", "neurotools.stats.convolutional", "neurotools.stats.density", "neurotools.stats.distributions", "neurotools.stats.entropy", "neurotools.stats.fast_kde", "neurotools.stats.gaussian (Case Conflict 1)", "neurotools.stats.gaussian (Case Conflict 2)", "neurotools.stats.gaussian (Case Conflict 3)", "neurotools.stats.gaussian (Case Conflict 4)", "neurotools.stats.gaussian (Case Conflict 5)", "neurotools.stats.gaussian (Case Conflict 6)", "neurotools.stats.gaussian (Case Conflict 7)", "neurotools.stats.gaussian (Case Conflict 8)", "neurotools.stats.gaussian (Case Conflict)", "neurotools.stats.glm", "neurotools.stats.gmm", "neurotools.stats.grid_search", "neurotools.stats.history_basis", "neurotools.stats.hmm", "neurotools.stats.information", "neurotools.stats.kent_reimann", "neurotools.stats.lessons", "neurotools.stats.matzner_bar-gad_PLoS_2015", "neurotools.stats.mcint", "neurotools.stats.minimize", "neurotools.stats.mixtures", "neurotools.stats.modefind", "neurotools.stats.mvg", "neurotools.stats.pvalues", "neurotools.stats.regressions", "neurotools.stats.sde", "neurotools.stats.spatiotemporal_glm_utils", "neurotools.stats.stats", "neurotools.system", "neurotools.text", "neurotools.tools", "neurotools.util", "neurotools.util.dependencies", "neurotools.util.functions", "neurotools.util.getfftw", "neurotools.util.hdfmat", "neurotools.util.string", "neurotools.util.system", "neurotools.util.time", "neurotools.util.tools", "nlab", "opto", "signal", "signal.coherence", "signal.conv", "signal.linenoise", "signal.morlet", "signal.morlet_coherence", "signal.multitaper", "signal.ppc", "signal.resonator", "signal.savitskygolay", "signal.signal", "spatial", "spatial.array", "spatial.dct", "spatial.distance", "spatial.fftzeros", "spatial.kernels", "spatial.phase", "spatial.spatialPSD", "spatial.spiking", "spatial.triangulation", "spatial.wave_parametric_models", "spikes", "spikes.spikes", "spikes.waveform", "stats", "stats.GLMFit", "stats.Gaussian", "stats.circular", "stats.convolutional", "stats.density", "stats.distributions", "stats.entropy", "stats.fast_kde", "stats.glm", "stats.gmm", "stats.history_basis", "stats.hmm", "stats.information", "stats.kent_reimann", "stats.lessons", "stats.matzner_bar-gad_PLoS_2015", "stats.mcint", "stats.minimize", "stats.mixtures", "stats.modefind", "stats.mvg", "stats.pvalues", "stats.regressions", "stats.sde", "stats.spatiotemporal_glm_utils", "stats.stats", "system", "tools"], "filenames": ["dependencies.rst", "functions.rst", "getfftw.rst", "gpu.rst", "gpu.cl.rst", "gpu.cl.device.rst", "gpu.cl.function.rst", "gpu.cl.matrix.rst", "gpu.cpu.rst", "gpu.cpu.util.rst", "gpu.cu.rst", "gpu.cu.convolution.rst", "gpu.cu.device.rst", "gpu.cu.function.rst", "gpu.cu.gpufun.rst", "gpu.cu.graph.rst", "gpu.cu.logic.rst", "gpu.cu.matrix.rst", "gpu.cu.plot.rst", "gpu.cu.sequence.rst", "gpu.cu.statistics.rst", "graphics.rst", "graphics.color.rst", "graphics.image.rst", "graphics.matplotlib.rst", "graphics.plot.rst", "graphics.pygame.rst", "index.rst", "jobs.rst", "jobs.cache.rst", "jobs.closure.rst", "jobs.decorator.rst", "jobs.filenames.rst", "jobs.initialize_system_cache.rst", "jobs.parallel.rst", "linalg.rst", "linalg.arguments.rst", "linalg.matrix.rst", "linalg.operators.rst", "models.rst", "models.izh.rst", "models.lif.rst", "models.rbm.rst", "models.rbm.rbm.rst", "models.rbm.rbm_helper.rst", "models.rbm.rbm_sample.rst", "models.rbm.rbm_utils.rst", "models.rbm.rbm_utils.rbm.rst", "models.rbm.rbm_utils.stutils.rst", "modules.rst", "neurotools.rst", "neurotools.dependencies.rst", "neurotools.encoding.rst", "neurotools.encoding.Huffman.rst", "neurotools.encoding.NaryHuffman.rst", "neurotools.functions.rst", "neurotools.getfftw.rst", "neurotools.gpu.rst", "neurotools.gpu.cl.rst", "neurotools.gpu.cl.device.rst", "neurotools.gpu.cl.function.rst", "neurotools.gpu.cl.matrix.rst", "neurotools.gpu.cpu.rst", "neurotools.gpu.cpu.util.rst", "neurotools.gpu.cu.rst", "neurotools.gpu.cu.convolution.rst", "neurotools.gpu.cu.device.rst", "neurotools.gpu.cu.function.rst", "neurotools.gpu.cu.gpufun.rst", "neurotools.gpu.cu.graph.rst", "neurotools.gpu.cu.logic.rst", "neurotools.gpu.cu.matrix.rst", "neurotools.gpu.cu.plot.rst", "neurotools.gpu.cu.sequence.rst", "neurotools.gpu.cu.statistics.rst", "neurotools.graphics.rst", "neurotools.graphics.color.rst", "neurotools.graphics.colormaps.rst", "neurotools.graphics.dendron.rst", "neurotools.graphics.fabio_maps.rst", "neurotools.graphics.image.rst", "neurotools.graphics.matplotlib.rst", "neurotools.graphics.plot.rst", "neurotools.graphics.pygame.rst", "neurotools.graphics.ztransform_plot_helpers.rst", "neurotools.hdfmat.rst", "neurotools.jobs.rst", "neurotools.jobs.cache.rst", "neurotools.jobs.closure.rst", "neurotools.jobs.filenames.rst", "neurotools.jobs.initialize_system_cache.rst", "neurotools.jobs.ndecorator.rst", "neurotools.jobs.parallel.rst", "neurotools.linalg.rst", "neurotools.linalg.arguments.rst", "neurotools.linalg.matrix.rst", "neurotools.linalg.operators.rst", "neurotools.models.rst", "neurotools.models.izh.rst", "neurotools.models.lif.rst", "neurotools.models.rbm.rst", "neurotools.models.rbm.rbm.rst", "neurotools.models.rbm.rbm_helper.rst", "neurotools.models.rbm.rbm_sample.rst", "neurotools.models.rbm.rbm_utils.rst", "neurotools.models.rbm.rbm_utils.rbm.rst", "neurotools.models.rbm.rbm_utils.stutils.rst", "neurotools.nlab.rst", "neurotools.obsolete.rst", "neurotools.obsolete.encoding.rst", "neurotools.obsolete.encoding.Huffman.rst", "neurotools.obsolete.encoding.NaryHuffman.rst", "neurotools.obsolete.gpu.rst", "neurotools.obsolete.gpu.cl.rst", "neurotools.obsolete.gpu.cl.device.rst", "neurotools.obsolete.gpu.cl.function.rst", "neurotools.obsolete.gpu.cl.matrix.rst", "neurotools.obsolete.gpu.cpu.rst", "neurotools.obsolete.gpu.cpu.util.rst", "neurotools.obsolete.gpu.cu.rst", "neurotools.obsolete.gpu.cu.convolution.rst", "neurotools.obsolete.gpu.cu.device.rst", "neurotools.obsolete.gpu.cu.function.rst", "neurotools.obsolete.gpu.cu.gpufun.rst", "neurotools.obsolete.gpu.cu.graph.rst", "neurotools.obsolete.gpu.cu.logic.rst", "neurotools.obsolete.gpu.cu.matrix.rst", "neurotools.obsolete.gpu.cu.plot.rst", "neurotools.obsolete.gpu.cu.sequence.rst", "neurotools.obsolete.gpu.cu.statistics.rst", "neurotools.obsolete.models.rst", "neurotools.obsolete.models.izh.rst", "neurotools.obsolete.models.lif.rst", "neurotools.obsolete.opto.rst", "neurotools.obsolete.rbm.rst", "neurotools.obsolete.rbm.rbm.rst", "neurotools.obsolete.rbm.rbm_helper.rst", "neurotools.obsolete.rbm.rbm_sample.rst", "neurotools.obsolete.rbm.rbm_utils.rst", "neurotools.obsolete.rbm.rbm_utils.rbm.rst", "neurotools.obsolete.rbm.rbm_utils.stutils.rst", "neurotools.opto.rst", "neurotools.signal.rst", "neurotools.signal.coherence.rst", "neurotools.signal.conv.rst", "neurotools.signal.linenoise.rst", "neurotools.signal.morlet.rst", "neurotools.signal.morlet_coherence.rst", "neurotools.signal.multitaper.rst", "neurotools.signal.ppc.rst", "neurotools.signal.resonator.rst", "neurotools.signal.savitskygolay.rst", "neurotools.signal.sde.rst", "neurotools.signal.signal.rst", "neurotools.spatial.rst", "neurotools.spatial.array.rst", "neurotools.spatial.dct.rst", "neurotools.spatial.distance.rst", "neurotools.spatial.fftzeros.rst", "neurotools.spatial.geometry.rst", "neurotools.spatial.kernels.rst", "neurotools.spatial.masking.rst", "neurotools.spatial.phase.rst", "neurotools.spatial.points.rst", "neurotools.spatial.spatialPSD.rst", "neurotools.spatial.spiking.rst", "neurotools.spatial.triangulation.rst", "neurotools.spatial.wave_parametric_models.rst", "neurotools.spikes.rst", "neurotools.spikes.spikes.rst", "neurotools.spikes.waveform.rst", "neurotools.stats.rst", "neurotools.stats.GLMFit.rst", "neurotools.stats.Gaussian.rst", "neurotools.stats.circular.rst", "neurotools.stats.convolutional.rst", "neurotools.stats.density.rst", "neurotools.stats.distributions.rst", "neurotools.stats.entropy.rst", "neurotools.stats.fast_kde.rst", "neurotools.stats.gaussian (Case Conflict 1).rst", "neurotools.stats.gaussian (Case Conflict 2).rst", "neurotools.stats.gaussian (Case Conflict 3).rst", "neurotools.stats.gaussian (Case Conflict 4).rst", "neurotools.stats.gaussian (Case Conflict 5).rst", "neurotools.stats.gaussian (Case Conflict 6).rst", "neurotools.stats.gaussian (Case Conflict 7).rst", "neurotools.stats.gaussian (Case Conflict 8).rst", "neurotools.stats.gaussian (Case Conflict).rst", "neurotools.stats.glm.rst", "neurotools.stats.gmm.rst", "neurotools.stats.grid_search.rst", "neurotools.stats.history_basis.rst", "neurotools.stats.hmm.rst", "neurotools.stats.information.rst", "neurotools.stats.kent_reimann.rst", "neurotools.stats.lessons.rst", "neurotools.stats.matzner_bar-gad_PLoS_2015.rst", "neurotools.stats.mcint.rst", "neurotools.stats.minimize.rst", "neurotools.stats.mixtures.rst", "neurotools.stats.modefind.rst", "neurotools.stats.mvg.rst", "neurotools.stats.pvalues.rst", "neurotools.stats.regressions.rst", "neurotools.stats.sde.rst", "neurotools.stats.spatiotemporal_glm_utils.rst", "neurotools.stats.stats.rst", "neurotools.system.rst", "neurotools.text.rst", "neurotools.tools.rst", "neurotools.util.rst", "neurotools.util.dependencies.rst", "neurotools.util.functions.rst", "neurotools.util.getfftw.rst", "neurotools.util.hdfmat.rst", "neurotools.util.string.rst", "neurotools.util.system.rst", "neurotools.util.time.rst", "neurotools.util.tools.rst", "nlab.rst", "opto.rst", "signal.rst", "signal.coherence.rst", "signal.conv.rst", "signal.linenoise.rst", "signal.morlet.rst", "signal.morlet_coherence.rst", "signal.multitaper.rst", "signal.ppc.rst", "signal.resonator.rst", "signal.savitskygolay.rst", "signal.signal.rst", "spatial.rst", "spatial.array.rst", "spatial.dct.rst", "spatial.distance.rst", "spatial.fftzeros.rst", "spatial.kernels.rst", "spatial.phase.rst", "spatial.spatialPSD.rst", "spatial.spiking.rst", "spatial.triangulation.rst", "spatial.wave_parametric_models.rst", "spikes.rst", "spikes.spikes.rst", "spikes.waveform.rst", "stats.rst", "stats.GLMFit.rst", "stats.Gaussian.rst", "stats.circular.rst", "stats.convolutional.rst", "stats.density.rst", "stats.distributions.rst", "stats.entropy.rst", "stats.fast_kde.rst", "stats.glm.rst", "stats.gmm.rst", "stats.history_basis.rst", "stats.hmm.rst", "stats.information.rst", "stats.kent_reimann.rst", "stats.lessons.rst", "stats.matzner_bar-gad_PLoS_2015.rst", "stats.mcint.rst", "stats.minimize.rst", "stats.mixtures.rst", "stats.modefind.rst", "stats.mvg.rst", "stats.pvalues.rst", "stats.regressions.rst", "stats.sde.rst", "stats.spatiotemporal_glm_utils.rst", "stats.stats.rst", "system.rst", "tools.rst"], "titles": ["dependencies module", "functions module", "getfftw module", "gpu package", "gpu.cl package", "gpu.cl.device module", "gpu.cl.function module", "gpu.cl.matrix module", "gpu.cpu package", "gpu.cpu.util module", "gpu.cu package", "gpu.cu.convolution module", "gpu.cu.device module", "gpu.cu.function module", "gpu.cu.gpufun module", "gpu.cu.graph module", "gpu.cu.logic module", "gpu.cu.matrix module", "gpu.cu.plot module", "gpu.cu.sequence module", "gpu.cu.statistics module", "graphics package", "graphics.color module", "graphics.image module", "graphics.matplotlib module", "graphics.plot module", "graphics.pygame module", "Welcome to Neurotools\u2019s documentation!", "jobs package", "jobs.cache module", "jobs.closure module", "jobs.decorator module", "jobs.filenames module", "jobs.initialize_system_cache module", "jobs.parallel module", "linalg package", "linalg.arguments module", "linalg.matrix module", "linalg.operators module", "models package", "models.izh module", "models.lif module", "models.rbm package", "models.rbm.rbm module", "models.rbm.rbm_helper module", "models.rbm.rbm_sample module", "models.rbm.rbm_utils package", "models.rbm.rbm_utils.rbm module", "models.rbm.rbm_utils.stutils module", "neurotools", "neurotools package", "neurotools.dependencies module", "neurotools.encoding package", "neurotools.encoding.Huffman module", "neurotools.encoding.NaryHuffman module", "neurotools.functions module", "neurotools.getfftw module", "neurotools.gpu package", "neurotools.gpu.cl package", "neurotools.gpu.cl.device module", "neurotools.gpu.cl.function module", "neurotools.gpu.cl.matrix module", "neurotools.gpu.cpu package", "neurotools.gpu.cpu.util module", "neurotools.gpu.cu package", "neurotools.gpu.cu.convolution module", "neurotools.gpu.cu.device module", "neurotools.gpu.cu.function module", "neurotools.gpu.cu.gpufun module", "neurotools.gpu.cu.graph module", "neurotools.gpu.cu.logic module", "neurotools.gpu.cu.matrix module", "neurotools.gpu.cu.plot module", "neurotools.gpu.cu.sequence module", "neurotools.gpu.cu.statistics module", "neurotools.graphics package", "neurotools.graphics.color module", "neurotools.graphics.colormaps module", "neurotools.graphics.dendron module", "neurotools.graphics.fabio_maps module", "neurotools.graphics.image module", "neurotools.graphics.matplotlib module", "neurotools.graphics.plot module", "neurotools.graphics.pygame module", "neurotools.graphics.ztransform_plot_helpers module", "neurotools.hdfmat module", "neurotools.jobs package", "neurotools.jobs.cache module", "neurotools.jobs.closure module", "neurotools.jobs.filenames module", "neurotools.jobs.initialize_system_cache module", "neurotools.jobs.ndecorator module", "neurotools.jobs.parallel module", "neurotools.linalg package", "neurotools.linalg.arguments module", "neurotools.linalg.matrix module", "neurotools.linalg.operators module", "neurotools.models package", "neurotools.models.izh module", "neurotools.models.lif module", "neurotools.models.rbm package", "neurotools.models.rbm.rbm module", "neurotools.models.rbm.rbm_helper module", "neurotools.models.rbm.rbm_sample module", "neurotools.models.rbm.rbm_utils package", "neurotools.models.rbm.rbm_utils.rbm module", "neurotools.models.rbm.rbm_utils.stutils module", "neurotools.nlab module", "neurotools.obsolete package", "neurotools.obsolete.encoding package", "neurotools.obsolete.encoding.Huffman module", "neurotools.obsolete.encoding.NaryHuffman module", "neurotools.obsolete.gpu package", "neurotools.obsolete.gpu.cl package", "neurotools.obsolete.gpu.cl.device module", "neurotools.obsolete.gpu.cl.function module", "neurotools.obsolete.gpu.cl.matrix module", "neurotools.obsolete.gpu.cpu package", "neurotools.obsolete.gpu.cpu.util module", "neurotools.obsolete.gpu.cu package", "neurotools.obsolete.gpu.cu.convolution module", "neurotools.obsolete.gpu.cu.device module", "neurotools.obsolete.gpu.cu.function module", "neurotools.obsolete.gpu.cu.gpufun module", "neurotools.obsolete.gpu.cu.graph module", "neurotools.obsolete.gpu.cu.logic module", "neurotools.obsolete.gpu.cu.matrix module", "neurotools.obsolete.gpu.cu.plot module", "neurotools.obsolete.gpu.cu.sequence module", "neurotools.obsolete.gpu.cu.statistics module", "neurotools.obsolete.models package", "neurotools.obsolete.models.izh module", "neurotools.obsolete.models.lif module", "neurotools.obsolete.opto module", "neurotools.obsolete.rbm package", "neurotools.obsolete.rbm.rbm module", "neurotools.obsolete.rbm.rbm_helper module", "neurotools.obsolete.rbm.rbm_sample module", "neurotools.obsolete.rbm.rbm_utils package", "neurotools.obsolete.rbm.rbm_utils.rbm module", "neurotools.obsolete.rbm.rbm_utils.stutils module", "neurotools.opto module", "neurotools.signal package", "neurotools.signal.coherence module", "neurotools.signal.conv module", "neurotools.signal.linenoise module", "neurotools.signal.morlet module", "neurotools.signal.morlet_coherence module", "neurotools.signal.multitaper module", "neurotools.signal.ppc module", "neurotools.signal.resonator module", "neurotools.signal.savitskygolay module", "neurotools.signal.sde module", "neurotools.signal.signal module", "neurotools.spatial package", "neurotools.spatial.array module", "neurotools.spatial.dct module", "neurotools.spatial.distance module", "neurotools.spatial.fftzeros module", "neurotools.spatial.geometry module", "neurotools.spatial.kernels module", "neurotools.spatial.masking module", "neurotools.spatial.phase module", "neurotools.spatial.points module", "neurotools.spatial.spatialPSD module", "neurotools.spatial.spiking module", "neurotools.spatial.triangulation module", "neurotools.spatial.wave_parametric_models module", "neurotools.spikes package", "neurotools.spikes.spikes module", "neurotools.spikes.waveform module", "neurotools.stats package", "neurotools.stats.GLMFit module", "neurotools.stats.Gaussian module", "neurotools.stats.circular module", "neurotools.stats.convolutional module", "neurotools.stats.density module", "neurotools.stats.distributions module", "neurotools.stats.entropy module", "neurotools.stats.fast_kde module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.gaussian module", "neurotools.stats.glm module", "neurotools.stats.gmm module", "neurotools.stats.grid_search module", "neurotools.stats.history_basis module", "neurotools.stats.hmm module", "neurotools.stats.information module", "neurotools.stats.kent_reimann module", "neurotools.stats.lessons module", "neurotools.stats.matzner_bar-gad_PLoS_2015 module", "neurotools.stats.mcint module", "neurotools.stats.minimize module", "neurotools.stats.mixtures module", "neurotools.stats.modefind module", "neurotools.stats.mvg module", "neurotools.stats.pvalues module", "neurotools.stats.regressions module", "neurotools.stats.sde module", "neurotools.stats.spatiotemporal_glm_utils module", "neurotools.stats.stats module", "neurotools.system module", "neurotools.text module", "neurotools.tools module", "neurotools.util package", "neurotools.util.dependencies module", "neurotools.util.functions module", "neurotools.util.getfftw module", "neurotools.util.hdfmat module", "neurotools.util.string module", "neurotools.util.system module", "neurotools.util.time module", "neurotools.util.tools module", "nlab module", "opto module", "signal package", "signal.coherence module", "signal.conv module", "signal.linenoise module", "signal.morlet module", "signal.morlet_coherence module", "signal.multitaper module", "signal.ppc module", "signal.resonator module", "signal.savitskygolay module", "signal.signal module", "spatial package", "spatial.array module", "spatial.dct module", "spatial.distance module", "spatial.fftzeros module", "spatial.kernels module", "spatial.phase module", "spatial.spatialPSD module", "spatial.spiking module", "spatial.triangulation module", "spatial.wave_parametric_models module", "spikes package", "spikes.spikes module", "spikes.waveform module", "stats package", "stats.GLMFit module", "stats.Gaussian module", "stats.circular module", "stats.convolutional module", "stats.density module", "stats.distributions module", "stats.entropy module", "stats.fast_kde module", "stats.glm module", "stats.gmm module", "stats.history_basis module", "stats.hmm module", "stats.information module", "stats.kent_reimann module", "stats.lessons module", "stats.matzner_bar-gad_PLoS_2015 module", "stats.mcint module", "stats.minimize module", "stats.mixtures module", "stats.modefind module", "stats.mvg module", "stats.pvalues module", "stats.regressions module", "stats.sde module", "stats.spatiotemporal_glm_utils module", "stats.stats module", "system module", "tools module"], "terms": {"commonli": [1, 107, 213, 220], "us": [1, 9, 22, 25, 27, 29, 32, 33, 34, 37, 38, 41, 76, 77, 78, 82, 87, 89, 90, 91, 92, 95, 96, 107, 118, 132, 139, 142, 144, 146, 148, 149, 151, 155, 156, 158, 162, 165, 169, 170, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 198, 199, 201, 203, 204, 213, 216, 219, 220, 222, 224, 226, 228, 229, 231, 234, 235, 237, 239, 241, 245, 246, 247, 251, 252, 253, 255, 256, 259, 260, 264, 265, 267, 269, 270, 275], "mathemat": [1, 107, 213, 220], "high": [1, 22, 33, 76, 90, 107, 142, 146, 155, 156, 170, 213, 220, 222, 226, 234, 235, 246], "precis": [1, 25, 29, 37, 82, 87, 95, 107, 162, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 198, 213, 216, 220, 239, 253, 264], "np": [1, 22, 25, 37, 38, 76, 82, 95, 96, 107, 142, 144, 146, 149, 151, 154, 155, 158, 160, 162, 163, 165, 170, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 200, 201, 204, 213, 219, 220, 222, 224, 226, 229, 231, 233, 234, 237, 238, 239, 241, 246, 247, 251, 252, 253, 255, 256, 259, 260, 266, 267, 270, 275], "longdoubl": [1, 177, 213, 253], "version": [1, 9, 79, 107, 118, 142, 151, 213, 220, 222, 231], "common": [1, 27, 34, 92, 107, 177, 189, 204, 213, 220, 253, 256, 270], "constant": [1, 41, 132, 152, 156, 162, 171, 177, 189, 204, 213, 235, 239, 247, 253, 256, 270], "slog": [1, 50, 211, 213], "x": [1, 2, 9, 25, 29, 30, 37, 38, 41, 82, 87, 88, 95, 96, 107, 118, 132, 139, 142, 144, 146, 148, 149, 151, 154, 155, 156, 158, 160, 162, 163, 165, 166, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 198, 204, 213, 214, 216, 219, 220, 222, 224, 226, 228, 229, 231, 233, 234, 235, 237, 238, 239, 241, 242, 247, 251, 252, 253, 255, 256, 259, 260, 264, 270, 275], "ep": [1, 25, 37, 82, 95, 165, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 204, 213, 241, 252, 259, 260, 270], "3": [1, 22, 27, 29, 30, 32, 38, 76, 78, 87, 88, 89, 96, 107, 142, 151, 155, 160, 166, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 203, 213, 217, 220, 222, 231, 234, 238, 242, 247, 256, 259, 269, 274], "7433921782255195601e": [1, 213], "23": [1, 29, 38, 87, 96, 107, 160, 189, 213, 220, 222, 238, 256], "returntyp": [1, 213], "class": [1, 25, 82, 107, 139, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 200, 213, 219, 220, 222, 247, 259, 266, 275], "numpi": [1, 22, 27, 29, 32, 34, 37, 76, 87, 89, 92, 95, 107, 142, 155, 158, 166, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 200, 213, 219, 220, 222, 234, 237, 242, 247, 252, 256, 266, 275], "float64": [1, 29, 37, 87, 95, 142, 171, 198, 213, 222, 247, 264], "sourc": [1, 9, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 37, 38, 41, 76, 77, 78, 80, 81, 82, 83, 87, 88, 89, 90, 91, 92, 94, 95, 96, 118, 132, 139, 142, 144, 146, 148, 149, 151, 152, 154, 155, 156, 157, 158, 160, 162, 163, 165, 166, 169, 170, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 198, 199, 200, 201, 203, 204, 213, 215, 216, 217, 218, 219, 222, 224, 226, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 245, 246, 247, 251, 252, 253, 255, 256, 259, 260, 264, 265, 266, 267, 269, 270, 274, 275], "safe": [1, 29, 30, 32, 34, 37, 87, 88, 89, 91, 92, 95, 155, 180, 181, 182, 183, 184, 185, 186, 187, 188, 213, 222, 234], "natur": [1, 107, 142, 213, 220, 222], "logarithm": [1, 37, 95, 107, 142, 146, 213, 220, 222, 226], "clip": [1, 25, 82, 142, 213, 222], "valu": [1, 22, 25, 26, 29, 30, 32, 33, 34, 37, 38, 76, 82, 83, 87, 88, 89, 90, 91, 92, 95, 96, 107, 139, 142, 148, 149, 155, 158, 162, 170, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 198, 203, 204, 213, 215, 216, 217, 219, 220, 222, 228, 229, 232, 234, 237, 239, 246, 247, 251, 252, 253, 255, 259, 264, 269, 270, 274, 275], "avoid": [1, 22, 29, 30, 34, 76, 87, 88, 92, 142, 156, 176, 189, 193, 213, 222, 235, 252, 256, 259], "nan": [1, 25, 37, 82, 95, 107, 139, 142, 163, 193, 213, 220, 222, 259], "inf": [1, 139, 163, 213], "sexp": [1, 27, 50, 171, 189, 211, 213, 247, 256], "limit": [1, 22, 25, 29, 76, 82, 87, 107, 160, 193, 203, 213, 220, 238, 259, 269], "26": [1, 38, 96, 107, 160, 189, 213, 220, 222, 238, 256], "641747557046326023": [1, 213], "exponenti": [1, 9, 41, 49, 50, 107, 118, 132, 152, 160, 189, 204, 213, 220, 238, 256, 270], "sigmoid": [1, 27, 50, 139, 171, 189, 211, 213, 247, 256], "1": [1, 9, 22, 23, 25, 26, 29, 30, 33, 34, 37, 38, 41, 76, 78, 80, 82, 83, 87, 88, 90, 92, 95, 96, 107, 118, 132, 139, 142, 146, 149, 151, 152, 155, 156, 157, 158, 160, 162, 165, 169, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 198, 200, 203, 204, 213, 219, 220, 222, 226, 229, 231, 234, 235, 236, 237, 238, 239, 241, 245, 252, 253, 256, 259, 264, 266, 269, 270, 275], "exp": [1, 38, 41, 96, 107, 132, 156, 160, 189, 204, 213, 220, 235, 238, 256, 270], "inversesigmoid": [1, 50, 211, 213], "invers": [1, 29, 37, 87, 95, 107, 142, 156, 160, 162, 180, 181, 182, 183, 184, 185, 186, 187, 188, 213, 220, 222, 235, 238, 239], "log": [1, 29, 34, 38, 87, 92, 96, 107, 139, 156, 160, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 201, 204, 213, 220, 235, 238, 253, 256, 259, 267, 270], "dsigmoid": [1, 50, 211, 213], "fist": [1, 213], "deriv": [1, 107, 142, 151, 156, 158, 170, 203, 213, 220, 222, 231, 235, 237, 246, 269], "g": [1, 9, 22, 27, 29, 33, 50, 76, 87, 90, 107, 118, 142, 171, 211, 213, 220, 222, 247], "evalu": [1, 149, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 198, 199, 213, 229, 252, 253, 256, 264, 265], "accur": [1, 155, 156, 213, 234, 235], "possibl": [1, 29, 33, 37, 87, 90, 95, 107, 160, 163, 213, 220, 222, 232, 238], "f": [1, 9, 25, 29, 30, 34, 41, 49, 50, 82, 87, 88, 91, 92, 107, 118, 132, 142, 146, 148, 149, 151, 155, 162, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 198, 211, 213, 216, 219, 220, 222, 226, 228, 229, 231, 234, 239, 251, 259, 264, 275], "f1": [1, 50, 211, 213], "f2": [1, 50, 211, 213], "second": [1, 22, 41, 76, 107, 132, 142, 146, 151, 155, 158, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 198, 213, 220, 222, 226, 231, 232, 234, 237, 251, 252, 264], "q": [1, 37, 95, 107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 203, 213, 220, 260, 269], "p": [1, 25, 29, 34, 82, 87, 92, 107, 142, 149, 163, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 203, 213, 216, 219, 220, 222, 229, 256, 259, 260, 269, 275], "npdf": [1, 50, 211, 213], "mu": [1, 3, 8, 9, 25, 82, 107, 112, 117, 118, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 213, 220, 253, 256], "sigma": [1, 3, 8, 9, 22, 25, 38, 76, 82, 96, 107, 112, 117, 118, 142, 144, 152, 160, 171, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 213, 220, 222, 224, 238, 247, 253, 259], "univari": [1, 107, 162, 180, 181, 182, 183, 184, 185, 186, 187, 188, 213, 220, 239], "gaussian": [1, 22, 25, 27, 38, 50, 76, 82, 96, 107, 142, 144, 158, 160, 175, 179, 193, 203, 213, 220, 222, 224, 237, 238, 247, 251, 255, 259, 269], "probabl": [1, 27, 30, 37, 88, 95, 107, 156, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 200, 203, 213, 219, 220, 235, 252, 253, 255, 259, 260, 266, 269, 275], "densiti": [1, 27, 50, 107, 169, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 201, 213, 220, 245, 247, 251, 255, 259, 260, 267], "paramet": [1, 22, 25, 26, 29, 32, 33, 34, 37, 38, 76, 82, 83, 87, 89, 90, 91, 92, 95, 96, 107, 139, 142, 144, 146, 148, 149, 151, 152, 154, 155, 156, 158, 160, 162, 163, 165, 169, 170, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 199, 200, 201, 203, 204, 213, 215, 216, 217, 218, 219, 220, 222, 224, 226, 228, 229, 231, 233, 234, 235, 237, 238, 239, 241, 245, 246, 247, 251, 252, 253, 255, 256, 259, 260, 265, 266, 267, 269, 270, 274, 275], "float": [1, 22, 23, 25, 29, 30, 37, 76, 80, 82, 87, 88, 95, 107, 142, 144, 146, 151, 152, 155, 158, 160, 162, 163, 165, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 200, 201, 203, 204, 213, 216, 220, 222, 224, 226, 231, 234, 237, 238, 239, 241, 251, 252, 253, 256, 259, 260, 266, 267, 269, 270], "scalar": [1, 9, 22, 25, 27, 35, 36, 37, 50, 76, 82, 93, 94, 95, 107, 118, 149, 171, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 203, 213, 216, 220, 229, 247, 251, 252, 256, 269], "arrai": [1, 9, 22, 25, 26, 27, 29, 37, 38, 50, 76, 82, 83, 87, 95, 96, 107, 118, 142, 144, 146, 149, 151, 154, 156, 157, 158, 160, 162, 163, 165, 166, 169, 170, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 198, 200, 201, 204, 213, 219, 220, 222, 224, 226, 229, 231, 233, 235, 236, 237, 238, 239, 241, 242, 245, 246, 247, 251, 255, 256, 259, 260, 264, 266, 267, 270, 275], "like": [1, 9, 22, 25, 29, 30, 33, 37, 76, 78, 82, 87, 88, 90, 95, 107, 118, 142, 156, 162, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 198, 204, 213, 217, 220, 222, 235, 239, 247, 255, 256, 259, 260, 264, 270, 274], "mean": [1, 3, 8, 9, 25, 37, 82, 95, 107, 112, 117, 118, 142, 155, 162, 170, 171, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 198, 200, 203, 213, 217, 219, 220, 222, 234, 239, 246, 247, 251, 252, 253, 256, 259, 264, 266, 269, 274, 275], "": [1, 9, 22, 25, 29, 37, 76, 79, 82, 87, 95, 107, 118, 139, 142, 149, 155, 162, 169, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 213, 218, 219, 220, 222, 229, 234, 239, 245, 251, 259, 275], "distribut": [1, 27, 33, 50, 90, 107, 142, 149, 155, 162, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 200, 201, 213, 220, 222, 229, 234, 239, 247, 252, 255, 259, 260, 266, 267], "standard": [1, 9, 22, 25, 29, 38, 76, 82, 87, 91, 96, 107, 118, 142, 144, 152, 155, 160, 162, 171, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 198, 213, 219, 220, 222, 224, 234, 238, 239, 247, 253, 264, 275], "deviat": [1, 9, 25, 38, 82, 96, 107, 118, 142, 144, 152, 155, 160, 162, 171, 177, 213, 220, 222, 224, 234, 238, 239, 247, 253], "point": [1, 9, 25, 27, 37, 50, 82, 95, 107, 118, 139, 142, 154, 155, 156, 158, 162, 165, 166, 169, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 200, 201, 203, 204, 213, 216, 219, 220, 222, 233, 234, 235, 237, 239, 241, 242, 245, 252, 253, 255, 256, 259, 266, 267, 269, 270, 275], "which": [1, 25, 26, 27, 29, 34, 37, 38, 82, 83, 87, 92, 95, 96, 107, 139, 142, 148, 149, 154, 155, 156, 158, 162, 171, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 213, 215, 220, 222, 228, 229, 233, 234, 235, 237, 239, 247, 252, 253, 259], "log_factori": [1, 50, 211, 213], "k": [1, 25, 37, 78, 82, 95, 107, 139, 142, 144, 148, 149, 151, 158, 162, 169, 171, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 201, 213, 220, 222, 224, 228, 229, 231, 237, 239, 245, 247, 251, 252, 253, 256, 259, 267], "return": [1, 9, 22, 25, 26, 29, 30, 32, 33, 34, 37, 38, 76, 78, 82, 83, 87, 88, 89, 90, 91, 92, 95, 96, 107, 118, 139, 142, 144, 146, 148, 149, 151, 152, 154, 155, 156, 158, 160, 162, 163, 165, 166, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 198, 199, 200, 201, 203, 204, 213, 215, 216, 217, 218, 219, 220, 222, 224, 226, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 241, 242, 247, 251, 252, 253, 255, 256, 259, 260, 264, 265, 266, 267, 269, 270, 274, 275], "factori": [1, 213], "take": [1, 29, 34, 37, 87, 92, 95, 107, 142, 149, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 203, 213, 220, 222, 229, 247, 269], "sum": [1, 9, 37, 95, 107, 118, 142, 146, 148, 169, 177, 193, 203, 213, 219, 220, 222, 226, 228, 245, 253, 259, 269, 275], "n": [1, 9, 22, 25, 37, 38, 41, 76, 82, 95, 96, 107, 118, 132, 142, 144, 151, 152, 160, 162, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 198, 213, 216, 219, 220, 222, 224, 231, 238, 239, 241, 256, 259, 260, 264, 275], "slow": [1, 29, 33, 87, 90, 213], "numer": [1, 25, 82, 91, 107, 142, 146, 156, 158, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 213, 216, 220, 222, 226, 235, 237, 247, 256, 259, 260], "more": [1, 22, 25, 29, 32, 76, 82, 87, 89, 107, 139, 149, 155, 156, 157, 162, 171, 175, 177, 193, 199, 203, 213, 219, 220, 229, 234, 235, 236, 239, 247, 251, 253, 259, 265, 269, 275], "than": [1, 25, 29, 32, 37, 38, 82, 87, 89, 95, 96, 107, 139, 142, 148, 149, 154, 158, 171, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 201, 203, 213, 220, 222, 228, 229, 233, 237, 247, 251, 253, 255, 259, 267, 269], "approxim": [1, 37, 95, 107, 139, 193, 194, 201, 213, 220, 259, 260, 267], "should": [1, 25, 29, 32, 33, 37, 82, 87, 89, 90, 95, 107, 142, 155, 156, 158, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 200, 203, 213, 219, 220, 222, 234, 235, 237, 247, 259, 266, 269, 275], "an": [1, 9, 25, 27, 29, 30, 32, 37, 38, 41, 82, 87, 88, 89, 91, 95, 96, 107, 118, 132, 139, 142, 152, 155, 158, 162, 166, 169, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 203, 204, 213, 215, 216, 217, 219, 220, 222, 234, 237, 239, 242, 245, 247, 252, 255, 256, 259, 269, 270, 274, 275], "integ": [1, 9, 22, 25, 29, 33, 76, 82, 87, 90, 107, 118, 142, 148, 149, 169, 176, 177, 193, 213, 216, 220, 222, 228, 229, 245, 252, 253, 259], "ftwthr": [2, 50, 211, 214], "cl": [3, 57, 108, 112], "submodul": [3, 27, 49, 57, 112], "devic": [3, 4, 10, 57, 58, 64, 112, 113, 119], "function": [3, 4, 9, 10, 22, 25, 27, 29, 30, 32, 33, 34, 37, 38, 41, 50, 57, 58, 64, 76, 82, 87, 88, 89, 90, 91, 92, 95, 96, 107, 112, 113, 118, 119, 132, 139, 142, 144, 148, 149, 152, 156, 157, 158, 160, 162, 169, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 198, 199, 200, 203, 211, 218, 219, 220, 222, 224, 228, 229, 232, 235, 236, 237, 238, 239, 245, 247, 251, 252, 253, 255, 256, 259, 264, 265, 266, 269, 275], "matrix": [3, 4, 9, 10, 25, 27, 35, 38, 50, 57, 58, 64, 82, 93, 96, 107, 112, 113, 118, 119, 142, 148, 162, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 220, 222, 228, 239, 247, 251, 255, 256, 259], "cpu": [3, 57, 108, 112, 146, 226], "util": [3, 8, 27, 49, 50, 57, 62, 112, 117, 160, 165, 238, 241], "document": [3, 8, 9, 91, 112, 117, 118, 142, 171, 175, 204, 222, 247, 251, 270], "flat": [3, 8, 9, 112, 117, 118], "compos": [3, 8, 9, 30, 88, 112, 117, 118], "dot": [3, 8, 9, 37, 95, 112, 117, 118, 180, 181, 182, 183, 184, 185, 186, 187, 188], "length": [3, 8, 9, 22, 25, 38, 76, 82, 96, 107, 112, 117, 118, 142, 148, 151, 162, 163, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 203, 204, 219, 220, 222, 228, 231, 239, 251, 256, 269, 270, 275], "idivup": [3, 8, 9, 112, 117, 118], "fanci": [3, 8, 9, 112, 117, 118], "elem": [3, 8, 9, 112, 117, 118], "cmap": [3, 8, 9, 25, 82, 112, 117, 118, 158, 237], "mmap": [3, 8, 9, 112, 117, 118], "ldif": [3, 8, 9, 112, 117, 118], "lsum": [3, 8, 9, 112, 117, 118], "lmul": [3, 8, 9, 112, 117, 118], "ldiv": [3, 8, 9, 27, 35, 37, 50, 93, 95, 112, 117, 118], "lpow": [3, 8, 9, 112, 117, 118], "ldif2": [3, 8, 9, 112, 117, 118], "lsum2": [3, 8, 9, 112, 117, 118], "lmul2": [3, 8, 9, 112, 117, 118], "ldiv2": [3, 8, 9, 112, 117, 118], "lpow2": [3, 8, 9, 112, 117, 118], "scale": [3, 8, 9, 25, 82, 107, 112, 117, 118, 142, 155, 156, 158, 204, 220, 222, 234, 235, 237, 270], "shift": [3, 8, 9, 107, 112, 117, 118, 142, 162, 220, 222, 239], "var": [3, 8, 9, 112, 117, 118, 142, 193, 219, 222, 259, 275], "svar": [3, 8, 9, 112, 117, 118], "std": [3, 8, 9, 107, 112, 117, 118, 142, 219, 220, 222, 275], "sstd": [3, 8, 9, 112, 117, 118], "sem": [3, 8, 9, 112, 117, 118], "norm": [3, 8, 9, 37, 95, 107, 112, 117, 118, 220], "cov": [3, 8, 9, 107, 112, 117, 118, 179, 220, 255], "corr": [3, 8, 9, 112, 117, 118], "mdif": [3, 8, 9, 112, 117, 118], "msum": [3, 8, 9, 112, 117, 118], "mmul": [3, 8, 9, 112, 117, 118], "mdiv": [3, 8, 9, 112, 117, 118], "mpow": [3, 8, 9, 112, 117, 118], "mmean": [3, 8, 9, 112, 117, 118], "mstd": [3, 8, 9, 112, 117, 118], "mvar": [3, 8, 9, 112, 117, 118], "rnorm": [3, 8, 9, 112, 117, 118], "cut": [3, 8, 9, 107, 112, 117, 118, 142, 155, 169, 220, 222, 234, 245], "cu": [3, 57, 108, 112], "convolut": [3, 10, 27, 50, 57, 64, 112, 119, 142, 144, 151, 160, 171, 179, 222, 224, 231, 238, 247, 255], "gpufun": [3, 10, 57, 64, 112, 119], "graph": [3, 10, 25, 29, 57, 64, 82, 87, 107, 112, 119, 139, 160, 220, 238], "logic": [3, 10, 57, 64, 112, 119, 219, 275], "plot": [3, 10, 21, 23, 24, 27, 37, 41, 50, 57, 64, 75, 80, 81, 95, 107, 112, 119, 132, 139, 158, 166, 201, 204, 220, 237, 242, 267, 270], "sequenc": [3, 10, 32, 57, 64, 89, 107, 112, 119, 142, 175, 176, 193, 220, 222, 251, 252, 259], "statist": [3, 10, 27, 57, 64, 107, 112, 119, 142, 149, 155, 157, 162, 171, 203, 220, 222, 229, 234, 236, 239, 247, 269], "here": [8, 27, 29, 34, 87, 92, 107, 117, 139, 149, 170, 179, 220, 229, 246, 255], "i": [8, 9, 22, 25, 26, 27, 29, 30, 32, 33, 34, 37, 38, 41, 76, 82, 83, 87, 88, 89, 90, 92, 95, 96, 107, 117, 118, 132, 139, 142, 144, 146, 148, 149, 155, 156, 158, 160, 162, 163, 165, 170, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 198, 201, 203, 215, 216, 217, 219, 220, 222, 224, 226, 228, 229, 232, 234, 235, 237, 238, 239, 241, 246, 247, 251, 252, 253, 255, 256, 259, 260, 264, 267, 269, 274, 275], "where": [8, 25, 29, 34, 37, 41, 82, 87, 92, 95, 107, 117, 132, 142, 155, 162, 171, 189, 219, 220, 222, 234, 239, 247, 256, 275], "librari": [8, 29, 33, 34, 37, 87, 90, 92, 95, 107, 117, 220], "live": [8, 117], "name": [9, 25, 26, 29, 30, 82, 83, 87, 88, 107, 118, 142, 171, 199, 219, 220, 222, 247, 265, 275], "docstr": [9, 29, 87, 118], "thi": [9, 22, 25, 27, 29, 30, 33, 34, 37, 38, 41, 76, 82, 87, 88, 90, 92, 95, 96, 107, 118, 132, 139, 142, 144, 146, 148, 149, 155, 156, 157, 158, 160, 162, 169, 170, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 198, 199, 200, 201, 203, 216, 217, 219, 220, 222, 224, 226, 228, 229, 234, 235, 236, 237, 238, 239, 245, 246, 247, 251, 255, 256, 259, 264, 265, 266, 267, 269, 274, 275], "add": [9, 25, 82, 107, 118, 142, 171, 211, 216, 219, 220, 222, 247, 275], "anonym": [9, 118], "lambda": [9, 34, 92, 107, 118, 204, 220, 270], "sphinx": [9, 118], "autodoc": [9, 118], "also": [9, 27, 29, 34, 37, 41, 77, 78, 87, 92, 95, 107, 118, 132, 139, 142, 149, 155, 156, 162, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 203, 220, 222, 229, 234, 235, 239, 269], "accept": [9, 25, 82, 107, 118, 142, 149, 155, 166, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 201, 203, 220, 222, 229, 234, 242, 245, 256, 259, 267, 269], "first": [9, 22, 34, 37, 76, 92, 95, 107, 118, 142, 146, 148, 155, 158, 162, 171, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 203, 220, 222, 226, 228, 232, 234, 237, 239, 247, 251, 259, 269], "tripl": [9, 118], "quot": [9, 118], "string": [9, 22, 25, 29, 32, 33, 50, 76, 78, 82, 87, 89, 90, 91, 107, 118, 142, 158, 171, 176, 211, 215, 217, 218, 219, 220, 222, 237, 247, 252, 274, 275], "follo": [9, 118], "declataion": [9, 118], "arr": [9, 107, 118, 220], "A": [9, 25, 29, 37, 82, 87, 95, 107, 118, 142, 155, 162, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 203, 220, 222, 232, 234, 239, 247, 255, 259, 269], "naiv": [9, 118], "flatten": [9, 78, 118, 142, 222], "concaten": [9, 118, 216], "list": [9, 22, 25, 29, 34, 37, 76, 78, 82, 87, 91, 92, 95, 107, 118, 142, 146, 148, 149, 155, 163, 166, 169, 171, 176, 189, 191, 194, 201, 203, 204, 216, 219, 220, 222, 226, 228, 229, 234, 242, 245, 247, 252, 256, 260, 267, 269, 270, 275], "via": [9, 25, 27, 30, 33, 34, 37, 82, 88, 90, 92, 95, 118, 142, 217, 222, 274], "lot": [9, 118], "copi": [9, 25, 29, 82, 87, 107, 118, 142, 156, 175, 220, 222, 235, 251], "curri": [9, 29, 87, 118], "composit": [9, 118], "oper": [9, 27, 35, 37, 50, 93, 95, 118, 142, 162, 171, 175, 193, 219, 222, 239, 247, 251, 259, 275], "make": [9, 25, 29, 30, 82, 87, 88, 107, 118, 149, 175, 203, 219, 220, 229, 251, 269, 275], "b": [9, 22, 25, 34, 37, 38, 76, 82, 92, 95, 96, 107, 118, 142, 156, 160, 171, 175, 189, 193, 203, 204, 219, 220, 222, 235, 238, 247, 251, 256, 259, 269, 270, 275], "comput": [9, 27, 29, 33, 37, 87, 90, 95, 107, 118, 139, 142, 146, 148, 149, 151, 155, 156, 157, 158, 162, 165, 166, 169, 171, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 204, 220, 222, 226, 228, 229, 231, 234, 235, 236, 237, 239, 241, 242, 245, 247, 251, 253, 259, 260, 270], "product": [9, 37, 38, 95, 96, 107, 118, 156, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 235, 238], "two": [9, 22, 25, 29, 30, 34, 37, 38, 76, 82, 87, 88, 92, 95, 96, 107, 118, 142, 144, 148, 155, 156, 158, 163, 166, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 200, 203, 216, 220, 222, 224, 228, 232, 234, 235, 237, 242, 245, 256, 259, 266, 269], "vector": [9, 22, 37, 76, 95, 107, 118, 142, 171, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 203, 216, 220, 222, 247, 251, 253, 256, 259, 260, 269], "v": [9, 22, 25, 37, 41, 76, 82, 95, 107, 118, 132, 171, 203, 216, 220, 247, 269], "magnitud": [9, 22, 25, 76, 82, 107, 118, 142, 155, 158, 162, 179, 204, 220, 222, 234, 237, 239, 255, 270], "interpret": [9, 118, 142, 155, 162, 222, 234, 239], "divid": [9, 37, 95, 118, 142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 222], "round": [9, 25, 38, 82, 96, 107, 118, 220], "up": [9, 25, 33, 34, 82, 90, 92, 107, 118, 169, 220, 245], "nearest": [9, 25, 82, 118, 155, 158, 163, 169, 176, 234, 237, 245, 252], "eqival": [9, 118], "ceil": [9, 118, 142, 222], "wap": [9, 118], "math": [9, 118], "markup": [9, 118], "code": [9, 22, 27, 29, 30, 33, 34, 37, 41, 76, 87, 88, 90, 92, 95, 107, 118, 132, 149, 156, 158, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 203, 220, 222, 229, 235, 237, 255, 269], "pyplot": [9, 25, 82, 107, 118, 220], "creat": [9, 25, 29, 30, 33, 34, 37, 82, 87, 88, 90, 91, 92, 95, 107, 118, 142, 156, 219, 220, 222, 235, 275], "elementwis": [9, 118], "binari": [9, 22, 76, 118, 142, 189, 193, 222, 256, 259], "For": [9, 25, 27, 29, 33, 82, 87, 90, 107, 118, 139, 142, 148, 151, 162, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 198, 203, 220, 222, 228, 231, 239, 247, 252, 259, 264, 269], "exampl": [9, 29, 33, 87, 90, 107, 118, 142, 160, 162, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 198, 200, 204, 219, 220, 222, 238, 239, 247, 252, 259, 260, 264, 266, 270, 275], "y": [9, 25, 37, 41, 82, 95, 107, 118, 132, 142, 148, 154, 155, 158, 163, 166, 171, 176, 179, 189, 193, 204, 218, 220, 222, 228, 233, 234, 237, 242, 247, 252, 255, 256, 259, 270], "lista": [9, 118], "listb": [9, 118], "third": [9, 107, 118, 151, 191, 220, 231], "contain": [9, 29, 30, 32, 33, 37, 87, 88, 89, 90, 91, 95, 107, 118, 139, 142, 155, 156, 160, 170, 171, 193, 216, 220, 222, 234, 235, 238, 246, 247, 259], "equival": [9, 107, 118, 142, 220, 222], "zip": [9, 37, 95, 118], "verion": [9, 118], "map": [9, 22, 25, 29, 33, 34, 76, 77, 79, 82, 87, 90, 92, 118, 155, 156, 158, 166, 219, 234, 235, 237, 242, 275], "succesor": [9, 118], "would": [9, 41, 107, 118, 132, 220], "new": [9, 29, 33, 37, 87, 90, 95, 107, 118, 142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 215, 220, 222, 259], "ad": [9, 107, 118, 142, 171, 189, 220, 222, 247, 256], "everi": [9, 118, 155, 158, 162, 171, 193, 234, 237, 239, 247, 259], "element": [9, 30, 37, 38, 88, 95, 96, 107, 118, 160, 171, 189, 191, 220, 238, 247, 256], "argument": [9, 25, 27, 29, 30, 32, 34, 35, 50, 82, 87, 88, 89, 91, 92, 93, 107, 118, 142, 146, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 219, 220, 222, 226, 232, 242, 256, 275], "over": [9, 22, 25, 29, 30, 32, 33, 34, 76, 82, 87, 88, 89, 90, 92, 107, 118, 142, 148, 155, 157, 162, 169, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 219, 220, 222, 228, 234, 236, 239, 245, 251, 255, 259, 275], "wise": [9, 37, 95, 118], "differ": [9, 22, 29, 30, 34, 37, 38, 41, 76, 87, 88, 92, 95, 96, 107, 118, 132, 142, 144, 193, 200, 203, 220, 222, 224, 259, 266, 269], "ratio": [9, 25, 82, 107, 118, 155, 158, 220, 234, 237], "from": [9, 25, 27, 29, 33, 34, 37, 38, 82, 87, 90, 91, 92, 95, 96, 107, 118, 139, 142, 149, 152, 155, 156, 157, 160, 162, 163, 166, 171, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 199, 200, 203, 204, 215, 219, 220, 222, 229, 234, 235, 236, 238, 239, 242, 247, 251, 252, 256, 259, 260, 265, 266, 269, 270, 275], "pair": [9, 25, 82, 118, 142, 163, 175, 222, 251], "multipl": [9, 25, 82, 107, 118, 142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 203, 220, 222, 269], "e": [9, 27, 29, 33, 37, 87, 90, 95, 107, 118, 142, 156, 171, 220, 222, 235, 247], "2": [9, 22, 25, 29, 30, 32, 34, 37, 38, 41, 76, 82, 87, 88, 89, 92, 95, 96, 107, 118, 132, 142, 144, 148, 151, 155, 156, 160, 163, 165, 166, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 198, 204, 219, 220, 222, 224, 228, 231, 234, 235, 238, 241, 242, 246, 256, 259, 264, 270, 275], "produc": [9, 107, 118, 142, 179, 220, 222, 255], "doubl": [9, 29, 87, 107, 118, 144, 220, 224], "each": [9, 22, 25, 29, 30, 34, 76, 82, 87, 88, 92, 107, 118, 139, 142, 146, 148, 149, 155, 162, 163, 171, 176, 177, 179, 191, 193, 200, 220, 222, 226, 228, 229, 234, 239, 247, 252, 253, 255, 259, 266], "pass": [9, 25, 29, 30, 34, 82, 87, 88, 92, 107, 118, 139, 142, 146, 151, 156, 162, 166, 175, 191, 193, 199, 220, 222, 226, 231, 235, 239, 242, 251, 259, 265], "popul": [9, 25, 27, 82, 107, 118, 148, 162, 203, 216, 220, 228, 239, 269], "varianc": [9, 25, 82, 107, 118, 142, 149, 171, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 203, 220, 222, 229, 247, 251, 269], "sampl": [9, 22, 25, 27, 37, 38, 41, 50, 76, 82, 95, 96, 107, 118, 132, 138, 139, 142, 146, 148, 149, 151, 152, 155, 156, 160, 162, 169, 171, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 198, 203, 216, 220, 222, 226, 228, 229, 231, 234, 235, 238, 239, 245, 247, 251, 252, 255, 256, 259, 260, 264, 269], "averag": [9, 25, 41, 82, 107, 118, 132, 142, 148, 155, 162, 166, 171, 175, 204, 220, 222, 228, 234, 239, 242, 247, 251, 270], "error": [9, 25, 30, 32, 34, 37, 82, 88, 89, 91, 92, 95, 107, 118, 139, 142, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 198, 199, 204, 220, 222, 247, 264, 265, 270], "l": [9, 22, 25, 37, 38, 76, 82, 95, 96, 107, 118, 142, 146, 158, 160, 162, 177, 189, 193, 194, 204, 220, 222, 226, 237, 238, 239, 253, 256, 259, 260, 270], "normal": [9, 34, 38, 49, 50, 92, 96, 107, 118, 142, 155, 160, 169, 170, 171, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 220, 222, 234, 238, 245, 246, 247, 253, 256], "its": [9, 30, 33, 34, 37, 88, 90, 92, 95, 107, 118, 142, 151, 156, 162, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 222, 231, 235, 239, 246], "covari": [9, 25, 27, 37, 38, 50, 82, 95, 96, 107, 118, 162, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 220, 239, 247, 251, 255, 256, 259], "pearson": [9, 118, 171, 247], "correl": [9, 107, 118, 142, 169, 171, 175, 203, 220, 222, 245, 247, 251, 269], "coeffici": [9, 38, 96, 107, 118, 149, 155, 162, 171, 220, 229, 234, 239, 247], "row": [9, 27, 35, 37, 50, 93, 95, 107, 118, 155, 158, 166, 220, 234, 237, 242], "independ": [9, 37, 95, 107, 118, 149, 171, 203, 220, 229, 247, 269], "mat": [9, 29, 87, 118, 215, 219, 275], "rowlen": [9, 118], "ani": [9, 29, 34, 78, 87, 92, 107, 118, 142, 149, 155, 189, 193, 194, 220, 222, 229, 234, 256, 259, 260], "subscript": [9, 118], "object": [9, 25, 26, 29, 30, 37, 82, 83, 87, 88, 91, 95, 118, 139, 142, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 199, 204, 215, 216, 219, 222, 232, 247, 256, 259, 265, 270, 275], "rang": [9, 25, 38, 82, 96, 107, 118, 142, 160, 162, 169, 189, 193, 220, 222, 238, 239, 245, 256, 259], "can": [9, 22, 25, 27, 29, 30, 32, 33, 34, 38, 76, 78, 82, 87, 88, 89, 90, 92, 96, 107, 118, 139, 142, 149, 155, 169, 171, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 199, 219, 220, 222, 229, 232, 234, 245, 247, 251, 260, 265, 275], "facilit": [9, 118], "creation": [9, 118], "form": [9, 22, 25, 33, 37, 76, 82, 90, 95, 107, 118, 139, 142, 165, 191, 193, 220, 222, 241, 259], "major": [9, 25, 82, 118, 155, 234], "pack": [9, 22, 37, 76, 95, 107, 118, 220], "instanc": [9, 25, 29, 82, 87, 107, 118, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "you": [9, 34, 92, 107, 118, 139, 142, 149, 171, 189, 191, 193, 219, 220, 222, 229, 247, 256, 259, 275], "had": [9, 107, 118, 220], "100x100": [9, 118], "gpuarrai": [9, 118], "want": [9, 29, 87, 107, 118, 139, 142, 149, 189, 193, 220, 222, 229, 256, 259], "repres": [9, 29, 32, 87, 89, 107, 118, 151, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 216, 219, 220, 231, 242, 275], "100": [9, 41, 107, 118, 132, 142, 148, 149, 162, 169, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 220, 222, 228, 229, 239, 245, 247, 252, 259], "size": [9, 25, 33, 34, 37, 38, 82, 90, 92, 95, 96, 107, 118, 139, 142, 144, 149, 155, 158, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 203, 216, 219, 220, 222, 224, 229, 234, 237, 247, 251, 255, 260, 269, 275], "slice": [9, 118, 142, 222], "your": [9, 34, 92, 118, 189, 256], "origin": [9, 22, 25, 27, 33, 37, 76, 82, 90, 95, 118, 142, 200, 204, 219, 222, 266, 270, 275], "most": [9, 27, 29, 32, 87, 89, 107, 118, 142, 175, 193, 200, 220, 222, 251, 259, 266], "same": [9, 25, 29, 30, 37, 82, 87, 88, 95, 107, 118, 142, 158, 162, 169, 171, 179, 219, 220, 222, 237, 239, 245, 247, 255, 275], "underli": [9, 29, 87, 107, 118, 142, 155, 162, 220, 222, 234, 239], "section": [9, 118, 144, 224], "memori": [9, 33, 90, 118], "color": [21, 25, 26, 27, 50, 75, 77, 78, 79, 82, 83, 107, 220], "rgb2hex": [21, 22, 27, 50, 75, 76], "hex2rgb": [21, 22, 27, 50, 75, 76], "hsv2rgb": [21, 22, 27, 50, 75, 76], "light": [21, 22, 25, 27, 50, 75, 76, 82], "luminance_matrix": [21, 22, 27, 50, 75, 76], "match_lumin": [21, 22, 27, 50, 75, 76], "rotat": [21, 22, 25, 27, 37, 38, 50, 75, 76, 82, 95, 96, 142, 149, 158, 170, 222, 229, 237, 246], "rgbtohcl": [21, 22, 27, 50, 75, 76], "hue_angl": [21, 22, 27, 50, 75, 76], "hcl2rgb": [21, 22, 27, 50, 75, 76], "circularly_smooth_colormap": [21, 22, 27, 50, 75, 76], "isoluminance1": [21, 22, 27, 50, 75, 76], "isoluminance2": [21, 22, 27, 50, 75, 76], "isoluminance3": [21, 22, 27, 50, 75, 76], "isoluminance4": [21, 22, 27, 50, 75, 76], "lighthu": [21, 22, 27, 50, 75, 76], "darkhu": [21, 22, 27, 50, 75, 76], "medhu": [21, 22, 27, 50, 75, 76], "radl2rgb": [21, 22, 27, 50, 75, 76], "radl2rgblut": [21, 22, 27, 50, 75, 76], "complexhlarr2rgb": [21, 22, 27, 50, 75, 76], "color_boxplot": [21, 22, 27, 50, 75, 76], "hex_pack_bgr": [21, 22, 27, 50, 75, 76], "code_to_16bit": [21, 22, 27, 50, 75, 76], "bit16_rgb_to_tupl": [21, 22, 27, 50, 75, 76], "enumerate_fast_color": [21, 22, 27, 50, 75, 76], "tuple_to_bit16": [21, 22, 27, 50, 75, 76], "tuple_to_bit24": [21, 22, 27, 50, 75, 76], "bit16_print_color": [21, 22, 27, 50, 75, 76], "show_fast_pallet": [21, 22, 27, 50, 75, 76], "show_complete_fast_pallet": [21, 22, 27, 50, 75, 76], "show_complete_fastest_pallet": [21, 22, 27, 50, 75, 76], "show_hex_pallet": [21, 22, 27, 50, 75, 76], "imag": [21, 25, 26, 27, 50, 75, 82, 83, 156, 179, 203, 235, 255, 269], "median_cent": [21, 23, 27, 50, 75, 80], "mean_cent": [21, 23, 27, 50, 75, 80], "unit": [21, 23, 25, 27, 41, 50, 75, 80, 82, 107, 132, 139, 142, 155, 158, 162, 169, 171, 176, 220, 222, 234, 237, 239, 245, 247, 252], "visualize_deriv": [21, 23, 27, 50, 75, 80], "matplotlib": [21, 25, 27, 50, 75, 77, 79, 82, 107, 158, 166, 220, 237, 242], "hide_toolbar": [21, 24, 27, 50, 75, 81], "start": [21, 24, 25, 26, 27, 50, 75, 81, 82, 83, 107, 139, 142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 222], "draw_arrai": [21, 24, 26, 27, 50, 75, 81, 83], "simpleaxi": [21, 25, 27, 37, 50, 75, 82, 95], "rightaxi": [21, 25, 27, 50, 75, 82], "simpleraxi": [21, 25, 27, 50, 75, 82], "simplerright": [21, 25, 27, 50, 75, 82], "noaxi": [21, 25, 27, 50, 75, 82], "nicebp": [21, 25, 27, 50, 75, 82], "colored_boxplot": [21, 25, 27, 50, 75, 82], "nicei": [21, 25, 27, 50, 75, 82], "nicex": [21, 25, 27, 50, 75, 82], "nicexi": [21, 25, 27, 50, 75, 82], "positivex": [21, 25, 27, 50, 75, 82], "positivei": [21, 25, 27, 50, 75, 82], "positivexi": [21, 25, 27, 50, 75, 82], "xylim": [21, 25, 27, 50, 75, 82], "noclip": [21, 25, 27, 50, 75, 82], "notick": [21, 25, 27, 50, 75, 82], "nox": [21, 25, 27, 50, 75, 82], "noi": [21, 25, 27, 50, 75, 82], "noxyax": [21, 25, 27, 50, 75, 82], "noxlabel": [21, 25, 27, 50, 75, 82], "noylabel": [21, 25, 27, 50, 75, 82], "nolabel": [21, 25, 27, 50, 75, 82], "righti": [21, 25, 27, 50, 75, 82], "uniti": [21, 25, 27, 50, 75, 82], "unitx": [21, 25, 27, 50, 75, 82], "force_aspect": [21, 25, 27, 37, 50, 75, 82, 95], "get_aspect": [21, 25, 27, 50, 75, 82], "match_image_aspect": [21, 25, 27, 50, 75, 82], "unitax": [21, 25, 27, 50, 75, 82], "adjustmap": [21, 25, 27, 50, 75, 82], "get_ax_s": [21, 25, 27, 50, 75, 82], "get_ax_pixel": [21, 25, 27, 50, 75, 82], "get_ax_pixel_ratio": [21, 25, 27, 50, 75, 82], "pixels_to_xunit": [21, 25, 27, 50, 75, 82], "yunits_to_pixel": [21, 25, 27, 50, 75, 82], "xunits_to_pixel": [21, 25, 27, 50, 75, 82], "pixels_to_yunit": [21, 25, 27, 50, 75, 82], "pixels_to_xfigureunit": [21, 25, 27, 50, 75, 82], "pixels_to_yfigureunit": [21, 25, 27, 50, 75, 82], "xfigureunits_to_pixel": [21, 25, 27, 50, 75, 82], "yfigureunits_to_pixel": [21, 25, 27, 50, 75, 82], "px2x": [21, 25, 27, 50, 75, 82], "px2y": [21, 25, 27, 50, 75, 82], "adjust_ylabel_spac": [21, 25, 27, 50, 75, 82], "adjust_xlabel_spac": [21, 25, 27, 50, 75, 82], "get_bbox": [21, 25, 27, 50, 75, 82], "nudge_axis_y_pixel": [21, 25, 27, 50, 75, 82], "adjust_axis_height_pixel": [21, 25, 27, 50, 75, 82], "nudge_axis_i": [21, 25, 27, 50, 75, 82], "nudge_axis_x": [21, 25, 27, 50, 75, 82], "expand_axis_x": [21, 25, 27, 50, 75, 82], "expand_axis_i": [21, 25, 27, 50, 75, 82], "nudge_axis_baselin": [21, 25, 27, 50, 75, 82], "nudge_axis_left": [21, 25, 27, 50, 75, 82], "zoombox": [21, 25, 27, 50, 75, 82], "fudgex": [21, 25, 27, 50, 75, 82], "fudgei": [21, 25, 27, 50, 75, 82], "fudgexi": [21, 25, 27, 50, 75, 82], "shade_edg": [21, 25, 27, 50, 75, 82], "ybartext": [21, 25, 27, 50, 75, 82], "xbartext": [21, 25, 27, 50, 75, 82], "nice_legend": [21, 25, 27, 50, 75, 82], "right_legend": [21, 25, 27, 50, 75, 82], "left_legend": [21, 25, 27, 50, 75, 82], "base_legend": [21, 25, 27, 50, 75, 82], "rangeto": [21, 25, 27, 50, 75, 82], "rangeov": [21, 25, 27, 50, 75, 82], "cleartop": [21, 25, 27, 50, 75, 82], "plotcwt": [21, 25, 27, 50, 75, 82], "plotwtphas": [21, 25, 27, 50, 75, 82], "wtpshow": [21, 25, 27, 50, 75, 82], "plotwtphasefig": [21, 25, 27, 50, 75, 82], "domask": [21, 25, 27, 50, 75, 82], "fsize": [21, 25, 27, 50, 75, 82], "handlersquar": [21, 25, 27, 50, 75, 82], "create_artist": [21, 25, 27, 75, 82], "plot_complex": [21, 25, 27, 50, 75, 82], "animate_complex": [21, 25, 27, 50, 75, 82], "good_colorbar": [21, 25, 27, 50, 75, 82], "complex_axi": [21, 25, 27, 50, 75, 82], "subfigurelabel": [21, 25, 27, 50, 75, 82], "sigbar": [21, 25, 27, 50, 75, 82], "hsigbar": [21, 25, 27, 50, 75, 82], "savefigur": [21, 25, 27, 50, 75, 82], "clean_y_rang": [21, 25, 27, 50, 75, 82], "round_to_precis": [21, 25, 27, 50, 75, 82], "ceil_to_precis": [21, 25, 27, 50, 75, 82], "floor_to_precis": [21, 25, 27, 50, 75, 82], "expand_y_rang": [21, 25, 27, 50, 75, 82], "gaussian2d_covellips": [21, 25, 27, 50, 75, 82], "stderrplot": [21, 25, 27, 50, 75, 82], "yscalebar": [21, 25, 27, 50, 75, 82], "xscalebar": [21, 25, 27, 50, 75, 82], "addspik": [21, 25, 27, 50, 75, 82], "unit_crosshair": [21, 25, 27, 50, 75, 82], "covariance_crosshair": [21, 25, 27, 50, 75, 82], "draw_circl": [21, 25, 27, 50, 75, 82], "simple_arrow": [21, 25, 27, 50, 75, 82], "inhibition_arrow": [21, 25, 27, 50, 75, 82], "figurebox": [21, 25, 27, 50, 75, 82], "more_xtick": [21, 25, 27, 50, 75, 82], "more_ytick": [21, 25, 27, 50, 75, 82], "border_width": [21, 25, 27, 50, 75, 82], "broken_step": [21, 25, 27, 50, 75, 82], "label": [21, 25, 27, 50, 75, 82, 107, 203, 220, 269], "flathist": [21, 25, 27, 50, 75, 82], "barcompar": [21, 25, 27, 50, 75, 82], "shellmean": [21, 25, 27, 50, 75, 82], "trendlin": [21, 25, 27, 50, 75, 82], "shellplot": [21, 25, 27, 50, 75, 82], "arrow_between": [21, 25, 27, 50, 75, 82], "splitz": [21, 25, 27, 50, 75, 82], "plotz": [21, 25, 27, 50, 75, 82], "save_limit": [21, 25, 27, 50, 75, 82], "restore_limit": [21, 25, 27, 50, 75, 82], "mock_legend": [21, 25, 27, 50, 75, 82], "xtickpad": [21, 25, 27, 50, 75, 82], "ytickpad": [21, 25, 27, 50, 75, 82], "xticklen": [21, 25, 27, 50, 75, 82], "yticklen": [21, 25, 27, 50, 75, 82], "xin": [21, 25, 27, 50, 75, 82, 189, 256], "yin": [21, 25, 27, 50, 75, 82], "lighten": [21, 25, 27, 50, 75, 82], "darken": [21, 25, 27, 50, 75, 82], "axvstrip": [21, 25, 27, 50, 75, 82], "widths_to_edg": [21, 25, 27, 50, 75, 82], "center": [21, 25, 27, 38, 50, 75, 82, 96, 107, 142, 155, 158, 160, 171, 176, 189, 220, 222, 234, 237, 238, 247, 252, 256], "widths_to_cent": [21, 25, 27, 50, 75, 82], "axvband": [21, 25, 27, 50, 75, 82], "zerohlin": [21, 25, 27, 50, 75, 82], "zerovlin": [21, 25, 27, 50, 75, 82], "boxplot_signific": [21, 25, 27, 50, 75, 82], "pygam": [21, 27, 50, 75], "enable_vsync": [21, 26, 27, 50, 75, 83], "miscellan": [22, 76], "relat": [22, 29, 37, 41, 76, 87, 95, 107, 132, 142, 144, 149, 160, 165, 169, 200, 220, 222, 224, 229, 238, 241, 245, 266], "r": [22, 25, 37, 76, 82, 95, 107, 154, 204, 220, 233, 270], "hexcod": [22, 76], "h": [22, 24, 26, 37, 38, 41, 76, 81, 83, 95, 96, 107, 132, 142, 144, 156, 162, 218, 220, 222, 224, 235, 239], "force_lumin": [22, 76], "none": [22, 25, 33, 34, 37, 38, 41, 76, 82, 90, 92, 95, 96, 107, 132, 139, 142, 144, 146, 148, 149, 156, 158, 163, 169, 171, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 199, 201, 203, 215, 217, 219, 220, 222, 224, 226, 228, 229, 235, 237, 245, 247, 251, 252, 255, 256, 259, 265, 267, 269, 274, 275], "method": [22, 29, 76, 87, 107, 149, 155, 156, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 199, 220, 229, 234, 235, 247, 252, 265], "perceiv": [22, 76], "convert": [22, 25, 29, 76, 82, 87, 91, 142, 162, 163, 166, 177, 215, 219, 222, 239, 242, 253, 275], "hsv": [22, 76, 158, 237], "rgb": [22, 25, 26, 76, 82, 83], "hue": [22, 25, 76, 82, 158, 237], "0": [22, 25, 26, 27, 29, 37, 38, 41, 76, 78, 79, 82, 83, 87, 95, 96, 107, 132, 139, 142, 146, 148, 155, 156, 158, 160, 162, 165, 170, 171, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 198, 200, 203, 204, 216, 219, 220, 222, 226, 228, 234, 235, 237, 238, 239, 241, 246, 247, 251, 252, 253, 256, 259, 264, 266, 269, 270, 275], "360": [22, 76], "satur": [22, 76], "type": [22, 25, 29, 30, 32, 33, 34, 37, 38, 76, 82, 87, 88, 89, 90, 91, 92, 95, 96, 107, 142, 144, 146, 149, 151, 152, 154, 155, 158, 160, 162, 163, 165, 171, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 201, 203, 204, 215, 216, 217, 218, 219, 220, 222, 224, 226, 229, 231, 233, 234, 237, 238, 239, 241, 247, 251, 252, 253, 255, 256, 259, 260, 267, 269, 270, 274, 275], "tupl": [22, 25, 29, 30, 34, 37, 76, 78, 82, 87, 88, 91, 92, 95, 107, 142, 154, 158, 163, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 204, 219, 220, 222, 233, 237, 255, 270, 275], "red": [22, 76], "green": [22, 76], "blue": [22, 76], "str": [22, 25, 29, 30, 33, 38, 76, 82, 87, 88, 90, 96, 107, 142, 170, 171, 216, 219, 220, 222, 246, 247, 275], "default": [22, 25, 29, 30, 33, 34, 37, 38, 76, 82, 87, 88, 90, 92, 95, 96, 107, 142, 146, 148, 149, 155, 158, 160, 162, 163, 165, 169, 170, 171, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 201, 203, 216, 217, 219, 220, 222, 226, 228, 229, 234, 237, 238, 239, 241, 245, 246, 247, 251, 252, 255, 256, 259, 267, 269, 274, 275], "m": [22, 25, 36, 37, 41, 76, 82, 94, 95, 107, 132, 142, 146, 151, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 203, 204, 218, 220, 222, 226, 231, 259, 269, 270], "weight": [22, 37, 38, 76, 95, 96, 107, 139, 148, 162, 171, 179, 189, 204, 220, 228, 239, 247, 255, 256, 270], "lumin": [22, 76], "ndarrai": [22, 76, 107, 142, 148, 156, 158, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 220, 222, 228, 235, 237, 247, 252, 259], "299": [22, 76], "587": [22, 76], "114": [22, 76], "2126": [22, 76], "7152": [22, 76], "0722": [22, 76], "59": [22, 38, 76, 96, 160, 189, 193, 238, 256, 259], "11": [22, 29, 38, 76, 87, 96, 107, 160, 189, 220, 222, 238, 256], "lrgb": [22, 76], "target": [22, 37, 76, 95, 203, 269], "threshold": [22, 25, 41, 76, 82, 107, 132, 142, 155, 166, 170, 203, 220, 222, 234, 242, 246, 269], "01": [22, 76, 107, 176, 198, 203, 220, 252, 264, 269], "squar": [22, 25, 37, 38, 76, 82, 95, 96, 107, 144, 148, 158, 160, 171, 175, 193, 220, 224, 228, 237, 238, 247, 251, 259], "fals": [22, 25, 29, 32, 33, 34, 37, 76, 82, 87, 89, 90, 91, 92, 95, 107, 139, 142, 148, 149, 158, 169, 171, 179, 189, 198, 199, 203, 217, 220, 222, 228, 229, 237, 245, 247, 255, 256, 264, 265, 269, 274], "adjust": [22, 25, 37, 76, 82, 95, 142, 146, 222, 226], "match": [22, 25, 37, 41, 76, 82, 91, 95, 132, 149, 163, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 219, 229, 247, 275], "luminos": [22, 76], "th": [22, 76], "angl": [22, 37, 76, 78, 95, 107, 142, 149, 220, 222, 229], "theta": [22, 76, 107, 157, 220, 236], "iter": [22, 25, 76, 78, 82, 142, 160, 163, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 216, 219, 222, 238, 247, 259, 260, 275], "doe": [22, 25, 27, 29, 76, 82, 87, 107, 171, 219, 220, 247, 275], "affect": [22, 76, 107, 220], "mai": [22, 25, 29, 30, 33, 41, 76, 82, 87, 88, 90, 107, 132, 142, 144, 155, 156, 193, 203, 220, 222, 224, 234, 235, 259, 269], "caus": [22, 30, 33, 76, 88, 90, 91, 142, 199, 222, 265], "result": [22, 25, 29, 33, 34, 76, 82, 87, 90, 92, 107, 142, 144, 146, 148, 155, 160, 171, 175, 176, 177, 179, 191, 193, 204, 219, 220, 222, 224, 226, 228, 234, 238, 247, 251, 252, 253, 255, 259, 270, 275], "fall": [22, 76, 165, 199, 241, 265], "outsid": [22, 25, 76, 82, 107, 139, 165, 220, 241], "colorspac": [22, 76], "chroma": [22, 76], "space": [22, 24, 25, 29, 33, 38, 76, 81, 82, 87, 90, 91, 96, 107, 146, 155, 156, 158, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 204, 216, 220, 226, 234, 235, 237, 238, 256, 270], "c1": [22, 25, 76, 82, 180, 181, 182, 183, 184, 185, 186, 187, 188], "c2": [22, 25, 37, 76, 82, 95, 180, 181, 182, 183, 184, 185, 186, 187, 188], "calcul": [22, 76, 107, 142, 151, 155, 163, 179, 189, 220, 222, 231, 234, 255, 256], "angular": [22, 76, 157, 236], "between": [22, 25, 32, 33, 37, 76, 82, 89, 90, 95, 107, 142, 146, 148, 149, 155, 157, 163, 169, 171, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 220, 222, 226, 228, 229, 234, 236, 245, 247, 251, 253, 256, 260], "hcl": [22, 76], "difer": [22, 76], "c": [22, 25, 37, 41, 76, 82, 95, 107, 132, 142, 158, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 222, 237, 247], "degre": [22, 76, 107, 149, 151, 171, 220, 229, 231, 247], "compon": [22, 25, 29, 76, 82, 87, 107, 142, 149, 156, 158, 166, 171, 220, 222, 229, 235, 237, 242, 247], "cm": [22, 25, 41, 76, 82, 132], "smooth": [22, 25, 38, 76, 82, 96, 142, 151, 155, 156, 158, 169, 176, 193, 222, 231, 234, 235, 237, 245, 252, 259], "colormap": [22, 25, 27, 50, 75, 76, 79, 82], "cirular": [22, 76], "boundari": [22, 38, 76, 96, 107, 142, 144, 155, 156, 160, 165, 220, 222, 224, 234, 235, 238, 241], "condit": [22, 25, 30, 37, 38, 76, 82, 88, 95, 96, 107, 142, 144, 149, 152, 156, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 199, 220, 222, 224, 229, 235, 238, 259, 265], "dev": [22, 76], "kernel": [22, 27, 37, 38, 50, 76, 95, 96, 142, 144, 151, 154, 155, 179, 189, 222, 224, 231, 233, 234, 255, 256], "radiu": [22, 25, 76, 82, 151, 154, 158, 163, 166, 231, 233, 237, 242], "rbg": [22, 76], "circular": [22, 38, 76, 96, 107, 162, 171, 220, 239, 247], "5": [22, 25, 29, 30, 37, 38, 76, 78, 82, 87, 88, 95, 96, 107, 142, 148, 154, 155, 158, 160, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 201, 220, 222, 228, 233, 234, 237, 238, 245, 256, 259, 267], "10": [22, 25, 29, 37, 38, 41, 76, 79, 82, 87, 95, 96, 107, 132, 139, 142, 156, 160, 162, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 201, 203, 204, 219, 220, 222, 235, 238, 239, 247, 252, 256, 259, 267, 269, 270, 275], "7": [22, 25, 37, 38, 76, 82, 95, 96, 107, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 220, 222, 238, 256], "4": [22, 25, 29, 30, 38, 76, 79, 82, 87, 88, 96, 107, 142, 146, 149, 151, 155, 156, 158, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 204, 216, 220, 222, 226, 229, 231, 234, 235, 237, 238, 256, 259, 270], "6": [22, 25, 37, 38, 76, 79, 82, 95, 96, 107, 142, 151, 160, 162, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 220, 222, 231, 238, 239, 256, 259], "slightli": [22, 76], "optim": [22, 76, 107, 139, 156, 189, 191, 193, 199, 204, 220, 235, 256, 259, 265, 270], "hsl": [22, 76], "convers": [22, 29, 76, 87, 219, 275], "routin": [22, 25, 27, 33, 34, 37, 76, 82, 90, 92, 95, 107, 142, 144, 148, 155, 157, 162, 166, 169, 170, 171, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 198, 199, 201, 203, 204, 215, 220, 222, 224, 228, 234, 236, 239, 242, 245, 246, 247, 251, 256, 259, 260, 264, 265, 267, 269, 270], "fix": [22, 25, 76, 82, 107, 142, 151, 216, 220, 222, 231], "back": [22, 29, 33, 76, 87, 90, 142, 199, 222, 265], "resolut": [22, 38, 76, 96, 142, 149, 160, 189, 222, 229, 238, 256], "lookup": [22, 76, 219, 275], "tabl": [22, 76, 107, 216, 220], "z": [22, 25, 37, 76, 82, 95, 107, 142, 162, 163, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 204, 219, 220, 222, 239, 242, 270, 275], "perform": [22, 25, 29, 33, 76, 82, 87, 90, 107, 142, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 222, 247, 255], "bulk": [22, 76], "lut": [22, 76], "complex": [22, 25, 29, 76, 82, 87, 142, 155, 158, 162, 163, 166, 219, 222, 234, 237, 239, 242, 275], "number": [22, 25, 29, 34, 37, 38, 76, 82, 87, 92, 95, 96, 107, 139, 142, 146, 148, 149, 152, 155, 156, 158, 163, 165, 166, 169, 171, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 198, 199, 201, 203, 216, 218, 219, 220, 222, 226, 228, 229, 232, 234, 235, 237, 241, 242, 245, 247, 251, 252, 255, 256, 259, 264, 265, 267, 269, 275], "loop": [22, 29, 76, 87], "bp": [22, 25, 76, 82, 142, 222], "The": [22, 27, 29, 30, 32, 33, 34, 37, 38, 41, 76, 78, 87, 88, 89, 90, 92, 95, 96, 107, 132, 139, 142, 148, 149, 155, 158, 162, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 203, 217, 219, 220, 222, 228, 229, 232, 234, 237, 239, 247, 255, 256, 259, 269, 274, 275], "boxplot": [22, 25, 76, 82], "ar": [22, 25, 27, 29, 30, 32, 33, 34, 37, 38, 76, 78, 82, 87, 88, 89, 90, 91, 92, 95, 96, 107, 142, 144, 148, 149, 155, 156, 157, 158, 162, 166, 171, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 199, 201, 203, 215, 220, 222, 224, 228, 229, 234, 235, 236, 237, 239, 242, 247, 251, 265, 267, 269], "aw": [22, 76, 171, 247], "littl": [22, 25, 76, 82], "better": [22, 25, 27, 33, 76, 82, 90, 107, 191, 220], "data": [22, 25, 26, 29, 33, 37, 41, 76, 82, 83, 87, 90, 91, 95, 107, 132, 142, 144, 146, 149, 155, 156, 158, 160, 162, 165, 170, 171, 175, 179, 193, 201, 203, 204, 216, 219, 220, 222, 224, 226, 229, 234, 235, 237, 238, 239, 241, 246, 247, 251, 255, 259, 267, 269, 270, 275], "hexadecim": [22, 76], "bgr": [22, 76], "format": [22, 25, 29, 32, 76, 82, 87, 89, 91, 166, 203, 204, 215, 216, 218, 242, 269, 270], "fast": [22, 29, 33, 76, 87, 90, 107, 220], "render": [22, 25, 76, 82], "javascript": [22, 76], "canva": [22, 76], "import": [22, 33, 37, 76, 77, 90, 95, 107, 169, 220, 222, 232, 245], "html": [22, 37, 76, 91, 95, 107, 189, 220, 256], "demo": [22, 76], "256x3": [22, 76], "hex": [22, 76], "given": [22, 25, 32, 76, 78, 82, 89, 107, 139, 142, 155, 166, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 216, 219, 220, 222, 232, 234, 242, 252, 256, 259, 275], "rrggbb": [22, 76], "16": [22, 38, 76, 96, 107, 160, 162, 189, 220, 238, 239, 256], "bit": [22, 29, 76, 87, 107, 139, 142, 216, 220, 222], "565": [22, 76], "brg": [22, 26, 76, 83], "rrrrr": [22, 76], "gggggg": [22, 76], "bbbbb": [22, 76], "int": [22, 25, 30, 34, 37, 38, 76, 82, 88, 92, 95, 96, 107, 142, 144, 146, 148, 149, 151, 152, 154, 155, 156, 158, 162, 163, 165, 169, 171, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 201, 203, 216, 220, 222, 224, 226, 228, 229, 231, 233, 234, 235, 237, 239, 241, 245, 247, 252, 253, 256, 259, 267, 269], "enumer": [22, 76, 222], "bu": [22, 76], "ident": [22, 30, 76, 88, 107, 179, 220, 255], "byte": [22, 29, 33, 76, 87, 90], "skip": [22, 76, 142, 149, 155, 158, 222, 229, 234, 237], "lowest": [22, 76, 107, 220], "reserv": [22, 76], "fourth": [22, 76], "mask": [22, 27, 38, 50, 76, 96, 154, 156, 222, 235], "storag": [22, 33, 76, 90], "intend": [22, 76], "develop": [22, 27, 76, 107, 220], "pallet": [22, 76], "mictrocontrol": [22, 76], "driven": [22, 76, 107, 220], "displai": [22, 76, 107, 220], "interfac": [22, 76, 217, 274], "formt": [22, 76], "liter": [22, 76], "subset": [22, 37, 76, 95, 107, 149, 220, 229], "shownn": [22, 76], "quickli": [22, 76], "arduino": [22, 76], "uno": [22, 76], "inch": [22, 76], "tft": [22, 76], "touch": [22, 76], "screen": [22, 24, 26, 76, 81, 83], "breakout": [22, 76], "restrict": [22, 29, 76, 87, 139, 155, 234], "sent": [22, 76, 155, 234], "singl": [22, 25, 29, 34, 37, 41, 76, 82, 87, 92, 95, 107, 132, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 220, 259], "write": [22, 29, 41, 76, 87, 132, 139], "one": [22, 25, 29, 33, 34, 37, 38, 41, 76, 82, 87, 90, 92, 95, 96, 107, 132, 139, 142, 144, 158, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 199, 201, 203, 216, 220, 222, 224, 237, 247, 265, 267, 269], "port": [22, 76, 107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "mode": [22, 25, 29, 76, 82, 87, 91, 107, 142, 171, 201, 220, 222, 247, 267], "low": [22, 76, 107, 142, 146, 151, 156, 162, 175, 220, 222, 226, 231, 235, 239, 251], "don": [22, 34, 76, 92, 142, 189, 198, 222, 256, 264], "t": [22, 25, 27, 34, 37, 38, 41, 76, 82, 91, 92, 95, 96, 107, 132, 142, 148, 149, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 198, 199, 217, 218, 220, 222, 228, 229, 238, 256, 259, 264, 265, 274], "even": [22, 76, 107, 139, 142, 155, 170, 199, 220, 222, 234, 246, 265], "lower": [22, 25, 37, 76, 82, 95, 107, 155, 156, 220, 234, 235], "show": [22, 25, 37, 76, 82, 95, 107, 158, 220, 237], "gradient": [23, 80, 142, 155, 156, 158, 189, 199, 222, 234, 235, 237, 256, 265], "left": [23, 25, 80, 82, 107, 162, 171, 220, 239, 247], "laplacian": [23, 27, 37, 38, 50, 80, 95, 96, 154, 160, 233, 238], "right": [23, 25, 37, 80, 82, 95, 107, 162, 171, 220, 239, 247], "onli": [23, 25, 27, 29, 30, 32, 37, 80, 82, 87, 88, 89, 95, 107, 139, 142, 162, 175, 179, 199, 216, 220, 222, 239, 251, 255, 265], "test": [23, 25, 33, 37, 41, 80, 82, 90, 95, 107, 132, 139, 142, 149, 156, 160, 171, 189, 193, 203, 219, 220, 222, 229, 235, 238, 247, 256, 259, 269, 275], "2d": [23, 25, 37, 38, 80, 82, 95, 96, 142, 144, 154, 155, 156, 158, 160, 162, 165, 166, 171, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 222, 224, 233, 234, 235, 237, 238, 239, 241, 242, 247, 255], "channel": [23, 25, 80, 82, 142, 155, 157, 158, 162, 222, 234, 236, 237, 239], "fig": [24, 25, 81, 82], "w": [24, 25, 26, 37, 81, 82, 83, 95, 107, 139, 142, 144, 146, 156, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 204, 220, 222, 224, 226, 235, 247, 270], "titl": [24, 25, 37, 81, 82, 95, 107, 220], "untitl": [24, 26, 81, 83], "http": [24, 37, 79, 81, 91, 95, 107, 160, 179, 189, 193, 217, 219, 220, 238, 255, 256, 259, 274, 275], "stackoverflow": [24, 27, 37, 81, 95, 216, 217, 218, 219, 274, 275], "com": [24, 37, 81, 95, 107, 142, 160, 179, 216, 217, 218, 219, 220, 222, 238, 255, 274, 275], "question": [24, 37, 81, 95, 216, 217, 218, 219, 274, 275], "9295026": [24, 81], "remov": [24, 25, 81, 82, 142, 155, 166, 170, 171, 201, 222, 234, 242, 246, 247, 267], "axi": [24, 25, 81, 82, 107, 142, 158, 162, 171, 220, 222, 237, 239, 247], "legend": [24, 25, 81, 82, 107, 220], "white": [24, 25, 81, 82, 107, 220], "rgbdata": [24, 26, 81, 83], "helper": [25, 82, 144, 199, 224, 265], "ax": [25, 37, 82, 95, 107, 155, 193, 220, 234, 259], "draw": [25, 82, 107, 152, 193, 198, 203, 220, 259, 264, 269], "bottom": [25, 82], "line": [25, 82, 107, 142, 158, 204, 216, 217, 219, 220, 222, 237, 270, 274, 275], "maplotlib": [25, 82], "plt": [25, 82, 107, 220], "gca": [25, 82], "move": [25, 41, 82, 132, 142, 157, 171, 222, 236, 247], "noth": [25, 82], "els": [25, 33, 82, 90, 139, 158, 191, 218, 222, 237], "hide": [25, 82], "all": [25, 27, 29, 30, 33, 34, 37, 82, 87, 88, 90, 91, 92, 95, 107, 142, 154, 158, 165, 166, 169, 171, 175, 191, 193, 219, 220, 222, 233, 237, 241, 242, 245, 247, 251, 259, 275], "linewidth": [25, 82, 107, 220], "improv": [25, 30, 38, 82, 88, 96, 155, 234], "appear": [25, 41, 82, 107, 132, 149, 220, 229], "box": [25, 82, 142, 222], "whisker": [25, 82], "To": [25, 29, 82, 87, 107, 139, 142, 155, 220, 222, 234], "call": [25, 29, 30, 33, 34, 37, 82, 87, 88, 90, 92, 95, 107, 142, 171, 199, 218, 219, 220, 222, 232, 247, 265, 275], "accompani": [25, 33, 82, 90], "inform": [25, 27, 29, 34, 37, 50, 82, 87, 91, 92, 95, 107, 171, 199, 220, 247, 265], "set": [25, 30, 33, 34, 38, 82, 88, 90, 91, 92, 96, 107, 139, 142, 160, 163, 166, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 194, 199, 220, 222, 232, 238, 242, 247, 256, 260, 265], "posit": [25, 37, 38, 82, 95, 96, 107, 142, 144, 146, 148, 149, 151, 152, 160, 165, 169, 171, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 203, 204, 216, 219, 220, 222, 224, 226, 228, 229, 231, 238, 241, 245, 247, 251, 252, 253, 256, 259, 269, 270, 275], "width": [25, 38, 82, 96, 107, 142, 156, 158, 170, 176, 216, 220, 222, 235, 237, 246, 252], "fill": [25, 82, 107, 142, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 219, 220, 222, 252, 275], "true": [25, 26, 29, 33, 34, 37, 38, 78, 82, 83, 87, 90, 92, 95, 96, 107, 139, 142, 148, 149, 155, 158, 171, 179, 189, 199, 215, 217, 218, 220, 222, 228, 229, 234, 237, 247, 255, 256, 265, 274], "notch": [25, 82], "showflier": [25, 82], "lw": [25, 37, 78, 82, 95, 158, 237], "whi": [25, 82], "95": [25, 38, 82, 96, 107, 160, 189, 220, 238, 256], "bgcolor": [25, 82], "94509804": [25, 82], "9411765": [25, 82], "9137255": [25, 82], "dtype": [25, 82, 107, 220], "float32": [25, 29, 82, 87, 107, 142, 144, 160, 163, 170, 176, 177, 220, 222, 224, 238, 246, 252, 253], "mediancolor": [25, 82], "kwarg": [25, 29, 82, 87, 91, 166, 171, 189, 199, 219, 242, 247, 256, 265, 275], "nice": [25, 29, 82, 87, 142, 156, 222, 235], "style": [25, 82, 215], "npoint": [25, 82, 163, 165, 241], "ngroup": [25, 82], "group": [25, 82, 107, 142, 220, 222], "boolean": [25, 29, 33, 37, 82, 87, 90, 95, 107, 142, 149, 158, 169, 171, 179, 216, 220, 222, 229, 237, 245, 247, 255], "whether": [25, 29, 30, 32, 34, 37, 82, 87, 88, 89, 92, 95, 107, 142, 155, 158, 162, 170, 171, 179, 193, 220, 222, 234, 237, 239, 246, 247, 255, 259], "inset": [25, 82], "median": [25, 82, 107, 142, 162, 171, 203, 220, 222, 239, 247, 269], "outli": [25, 82], "scatter": [25, 37, 82, 95, 107, 220], "percentil": [25, 82, 142, 171, 222, 247], "background": [25, 29, 82, 87], "black": [25, 82, 107, 220], "unless": [25, 33, 82, 90, 107, 162, 220, 239], "case": [25, 29, 33, 34, 82, 87, 90, 92, 107, 139, 142, 176, 189, 199, 219, 220, 222, 252, 256, 265, 275], "addit": [25, 34, 77, 82, 92, 107, 156, 171, 220, 235, 247], "foward": [25, 82], "mark": [25, 82, 142, 155, 222, 234], "min": [25, 82, 107, 142, 179, 220, 222, 255], "max": [25, 82, 107, 142, 179, 203, 220, 222, 255, 269], "xby": [25, 82], "yby": [25, 82], "see": [25, 27, 29, 33, 37, 82, 87, 90, 95, 107, 139, 142, 146, 160, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 204, 216, 220, 222, 226, 232, 238, 246, 247, 259, 270], "zero": [25, 37, 38, 41, 82, 95, 96, 107, 132, 142, 158, 160, 162, 169, 170, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 204, 219, 220, 222, 237, 238, 239, 245, 246, 251, 252, 256, 259, 270, 275], "upper": [25, 37, 82, 95, 107, 155, 220, 234], "largest": [25, 37, 38, 82, 95, 96, 107, 142, 193, 220, 222, 259], "un": [25, 82], "current": [25, 41, 82, 132, 218, 222], "xlimit": [25, 82], "If": [25, 29, 30, 33, 34, 37, 38, 82, 87, 88, 90, 91, 92, 95, 96, 107, 139, 142, 158, 162, 171, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 199, 201, 220, 222, 237, 239, 247, 251, 259, 265, 267], "curent": [25, 82], "xlim": [25, 82], "neg": [25, 37, 82, 95, 107, 142, 149, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 216, 220, 222, 229, 251, 259], "rais": [25, 32, 33, 38, 82, 89, 90, 96, 107, 160, 162, 171, 189, 220, 238, 239, 247, 256], "ylimit": [25, 82], "ylim": [25, 82], "both": [25, 29, 38, 41, 82, 87, 96, 107, 132, 139, 148, 149, 171, 220, 228, 229, 247], "smae": [25, 82], "turn": [25, 82, 139], "tick": [25, 82], "aspect": [25, 82, 158, 237], "interv": [25, 82, 107, 142, 201, 220, 222, 267], "im": [25, 82], "keep": [25, 33, 82, 90, 142, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 222, 247], "corner": [25, 38, 82, 96, 160, 238], "rescal": [25, 38, 82, 96, 142, 160, 189, 222, 238, 256], "height": [25, 38, 82, 96, 107, 156, 220, 235], "dimens": [25, 37, 82, 95, 107, 142, 144, 146, 148, 155, 156, 158, 162, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 220, 222, 224, 226, 228, 234, 235, 237, 239, 247, 259], "arraymap": [25, 50, 82, 155, 158, 211, 219, 234, 237, 275], "get": [25, 29, 34, 37, 78, 82, 87, 92, 95, 107, 139, 142, 148, 149, 169, 170, 175, 177, 220, 222, 228, 229, 245, 246, 251, 253], "tha": [25, 82], "figur": [25, 82, 107, 216, 220], "rel": [25, 38, 82, 96, 107, 142, 149, 162, 169, 220, 222, 229, 239, 245], "pixel": [25, 38, 82, 96, 158, 237], "measur": [25, 82, 107, 142, 146, 155, 162, 171, 220, 222, 226, 234, 239, 247], "bound": [25, 30, 82, 88, 107, 155, 194, 220, 234, 260], "currenta": [25, 82], "dy": [25, 41, 82, 132, 158, 237], "dx": [25, 82, 158, 177, 237, 253], "direct": [25, 38, 82, 96, 142, 149, 155, 158, 222, 229, 234, 237], "depend": [25, 27, 29, 30, 33, 37, 50, 82, 87, 88, 90, 95, 107, 146, 155, 162, 171, 189, 203, 211, 220, 226, 234, 239, 247, 256, 269], "orient": [25, 82, 107, 220], "chang": [25, 29, 30, 82, 87, 88, 107, 139, 142, 193, 220, 222, 259], "resiz": [25, 82], "baselin": [25, 82], "amount": [25, 29, 82, 87, 142, 222], "expand": [25, 29, 82, 87, 142, 222], "top": [25, 82, 107, 220], "intact": [25, 82], "ax1": [25, 82], "ax2": [25, 82], "xspan1": [25, 82], "xspan2": [25, 82], "draw_left": [25, 82], "draw_right": [25, 82], "doshow": [25, 26, 82, 83], "dishow": [25, 82], "edg": [25, 38, 82, 96, 142, 144, 149, 158, 160, 163, 166, 170, 222, 224, 229, 237, 238, 242, 246], "stop": [25, 82, 142, 193, 222, 259], "shade": [25, 82], "region": [25, 82, 107, 154, 220, 233], "defin": [25, 29, 30, 34, 82, 87, 88, 92, 107, 142, 166, 191, 220, 222, 242], "keyword": [25, 29, 82, 87, 107, 189, 220, 256], "forward": [25, 37, 82, 95, 107, 142, 158, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 220, 222, 237, 242, 256, 259], "text": [25, 82, 107, 216, 220], "arg": [25, 29, 34, 82, 87, 91, 92, 157, 216, 219, 236, 275], "fudg": [25, 82], "base": [25, 29, 37, 38, 82, 87, 95, 96, 107, 139, 142, 146, 149, 151, 155, 160, 170, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 199, 203, 219, 220, 222, 226, 229, 231, 234, 238, 246, 247, 256, 259, 265, 269, 275], "pad": [25, 82, 142, 144, 165, 170, 176, 222, 224, 241, 246, 252], "rangefun": [25, 82], "ff": [25, 82, 149, 158, 229, 237], "cwt": [25, 82], "auto": [25, 82, 158, 237], "vmin": [25, 82], "vmax": [25, 82], "afmhot": [25, 82], "interpol": [25, 82, 142, 155, 165, 176, 222, 234, 241, 252], "dodraw": [25, 82], "frequenc": [25, 41, 82, 107, 132, 142, 146, 148, 149, 151, 155, 156, 157, 158, 162, 175, 193, 194, 220, 222, 226, 228, 229, 231, 234, 235, 236, 237, 239, 251, 259, 260], "wavelet": [25, 82, 146, 226], "transform": [25, 37, 38, 82, 95, 96, 142, 144, 146, 155, 156, 162, 180, 181, 182, 183, 184, 185, 186, 187, 188, 222, 224, 226, 234, 235, 239], "what": [25, 29, 82, 87, 107, 149, 217, 220, 229, 274], "ip": [25, 82], "50": [25, 38, 78, 82, 96, 107, 149, 160, 189, 220, 229, 238, 256], "bone": [25, 82], "patch_func": [25, 82], "handlerpatch": [25, 82], "orig_handl": [25, 82], "xdescent": [25, 82], "ydescent": [25, 82], "fontsiz": [25, 78, 82], "tran": [25, 82, 107, 220], "vm": [25, 82], "bicub": [25, 82], "extent": [25, 82, 158, 179, 237, 255], "onlyphas": [25, 82], "previou": [25, 82, 222, 232], "polar": [25, 82, 171, 247], "phase": [25, 27, 38, 50, 82, 96, 142, 149, 154, 155, 156, 158, 160, 189, 222, 229, 233, 234, 235, 237, 238, 256], "modulu": [25, 82], "ab": [25, 37, 82, 95, 107, 142, 155, 220, 222, 234], "imshow": [25, 82], "avail": [25, 27, 82, 107, 142, 175, 200, 220, 222, 251, 266], "output": [25, 82, 107, 139, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 255], "skirt": [25, 82, 156, 235], "replot": [25, 82], "nuisanc": [25, 82], "updat": [25, 37, 41, 82, 95, 132, 139, 180, 181, 182, 183, 184, 185, 186, 187, 188, 199, 265], "directli": [25, 82, 107, 156, 220, 235], "faster": [25, 29, 82, 87, 179, 193, 199, 255, 259, 265], "img": [25, 82], "reus": [25, 82], "subsequ": [25, 82, 191], "speed": [25, 82, 107, 139, 155, 220, 234], "thing": [25, 30, 32, 82, 88, 89], "anim": [25, 82, 107, 220], "video": [25, 82], "except": [25, 34, 82, 92, 107, 199, 216, 220, 265], "ha": [25, 27, 29, 33, 82, 87, 90, 107, 142, 149, 155, 156, 162, 189, 220, 222, 229, 234, 235, 239, 256], "time": [25, 27, 29, 34, 38, 41, 50, 82, 86, 87, 91, 92, 96, 107, 132, 142, 146, 148, 149, 152, 155, 157, 158, 160, 162, 169, 170, 171, 175, 176, 189, 193, 199, 201, 204, 211, 220, 222, 226, 228, 229, 234, 236, 237, 238, 239, 245, 246, 247, 251, 252, 256, 259, 265, 267, 270], "sidewai": [25, 82], "border": [25, 82, 142, 222], "15": [25, 37, 38, 82, 95, 96, 107, 139, 160, 189, 220, 222, 238, 256], "labelpad": [25, 82], "vscale": [25, 82], "va": [25, 82], "colorbar": [25, 82], "pretti": [25, 82, 107, 220], "bad": [25, 33, 82, 90, 107, 158, 220, 237], "less": [25, 37, 82, 95, 107, 139, 142, 162, 193, 203, 220, 222, 239, 259, 269], "mathrm": [25, 82], "mac": [25, 82], "option": [25, 29, 33, 82, 87, 90, 107, 142, 162, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 199, 216, 220, 222, 239, 247, 251, 255, 256, 259, 265], "bool": [25, 29, 30, 32, 33, 34, 37, 38, 82, 87, 88, 89, 90, 92, 95, 96, 107, 142, 155, 158, 171, 193, 218, 220, 222, 234, 237, 247, 259], "flip": [25, 82, 107, 142, 149, 220, 222, 229], "around": [25, 38, 82, 96, 142, 149, 155, 162, 222, 229, 234, 239], "distanc": [25, 27, 37, 50, 82, 95, 107, 154, 158, 163, 204, 220, 233, 237, 270], "font": [25, 82], "12": [25, 38, 82, 96, 107, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 220, 222, 238, 256], "parent": [25, 82, 107, 220], "vertic": [25, 82, 144, 224], "align": [25, 82, 107, 220], "plane": [25, 82, 155, 162, 234, 239], "latex": [25, 82], "re": [25, 29, 34, 41, 82, 87, 92, 107, 132, 142, 175, 191, 199, 220, 222, 251, 265], "everyth": [25, 33, 82, 90], "39": [25, 38, 82, 96, 160, 189, 238, 256], "bold": [25, 82], "x1": [25, 37, 82, 95], "x2": [25, 37, 82, 95, 163], "pvalu": [25, 27, 50, 82, 171, 247], "26666668": [25, 82], "32156864": [25, 82], "36078432": [25, 82], "signific": [25, 82, 107, 216, 220], "bar": [25, 82, 107, 220], "brace": [25, 82], "command": [25, 33, 78, 82, 90, 217, 219, 274, 275], "y1": [25, 82], "y2": [25, 82], "horizont": [25, 82, 144, 216, 224], "stamp": [25, 82], "save": [25, 29, 82, 87, 191], "svg": [25, 82], "pdf": [25, 82, 107, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 253], "prepend": [25, 82], "date": [25, 82, 218], "ti": [25, 82], "me": [25, 82], "yyyymmdd_hhmmss": [25, 82], "file": [25, 29, 33, 82, 87, 90, 160, 215, 219, 238, 275], "san": [25, 82], "extens": [25, 29, 82, 87, 219, 275], "down": [25, 38, 82, 96, 139, 155, 234], "specifi": [25, 27, 29, 82, 87, 107, 142, 151, 156, 162, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 220, 222, 231, 235, 239, 247, 260], "digit": [25, 82, 177, 216, 253], "yvalu": [25, 82], "60": [25, 38, 41, 82, 96, 132, 142, 160, 189, 222, 238, 256], "xy": [25, 82], "ellips": [25, 82], "drawn": [25, 82, 107, 220], "coordin": [25, 82, 107, 142, 154, 163, 220, 222, 233], "2x2": [25, 37, 82, 95], "alpha": [25, 41, 82, 107, 132, 203, 220, 269], "stdwidth": [25, 82], "96": [25, 38, 82, 96, 160, 189, 238, 256], "\u03c3": [25, 82, 142, 162, 171, 222, 239, 247], "confid": [25, 82], "blend": [25, 82], "ycenter": [25, 82], "yheight": [25, 82], "9": [25, 38, 78, 82, 91, 96, 107, 160, 165, 189, 198, 204, 220, 222, 238, 241, 256, 264, 270], "side": [25, 82, 107, 171, 219, 220, 247, 275], "xcenter": [25, 82], "xlength": [25, 82], "how": [25, 29, 34, 82, 87, 92, 107, 139, 142, 162, 170, 203, 219, 220, 222, 239, 246, 269, 275], "wide": [25, 82, 107, 220], "draw_ellips": [25, 82], "draw_cross": [25, 82], "8": [25, 29, 38, 82, 87, 96, 107, 158, 160, 189, 193, 216, 220, 222, 237, 238, 256, 259], "90": [25, 38, 82, 96, 160, 189, 238, 256], "605": [25, 82], "991": [25, 82], "97": [25, 38, 82, 96, 160, 189, 238, 256], "378": [25, 82], "99": [25, 38, 82, 96, 160, 189, 238, 256], "210": [25, 82], "597": [25, 82], "fraction": [25, 82, 107, 220], "enclos": [25, 82], "centx": [25, 82], "centi": [25, 82], "angle_": [25, 82], "theta2_": [25, 82], "arrows": [25, 82], "cap_start": [25, 82], "cap_end": [25, 82], "connect": [25, 82, 163, 166, 242], "triangular": [25, 37, 49, 50, 82, 95, 107, 220], "headlength": [25, 82], "headwidth": [25, 82], "arrow": [25, 82], "properti": [25, 37, 82, 95, 107, 220], "inhibit": [25, 82], "brake": [25, 82], "1e": [25, 37, 38, 82, 95, 96, 107, 142, 165, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 198, 199, 204, 220, 222, 241, 247, 259, 260, 264, 265, 270], "05": [25, 38, 82, 96, 107, 199, 203, 220, 265, 269], "step": [25, 41, 82, 132, 139, 142, 148, 152, 193, 222, 228, 259], "adjac": [25, 38, 82, 96], "level": [25, 30, 82, 88, 107, 149, 203, 220, 229, 269], "abov": [25, 82, 107, 155, 220, 234], "break": [25, 32, 82, 89, 142, 171, 222, 247], "conveni": [25, 82, 107, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 252], "bin": [25, 82, 107, 142, 165, 169, 189, 220, 222, 241, 245, 256], "20": [25, 38, 82, 96, 107, 139, 160, 189, 203, 220, 222, 238, 256, 269], "p50": [25, 82], "markers": [25, 82], "summar": [25, 82, 142, 222], "histogram": [25, 82, 107, 165, 179, 201, 220, 241, 255, 267], "\u03bc": [25, 82, 170, 171, 189, 246, 247, 256], "d\u03bc": [25, 82], "\u03b4e": [25, 82], "92156863": [25, 82], "47843137": [25, 82], "34901962": [25, 82], "shell": [25, 33, 82, 90, 219, 275], "thr": [25, 41, 82, 132, 142, 170, 222, 246], "09": [25, 37, 82, 95, 107, 165, 194, 220, 241, 260], "split": [25, 82, 142, 171, 222, 247], "1d": [25, 38, 82, 96, 142, 144, 149, 160, 162, 163, 169, 170, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 204, 222, 224, 229, 238, 239, 245, 246, 247, 252, 255, 256, 259, 260, 270], "signal": [25, 27, 37, 41, 49, 50, 82, 95, 107, 132, 154, 155, 158, 162, 169, 170, 175, 220, 233, 234, 237, 239, 245, 246, 251], "real": [25, 29, 37, 82, 87, 95, 107, 142, 149, 155, 156, 158, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 222, 229, 234, 235, 237, 242], "imaginari": [25, 29, 82, 87, 155, 158, 166, 234, 237, 242], "part": [25, 27, 82, 139, 155, 166, 234, 242], "either": [25, 30, 38, 82, 88, 96, 107, 139, 156, 171, 203, 220, 222, 235, 247, 269], "let": [25, 82, 107, 220], "u": [25, 82, 107, 142, 220, 222], "separ": [25, 82, 107, 162, 189, 215, 216, 220, 239, 256], "without": [25, 29, 82, 87, 107, 144, 149, 156, 216, 220, 224, 229, 235], "overlap": [25, 38, 82, 96, 160, 189, 238, 256], "dash": [25, 82], "stash": [25, 82], "x0": [25, 82, 152, 193, 259], "y0": [25, 82], "__save_limits_private_storage__": [25, 82], "These": [25, 30, 33, 82, 88, 90, 107, 142, 220, 222], "restor": [25, 82, 142, 222], "later": [25, 30, 82, 88, 107, 139, 219, 220, 275], "store": [25, 29, 34, 82, 87, 92, 139, 158, 237], "40": [25, 38, 82, 96, 107, 142, 160, 189, 220, 222, 238, 256], "marker": [25, 82], "gener": [25, 27, 29, 32, 33, 37, 38, 82, 87, 89, 90, 95, 96, 107, 142, 144, 151, 157, 160, 169, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 220, 222, 224, 231, 236, 238, 245, 251, 256], "some": [25, 27, 29, 30, 33, 34, 82, 87, 88, 90, 92, 107, 142, 156, 177, 194, 199, 203, 204, 220, 222, 235, 253, 260, 265, 269, 270], "so": [25, 29, 34, 38, 82, 87, 91, 92, 96, 107, 139, 142, 149, 155, 160, 170, 189, 193, 198, 199, 203, 219, 220, 222, 229, 234, 238, 246, 256, 259, 264, 265, 269, 275], "ofl": [25, 82], "xtick": [25, 82], "minor": [25, 82], "appli": [25, 27, 34, 37, 38, 82, 91, 92, 95, 96, 107, 139, 142, 146, 149, 155, 160, 162, 175, 219, 220, 222, 226, 229, 234, 238, 239, 251, 275], "ytick": [25, 82], "inward": [25, 82], "do": [25, 27, 29, 34, 37, 82, 87, 92, 95, 107, 139, 142, 149, 155, 175, 219, 220, 222, 229, 234, 251, 275], "discard": [25, 82, 155, 156, 234, 235], "fade": [25, 82], "span": [25, 27, 38, 50, 82, 96, 142, 160, 169, 171, 189, 222, 238, 245, 247, 256], "altern": [25, 27, 29, 34, 82, 87, 92, 107, 217, 220, 274], "band": [25, 82, 142, 146, 222, 226], "within": [25, 33, 34, 82, 90, 92, 107, 142, 154, 162, 163, 169, 215, 220, 222, 233, 239, 245], "mix": [25, 82], "startat": [25, 82], "delimit": [25, 82], "consecut": [25, 82], "collect": [25, 27, 33, 37, 82, 90, 95, 148, 155, 162, 163, 203, 216, 228, 234, 239, 269], "wrapper": [25, 34, 82, 92, 107, 171, 176, 189, 220, 247, 252, 256], "rather": [25, 82, 107, 142, 148, 149, 193, 220, 222, 228, 229, 259], "a1": [25, 82], "positionsa": [25, 82], "b1": [25, 82], "positionsb": [25, 82], "fdr": [25, 82, 203, 269], "label_pvalu": [25, 82], "significance_mark": [25, 82], "wilcoxon": [25, 82], "bracket": [25, 82], "correct": [25, 82, 142, 149, 176, 203, 222, 229, 252, 269], "comparison": [25, 82, 107, 203, 220, 269], "benjamini": [25, 82, 203, 269], "hochberg": [25, 82, 203, 269], "procedur": [25, 29, 82, 87, 142, 170, 193, 203, 222, 246, 259, 269], "whichev": [25, 82, 142, 203, 222, 269], "conserv": [25, 82, 155, 203, 234, 269], "desir": [25, 82, 107, 142, 144, 151, 220, 222, 224, 231], "discoveri": [25, 82, 203, 269], "rate": [25, 41, 82, 107, 132, 139, 142, 146, 148, 149, 151, 155, 156, 162, 175, 176, 177, 193, 203, 220, 222, 226, 228, 229, 231, 234, 235, 239, 251, 252, 253, 259, 269], "annot": [25, 82], "postiiv": [25, 82], "shown": [25, 82, 158, 237], "note": [25, 27, 29, 41, 82, 87, 107, 132, 139, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 217, 220, 238, 259, 274], "is_signific": [25, 82], "indic": [25, 37, 82, 95, 107, 158, 162, 166, 171, 220, 237, 239, 242, 247], "wa": [25, 33, 34, 82, 90, 92, 107, 142, 162, 170, 220, 222, 239, 246], "signfiic": [25, 82], "falst": [25, 82], "after": [25, 34, 41, 82, 92, 107, 132, 220], "send": [26, 34, 83, 92, 222], "window": [26, 29, 32, 83, 87, 89, 142, 148, 149, 162, 222, 228, 229, 239], "order": [26, 29, 30, 78, 83, 87, 88, 107, 142, 151, 155, 162, 179, 220, 222, 231, 234, 239, 255], "unusu": [26, 83], "reorder": [26, 83], "neurotool": [26, 33, 37, 220], "python": [27, 29, 30, 32, 34, 87, 88, 89, 92, 107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 216, 217, 218, 219, 220, 222, 232, 274, 275], "modul": [27, 49], "exploratori": 27, "analysi": [27, 107, 148, 155, 165, 175, 189, 220, 228, 234, 241, 251, 256], "model": [27, 50, 107, 108, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 200, 220, 247, 252, 256, 259, 266], "neurosci": [27, 201, 267], "research": [27, 107, 220], "poor": 27, "qualiti": [27, 191], "unstabl": 27, "stabl": [27, 139, 189, 193, 256, 259], "pleas": [27, 107, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 220, 247, 252, 259], "refer": [27, 30, 37, 88, 95, 107, 162, 203, 220, 239, 269], "specif": [27, 29, 33, 87, 90, 107, 220], "index": [27, 34, 92, 107, 142, 148, 155, 158, 163, 175, 191, 219, 220, 222, 228, 234, 237, 251, 275], "further": [27, 155, 234], "project": [27, 107, 142, 157, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 220, 222, 236, 259], "sever": [27, 139, 179, 255], "scientif": [27, 79, 216], "packag": [27, 49, 91], "includ": [27, 33, 90, 91, 107, 142, 154, 171, 220, 222, 233, 247], "scipi": [27, 29, 37, 38, 87, 95, 96, 107, 142, 166, 176, 177, 179, 189, 199, 200, 204, 220, 222, 242, 252, 253, 255, 256, 265, 266, 270], "statsmodel": [27, 171, 189, 247, 256], "panda": 27, "nipi": 27, "confus": 27, "much": [27, 107, 175, 198, 220, 251, 264], "organ": [27, 37, 95], "neural": [27, 189, 256], "simul": [27, 107, 152, 220], "duplic": [27, 166, 242], "There": [27, 34, 92], "focu": 27, "spatiotempor": 27, "multi": [27, 37, 95, 107, 148, 149, 155, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 228, 229, 234], "electrod": [27, 155, 234], "dataset": [27, 33, 90, 142, 171, 222, 247], "stochast": [27, 107, 139, 220], "dynam": [27, 142, 155, 222, 234], "explor": [27, 37, 95, 107, 220], "synchroni": [27, 146, 162, 226, 239], "play": 27, "aren": 27, "nevertheless": 27, "brows": 27, "download": [27, 107, 220], "github": [27, 179, 255], "been": [27, 29, 33, 87, 90, 107, 142, 149, 156, 189, 220, 222, 229, 235, 256], "review": 27, "prepar": [27, 171, 247], "public": 27, "now": [27, 29, 33, 50, 87, 90, 107, 193, 198, 211, 218, 220, 259, 264], "associ": [27, 107, 149, 220, 222, 229], "content": [27, 49, 107, 220], "licens": 27, "under": [27, 107, 171, 189, 220, 247, 256], "creativ": 27, "attribut": [27, 91, 222], "non": [27, 29, 30, 37, 87, 88, 91, 95, 107, 142, 155, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 203, 216, 220, 222, 234, 251, 256, 259, 269], "commerci": 27, "share": [27, 33, 90, 139], "alik": 27, "full": [27, 29, 87, 107, 142, 170, 220, 222, 246], "whole": [27, 156, 235], "those": [27, 29, 30, 87, 88, 107, 142, 155, 220, 222, 234], "otherwis": [27, 29, 87, 107, 162, 189, 220, 239, 256], "aggreg": 27, "publish": [27, 37, 95, 107, 220], "answer": [27, 37, 95, 107, 217, 220, 274], "gist": [27, 179, 255], "taken": [27, 107, 148, 162, 166, 191, 220, 228, 239, 242], "elsewher": [27, 107, 158, 220, 237], "cite": [27, 107, 220], "link": [27, 189, 256], "provid": [27, 33, 34, 38, 90, 91, 92, 96, 107, 142, 155, 162, 169, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 219, 220, 222, 234, 239, 245, 247, 252, 259, 275], "coher": [27, 50, 142, 146, 148, 155, 162, 175, 222, 226, 228, 234, 239, 251], "conv": [27, 50, 142, 222], "reflect2d": [27, 50, 142, 144, 222, 224], "reflect2d_1": [27, 50, 142, 144, 222, 224], "mirror2d": [27, 50, 142, 144, 154, 158, 222, 224, 233, 237], "convolve2dct": [27, 50, 142, 144, 222, 224], "separable2d": [27, 50, 142, 144, 222, 224], "gausskern2d": [27, 50, 142, 144, 222, 224], "gausskern1d": [27, 50, 142, 144, 222, 224], "morlet": [27, 50, 142, 222], "normalized_morlet": [27, 50, 142, 146, 222, 226], "prepare_wavelet_fft_basi": [27, 50, 142, 146, 222, 226], "fft_cwt": [27, 50, 142, 146, 222, 226], "logfreq": [27, 50, 142, 146, 222, 226], "prepare_wavelet_fft_basis_logspac": [27, 50, 142, 146, 222, 226], "population_synchrony_spectrum": [27, 50, 142, 146, 222, 226], "fft_cwt_transpos": [27, 50, 142, 146, 222, 226], "fft_cwt_transposed_logspac": [27, 50, 142, 146, 222, 226], "multitap": [27, 50, 142, 149, 222, 229], "dpss_cach": [27, 50, 142, 148, 222, 228], "multitaper_spectrum": [27, 50, 142, 148, 222, 228], "multitaper_squared_spectrum": [27, 50, 142, 148, 222, 228], "sliding_multitaper_spectrum": [27, 50, 142, 148, 222, 228], "multitaper_population_eigencoher": [27, 50, 142, 148, 222, 228], "ppc": [27, 50, 142, 222], "phase_random": [27, 50, 142, 149, 222, 229], "fftppc_bias": [27, 50, 142, 149, 222, 229], "fftppc": [27, 50, 142, 149, 222, 229], "fftppc_biased_multitap": [27, 50, 142, 149, 222, 229], "fftppc_multitap": [27, 50, 142, 149, 222, 229], "discard_spikes_closer_than_delta": [27, 50, 142, 149, 222, 229], "pairwise_phase_consist": [27, 50, 142, 149, 222, 229], "estimate_bias_in_uncorrected_ppc": [27, 50, 142, 149, 222, 229], "phase_randomized_bias_correct": [27, 50, 142, 149, 222, 229], "ppc_chance_level": [27, 50, 142, 149, 222, 229], "ppc_phase_randomize_chance_level_sampl": [27, 50, 142, 149, 222, 229], "savitskygolai": [27, 50, 142, 222], "sgord": [27, 50, 142, 151, 222, 231], "sgkern": [27, 50, 142, 151, 222, 231], "sgkernv": [27, 50, 142, 151, 222, 231], "sgkerna": [27, 50, 142, 151, 222, 231], "sgkernj": [27, 50, 142, 151, 222, 231], "sgfilt": [27, 50, 142, 151, 222, 231], "sgfiltv": [27, 50, 142, 151, 222, 231], "sgfilta": [27, 50, 142, 151, 222, 231], "sgfiltj": [27, 50, 142, 151, 222, 231], "sgsmooth": [27, 50, 142, 151, 222, 231], "sgdifferenti": [27, 50, 142, 151, 222, 231], "sgacceler": [27, 50, 142, 151, 222, 231], "sgjerk": [27, 50, 142, 151, 222, 231], "sde": [27, 50, 142, 247], "sample_wiener_process": [27, 50, 142, 152], "sample_ou_process": [27, 50, 142, 152], "geometric_window": [27, 50, 142, 222], "gaussian_kernel": [27, 50, 142, 222], "gaussian_smooth": [27, 50, 142, 222], "circular_gaussian_smooth": [27, 50, 142, 222], "circular_gaussian_smooth_2d": [27, 50, 142, 222], "linear_cosine_basi": [27, 50, 142, 222], "circular_cosine_basi": [27, 50, 142, 222], "unitscal": [27, 50, 142, 222], "topercentil": [27, 50, 142, 222], "local_maxima": [27, 50, 142, 222], "local_minima": [27, 50, 142, 222], "amp": [27, 50, 142, 156, 222, 235], "get_snip": [27, 50, 142, 222], "triggered_averag": [27, 50, 142, 222], "get_triggered_stat": [27, 50, 142, 222], "padout": [27, 50, 142, 222], "padin": [27, 50, 142, 222], "nonnegative_bandpass_filt": [27, 50, 142, 222], "pad_sign": [27, 50, 142, 222], "bandpass_filt": [27, 50, 142, 222], "box_filt": [27, 50, 142, 222], "median_filt": [27, 50, 142, 222], "percentile_filt": [27, 50, 142, 222], "variance_filt": [27, 50, 142, 222], "rewrap": [27, 50, 142, 222], "pdiff": [27, 50, 142, 222], "pghilbert": [27, 50, 142, 222], "fudge_deriv": [27, 50, 142, 222], "ifreq": [27, 50, 142, 222], "unwrap": [27, 50, 86, 91, 142, 162, 222, 239], "ang": [27, 50, 142, 222], "randband": [27, 50, 142, 222], "arenear": [27, 50, 142, 222], "aresaf": [27, 50, 142, 222], "get_edg": [27, 50, 142, 222], "set_edg": [27, 50, 142, 222], "remove_gap": [27, 50, 142, 222], "remove_short": [27, 50, 142, 222], "phase_rot": [27, 50, 142, 222], "fm_mod": [27, 50, 142, 222], "piec": [27, 50, 107, 142, 220, 222], "stats_block": [27, 50, 142, 222], "mean_block": [27, 50, 142, 222], "var_block": [27, 50, 142, 222], "median_block": [27, 50, 142, 222], "phase_randomize_from_amplitud": [27, 50, 142, 222], "estimate_pad": [27, 50, 142, 222], "lowpass_filt": [27, 50, 142, 222], "highpass_filt": [27, 50, 142, 222], "fdiff": [27, 50, 142, 222], "interpolate_nan": [27, 50, 142, 222], "interpolate_nan_quadrat": [27, 50, 142, 222], "killspik": [27, 50, 142, 222], "peak_within": [27, 50, 142, 222], "local_peak_within": [27, 50, 142, 222], "take_axis_slic": [27, 50, 142, 222], "take_axi": [27, 50, 142, 222], "ndargmax": [27, 50, 142, 222], "complex_to_nan": [27, 50, 142, 222], "make_rebroadcast_slic": [27, 50, 142, 222], "zeromean": [27, 50, 142, 222], "zscore": [27, 50, 142, 219, 222, 275], "deltaovermean": [27, 50, 142, 222], "unit_length": [27, 50, 142, 222], "sign_preserving_amplitude_demodul": [27, 50, 142, 222], "autocorrel": [27, 50, 142, 149, 175, 222, 229, 251], "upsampl": [27, 50, 142, 155, 222, 234], "linfilt": [27, 50, 142, 222], "make_lag": [27, 50, 142, 222], "zgrid": [27, 50, 142, 222], "nice_interp": [27, 50, 142, 222], "fftacorr1d": [27, 50, 142, 222], "fftsta": [27, 50, 142, 222], "interpmax1d": [27, 50, 142, 222], "spaced_deriv": [27, 50, 142, 222], "drop_nonfinit": [27, 50, 142, 222], "split_into_group": [27, 50, 142, 222], "uniform": [27, 49, 50, 107, 142, 193, 220, 222, 259], "invert_uniform": [27, 50, 142, 222], "virtual_reference_line_noise_remov": [27, 50, 142, 222], "band_stop_line_noise_remov": [27, 50, 142, 222], "stat": [27, 49, 50, 107, 142, 220, 222], "ccor": [27, 50, 171, 175, 247, 251], "ccm": [27, 50, 171, 175, 247, 251], "blockccm": [27, 50, 171, 175, 247, 251], "sta": [27, 50, 142, 171, 175, 222, 247, 251], "blocksta": [27, 50, 171, 175, 247, 251], "reconstruct": [27, 50, 139, 171, 175, 247, 251], "cspect": [27, 50, 171, 175, 247, 251], "cspectm": [27, 50, 171, 175, 247, 251], "spike_lfp_filt": [27, 50, 171, 175, 247, 251], "spectreconstruct": [27, 50, 171, 175, 247, 251], "create_spectral_model": [27, 50, 171, 175, 247, 251], "construct_lowpass_oper": [27, 50, 171, 175, 247, 251], "autocorrelation_bay": [27, 50, 171, 175, 247, 251], "kdepeak": [27, 50, 171, 176, 247, 252], "knn_1d_densiti": [27, 50, 171, 176, 247, 252], "adaptive_density_grid": [27, 50, 171, 176, 247, 252], "gridhist": [27, 50, 171, 176, 247, 252], "poisson_logpdf": [27, 50, 171, 177, 247, 253], "poisson_pdf": [27, 50, 171, 177, 247, 253], "gaussian_logpdf": [27, 50, 171, 177, 247, 253], "gaussian_pdf": [27, 50, 171, 177, 247, 253], "explogpdf": [27, 50, 171, 177, 247, 253], "sample_categor": [27, 50, 171, 177, 247, 253], "fast_kd": [27, 50, 171, 247], "image_cov": [27, 50, 171, 179, 247, 255], "glm": [27, 50, 171, 247], "glmpenaltypoisson": [27, 50, 171, 189, 247, 256], "glmpenaltybernoulli": [27, 50, 171, 189, 247, 256], "glmpenaltyl2": [27, 50, 171, 189, 247, 256], "ppglmfit": [27, 50, 171, 189, 247, 256], "fitglm": [27, 50, 171, 189, 247, 256], "crossvalidatedauc": [27, 50, 171, 189, 247, 256], "gradientglmfit": [27, 50, 171, 189, 247, 256], "cosine_kernel": [27, 35, 38, 50, 93, 96, 154, 160, 171, 189, 233, 238, 247, 256], "log_cosine_basi": [27, 35, 38, 50, 93, 96, 154, 160, 171, 189, 233, 238, 247, 256], "make_cosine_basi": [27, 35, 38, 50, 93, 96, 154, 160, 171, 189, 233, 238, 247, 256], "numeric_grad": [27, 50, 171, 189, 247, 256], "numeric_hess": [27, 50, 171, 189, 247, 256], "grid_search": [27, 50, 171], "hmm": [27, 50, 171, 247], "poisson_parameter_guess": [27, 50, 171, 193, 247, 259], "poisson_baum_welch": [27, 50, 171, 193, 247, 259], "viterbi": [27, 50, 171, 193, 247, 259], "viterbi_log": [27, 50, 171, 193, 247, 259], "hasnan": [27, 50, 171, 193, 247, 259], "poisson_viterbi_state_inf": [27, 50, 171, 193, 247, 259], "forward_backward": [27, 50, 171, 193, 247, 259], "jump": [27, 50, 171, 193, 247, 259], "log_likelihood": [27, 50, 171, 193, 247, 259], "baum_welch": [27, 50, 171, 193, 247, 259], "forward_abstract": [27, 50, 171, 193, 247, 259], "backward_abstract": [27, 50, 171, 193, 247, 259], "forward_backward_abstract": [27, 50, 171, 193, 247, 259], "diffusiongaussian": [27, 50, 171, 193, 247, 259], "fwd": [27, 171, 193, 247, 259], "bwd": [27, 171, 193, 247, 259], "loggaussiancoxapproxim": [27, 50, 171, 193, 247, 259], "loggaussiancoxmodel": [27, 50, 171, 193, 247, 259], "gaussiancoxapproxim": [27, 50, 171, 193, 247, 259], "gaussiancoxmodel": [27, 50, 171, 193, 247, 259], "chisquarecoxapproxim": [27, 50, 171, 193, 247, 259], "chisquarecoxmodel": [27, 50, 171, 193, 247, 259], "bernoulliobservationapproxim": [27, 50, 171, 193, 247, 259], "bernoulliobservationmodel": [27, 50, 171, 193, 247, 259], "truncatedloggaussiancoxapproxim": [27, 50, 171, 193, 247, 259], "truncatedloggaussiancoxmodel": [27, 50, 171, 193, 247, 259], "mvgaussian": [27, 50, 171, 193, 247, 259], "mvgupdat": [27, 50, 171, 193, 247, 259], "lgcp_observation_minim": [27, 50, 171, 193, 247, 259], "mvloggaussiancox": [27, 50, 171, 193, 247, 259], "mvpoissonapproxim": [27, 171, 193, 247, 259], "ougaussian": [27, 50, 171, 193, 247, 259], "mvgouupdat": [27, 50, 171, 193, 247, 259], "poissonobservationapproxim": [27, 50, 171, 193, 247, 259], "poissonobservationmodel": [27, 50, 171, 193, 247, 259], "truncatedpoissonobservationapproxim": [27, 50, 171, 193, 247, 259], "truncatedpoissonobservationmodel": [27, 50, 171, 193, 247, 259], "dkl_discret": [27, 50, 171, 194, 247, 260], "discrete_entropy_sampl": [27, 50, 171, 194, 247, 260], "discrete_entropy_distribut": [27, 50, 171, 194, 247, 260], "regularized_discrete_entropi": [27, 50, 171, 194, 247, 260], "poisson_entropy_nat": [27, 50, 171, 194, 247, 260], "mcint": [27, 50, 171, 247], "monte_carlo_expect": [27, 50, 171, 198, 247, 264], "monte_carlo_mo": [27, 50, 171, 198, 247, 264], "minim": [27, 37, 50, 95, 171, 189, 204, 247, 256, 270], "failureerror": [27, 50, 171, 199, 247, 265], "minimize_retri": [27, 50, 171, 199, 247, 265], "mixtur": [27, 50, 107, 171, 193, 220, 247, 259], "two_class_poisson_mixture_model": [27, 50, 171, 200, 247, 266], "modefind": [27, 50, 171, 247], "logmodeplot": [27, 50, 171, 201, 247, 267], "logmod": [27, 50, 171, 201, 247, 267], "peakfinder5": [27, 50, 171, 201, 247, 267], "benjamini_hochberg_positive_correl": [27, 50, 171, 203, 247, 269], "correct_pvalues_positive_depend": [27, 50, 171, 203, 247, 269], "correct_pvalu": [27, 50, 171, 203, 247, 269], "bootstrap_statistic_two_sid": [27, 50, 171, 203, 247, 269], "bootstrap_median": [27, 50, 171, 203, 247, 269], "bootstrap_mean": [27, 50, 171, 203, 247, 269], "bootstrap_compare_statistic_two_sid": [27, 50, 171, 203, 247, 269], "bootstrap_compare_statistic_two_sided_parallel": [27, 50, 171, 203, 247, 269], "bootstrap_compare_median": [27, 50, 171, 203, 247, 269], "bootstrap_compare_mean": [27, 50, 171, 203, 247, 269], "regress": [27, 50, 171, 247], "damped_cosin": [27, 50, 171, 204, 247, 270], "weighted_least_squar": [27, 50, 171, 204, 247, 270], "power_law": [27, 50, 171, 204, 247, 270], "gaussian_funct": [27, 50, 171, 204, 247, 270], "half_gaussian_funct": [27, 50, 171, 204, 247, 270], "exponential_decai": [27, 50, 171, 204, 247, 270], "robust_lin": [27, 50, 171, 204, 247, 270], "nrmse": [27, 50, 171, 247], "weighted_avg_and_std": [27, 50, 171, 247], "partition_data": [27, 50, 171, 247], "partition_trials_for_crossvalid": [27, 50, 171, 247], "polar_error": [27, 50, 171, 247], "add_const": [27, 50, 171, 247], "trial_crossvalidated_least_squar": [27, 50, 171, 247], "partition_data_for_crossvalid": [27, 50, 171, 247], "block_shuffl": [27, 50, 171, 247], "crossvalidated_least_squar": [27, 50, 171, 247], "print_stat": [27, 50, 171, 247], "outlier": [27, 50, 171, 247], "reject_outli": [27, 50, 171, 247], "pca": [27, 50, 171, 247], "descript": [27, 29, 50, 87, 170, 171, 246, 247], "short": [27, 50, 142, 146, 171, 189, 216, 222, 226, 247, 256], "glmfit": [27, 50, 171, 247], "spatial": [27, 49, 50], "array_average_amplitud": [27, 50, 154, 155, 233, 234], "array_kuramoto": [27, 50, 154, 155, 233, 234], "array_synchroni": [27, 50, 154, 155, 233, 234], "array_kuramoto_standard_devi": [27, 50, 154, 155, 233, 234], "array_synchrony_standard_devi": [27, 50, 154, 155, 233, 234], "array_phase_gradi": [27, 50, 154, 155, 233, 234], "array_count_cent": [27, 50, 154, 155, 233, 234], "array_count_crit": [27, 50, 154, 155, 233, 234], "array_phasegradient_loc": [27, 50, 154, 155, 233, 234], "array_phasegradient_planar": [27, 50, 154, 155, 233, 234], "array_phasegradient_magnitude_sigma": [27, 50, 154, 155, 233, 234], "array_phasegradient_magnitude_cv": [27, 50, 154, 155, 233, 234], "array_phasegradient_pgd_threshold": [27, 50, 154, 155, 233, 234], "array_wavelength_pgd_threshold": [27, 50, 154, 155, 233, 234], "array_wavelength_local_pgd_threshold": [27, 50, 154, 155, 233, 234], "array_speed_pgd_threshold": [27, 50, 154, 155, 233, 234], "array_speed_loc": [27, 50, 154, 155, 233, 234], "array_wavelength_loc": [27, 50, 154, 155, 233, 234], "array_wavelength_planar": [27, 50, 154, 155, 233, 234], "array_synchrony_pgd": [27, 50, 154, 155, 233, 234], "array_synchrony_pgd_standard_devi": [27, 50, 154, 155, 233, 234], "array_kuramoto_pgd": [27, 50, 154, 155, 233, 234], "array_kuramoto_pgd_standard_devi": [27, 50, 154, 155, 233, 234], "trim_arrai": [27, 50, 154, 155, 233, 234], "trim_array_as_if": [27, 50, 154, 155, 233, 234], "pack_array_data": [27, 50, 154, 155, 233, 234], "dct": [27, 50, 154, 233], "get_mask_antialias": [27, 50, 154, 156, 233, 235], "get_mask": [27, 50, 154, 156, 233, 235], "dct_cut": [27, 50, 154, 156, 233, 235], "outer_complex": [27, 50, 154, 156, 233, 235], "dct_cut_antialia": [27, 50, 154, 156, 233, 235], "dct_cut_downsampl": [27, 50, 154, 156, 233, 235], "dct_upsampl": [27, 50, 154, 156, 233, 235], "iterated_upsampl": [27, 50, 154, 156, 233, 235], "dct_upsample_notrim": [27, 50, 154, 156, 233, 235], "get_pair_dist": [27, 50, 154, 157, 233, 236], "distance_angular_devi": [27, 50, 154, 157, 233, 236], "get_averaged_angular_dist": [27, 50, 154, 157, 233, 236], "get_length_constant_tri": [27, 50, 154, 157, 233, 236], "get_average_synchrony_length_constant_parallel": [27, 50, 154, 157, 233, 236], "synchrony_length_constant_areas_summari": [27, 50, 154, 157, 233, 236], "fftzero": [27, 50, 154, 156, 233, 235], "plot_phase_gradi": [27, 50, 154, 158, 233, 237], "plot_phase_direct": [27, 50, 154, 158, 233, 237], "dphidx": [27, 50, 154, 158, 233, 237], "dphidi": [27, 50, 154, 158, 233, 237], "get_phase_gradient_as_complex": [27, 50, 154, 158, 233, 237], "getpeaks2d": [27, 50, 154, 158, 233, 237], "coalesc": [27, 50, 154, 158, 166, 233, 237, 242], "coalesce_point": [27, 50, 154, 158, 233, 237], "find_critical_point": [27, 50, 154, 158, 233, 237], "plot_critical_point": [27, 50, 154, 158, 233, 237], "find_critical_potential_point": [27, 50, 154, 158, 233, 237], "grad": [27, 50, 154, 158, 233, 237], "quickgrad": [27, 50, 154, 158, 233, 237], "getp": [27, 50, 154, 158, 233, 237], "get_critical_spectra": [27, 50, 154, 158, 233, 237], "plot_critical_spectra": [27, 50, 154, 158, 233, 237], "cut_array_data": [27, 50, 154, 158, 233, 237], "geometri": [27, 50, 154], "laplace_kernel": [27, 35, 37, 50, 93, 95, 154, 160, 233, 238], "gaussian_2d_kernel": [27, 50, 154, 160, 233, 238], "absorbing_gaussian": [27, 50, 154, 160, 233, 238], "absorbing_laplacian": [27, 50, 154, 160, 233, 238], "magicsharp": [27, 50, 154, 160, 233, 238], "magickernel": [27, 50, 154, 160, 233, 238], "continuum_kernel": [27, 50, 154, 160, 233, 238], "log_spline_basi": [27, 50, 154, 160, 233, 238], "exponential_basi": [27, 50, 154, 160, 233, 238], "diffusion_basi": [27, 50, 154, 160, 233, 238], "iterative_orthogonalize_basi": [27, 50, 154, 160, 233, 238], "population_kuramoto": [27, 50, 154, 162, 233, 239], "population_synchroni": [27, 50, 154, 162, 233, 239], "population_polar_std": [27, 50, 154, 162, 233, 239], "population_average_amplitud": [27, 50, 154, 162, 233, 239], "population_signal_dispers": [27, 50, 154, 162, 233, 239], "population_signal_concentr": [27, 50, 154, 162, 233, 239], "population_signal_precis": [27, 50, 154, 162, 233, 239], "population_signal_phase_dispers": [27, 50, 154, 162, 233, 239], "population_signal_phase_std": [27, 50, 154, 162, 233, 239], "population_signal_amplitude_std": [27, 50, 154, 162, 233, 239], "population_signal_amplitude_dispers": [27, 50, 154, 162, 233, 239], "population_signal_phase_precis": [27, 50, 154, 162, 233, 239], "population_signal_amplitude_precis": [27, 50, 154, 162, 233, 239], "population_signal_descript": [27, 50, 154, 162, 233, 239], "population_synchrony_linear": [27, 50, 154, 162, 233, 239], "population_phase_coher": [27, 50, 154, 162, 233, 239], "analytic_signal_coher": [27, 50, 154, 162, 233, 239], "population_sliding_signal_coher": [27, 50, 154, 162, 233, 239], "sliding_population_signal_coher": [27, 50, 154, 162, 233, 239], "population_normalized_sliding_signal_coher": [27, 50, 154, 162, 233, 239], "population_phase_relative_sliding_kuramoto": [27, 50, 154, 162, 233, 239], "population_median_phase_veloc": [27, 50, 154, 162, 233, 239], "population_median_frequ": [27, 50, 154, 162, 233, 239], "p2c": [27, 50, 154, 163, 211, 219, 275], "c2p": [27, 50, 154, 163, 211, 219, 275], "to_xypoint": [27, 50, 154, 163], "closest": [27, 50, 154, 163], "pair_neighbor": [27, 50, 154, 163], "paired_dist": [27, 50, 154, 163], "spike": [27, 41, 49, 50, 132, 142, 149, 154, 175, 176, 189, 222, 229, 233, 251, 252, 256], "interp_bin": [27, 50, 154, 165, 233, 241], "triangul": [27, 50, 154, 233], "z2xy": [27, 50, 154, 166, 233, 242], "uniquerow": [27, 50, 154, 166, 233, 242], "trianglestoedg": [27, 50, 154, 166, 233, 242], "edgesnearbi": [27, 50, 154, 166, 233, 242], "plot_edg": [27, 50, 154, 166, 233, 242], "plot_triangl": [27, 50, 154, 166, 233, 242], "mergenearbi": [27, 50, 154, 166, 233, 242], "brute_force_local_2d_maxima": [27, 50, 154, 233], "pp_xcorr": [27, 50, 168, 169, 244, 245], "txcorr": [27, 50, 168, 169, 244, 245], "pack_cross_correlation_matrix": [27, 50, 168, 169, 244, 245], "cut_spik": [27, 50, 168, 169, 244, 245], "times_to_rast": [27, 50, 168, 169, 244, 245], "bin_spikes_rast": [27, 50, 168, 169, 244, 245], "bin_spike_tim": [27, 50, 168, 169, 244, 245], "waveform": [27, 50, 168, 244], "realign": [27, 50, 168, 170, 244, 246], "getfwhm": [27, 50, 168, 170, 244, 246], "getpvt": [27, 50, 168, 170, 244, 246], "getwahp": [27, 50, 168, 170, 244, 246], "getpt": [27, 50, 168, 170, 244, 246], "getpthw": [27, 50, 168, 170, 244, 246], "getphp": [27, 50, 168, 170, 244, 246], "minmax": [27, 50, 168, 170, 244, 246], "normalized_waveform": [27, 50, 168, 170, 244, 246], "is_thin": [27, 50, 168, 170, 244, 246], "is_thin_pvt": [27, 50, 168, 170, 244, 246], "process": [27, 33, 34, 37, 38, 50, 90, 92, 95, 96, 107, 142, 146, 152, 156, 168, 169, 170, 189, 193, 201, 220, 222, 226, 235, 244, 245, 246, 256, 259, 267], "graphic": [27, 49, 50], "test_colormap": [27, 50, 75, 77], "dendron": [27, 50, 75], "list_lik": [27, 50, 75, 78], "get_depth": [27, 50, 75, 78], "count_nod": [27, 50, 75, 78], "inorder_travers": [27, 50, 75, 78], "plot_bracket": [27, 50, 75, 78], "plot_brackets_polar": [27, 50, 75, 78], "fabio_map": [27, 50, 75, 77], "ztransform_plot_help": [27, 50, 75], "linalg": [27, 49, 50, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 247], "issquar": [27, 35, 36, 50, 93, 94], "iscolumn": [27, 35, 36, 50, 93, 94], "isrow": [27, 35, 36, 50, 93, 94], "asrow": [27, 35, 36, 50, 93, 94], "ascolumn": [27, 35, 36, 50, 93, 94], "assquar": [27, 35, 36, 50, 93, 94], "assertsquar": [27, 35, 36, 50, 93, 94], "assertcolumn": [27, 35, 36, 50, 93, 94], "assertrow": [27, 35, 36, 50, 93, 94], "assertvector": [27, 35, 36, 50, 93, 94], "asvector": [27, 35, 36, 50, 93, 94], "assertfinit": [27, 35, 36, 50, 93, 94], "assertr": [27, 35, 36, 50, 93, 94], "assertfiniter": [27, 35, 36, 50, 93, 94], "assertshap": [27, 35, 36, 50, 93, 94], "triu_el": [27, 35, 37, 50, 93, 95], "tril_el": [27, 35, 37, 50, 93, 95], "column": [27, 35, 37, 50, 93, 95, 155, 158, 189, 216, 234, 237, 256], "rcond": [27, 35, 37, 50, 93, 95], "check_finite_r": [27, 35, 37, 50, 93, 95], "check_covmat": [27, 35, 37, 50, 93, 95], "check_covmat_fast": [27, 35, 37, 50, 93, 95], "real_eig": [27, 35, 37, 50, 93, 95], "psd_eig": [27, 35, 37, 50, 93, 95], "logdet": [27, 35, 37, 50, 93, 95], "solt": [27, 35, 37, 50, 93, 95], "rsolt": [27, 35, 37, 50, 93, 95], "rsolv": [27, 35, 37, 50, 93, 95], "qf": [27, 35, 37, 50, 93, 95], "abserr": [27, 35, 37, 50, 93, 95], "errmx": [27, 35, 37, 50, 93, 95], "cholupd": [27, 35, 37, 50, 93, 95], "cholupdate_ey": [27, 35, 37, 50, 93, 95], "cartesian_product": [27, 35, 37, 50, 93, 95], "nearpdhigham": [27, 35, 37, 50, 93, 95], "nearpsdrebonatojackel": [27, 35, 37, 50, 93, 95], "cinv": [27, 35, 37, 50, 93, 95], "csolv": [27, 35, 37, 50, 93, 95], "wheremax": [27, 35, 37, 50, 93, 95], "wheremin": [27, 35, 37, 50, 93, 95], "reglstsq": [27, 35, 37, 50, 93, 95], "ldistanc": [27, 35, 37, 50, 93, 95], "llasso": [27, 35, 37, 50, 93, 95], "rmatrix": [27, 35, 37, 50, 93, 95], "rdiv": [27, 35, 37, 50, 93, 95], "autopredict": [27, 35, 37, 50, 93, 95], "kronsum": [27, 35, 37, 50, 93, 95], "top_v": [27, 35, 37, 50, 93, 95], "normedcovari": [27, 35, 37, 50, 93, 95], "maxeig": [27, 35, 37, 50, 93, 95], "selector_matrix": [27, 35, 37, 50, 93, 95], "match_covari": [27, 35, 37, 50, 93, 95], "adjacency1d": [27, 35, 38, 50, 93, 96], "laplacian1d_circular": [27, 35, 38, 50, 93, 96], "adjacency2d": [27, 35, 38, 50, 93, 96], "laplacian2d": [27, 35, 38, 50, 93, 96], "adjacency2d_circular": [27, 35, 38, 50, 93, 96], "adjacency2d_rot": [27, 35, 38, 50, 93, 96], "laplacian1d": [27, 35, 38, 50, 93, 96], "laplacianft1d": [27, 35, 38, 50, 93, 96], "wienerft1d": [27, 35, 38, 50, 93, 96], "diffuseft1d": [27, 35, 38, 50, 93, 96], "flatcov": [27, 35, 38, 50, 93, 96], "delta": [27, 35, 38, 50, 93, 96, 149, 163, 189, 203, 229, 256, 269], "differenti": [27, 35, 38, 41, 50, 93, 96, 132, 142, 151, 155, 158, 180, 181, 182, 183, 184, 185, 186, 187, 188, 222, 231, 234, 237], "integr": [27, 35, 38, 41, 50, 93, 96, 132, 160, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 198, 238, 253, 256, 259, 264], "covfrom": [27, 35, 38, 50, 93, 96], "oucov": [27, 35, 38, 50, 93, 96], "gaussian1dbluroper": [27, 35, 38, 50, 93, 96], "circular1dbluroper": [27, 35, 38, 50, 93, 96], "separable_guassian_blur": [27, 35, 38, 50, 93, 96], "gaussian2dbluroper": [27, 35, 38, 50, 93, 96], "job": [27, 49, 50], "cach": [27, 28, 30, 32, 33, 50, 86, 88, 89, 90, 91, 107, 148, 219, 220, 228, 275], "function_hash_with_subroutin": [27, 28, 29, 50, 86, 87], "get_sourc": [27, 28, 29, 50, 86, 87], "function_hash_no_subroutin": [27, 28, 29, 50, 86, 87], "base64hash": [27, 28, 29, 50, 86, 87], "base64hash2byt": [27, 28, 29, 50, 86, 87], "function_signatur": [27, 28, 29, 50, 86, 87], "signature_to_file_str": [27, 28, 29, 50, 86, 87], "file_string_to_signatur": [27, 28, 29, 50, 86, 87], "human_encod": [27, 28, 29, 50, 86, 87], "human_decod": [27, 28, 29, 50, 86, 87], "get_cache_path": [27, 28, 29, 50, 86, 87], "locate_cach": [27, 28, 29, 50, 86, 87], "validate_for_matfil": [27, 28, 29, 50, 86, 87], "validate_for_numpi": [27, 28, 29, 50, 86, 87], "read_cache_entri": [27, 28, 29, 50, 86, 87], "disk_cach": [27, 28, 29, 50, 86, 87], "hierarchical_cach": [27, 28, 29, 50, 86, 87], "closur": [27, 28, 50, 86], "is_immut": [27, 28, 30, 50, 86, 88], "is_probably_saf": [27, 28, 30, 50, 86, 88], "csv": [27, 28, 30, 50, 86, 88], "inspect_function_closur": [27, 28, 30, 50, 86, 88], "verify_function_closur": [27, 28, 30, 50, 86, 88], "get_subroutin": [27, 28, 30, 50, 86, 88], "filenam": [27, 28, 29, 50, 86, 87, 139], "validate_argument_signatur": [27, 28, 32, 50, 86, 89], "is_dangerous_filenam": [27, 28, 32, 50, 86, 89], "check_filenam": [27, 28, 32, 50, 86, 89], "initialize_system_cach": [27, 28, 50, 86], "purge_ram_cach": [27, 28, 33, 50, 86, 90], "purge_ssd_cach": [27, 28, 33, 50, 86, 90], "du": [27, 28, 33, 50, 86, 90], "reset_ramdisk": [27, 28, 33, 50, 86, 90], "launch_cache_synchron": [27, 28, 33, 50, 86, 90], "initialize_cach": [27, 28, 33, 50, 86, 90], "cache_test": [27, 28, 33, 50, 86, 90], "ndecor": [27, 33, 50, 86, 90], "listit": [27, 50, 86, 91], "tupleit": [27, 50, 86, 91], "sanit": [27, 50, 86, 91], "summarize_funct": [27, 50, 86, 91], "argument_signatur": [27, 29, 50, 86, 87, 91], "print_signatur": [27, 50, 86, 91], "clear_memo": [27, 50, 86, 91], "memoiz": [27, 29, 33, 50, 86, 87, 90, 91], "parallel": [27, 28, 50, 86, 139, 216], "parmap": [27, 28, 34, 50, 86, 92], "pararraymap": [27, 28, 34, 50, 86, 92], "parmap_dict": [27, 28, 34, 50, 86, 92], "function_fingerprint": [27, 28, 34, 50, 86, 92], "eval_from_cach": [27, 28, 34, 50, 86, 92], "parallel_indirect_wrapp": [27, 28, 34, 50, 86, 92], "parallel_cached_wrapp": [27, 28, 34, 50, 86, 92], "parimap": [27, 28, 34, 50, 86, 92], "close_pool": [27, 28, 34, 50, 86, 92], "reset_pool": [27, 28, 34, 50, 86, 92], "parallel_error_handl": [27, 28, 34, 50, 86, 92], "decor": [28, 29, 30, 87, 88, 91], "disk": [29, 32, 33, 87, 89, 90], "forc": [29, 33, 87, 90, 139, 142, 156, 199, 222, 235, 265], "subroutin": [29, 30, 33, 37, 87, 88, 90, 95], "hash": [29, 30, 87, 88], "sensit": [29, 87, 107, 155, 157, 203, 219, 220, 234, 236, 269, 275], "recurs": [29, 87, 91, 215, 219, 275], "fair": [29, 87], "overhead": [29, 87], "allow": [29, 33, 37, 87, 90, 95, 107, 146, 155, 163, 199, 219, 220, 226, 234, 265, 275], "mutual": [29, 37, 87, 95], "exclud": [29, 87, 107, 142, 155, 201, 220, 222, 234, 267], "alreadi": [29, 87, 175, 189, 251, 256], "visit": [29, 87], "built": [29, 30, 34, 79, 87, 88, 92], "compat": [29, 32, 87, 89, 107, 142, 155, 198, 220, 222, 234, 264], "grace": [29, 87], "handl": [29, 30, 34, 87, 88, 92, 142, 215, 222], "potenti": [29, 41, 87, 132, 158, 237], "recurr": [29, 87], "structur": [29, 37, 78, 87, 95], "tricki": [29, 30, 87, 88], "tree": [29, 78, 87], "node": [29, 78, 87], "present": [29, 34, 87, 92, 142, 149, 217, 222, 229, 274], "therefor": [29, 87, 107, 139, 142, 220, 222], "mani": [29, 32, 34, 87, 89, 92, 107, 142, 220, 222], "intermedi": [29, 33, 87, 90], "far": [29, 33, 87, 90, 107, 199, 220, 265], "encount": [29, 87], "we": [29, 30, 33, 34, 37, 41, 87, 88, 90, 92, 95, 107, 132, 139, 142, 149, 155, 193, 199, 200, 220, 222, 229, 234, 259, 265, 266], "cannot": [29, 30, 34, 87, 88, 91, 92, 142, 222], "worth": [29, 87], "topologi": [29, 87], "least": [29, 37, 87, 95, 107, 155, 171, 175, 220, 234, 247, 251], "suffic": [29, 87], "system": [29, 33, 34, 37, 50, 87, 90, 92, 95, 107, 142, 193, 211, 220, 222, 259], "grab": [29, 87, 107, 220], "combin": [29, 87, 155, 234], "datastructur": [29, 87], "profil": [29, 87], "obtain": [29, 87, 107, 215, 220], "assum": [29, 87, 107, 142, 155, 162, 193, 203, 220, 222, 234, 239, 259, 269], "wrap": [29, 37, 38, 87, 95, 96, 107, 142, 155, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 216, 220, 222, 234, 247], "modifi": [29, 33, 87, 90, 91, 107, 157, 203, 220, 236, 269], "strip": [29, 87, 91, 142, 222], "assumpt": [29, 87, 107, 203, 220, 269], "detect": [29, 30, 37, 87, 88, 95, 142, 222], "effect": [29, 87, 107, 142, 219, 220, 222, 275], "behavior": [29, 30, 87, 88, 107, 142, 170, 220, 222, 246], "global": [29, 30, 34, 50, 87, 88, 92, 142, 170, 211, 217, 219, 222, 246, 274, 275], "variabl": [29, 34, 37, 87, 92, 95, 107, 139, 171, 204, 219, 220, 247, 270, 275], "mutabl": [29, 30, 34, 87, 88, 92, 107, 220], "scope": [29, 34, 87, 92], "close": [29, 30, 34, 37, 38, 87, 88, 92, 95, 96, 107, 142, 149, 220, 222, 229], "muse": [29, 87], "fail": [29, 33, 34, 87, 90, 92, 107, 193, 199, 220, 259, 265], "warn": [29, 32, 33, 50, 87, 89, 90, 107, 149, 211, 219, 220, 229, 275], "extract": [29, 37, 87, 95, 142, 149, 155, 162, 215, 222, 229, 234, 239], "exist": [29, 50, 87, 107, 211, 219, 220, 275], "undecor": [29, 87], "construct": [29, 38, 87, 96, 175, 251], "obj": [29, 87, 189, 219, 256, 275], "identifi": [29, 87, 142, 158, 222, 237], "locat": [29, 33, 87, 90, 107, 142, 154, 155, 158, 165, 166, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 201, 219, 220, 222, 233, 234, 237, 241, 242, 252, 255, 267, 275], "correspond": [29, 87, 180, 181, 182, 183, 184, 185, 186, 187, 188], "particular": [29, 87], "abl": [29, 87], "dist": [29, 87], "across": [29, 30, 87, 88, 107, 149, 155, 158, 220, 229, 234, 237], "howev": [29, 34, 78, 87, 92, 107, 220], "pickl": [29, 34, 87, 92], "check": [29, 30, 32, 37, 41, 87, 88, 89, 95, 107, 132, 142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 198, 216, 219, 220, 222, 264, 275], "meaning": [29, 87], "almost": [29, 87], "imposs": [29, 87], "becom": [29, 87, 107, 220], "invalid": [29, 87], "quit": [29, 30, 87, 88, 142, 156, 222, 235], "ll": [29, 87, 107, 220], "argspec": [29, 87, 91], "valid": [29, 32, 87, 89, 142, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 222, 247, 256], "significantli": [29, 87, 203, 269], "sig": [29, 32, 87, 89, 91], "repr": [29, 87], "compress": [29, 87], "base64encod": [29, 87], "truncat": [29, 38, 87, 96, 107, 142, 219, 220, 222, 275], "signatur": [29, 30, 32, 87, 88, 89, 91, 171, 247], "human": [29, 87], "readabl": [29, 87], "simpli": [29, 37, 87, 95, 203, 269], "encod": [29, 50, 87, 108, 142, 155, 163, 222, 234], "d": [29, 37, 87, 95, 107, 175, 189, 191, 193, 215, 219, 220, 251, 256, 259, 275], "still": [29, 30, 33, 87, 88, 90], "need": [29, 33, 37, 87, 90, 95, 107, 139, 142, 149, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 222, 229, 251], "verif": [29, 87], "No": [29, 32, 87, 89, 107, 142, 162, 203, 220, 222, 239, 269], "4096": [29, 87], "charact": [29, 32, 87, 89, 216], "path": [29, 33, 87, 90, 215, 219, 275], "255": [29, 32, 87, 89], "try": [29, 34, 87, 92, 107, 160, 199, 216, 220, 238, 265], "260": [29, 87], "total": [29, 87, 107, 216, 220], "pathlen": [29, 87], "ascii": [29, 32, 87, 89], "31": [29, 38, 87, 96, 107, 160, 189, 220, 222, 238, 256], "easiest": [29, 87, 139], "wai": [29, 30, 34, 87, 88, 91, 92, 107, 139, 156, 193, 219, 220, 235, 259, 275], "problemat": [29, 87], "input": [29, 37, 41, 87, 95, 107, 132, 139, 142, 149, 155, 158, 171, 179, 217, 220, 222, 229, 234, 237, 247, 255, 274], "64": [29, 38, 87, 96, 160, 189, 222, 238, 256], "follow": [29, 33, 37, 87, 90, 95, 107, 142, 176, 203, 220, 222, 252, 269], "support": [29, 87, 107, 142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 222], "ast": [29, 87, 177, 253], "literal_ev": [29, 87], "node_or_str": [29, 87], "serial": [29, 87], "permit": [29, 32, 87, 89, 180, 181, 182, 183, 184, 185, 186, 187, 188], "paramtet": [29, 87], "json": [29, 87], "uniqu": [29, 87, 91, 107, 166, 219, 220, 242, 275], "recov": [29, 87, 156, 235], "becaus": [29, 87, 107, 139, 142, 149, 220, 222, 229], "represent": [29, 38, 87, 96, 107, 156, 220, 235], "circumv": [29, 87], "longer": [29, 87], "work": [29, 33, 34, 37, 87, 90, 92, 95, 107, 139, 142, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 199, 203, 217, 220, 222, 251, 252, 259, 265, 269, 274], "attempt": [29, 34, 37, 87, 92, 95, 107, 156, 219, 220, 235, 275], "experiment": [29, 33, 87, 90, 149, 229], "defaut": [29, 87], "base64": [29, 87], "kei": [29, 87, 107, 219, 220, 275], "entri": [29, 33, 37, 38, 87, 90, 95, 96, 107, 142, 171, 203, 220, 222, 247, 269], "eperiment": [29, 87], "nest": [29, 78, 87, 91, 215], "cache_root": [29, 87], "directori": [29, 87, 219, 275], "npy": [29, 87, 139], "etc": [29, 87, 107, 142, 171, 204, 220, 222, 247, 270], "fn": [29, 87], "info": [29, 87, 142, 191, 222], "absolut": [29, 37, 87, 95, 107, 146, 155, 162, 171, 198, 219, 220, 226, 234, 239, 247, 264, 275], "int8": [29, 87], "128": [29, 87], "127": [29, 87], "int16": [29, 87], "32768": [29, 87], "32767": [29, 87], "int32": [29, 87, 154, 163, 177, 233, 253], "2147483648": [29, 87], "2147483647": [29, 87], "int64": [29, 87, 107, 220], "9223372036854775808": [29, 87], "9223372036854775807": [29, 87], "uint8": [29, 87, 107, 220], "unsign": [29, 87, 107, 220], "uint16": [29, 87], "65535": [29, 87], "uint32": [29, 87], "4294967295": [29, 87], "uint64": [29, 87], "18446744073709551615": [29, 87], "float16": [29, 87], "half": [29, 87, 107, 142, 148, 170, 220, 222, 228, 246], "sign": [29, 87, 107, 142, 149, 220, 222, 229], "expon": [29, 38, 87, 96, 107, 160, 189, 216, 220, 238, 256], "mantissa": [29, 87], "52": [29, 38, 87, 96, 160, 170, 189, 238, 246, 256], "complex64": [29, 87, 142, 163, 222], "32": [29, 38, 87, 96, 107, 160, 189, 220, 238, 256], "complex128": [29, 87, 158, 237], "archiv": [29, 87, 107, 142, 220, 222], "cache_loc": [29, 87], "write_back": [29, 87], "skip_fast": [29, 87], "verbos": [29, 33, 34, 37, 87, 90, 91, 92, 95, 139, 142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 198, 199, 203, 222, 256, 264, 265, 269], "allow_mutable_bind": [29, 87], "cache_identifi": [29, 33, 87, 90], "__neurotools_cache__": [29, 33, 87, 90], "pattern": [29, 87, 107, 220], "decotr": [29, 87], "In": [29, 30, 33, 34, 37, 87, 88, 90, 92, 95, 107, 142, 160, 220, 222, 238], "hierarch": [29, 87], "filesystem": [29, 32, 33, 87, 89, 90, 219, 275], "rsync": [29, 33, 87, 90], "asynchron": [29, 87], "serious": [29, 87], "speedup": [29, 87], "due": [29, 87, 107, 139, 142, 220, 222], "cost": [29, 87, 139], "io": [29, 87], "savemat": [29, 87], "loadmat": [29, 87], "matlab": [29, 32, 37, 50, 87, 89, 95, 107, 155, 180, 181, 182, 183, 184, 185, 186, 187, 188, 203, 211, 215, 218, 219, 220, 234, 269, 275], "unfortun": [29, 87], "alter": [29, 87, 107, 220], "when": [29, 33, 34, 37, 87, 90, 92, 95, 107, 142, 149, 158, 193, 220, 222, 229, 237, 259], "retriev": [29, 87, 215], "Will": [29, 87], "hdf5": [29, 87, 215, 219, 275], "Not": [29, 32, 33, 87, 89, 90, 156, 180, 181, 182, 183, 184, 185, 186, 187, 188, 235], "implement": [29, 32, 33, 41, 87, 89, 90, 107, 132, 139, 142, 144, 148, 180, 181, 182, 183, 184, 185, 186, 187, 188, 216, 220, 222, 224, 228], "futur": [29, 87], "storang": [29, 87], "previous": [29, 87], "read": [29, 87, 219, 275], "too": [29, 87, 107, 149, 198, 220, 229, 264], "long": [29, 30, 32, 87, 88, 89, 107, 142, 193, 220, 222, 259], "print": [29, 33, 34, 37, 87, 90, 91, 92, 95, 107, 171, 193, 198, 199, 215, 218, 219, 220, 247, 259, 264, 265, 275], "detaild": [29, 87], "Such": [29, 87, 107, 220], "lead": [29, 33, 37, 87, 90, 95, 107, 142, 220, 222], "subdirectori": [29, 87, 215], "todo": [29, 87, 91, 142, 156, 157, 170, 171, 175, 204, 216, 219, 222, 235, 236, 246, 247, 251, 270, 275], "cacher": [29, 33, 87, 90], "fast_to_slow": [29, 87], "term": [29, 38, 87, 96, 107, 139, 163, 169, 189, 204, 219, 220, 245, 256, 270, 275], "hierarchi": [29, 33, 87, 90], "slower": [29, 33, 37, 87, 90, 95, 199, 265], "fallback": [29, 87], "main": [29, 33, 87, 90], "automat": [29, 30, 33, 37, 87, 88, 90, 95, 142, 171, 222, 247], "newli": [29, 34, 87, 92], "detail": [29, 34, 87, 92, 107, 139, 142, 171, 204, 220, 222, 247, 270], "iform": [29, 87], "out": [29, 34, 37, 41, 87, 92, 95, 107, 132, 139, 142, 149, 216, 220, 222, 229], "manipul": [29, 87], "unsaf": [29, 30, 87, 88], "namespac": [29, 30, 87, 88], "bind": [29, 30, 87, 88], "user": [29, 33, 34, 37, 87, 90, 92, 95, 107, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 217, 220, 222, 247, 274], "consequenti": [29, 87], "tell": [29, 87], "old": [29, 87, 139], "sub": [29, 87, 107, 142, 220, 222], "folder": [29, 87], "deal": [30, 88, 139], "problem": [30, 34, 37, 88, 92, 95, 107, 220], "late": [30, 88], "supris": [30, 88], "state": [30, 34, 88, 92, 107, 139, 142, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 220, 222, 253, 259], "surpris": [30, 88], "extern": [30, 88], "run": [30, 33, 34, 88, 90, 92, 107, 171, 219, 220, 247, 275], "extren": [30, 88], "difficult": [30, 88], "have": [30, 33, 34, 37, 88, 90, 92, 95, 107, 139, 142, 144, 149, 155, 162, 171, 189, 193, 220, 222, 224, 229, 234, 239, 247, 256, 259], "guarante": [30, 88, 107, 220], "befor": [30, 33, 88, 90, 107, 142, 149, 156, 171, 219, 220, 222, 229, 235, 247, 275], "trust": [30, 88], "safeti": [30, 88], "hopefulli": [30, 33, 88, 90], "likel": [30, 88], "troubl": [30, 88], "immut": [30, 88], "It": [30, 32, 33, 34, 88, 89, 90, 92, 107, 142, 155, 158, 175, 189, 198, 203, 217, 219, 220, 222, 234, 237, 251, 256, 264, 269, 274, 275], "must": [30, 32, 33, 88, 89, 90, 107, 139, 142, 154, 155, 165, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 194, 217, 220, 222, 233, 234, 241, 253, 259, 260, 274], "unlikli": [30, 88], "thei": [30, 33, 34, 41, 88, 90, 92, 107, 132, 175, 219, 220, 251, 275], "obvious": [30, 88], "latter": [30, 88], "practic": [30, 88, 107, 142, 220, 222], "ok": [30, 32, 33, 88, 89, 90, 203, 269], "riski": [30, 33, 34, 88, 90, 92], "formal": [30, 88], "sens": [30, 88, 175, 251], "access": [30, 34, 88, 92, 107, 219, 220, 222, 275], "design": [30, 88, 107, 142, 189, 220, 222, 256], "other": [30, 33, 34, 88, 90, 92, 107, 139, 160, 163, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 220, 238, 246], "incorpor": [30, 88], "themselv": [30, 88], "invok": [30, 88], "theori": [30, 37, 88, 95, 107, 194, 220, 260], "could": [30, 33, 88, 90, 107, 156, 220, 235], "snapshot": [30, 88], "valueerror": [30, 37, 88, 91, 95, 107, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 247], "resembl": [30, 88, 107, 220], "callabl": [30, 88, 219, 222, 232, 275], "objet": [30, 88], "determin": [32, 37, 89, 95, 107, 162, 170, 191, 219, 220, 239, 246, 275], "hashabl": [32, 89, 91, 194, 260], "consist": [32, 89, 107, 149, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 229], "translat": [32, 89, 107, 220], "convenct": [32, 89], "modern": [32, 89], "filnam": [32, 89], "shorter": [32, 89, 142, 201, 222, 267], "special": [32, 89, 107, 139, 220], "escap": [32, 89], "unicod": [32, 89], "broadli": [32, 89], "lenient": [32, 89], "pythoon": [32, 89], "char": [32, 89], "trigger": [32, 89, 142, 149, 175, 222, 229, 251], "outright": [32, 89], "static": [33, 90], "initi": [33, 34, 90, 92, 107, 142, 152, 170, 189, 191, 193, 199, 204, 220, 222, 246, 256, 259, 265, 270], "neurotools_cach": [33, 90], "were": [33, 34, 90, 91, 92, 107, 142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 222], "written": [33, 90, 175, 200, 251, 266], "framework": [33, 90], "oscar": [33, 90], "cluster": [33, 90], "brown": [33, 90], "univers": [33, 90, 107, 220], "yet": [33, 90, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 251], "hard": [33, 90], "delet": [33, 90], "ramdisk": [33, 90], "WITH": [33, 90], "caution": [33, 90, 149, 229], "rm": [33, 90, 171, 247], "rf": [33, 90], "entir": [33, 90, 155, 234], "ramdisk_loc": [33, 90], "extrem": [33, 90, 107, 142, 171, 220, 222, 247], "danger": [33, 90], "disabl": [33, 90], "notimplementederror": [33, 90], "ssd": [33, 90], "drive": [33, 90, 152], "level2_loc": [33, 90], "usav": [33, 90], "override_ramdisk_loc": [33, 90], "500gb": [33, 90], "debian": [33, 90], "linux": [33, 90], "ram": [33, 90, 148, 219, 228, 275], "inter": [33, 90], "commun": [33, 90], "metaphor": [33, 90], "consid": [33, 41, 90, 107, 132, 169, 220, 245], "requir": [33, 90, 91, 107, 139, 149, 217, 220, 229, 274], "sudo": [33, 90], "privileg": [33, 90], "execut": [33, 90, 142, 222], "jupyt": [33, 90], "ipython": [33, 90, 217, 274], "notebook": [33, 90, 170, 217, 246, 274], "insid": [33, 90, 139], "browser": [33, 90], "hand": [33, 34, 37, 90, 92, 95, 107, 220], "configur": [33, 90, 171, 219, 247, 275], "mediat": [33, 90], "onto": [33, 90, 142, 222], "larg": [33, 90, 107, 142, 179, 193, 203, 220, 222, 255, 259, 269], "solut": [33, 37, 41, 90, 95, 107, 132, 220], "depric": [33, 90, 219, 275], "spawn": [33, 90], "synchron": [33, 90], "reason": [33, 34, 90, 92, 107, 148, 203, 220, 228, 269], "mi": [33, 90], "loss": [33, 90], "sort": [33, 90, 107, 203, 220, 269], "lazi": [33, 90], "protocol": [33, 90], "level1": [33, 90], "home": [33, 90], "mer49": [33, 90], "neurotools_ramdisk": [33, 90], "level2": [33, 90], "level3": [33, 90], "miss": [33, 34, 90, 92, 107, 142, 155, 158, 176, 219, 220, 222, 234, 237, 252, 275], "repopul": [33, 90], "might": [33, 34, 90, 92, 194, 260], "local": [33, 90, 142, 151, 154, 155, 158, 160, 162, 176, 193, 217, 222, 231, 233, 234, 237, 238, 239, 252, 259, 274], "life": [33, 90], "frequent": [33, 90, 107, 220], "hdd": [33, 90], "larger": [33, 90, 107, 139, 142, 155, 156, 162, 203, 220, 222, 234, 235, 239, 269], "network": [33, 90], "databas": [33, 90], "unsafe_disk_cach": [33, 90], "patch": [33, 90], "replac": [33, 90, 107, 139, 219, 220, 275], "persist": [33, 90, 139], "bug": [33, 90, 199, 265], "wors": [33, 90], "By": [33, 90, 107, 220], "excplitli": [33, 90], "enforc": [33, 90], "original": [33, 90], "truccolo": [33, 90, 203, 269], "lab": [33, 90], "myhost": [33, 90], "o": [33, 90, 107, 193, 220, 259], "unam": [33, 90], "moonbas": [33, 90], "level1_loc": [33, 90], "media": [33, 90], "neurotools_level1": [33, 90], "ssd_1": [33, 90], "mrule": [33, 90], "level3_loc": [33, 90], "ldisk_1": [33, 90], "elif": [33, 90], "basecamp": [33, 90], "robotfortress": [33, 90], "petra": [33, 90], "script": [33, 90], "tool": [34, 50, 92, 171, 211, 247], "leavefre": [34, 92], "debug": [34, 37, 50, 91, 92, 95, 211, 219, 275], "show_progress": [34, 92, 199, 265], "implmenet": [34, 92], "multiprocess": [34, 92], "evaul": [34, 92, 156, 235], "core": [34, 92], "leav": [34, 38, 78, 92, 96, 142, 160, 189, 222, 238, 256], "open": [34, 92, 107, 220], "handel": [34, 92, 142, 156, 222, 235], "correctli": [34, 92, 142, 222], "fingerprint": [34, 92], "recompil": [34, 92], "compil": [34, 92, 139], "dictionari": [34, 92, 107, 139, 166, 203, 215, 219, 220, 242, 269, 275], "__indirect_eval_fallback_cach": [34, 92], "worker": [34, 92], "pool": [34, 92], "usual": [34, 92, 139], "yield": [34, 92, 107, 171, 177, 220, 247, 253], "undefin": [34, 92, 107, 142, 220, 222], "rebuild": [34, 92], "express": [34, 92, 107, 139, 219, 220, 275], "them": [34, 92, 107, 142, 219, 220, 222, 275], "ahead": [34, 92], "force_cach": [34, 92], "force_fallback": [34, 92], "allow_fallback": [34, 92], "defind": [34, 92], "happen": [34, 92, 107, 199, 220, 265], "unabl": [34, 92], "initiatl": [34, 92], "workaround": [34, 92], "funcion": [34, 92], "launch": [34, 92], "prevent": [34, 92, 142, 165, 222, 241], "thread": [34, 92, 146, 157, 222, 226, 236], "understand": [34, 92, 107, 139, 220], "ensur": [34, 37, 92, 95, 149, 198, 219, 229, 264, 275], "pointer": [34, 92], "workspac": [34, 92], "Then": [34, 92, 107, 175, 220, 251], "gain": [34, 92, 193, 259], "inheret": [34, 92], "context": [34, 92], "halt": [34, 92], "stuck": [34, 92], "hang": [34, 92], "On": [34, 92, 107, 220], "anyth": [34, 92, 191, 222], "violent": [34, 92], "free": [34, 92, 139, 199, 265], "minu": [34, 92, 107, 220], "restart": [34, 92, 107, 220], "realli": [34, 92, 175, 251], "just": [34, 92, 107, 169, 217, 219, 220, 245, 274, 275], "catch": [34, 92, 139], "propag": [34, 92, 139, 155, 234], "shape": [36, 37, 38, 94, 95, 96, 107, 142, 144, 156, 160, 162, 163, 171, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 204, 219, 220, 222, 224, 235, 238, 239, 247, 251, 255, 256, 259, 270, 275], "somewhat": [37, 95], "diag": [37, 95], "matric": [37, 38, 95, 96, 175, 251], "triangl": [37, 95, 166, 242], "nxn": [37, 38, 95, 96, 180, 181, 182, 183, 184, 185, 186, 187, 188], "randn": [37, 49, 50, 95, 107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 198, 204, 220, 264, 270], "triu_indeci": [37, 95], "multidimension": [37, 95, 142, 222], "ravel": [37, 95, 219, 275], "reciproc": [37, 95, 162, 180, 181, 182, 183, 184, 185, 186, 187, 188, 239], "finit": [37, 38, 95, 96, 142, 149, 180, 181, 182, 183, 184, 185, 186, 187, 188, 222, 229], "06": [37, 95, 180, 181, 182, 183, 184, 185, 186, 187, 188], "verifi": [37, 95, 107, 155, 193, 220, 234, 259], "definit": [37, 95, 107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "expect": [37, 41, 95, 107, 132, 162, 189, 193, 198, 220, 239, 256, 259, 264], "maximum": [37, 95, 107, 142, 163, 169, 170, 171, 193, 198, 199, 216, 220, 222, 245, 246, 247, 259, 264, 265], "transpos": [37, 95, 107, 148, 149, 220, 228, 229], "recondit": [37, 95], "matirx": [37, 95, 180, 181, 182, 183, 184, 185, 186, 187, 188], "hermetian": [37, 95], "throw": [37, 91, 95, 107, 149, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 229], "redund": [37, 95], "eigh": [37, 95], "instead": [37, 95, 107, 139, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 252], "eigenvalu": [37, 95, 148, 171, 228, 247], "eigenvector": [37, 95, 171, 247], "solve_triangular": [37, 95], "solv": [37, 38, 41, 95, 96, 132, 160, 189, 238, 256], "quatrat": [37, 95], "m1": [37, 95, 162, 180, 181, 182, 183, 184, 185, 186, 187, 188, 239], "m2": [37, 95, 180, 181, 182, 183, 184, 185, 186, 187, 188], "teo": [37, 95], "stuff": [37, 50, 95, 211, 219, 275], "pairwis": [37, 95, 148, 149, 163, 169, 175, 204, 228, 229, 245, 251, 270], "mst": [37, 95], "rank": [37, 95, 107, 142, 220, 222], "choleski": [37, 95], "factor": [37, 95, 142, 155, 156, 169, 176, 222, 234, 235, 245, 252], "possibli": [37, 95], "recomput": [37, 95], "qq": [37, 95], "ch": [37, 95, 107, 220], "chol": [37, 95], "xx": [37, 95, 107, 220], "outer": [37, 95, 156, 235], "pp": [37, 95, 107, 158, 203, 220, 237, 269], "cp": [37, 95], "idenet": [37, 95], "ey": [37, 95], "11144513": [37, 95], "cartesian": [37, 95], "nit": [37, 95], "algorithm": [37, 95, 107, 142, 193, 199, 220, 222, 259, 265], "higham": [37, 95], "2000": [37, 41, 95, 132], "10940283": [37, 95], "900749": [37, 95], "relev": [37, 95, 107, 220], "intellectu": [37, 95], "retain": [37, 95, 142, 171, 222, 247], "sega": [37, 95], "sai": [37, 95], "1269140": [37, 95], "semi": [37, 95], "epsilon": [37, 95], "rebonato": [37, 95], "jackel": [37, 95], "1999": [37, 95, 107, 220], "18542094": [37, 95], "minimum": [37, 95, 142, 155, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 222, 234, 247, 256], "repair": [37, 95, 180, 181, 182, 183, 184, 185, 186, 187, 188], "invert": [37, 95, 142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 219, 222, 275], "alias": [37, 95, 156, 235], "analogi": [37, 95, 155, 158, 234, 237], "operatornam": [37, 95], "lapack": [37, 95], "dtrtri": [37, 95], "www": [37, 95, 107, 189, 220, 256], "netlib": [37, 95], "org": [37, 79, 91, 95, 107, 189, 193, 220, 256, 259], "da": [37, 95], "dba": [37, 95], "group__double_o_t_h_e_rcomputational_ga97c5ddb103f5f6bc2dc060886aaf2ffc": [37, 95], "ga97c5ddb103f5f6bc2dc060886aaf2ffc": [37, 95], "doc": [37, 95], "symmetr": [37, 38, 95, 96, 107, 156, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 235, 238], "j": [37, 95, 107, 163, 175, 203, 220, 251, 269], "psd": [37, 95], "linear": [37, 41, 95, 132, 142, 162, 171, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 204, 222, 239, 247, 251, 252, 256, 259, 270], "indeci": [37, 95, 142, 155, 163, 166, 171, 222, 234, 242, 247], "dimension": [37, 38, 95, 96, 107, 142, 144, 155, 158, 170, 193, 201, 220, 222, 224, 234, 237, 246, 259, 267], "reg": [37, 95, 171, 247], "regular": [37, 95, 142, 171, 175, 179, 189, 193, 222, 247, 251, 255, 256, 259], "xm": [37, 95], "l2": [37, 95, 171, 175, 189, 247, 251, 256], "observ": [37, 95, 107, 171, 189, 193, 194, 200, 216, 220, 247, 256, 259, 260, 266], "explanatori": [37, 95], "nsampl": [37, 95, 107, 149, 171, 175, 189, 220, 229, 247, 251, 256], "nfeatur": [37, 95, 171, 189, 247, 256], "respons": [37, 95, 142, 175, 204, 222, 251, 270], "small": [37, 95, 107, 142, 156, 165, 176, 193, 220, 222, 235, 241, 252, 259], "001": [37, 95], "lasso": [37, 95], "think": [37, 95, 156, 235], "radian": [37, 95, 155, 158, 162, 171, 234, 237, 239, 247], "behav": [37, 95, 107, 142, 220, 222], "find": [37, 41, 50, 95, 132, 142, 154, 156, 163, 171, 193, 201, 203, 211, 219, 222, 233, 235, 247, 259, 267, 269, 275], "multipli": [37, 95, 107, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 220, 238, 259], "noutput": [37, 95], "bx": [37, 95], "predict": [37, 95, 171, 247], "kroneck": [37, 95], "largetst": [37, 95], "selector": [37, 95], "3x3": [37, 38, 95, 96, 160, 238], "radial": [37, 38, 95, 96, 156, 160, 235, 238], "discret": [37, 38, 41, 95, 96, 107, 132, 142, 144, 156, 160, 193, 194, 220, 222, 224, 235, 238, 259, 260], "sample_defici": [37, 95, 171, 247], "distort": [37, 95], "eigendecomposit": [37, 95], "whiten": [37, 95], "tutori": [37, 95, 189, 256], "approach": [37, 95, 107, 220], "eldar": [37, 95], "yc": [37, 95], "2003": [37, 41, 95, 107, 132, 220], "ieee": [37, 95], "intern": [37, 95, 107, 220], "confer": [37, 95], "acoust": [37, 95], "speech": [37, 95], "proceed": [37, 95], "icassp": [37, 95], "03": [37, 95], "apr": [37, 95], "vol": [37, 95, 107, 220], "vi": [37, 95, 139], "713": [37, 95], "oppenheim": [37, 95], "av": [37, 95], "mmse": [37, 95], "subspac": [37, 95], "transact": [37, 95], "jun": [37, 95], "25": [37, 38, 95, 96, 107, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 220, 222, 238, 256], "49": [37, 38, 95, 96, 107, 160, 189, 220, 238, 256], "1846": [37, 95], "51": [37, 38, 95, 96, 107, 160, 189, 220, 238, 256], "inproceed": [37, 95], "eldar2003minimum": [37, 95], "author": [37, 95, 179, 255], "yonina": [37, 95], "booktitl": [37, 95], "volum": [37, 95, 107, 220], "page": [37, 95, 107, 220], "year": [37, 95, 107, 220], "articl": [37, 95], "eldar2003mms": [37, 95], "alan": [37, 95], "journal": [37, 95, 107, 220], "1851": [37, 95], "reli": [37, 95, 107, 220], "nlab": [37, 49, 50, 95], "1000": [37, 41, 95, 107, 132, 139, 142, 146, 148, 149, 155, 162, 169, 175, 193, 203, 220, 222, 226, 228, 229, 234, 239, 245, 251, 259, 269], "shuffl": [37, 49, 50, 95, 107, 171, 220, 247], "subplot": [37, 95], "131": [37, 95], "132": [37, 95, 107, 220], "133": [37, 95, 107, 220], "cat": [37, 95, 107, 220], "xi1": [37, 95], "xi2": [37, 95], "nfeatures\u00b2": [37, 95], "overrid": [37, 95], "saniti": [37, 95], "while": [37, 95, 107, 139, 220], "certain": [38, 96, 149, 155, 229, 234], "fourier": [38, 96, 142, 146, 156, 222, 226, 235], "spars": [38, 96], "domain": [38, 96, 142, 148, 156, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 222, 228, 235, 251], "circularli": [38, 96, 142, 155, 171, 222, 234, 247], "neighborhood": [38, 96], "dirichlet": [38, 49, 50, 96, 107, 220], "build": [38, 96, 160, 189, 238, 256], "approximatelli": [38, 96], "cell": [38, 96, 170, 246], "lxl": [38, 96, 142, 222], "neumann": [38, 96], "reflect": [38, 96, 142, 144, 156, 160, 171, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 222, 224, 235, 238, 247, 252, 259], "csr_matrix": [38, 96], "diagon": [38, 96, 107, 171, 220, 247], "self": [38, 96, 107, 220], "n\u00b2xn\u00b2": [38, 96], "nonzero": [38, 96, 162, 239], "neighbor": [38, 96, 154, 155, 169, 176, 233, 234, 245, 252], "symmetri": [38, 96], "lenght": [38, 96], "root": [38, 96, 107, 160, 171, 220, 238, 247], "wiener": [38, 96, 152, 193, 259], "differentiaion": [38, 96], "ssvar": [38, 96], "tau": [38, 41, 96, 132, 152, 193, 259], "gaussan": [38, 96], "blur": [38, 96], "buffer": [38, 96], "smaller": [38, 96, 139, 142, 155, 158, 180, 181, 182, 183, 184, 185, 186, 187, 188, 201, 222, 234, 237, 267], "op": [38, 96, 139], "tensor": [38, 96], "cosin": [38, 96, 142, 144, 156, 160, 189, 204, 222, 224, 235, 238, 256, 270], "basi": [38, 96, 142, 146, 160, 189, 222, 226, 238, 256], "13": [38, 96, 160, 189, 222, 238, 256], "14": [38, 96, 107, 158, 160, 189, 220, 222, 237, 238, 256], "17": [38, 96, 107, 160, 189, 220, 222, 238, 256], "18": [38, 96, 160, 189, 203, 222, 238, 256, 269], "19": [38, 96, 160, 189, 194, 203, 222, 238, 256, 260, 269], "21": [38, 96, 160, 189, 222, 238, 256], "22": [38, 96, 160, 189, 222, 238, 256], "24": [38, 96, 160, 189, 222, 238, 256], "27": [38, 96, 107, 160, 189, 220, 222, 238, 256], "28": [38, 96, 160, 189, 222, 238, 256], "29": [38, 96, 160, 189, 222, 238, 256], "30": [38, 96, 107, 139, 142, 160, 189, 220, 222, 238, 256], "33": [38, 96, 160, 189, 238, 256], "34": [38, 96, 160, 189, 222, 238, 256], "35": [38, 96, 107, 160, 189, 220, 238, 256], "36": [38, 96, 107, 160, 189, 220, 238, 256], "37": [38, 96, 160, 189, 238, 256], "38": [38, 96, 107, 160, 189, 220, 238, 256], "41": [38, 96, 160, 189, 238, 256], "42": [38, 96, 107, 160, 189, 220, 238, 256], "43": [38, 96, 160, 189, 238, 256], "44": [38, 96, 160, 189, 238, 256], "45": [38, 96, 160, 162, 189, 238, 239, 256], "46": [38, 96, 160, 189, 238, 256], "47": [38, 96, 107, 160, 189, 220, 238, 256], "48": [38, 96, 107, 160, 189, 220, 238, 256], "53": [38, 96, 160, 189, 238, 256], "54": [38, 96, 160, 189, 238, 256], "55": [38, 96, 160, 189, 238, 256], "56": [38, 96, 160, 189, 238, 256], "57": [38, 96, 107, 160, 189, 203, 220, 238, 256, 269], "58": [38, 96, 107, 160, 189, 220, 238, 256], "61": [38, 96, 160, 189, 238, 256], "62": [38, 96, 107, 160, 189, 220, 238, 256], "63": [38, 96, 160, 189, 238, 256], "65": [38, 96, 160, 189, 238, 256], "66": [38, 96, 160, 189, 238, 256], "67": [38, 96, 160, 189, 238, 256], "68": [38, 96, 160, 189, 238, 256], "69": [38, 96, 160, 189, 193, 238, 256, 259], "70": [38, 41, 96, 132, 160, 189, 238, 256], "71": [38, 96, 160, 189, 238, 256], "72": [38, 96, 160, 189, 238, 256], "73": [38, 96, 160, 189, 238, 256], "74": [38, 96, 160, 189, 238, 256], "75": [38, 96, 160, 189, 238, 256], "76": [38, 96, 160, 189, 238, 256], "77": [38, 96, 160, 189, 238, 256], "78": [38, 96, 160, 189, 238, 256], "79": [38, 96, 160, 189, 238, 256], "80": [38, 96, 107, 160, 189, 216, 220, 238, 256], "81": [38, 96, 160, 189, 238, 256], "82": [38, 96, 107, 160, 189, 220, 238, 256], "83": [38, 96, 107, 160, 189, 220, 238, 256], "84": [38, 96, 160, 189, 238, 256], "85": [38, 96, 160, 189, 238, 256], "86": [38, 96, 107, 160, 189, 220, 238, 256], "87": [38, 96, 160, 189, 238, 256], "88": [38, 96, 160, 189, 238, 256], "89": [38, 96, 160, 189, 238, 256], "91": [38, 96, 160, 189, 238, 256], "92": [38, 96, 160, 189, 238, 256], "93": [38, 96, 160, 189, 238, 256], "94": [38, 96, 160, 189, 238, 256], "98": [38, 96, 160, 170, 189, 238, 246, 256], "offset": [38, 96, 142, 160, 171, 189, 204, 222, 238, 247, 256, 270], "wave": [38, 96, 107, 155, 158, 160, 162, 189, 220, 234, 237, 238, 239, 256], "quarter": [38, 96, 160, 189, 238, 256], "n_element": [38, 96, 160, 189, 238, 256], "n_time": [38, 96, 160, 189, 238, 256], "min_interv": [38, 96, 160, 189, 238, 256], "logarightm": [38, 96, 160, 189, 238, 256], "peak": [38, 96, 107, 142, 154, 158, 160, 170, 189, 201, 220, 222, 233, 237, 238, 246, 256, 267], "constraint": [38, 96, 160, 189, 238, 256], "n_basi": [38, 96, 160, 189, 238, 256], "rbm": [39, 50, 97, 108], "rbm_util": [39, 42, 97, 100, 108, 134], "stutil": [39, 42, 46, 100, 104, 134, 138], "rbm_helper": [39, 42, 97, 100, 108, 134], "rbm_sampl": [39, 42, 97, 100, 108, 134, 139], "izh": [39, 97, 108, 130], "lif": [39, 97, 108, 130], "euler_integrate_lif": [39, 41, 108, 130, 132], "exponential_integrate_lif": [39, 41, 108, 130, 132], "exponential_moving_averag": [39, 41, 108, 130, 132], "g_l": [41, 132], "g_e": [41, 132], "00074": [41, 132], "e_": [41, 132], "e_l": [41, 132], "g_": [41, 132], "baker": [41, 132], "pinch": [41, 132], "lemon": [41, 132], "euler": [41, 132], "though": [41, 132], "similar": [41, 107, 132, 160, 162, 180, 181, 182, 183, 184, 185, 186, 187, 188, 218, 220, 238, 239], "dv": [41, 132], "dt": [41, 107, 132, 152, 193, 218, 220, 259], "synapt": [41, 132], "count": [41, 78, 107, 132, 142, 155, 169, 171, 177, 189, 193, 194, 200, 220, 222, 234, 245, 247, 253, 256, 259, 260, 266], "activ": [41, 132, 139, 162, 239], "event": [41, 107, 132, 149, 155, 201, 220, 222, 229, 234, 267], "uf": [41, 132], "membran": [41, 132], "capacit": [41, 132], "leak": [41, 132], "conduct": [41, 132], "mv": [41, 132, 162, 239], "rest": [41, 132], "excitatori": [41, 132], "hz": [41, 132, 142, 146, 148, 149, 151, 162, 176, 222, 226, 228, 229, 231, 239, 252], "10m": [41, 132], "rc": [41, 132], "epsp": [41, 132], "microvolt": [41, 132], "1mv": [41, 132], "emper": [41, 132], "farad": [41, 132], "volt": [41, 132], "amper": [41, 132], "siemen": [41, 132], "ohm": [41, 132], "millisiemen": [41, 132], "millivolt": [41, 132], "microamp": [41, 132], "microfarad": [41, 132], "millisecond": [41, 132, 218], "clf": [41, 132], "against": [41, 107, 132, 220], "per": [41, 132, 155, 162, 234, 239], "y_": [41, 107, 132, 220], "y_n": [41, 132], "x_n": [41, 107, 132, 220], "convolv": [41, 132, 142, 144, 160, 222, 224, 238], "decai": [41, 107, 132, 204, 220, 270], "heavisid": [41, 132], "equat": [41, 107, 132, 220], "And": [41, 132], "exact": [41, 132], "impuls": [41, 132, 175, 204, 251, 270], "y_0": [41, 132], "subpackag": 49, "obsolet": [49, 50, 144, 224], "random": [49, 50, 107, 142, 149, 180, 181, 182, 183, 184, 185, 186, 187, 188, 203, 220, 222, 229, 269], "beta": [49, 50, 107, 139, 220], "binomi": [49, 50, 107, 220], "chisquar": [49, 50, 107, 220], "choic": [49, 50, 107, 220], "gamma": [49, 50, 107, 220], "geometr": [49, 50, 107, 220], "get_stat": [49, 50, 107, 220], "gumbel": [49, 50, 107, 220], "hypergeometr": [49, 50, 107, 220], "laplac": [49, 50, 107, 193, 220, 259], "logist": [49, 50, 107, 189, 220, 256], "lognorm": [49, 50, 107, 220], "logseri": [49, 50, 107, 220], "multinomi": [49, 50, 107, 220], "multivariate_norm": [49, 50, 107, 220], "negative_binomi": [49, 50, 107, 220], "noncentral_chisquar": [49, 50, 107, 220], "noncentral_f": [49, 50, 107, 220], "pareto": [49, 50, 107, 220], "permut": [49, 50, 107, 219, 220, 275], "poisson": [49, 50, 107, 171, 177, 189, 193, 194, 200, 220, 247, 253, 256, 259, 260, 266], "power": [49, 50, 107, 148, 162, 204, 220, 228, 239, 270], "rand": [49, 50, 107, 219, 220, 275], "randint": [49, 50, 107, 193, 220, 259], "random_integ": [49, 50, 107, 220], "random_sampl": [49, 50, 107, 220], "rayleigh": [49, 50, 107, 220], "seed": [49, 50, 107, 220], "set_stat": [49, 50, 107, 220], "standard_cauchi": [49, 50, 107, 220], "standard_exponenti": [49, 50, 107, 220], "standard_gamma": [49, 50, 107, 220], "standard_norm": [49, 50, 107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "standard_t": [49, 50, 107, 220], "vonmis": [49, 50, 107, 220], "wald": [49, 50, 107, 220], "weibul": [49, 50, 107, 220], "zipf": [49, 50, 107, 220], "gpu": [50, 108], "opto": [50, 108], "getfftw": [50, 211], "hdfmat": [50, 211], "gethdfvalu": [50, 211, 215], "gethdf": [50, 211, 215], "hdf2dict": [50, 211, 215], "printmathdf5": [50, 211, 215], "recursive_printmathdf5": [50, 211, 215], "hcat": [50, 211, 216], "wordwrap": [50, 211, 216], "incolumn": [50, 211, 216], "percent": [50, 107, 171, 211, 216, 220, 247], "shortscientif": [50, 211, 216], "eformat": [50, 211, 216], "v2str": [50, 211, 216], "v2str_long": [50, 211, 216], "nicet": [50, 211, 216], "isint": [50, 211, 216], "execfil": [50, 211, 217, 274], "query_yes_no": [50, 211, 217, 274], "current_milli_tim": [50, 211, 218], "todai": [50, 211, 218], "tic": [50, 211, 218], "toc": [50, 211, 218], "waitfor": [50, 211, 218], "varexist": [50, 211, 219, 275], "nowarn": [50, 211, 219, 275], "okwarn": [50, 211, 219, 275], "dowarn": [50, 211, 219, 275], "wait": [50, 107, 211, 218, 219, 220, 222, 275], "zeroslik": [50, 211, 219, 275], "oneslik": [50, 211, 219, 275], "histori": [50, 211, 219, 275], "emitt": [50, 211, 219, 275], "piper": [50, 211, 219, 275], "metaloadmat": [50, 211, 219, 275], "find_all_extens": [50, 211, 219, 275], "lmap": [50, 211, 219, 275], "slist": [50, 211, 219, 275], "amap": [50, 211, 219, 275], "lap": [50, 211, 219, 275], "aap": [50, 211, 219, 275], "sl": [50, 211, 219, 275], "setinrang": [50, 211, 219, 275], "mapdict": [50, 211, 219, 275], "getdict": [50, 211, 219, 275], "ensure_dir": [50, 211, 219, 275], "getsiz": [50, 211, 219, 275], "savecontext": [50, 211, 219, 275], "clear": [50, 91, 211, 219, 275], "restorecontext": [50, 211, 219, 275], "camel2underscor": [50, 211, 219, 275], "underscore2camel": [50, 211, 219, 275], "getvari": [50, 211, 219, 275], "invert_permut": [50, 211, 219, 275], "ezip": [50, 211, 219, 275], "asiter": [50, 211, 219, 275], "huffman": [52, 108, 109], "naryhuffman": [52, 108, 109], "load": [77, 79, 107, 219, 220, 275], "depth": 78, "leaf": 78, "deep": 78, "rotate_label": 78, "label_offset": 78, "arcspan": 78, "figsiz": 78, "line_resolut": 78, "regist": 79, "fabio": 79, "crameri": 79, "well": [79, 107, 155, 170, 220, 234, 246], "revers": [79, 142, 222], "similarli": [79, 142, 171, 222, 247], "2020": 79, "januari": 79, "colour": 79, "zenodo": 79, "doi": 79, "5281": 79, "4153113": 79, "robust": 91, "pythonhost": 91, "liber": 91, "strict": 91, "primit": 91, "veri": [91, 107, 142, 155, 189, 198, 220, 222, 234, 256, 264], "chracter": 91, "za": 91, "z0": 91, "timer": [91, 142, 222], "runtim": 91, "purg": 91, "kind": [91, 176, 252], "__wrapped__": 91, "pylab": [107, 219, 220, 275], "alia": [107, 156, 220, 222, 235], "eas": [107, 220], "api": [107, 220], "frac": [107, 220], "int_0": [107, 220], "often": [107, 142, 220, 222], "seen": [107, 220], "bayesian": [107, 220], "infer": [107, 139, 191, 193, 220, 259], "default_rng": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "quick": [107, 171, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 247], "array_lik": [107, 198, 220, 264], "broadcast": [107, 142, 220, 222], "parameter": [107, 220], "trial": [107, 142, 157, 171, 220, 222, 236, 247], "success": [107, 220], "equal": [107, 148, 220, 228], "binom": [107, 220], "cumul": [107, 220], "estim": [107, 142, 149, 155, 162, 169, 171, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 198, 200, 201, 203, 220, 222, 229, 234, 239, 245, 247, 252, 255, 256, 259, 264, 266, 267, 269], "proport": [107, 220], "peopl": [107, 220], "who": [107, 220], "dalgaard": [107, 220], "peter": [107, 220], "introductori": [107, 220], "springer": [107, 220], "verlag": [107, 220], "2002": [107, 220], "glantz": [107, 220], "stanton": [107, 220], "primer": [107, 220], "biostatist": [107, 220], "mcgraw": [107, 220], "hill": [107, 191, 220], "fifth": [107, 220], "edit": [107, 220], "lentner": [107, 220], "marvin": [107, 220], "elementari": [107, 220], "bogden": [107, 220], "quiglei": [107, 220], "1972": [107, 220], "weisstein": [107, 220], "eric": [107, 220], "mathworld": [107, 220], "wolfram": [107, 220], "web": [107, 160, 220, 238], "resourc": [107, 220], "binomialdistribut": [107, 220], "wikipedia": [107, 193, 220, 259], "en": [107, 193, 220, 259], "wiki": [107, 193, 220, 259], "binomial_distribut": [107, 220], "coin": [107, 220], "world": [107, 220], "compani": [107, 220], "drill": [107, 220], "wild": [107, 220], "oil": [107, 220], "nine": [107, 220], "000": [107, 220], "20000": [107, 220], "38885": [107, 220], "df": [107, 220], "chi": [107, 193, 220, 259], "hypothesi": [107, 149, 220, 229], "freedom": [107, 149, 220, 229], "inappropri": [107, 220], "sum_": [107, 220], "mathtt": [107, 220], "2_i": [107, 220], "denot": [107, 220], "sim": [107, 220], "2_k": [107, 220], "infti": [107, 220], "nist": [107, 220], "engin": [107, 220], "handbook": [107, 220], "itl": [107, 220], "gov": [107, 220], "div898": [107, 220], "eda": [107, 220], "section3": [107, 220], "eda3666": [107, 220], "htm": [107, 220], "89920014": [107, 220], "00867716": [107, 220], "13710533": [107, 220], "62318272": [107, 220], "arang": [107, 156, 204, 220, 235, 270], "select": [107, 149, 156, 220, 229, 235], "item": [107, 171, 216, 220, 247], "greater": [107, 220], "through": [107, 219, 220, 275], "effici": [107, 139, 179, 219, 220, 255, 275], "sampler": [107, 220], "len": [107, 142, 170, 177, 179, 189, 203, 220, 222, 246, 253, 255, 256, 269], "repeat": [107, 220], "arbitrari": [107, 155, 220, 234], "aa_milne_arr": [107, 220], "pooh": [107, 220], "rabbit": [107, 220], "piglet": [107, 220], "christoph": [107, 220], "u11": [107, 220], "multivari": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 220, 259], "conjug": [107, 220], "prior": [107, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 220, 251, 259], "fulfil": [107, 220], "x_i": [107, 179, 220, 255], "propto": [107, 220], "prod_": [107, 220], "alpha_i": [107, 220], "_i": [107, 220], "concentr": [107, 162, 220, 239], "y_i": [107, 179, 220, 255], "david": [107, 220], "mckai": [107, 220], "learn": [107, 139, 189, 220, 256], "chapter": [107, 220], "uk": [107, 220], "mackai": [107, 220], "itila": [107, 220], "dirichlet_distribut": [107, 220], "variat": [107, 155, 162, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 234, 239], "barh": [107, 220], "Its": [107, 220], "_": [107, 220], "continu": [107, 142, 175, 176, 199, 219, 220, 222, 251, 252, 265, 275], "analogu": [107, 220], "describ": [107, 162, 220, 239], "situat": [107, 220], "raindrop": [107, 220], "rainstorm": [107, 220], "request": [107, 220], "peyton": [107, 220], "peebl": [107, 220], "jr": [107, 220], "principl": [107, 171, 220, 247], "4th": [107, 162, 220, 239], "ed": [107, 220], "2001": [107, 162, 220, 239], "poisson_process": [107, 220], "exponential_distribut": [107, 220], "dfnum": [107, 220], "dfden": [107, 220], "denomin": [107, 220], "known": [107, 220], "fisher": [107, 220], "aris": [107, 199, 200, 220, 265, 266], "anova": [107, 220], "compar": [107, 149, 163, 169, 203, 220, 229, 245, 269], "respect": [107, 166, 220, 242], "children": [107, 220], "diabet": [107, 220], "control": [107, 142, 146, 219, 220, 222, 226, 275], "blood": [107, 220], "glucos": [107, 220], "null": [107, 149, 203, 220, 229, 269], "statu": [107, 199, 220, 265], "give": [107, 220], "61988120985": [107, 220], "about": [107, 139, 203, 220, 269], "chanc": [107, 149, 220, 229], "exce": [107, 142, 220, 222], "reject": [107, 171, 203, 220, 247, 269], "sometim": [107, 220], "failur": [107, 199, 220, 265], "electron": [107, 220], "gammadistribut": [107, 220], "gamma_distribut": [107, 220], "sqrt": [107, 148, 198, 220, 228, 264], "along": [107, 142, 155, 158, 171, 201, 220, 222, 234, 237, 247, 267], "sp": [107, 220], "ignor": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 222], "hist": [107, 165, 220, 241], "bernoulli": [107, 189, 193, 220, 256, 259], "experi": [107, 142, 220, 222], "outcom": [107, 220], "achiev": [107, 142, 220, 222], "mass": [107, 176, 220, 252], "individu": [107, 220], "ten": [107, 220], "thousand": [107, 220], "10000": [107, 193, 203, 220, 259, 269], "succeed": [107, 220], "34889999999999999": [107, 220], "legaci": [107, 148, 220, 228], "flag": [107, 220], "bitgener": [107, 220], "mt19937": [107, 220], "dict": [107, 203, 215, 219, 220, 269, 275], "624": [107, 220], "po": [107, 220], "has_gauss": [107, 220], "cached_gaussian": [107, 220], "uint": [107, 220], "manual": [107, 189, 220, 256], "know": [107, 220], "exactli": [107, 220], "he": [107, 220], "she": [107, 220], "loc": [107, 220], "below": [107, 155, 219, 220, 234, 275], "gumbel_l": [107, 220], "gumbel_r": [107, 220], "genextrem": [107, 220], "smallest": [107, 220], "sev": [107, 220], "gev": [107, 220], "tail": [107, 220], "german": [107, 220], "mathematician": [107, 220], "emil": [107, 220], "juliu": [107, 220], "earli": [107, 220], "hydrologi": [107, 220], "literatur": [107, 220], "occurr": [107, 220], "flood": [107, 220], "wind": [107, 220], "rainfal": [107, 220], "fat": [107, 220], "henc": [107, 220], "surprisingli": [107, 220], "underestim": [107, 149, 220, 229], "frechet": [107, 220], "57721": [107, 220], "pi": [107, 142, 155, 189, 220, 222, 234, 256], "york": [107, 220], "columbia": [107, 220], "press": [107, 219, 220, 275], "1958": [107, 220], "reiss": [107, 220], "thoma": [107, 220], "insur": [107, 220], "financ": [107, 220], "field": [107, 158, 220, 237], "basel": [107, 220], "birkhaus": [107, 220], "maxima": [107, 154, 155, 158, 220, 233, 234, 237], "append": [107, 171, 220, 247], "ngood": [107, 220], "nbad": [107, 220], "good": [107, 220], "nonneg": [107, 220], "randomli": [107, 142, 149, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220, 222, 229], "hypergeom": [107, 220], "le": [107, 220], "urn": [107, 220], "marbl": [107, 220], "ball": [107, 220], "wherea": [107, 220], "infinit": [107, 220], "As": [107, 139, 220], "hypergeometricdistribut": [107, 220], "hypergeometric_distribut": [107, 220], "nsamp": [107, 220], "unlik": [107, 220], "suppos": [107, 220], "pull": [107, 220], "100000": [107, 198, 203, 220, 264, 269], "003": [107, 220], "sharper": [107, 220], "fatter": [107, 220], "law": [107, 204, 220, 270], "1774": [107, 220], "econom": [107, 220], "health": [107, 220], "scienc": [107, 220], "seem": [107, 217, 220, 274], "abramowitz": [107, 220], "stegun": [107, 220], "formula": [107, 171, 220, 247], "9th": [107, 220], "dover": [107, 220], "kotz": [107, 220], "samuel": [107, 220], "et": [107, 155, 220, 234], "al": [107, 155, 220, 234], "laplacedistribut": [107, 220], "laplace_distribut": [107, 220], "act": [107, 220], "epidemiologi": [107, 220], "chess": [107, 220], "feder": [107, 220], "fide": [107, 220], "elo": [107, 220], "player": [107, 220], "logisticdistribut": [107, 220], "logistic_distribut": [107, 220], "def": [107, 198, 219, 220, 264, 275], "lgst_val": [107, 220], "itself": [107, 160, 220, 238], "ln": [107, 220], "limpert": [107, 220], "stahel": [107, 220], "abbt": [107, 220], "clue": [107, 220], "bioscienc": [107, 220], "ethz": [107, 220], "mid": [107, 220], "linspac": [107, 220], "tight": [107, 220], "demonstr": [107, 220], "fit": [107, 151, 171, 189, 191, 193, 204, 220, 231, 247, 256, 259, 270], "seri": [107, 142, 203, 220, 222, 269], "logser": [107, 220], "speci": [107, 220], "rich": [107, 220], "propos": [107, 220], "corbet": [107, 220], "william": [107, 220], "1943": [107, 220], "occup": [107, 220], "car": [107, 220], "buza": [107, 220], "martin": [107, 220], "culver": [107, 220], "stephen": [107, 220], "divers": [107, 220], "biodivers": [107, 220], "septemb": [107, 220], "187": [107, 220], "195": [107, 220], "ecologi": [107, 220], "dali": [107, 220], "lunn": [107, 220], "ostrowski": [107, 220], "crc": [107, 220], "1994": [107, 220], "logarithmic_distribut": [107, 220], "pval": [107, 220], "dice": [107, 220], "x_0": [107, 193, 220, 259], "x_1": [107, 220], "x_p": [107, 220], "last": [107, 139, 142, 148, 176, 218, 219, 220, 222, 228, 252, 275], "alwai": [107, 220], "account": [107, 142, 220, 222], "remain": [107, 142, 155, 220, 222, 234], "word": [107, 216, 220], "land": [107, 220], "onc": [107, 220], "again": [107, 220], "threw": [107, 220], "die": [107, 220], "leftov": [107, 220], "bias": [107, 139, 149, 220, 229], "twice": [107, 220], "wrong": [107, 220], "traceback": [107, 220], "recent": [107, 220], "check_valid": [107, 220], "tol": [107, 199, 220, 265], "multinorm": [107, 220], "higher": [107, 154, 191, 220, 233], "analog": [107, 218, 220], "semidefinit": [107, 220], "proper": [107, 220], "arrang": [107, 220], "toler": [107, 155, 198, 199, 220, 234, 264, 265], "singular": [107, 148, 220, 228], "cast": [107, 142, 198, 220, 222, 264], "bell": [107, 220], "curv": [107, 189, 220, 256], "vari": [107, 220], "togeth": [107, 142, 149, 220, 222, 229], "x_2": [107, 220], "c_": [107, 220], "ij": [107, 220], "x_j": [107, 220], "ii": [107, 163, 166, 220, 242], "spread": [107, 220], "popular": [107, 220], "spheric": [107, 220], "5000": [107, 220], "backward": [107, 142, 155, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 220, 222, 234, 259], "papouli": [107, 220], "3rd": [107, 220], "1991": [107, 220], "duda": [107, 220], "hart": [107, 220], "stork": [107, 220], "classif": [107, 220], "2nd": [107, 220], "wilei": [107, 220], "800": [107, 220], "bivari": [107, 220], "65465": [107, 220], "pt": [107, 203, 220, 269], "0326911": [107, 220], "01280782": [107, 220], "96202397": [107, 220], "85602287": [107, 220], "47613949": [107, 220], "corrcoef": [107, 220], "6273591314603949": [107, 220], "visual": [107, 156, 220, 235], "cloud": [107, 220], "illustr": [107, 220], "grid": [107, 142, 156, 165, 176, 179, 191, 220, 222, 235, 241, 252, 255], "occur": [107, 142, 220, 222], "reach": [107, 220], "pmf": [107, 220], "repeatedli": [107, 220], "until": [107, 220, 222], "negativebinomialdistribut": [107, 220], "negative_binomial_distribut": [107, 220], "nonc": [107, 220], "noncentr": [107, 220], "earlier": [107, 220], "central": [107, 220], "p_": [107, 220], "2i": [107, 220], "noncentral_chi": [107, 220], "squared_distribut": [107, 220], "200": [107, 142, 175, 220, 222, 251], "0000001": [107, 220], "values2": [107, 220], "ob": [107, 220], "noncentralf": [107, 220], "studi": [107, 220], "area": [107, 157, 189, 220, 236, 256], "deg": [107, 220], "nc_val": [107, 220], "1000000": [107, 198, 220, 264], "nf": [107, 220], "c_val": [107, 220], "de": [107, 220], "moivr": [107, 220], "gauss": [107, 220], "characterist": [107, 220], "influenc": [107, 220], "tini": [107, 220], "disturb": [107, 220], "own": [107, 220], "centr": [107, 220], "increas": [107, 142, 220, 222], "607": [107, 220], "impli": [107, 220], "ly": [107, 220], "awai": [107, 220], "normal_distribut": [107, 220], "theorem": [107, 220], "125": [107, 220], "ddof": [107, 220], "four": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "49401501": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "00950034": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "81814867": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "29718677": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "39924804": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "68456316": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "99394529": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "84057254": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "lomax": [107, 220], "classic": [107, 220], "simplifi": [107, 189, 219, 220, 256, 275], "unbound": [107, 220], "rule": [107, 139, 220], "genpareto": [107, 220], "am": [107, 220], "italian": [107, 220], "economist": [107, 220], "vilfredo": [107, 220], "bradford": [107, 220], "wealth": [107, 220], "economi": [107, 220], "found": [107, 142, 155, 179, 199, 219, 220, 222, 234, 255, 265, 275], "sourceforg": [107, 189, 220, 256], "franci": [107, 220], "hunt": [107, 220], "paul": [107, 220], "johnson": [107, 220], "1896": [107, 220], "cours": [107, 220], "polit": [107, 220], "lausann": [107, 220], "pareto_distribut": [107, 220], "reshap": [107, 220], "lam": [107, 220], "poissondistribut": [107, 220], "poisson_distribut": [107, 220], "500": [107, 139, 148, 162, 220, 228, 239], "report": [107, 220], "claim": [107, 220], "christian": [107, 220], "kleiber": [107, 220], "actuari": [107, 220], "heckert": [107, 220], "filliben": [107, 220], "jame": [107, 220], "148": [107, 220], "dataplot": [107, 220], "subcommand": [107, 220], "nation": [107, 220], "institut": [107, 220], "technologi": [107, 220], "june": [107, 220], "softwar": [107, 220], "refman2": [107, 220], "auxillar": [107, 220], "powpdf": [107, 220], "normed_i": [107, 220], "diff": [107, 193, 220, 259], "rv": [107, 220], "rvsp": [107, 220], "powerlaw": [107, 220], "d0": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "d1": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "dn": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "That": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 220, 256, 259], "ones": [107, 142, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 204, 219, 220, 222, 255, 256, 270, 275], "14022471": [107, 220], "96360618": [107, 220], "37601032": [107, 220], "25528411": [107, 220], "49313049": [107, 220], "94909878": [107, 220], "inclus": [107, 220], "exclus": [107, 220], "highest": [107, 220], "byteord": [107, 220], "nativ": [107, 220], "appropri": [107, 155, 171, 220, 234, 247], "omit": [107, 158, 220, 237], "int_lik": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "suppli": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "1923875335537315": [107, 180, 181, 182, 183, 184, 185, 186, 187, 188, 220], "int_": [107, 220], "platform": [107, 220, 222], "deprec": [107, 220], "sinc": [107, 139, 156, 162, 218, 220, 235, 239], "evenli": [107, 142, 216, 220, 222], "choos": [107, 220], "five": [107, 220], "625": [107, 220], "roll": [107, 220], "six": [107, 220], "d2": [107, 220], "dsum": [107, 220], "unif": [107, 220], "47108547995356098": [107, 220], "30220482": [107, 220], "86820401": [107, 220], "1654503": [107, 220], "11659149": [107, 220], "54323428": [107, 220], "three": [107, 220], "99149989": [107, 220], "52338984": [107, 220], "99091858": [107, 220], "79479508": [107, 220], "23204345": [107, 220], "75224494": [107, 220], "cdotp": [107, 220], "east": [107, 220], "north": [107, 220], "veloc": [107, 142, 162, 220, 222, 239], "brighton": [107, 220], "ltd": [107, 220], "20090514091424": [107, 220], "co": [107, 157, 189, 204, 219, 220, 236, 256, 270, 275], "asp": [107, 220], "rayleigh_distribut": [107, 220], "tend": [107, 142, 220, 222], "meter": [107, 220], "meanvalu": [107, 220], "modevalu": [107, 220], "percentag": [107, 216, 220], "087300000000000003": [107, 220], "rese": [107, 220], "best": [107, 191, 199, 220, 265], "recreat": [107, 220], "randomst": [107, 220], "seedsequ": [107, 220], "123456789": [107, 220], "stream": [107, 220], "987654321": [107, 220], "mersenn": [107, 220], "twister": [107, 220], "pseudo": [107, 139, 220], "although": [107, 199, 220, 265], "matsumoto": [107, 220], "nishimura": [107, 220], "623": [107, 220], "equidistribut": [107, 220], "pseudorandom": [107, 220], "acm": [107, 220], "jan": [107, 220], "1998": [107, 220], "place": [107, 142, 220, 222], "mutablesequ": [107, 220], "cauchi": [107, 220], "lorentz": [107, 220], "bigl": [107, 220], "bigr": [107, 220], "harmon": [107, 220], "oscil": [107, 162, 220, 239], "spectral": [107, 146, 148, 175, 220, 226, 228, 251], "broaden": [107, 220], "tilt": [107, 220], "heavi": [107, 220], "look": [107, 155, 158, 220, 234, 237], "heavier": [107, 220], "sematech": [107, 220], "eda3663": [107, 220], "cauchydistribut": [107, 220], "cauchy_distribut": [107, 220], "3x8000": [107, 220], "8000": [107, 220], "stdev": [107, 220], "6888893": [107, 220], "78096262": [107, 220], "89086505": [107, 220], "49876311": [107, 220], "38672696": [107, 220], "4685006": [107, 220], "student": [107, 220], "hyperbol": [107, 220], "come": [107, 194, 220, 260], "1908": [107, 220], "gosset": [107, 220], "guin": [107, 220], "breweri": [107, 220], "dublin": [107, 220], "proprietari": [107, 220], "issu": [107, 156, 220, 235], "pseudonym": [107, 220], "With": [107, 220], "s_t": [107, 220], "daili": [107, 220], "energi": [107, 139, 194, 220, 260], "intak": [107, 220], "women": [107, 220], "kilojoul": [107, 220], "kj": [107, 220], "5260": [107, 220], "5470": [107, 220], "5640": [107, 220], "6180": [107, 220], "6390": [107, 220], "6515": [107, 220], "6805": [107, 220], "7515": [107, 220], "8230": [107, 220], "8770": [107, 220], "systemat": [107, 220], "recommend": [107, 203, 220, 269], "7725": [107, 220], "our": [107, 149, 220, 229], "absenc": [107, 220], "presenc": [107, 149, 155, 220, 229, 234], "empir": [107, 220], "unbias": [107, 149, 220, 229], "final": [107, 170, 176, 204, 220, 246, 252, 270], "concav": [107, 220], "6753": [107, 220], "636363636364": [107, 220], "1142": [107, 220], "1232221373727": [107, 220], "8207540608310198": [107, 220], "adequ": [107, 220], "critic": [107, 155, 156, 158, 220, 234, 235, 237], "018318": [107, 220], "pre": [107, 139, 220], "condition": [107, 220], "being": [107, 156, 220, 222, 235], "begin": [107, 142, 220, 222], "leq": [107, 220], "end": [107, 142, 170, 171, 220, 222, 246, 247], "ill": [107, 220], "knowledg": [107, 220], "triangular_distribut": [107, 220], "uniformli": [107, 220], "anywher": [107, 220], "offici": [107, 220], "eventu": [107, 220], "satisfi": [107, 220], "inequ": [107, 220], "99999999": [107, 220], "ones_lik": [107, 220], "kappa": [107, 220], "von": [107, 220], "mise": [107, 220], "dispers": [107, 162, 203, 220, 239, 269], "circl": [107, 220], "thought": [107, 220], "i_0": [107, 220], "bessel": [107, 220], "richard": [107, 220], "edler": [107, 220], "born": [107, 220], "austria": [107, 220], "hungari": [107, 220], "ukrain": [107, 220], "fled": [107, 220], "1939": [107, 220], "becam": [107, 220], "professor": [107, 220], "harvard": [107, 220], "aerodynam": [107, 220], "fluid": [107, 220], "mechan": [107, 220], "philosophi": [107, 220], "academ": [107, 220], "1964": [107, 220], "i0": [107, 220], "num": [107, 220], "infin": [107, 220], "relationship": [107, 220], "brownian": [107, 220], "motion": [107, 142, 220, 222], "1956": [107, 220], "tweedi": [107, 220], "cover": [107, 220], "2x": [107, 220], "competitor": [107, 220], "reliabl": [107, 155, 162, 220, 234, 239], "stock": [107, 220], "interest": [107, 220], "20090423014010": [107, 220], "chhikara": [107, 220], "raj": [107, 220], "folk": [107, 220], "leroi": [107, 220], "methodologi": [107, 220], "applic": [107, 220], "1988": [107, 220], "inverse_gaussian_distribut": [107, 220], "weibull_max": [107, 220], "weibull_min": [107, 220], "iii": [107, 220], "asymptot": [107, 204, 220, 270], "rosin": [107, 220], "rammler": [107, 220], "reduc": [107, 142, 149, 155, 220, 222, 229, 234], "waloddi": [107, 220], "royal": [107, 203, 220, 269], "technic": [107, 220], "stockholm": [107, 220], "Of": [107, 220], "strength": [107, 220], "materi": [107, 220], "ingeniorsvetenskapsakademien": [107, 220], "handlingar": [107, 220], "nr": [107, 220], "151": [107, 220], "generalstaben": [107, 220], "litografiska": [107, 220], "anstalt": [107, 220], "forlag": [107, 220], "asm": [107, 220], "paper": [107, 220], "1951": [107, 220], "weibull_distribut": [107, 220], "weib": [107, 220], "zeta": [107, 220], "geq": [107, 220], "riemann": [107, 220], "american": [107, 220], "linguist": [107, 220], "georg": [107, 220], "kingslei": [107, 220], "languag": [107, 220], "cambridg": [107, 220], "ma": [107, 220], "univ": [107, 220], "1932": [107, 220], "bincount": [107, 220], "semilogi": [107, 220], "unmaintain": 108, "loadrbm": [134, 138, 139], "free_energi": [138, 139], "propup": [138, 139], "sample_h_given_v": [138, 139], "propdown": [138, 139], "sample_v_given_h": [138, 139], "gibbs_hvh": [138, 139], "gibbs_vhv": [138, 139], "mean_h_given_v": [138, 139], "get_cost_upd": [138, 139], "get_pseudo_likelihood_cost": [138, 139], "get_reconstruction_cost": [138, 139], "train": [138, 139, 169, 170, 171, 175, 189, 245, 246, 247, 251, 256], "vis_energi": [138, 139], "savenp": [138, 139], "fname": 139, "n_visibl": 139, "784": 139, "n_hidden": 139, "hbia": 139, "vbia": 139, "numpy_rng": 139, "theano_rng": 139, "reg_weight": 139, "boltzmann": 139, "machin": 139, "v_sampl": 139, "visibl": 139, "upward": 139, "hidden": [139, 193, 259], "layer": 139, "theano": 139, "symbol": 139, "v0_sampl": 139, "hid": 139, "downward": 139, "pre_sigmoid_activ": 139, "h0_sampl": 139, "gibb": 139, "lr": 139, "cd": 139, "pcd": 139, "chain": 139, "batch": 139, "proxi": 139, "likelihood": [139, 191, 193, 259], "pre_sigmoid_nv": 139, "why": 139, "whenev": 139, "stabil": [139, 142, 162, 222, 239], "done": [139, 142, 222], "subgraph": 139, "One": [139, 142, 193, 222, 259], "softplu": 139, "cross": [139, 142, 158, 169, 171, 175, 189, 222, 237, 245, 247, 251, 256], "entropi": [139, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 247, 260], "undesir": [139, 142, 222], "behaviour": 139, "fine": 139, "scan": 139, "go": [139, 193, 259], "someth": [139, 219, 275], "data_x": 139, "learning_r": 139, "training_epoch": 139, "batch_siz": 139, "output_al": 139, "output_fin": 139, "cd_step": 139, "epoch": [139, 157, 162, 236, 239], "test_x": 139, "output_fil": 139, "n_chain": 139, "n_sampl": 139, "plot_everi": 139, "include_hidden": 139, "gemoetr": [142, 222], "fa": [142, 146, 162, 222, 226, 239], "cutoff": [142, 146, 151, 155, 156, 158, 222, 226, 231, 234, 235, 237], "fb": [142, 146, 162, 175, 222, 226, 239, 251], "guassian": [142, 222], "nbasi": [142, 222], "tile": [142, 222], "minima": [142, 155, 158, 222, 234, 237], "amplitud": [142, 155, 158, 162, 204, 222, 234, 237, 239, 270], "envelop": [142, 155, 222, 234], "hilbert": [142, 222], "narrow": [142, 222], "watch": [142, 222], "snippit": [142, 149, 222, 229], "surrond": [142, 222], "typic": [142, 162, 179, 222, 239, 255], "summari": [142, 148, 149, 155, 171, 191, 222, 228, 229, 234, 247], "dimensionan": [142, 222], "frame": [142, 155, 162, 222, 232, 234, 239], "erro": [142, 222], "handi": [142, 222], "middl": [142, 160, 162, 222, 238, 239], "mirrord": [142, 222], "condtit": [142, 222], "filter": [142, 151, 156, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 222, 231, 235, 251, 259], "zerophas": [142, 222], "bandstop": [142, 222], "ring": [142, 222], "convent": [142, 222], "fiter": [142, 222], "unrealist": [142, 222], "compens": [142, 222], "underflow": [142, 189, 222, 256], "freq": [142, 146, 149, 222, 226, 229], "lowpass": [142, 222], "highpass": [142, 222], "butterworth": [142, 222], "IF": [142, 222], "smoothat": [142, 222], "padmod": [142, 222], "filtr": [142, 222], "trim": [142, 155, 222, 234], "slide": [142, 162, 222, 239], "pct": [142, 222], "wraparound": [142, 222], "ambigu": [142, 222], "halfwai": [142, 222], "instantan": [142, 222], "od": [142, 222], "decreas": [142, 222], "wari": [142, 222], "nois": [142, 155, 162, 222, 234, 239], "contract": [142, 222], "pad_edg": [142, 222], "treatch": [142, 222], "treat": [142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 222], "block": [142, 162, 171, 175, 189, 222, 239, 247, 251, 256], "2xn": [142, 222], "period": [142, 222], "outsiz": [142, 222], "gap": [142, 222], "streach": [142, 222], "durat": [142, 169, 170, 222, 245, 246], "advanc": [142, 222], "portion": [142, 222], "reson": [142, 222], "resonantdr": [142, 222], "statfunct": [142, 222], "sample_match": [142, 222], "buit": [142, 222], "ins": [142, 222], "opposit": [142, 149, 222, 229], "nyquist": [142, 149, 222, 229], "address": [142, 199, 203, 222, 265, 269], "bandwidth": [142, 148, 149, 222, 228, 229], "artifact": [142, 222], "240": [142, 222], "singnal": [142, 222], "timeseri": [142, 151, 222, 231], "quadrat": [142, 222], "particularli": [142, 222], "higkinemat": [142, 222], "trajectori": [142, 193, 222, 259], "track": [142, 180, 181, 182, 183, 184, 185, 186, 187, 188, 222], "sharp": [142, 222], "spectrum": [142, 148, 222, 228], "cc": [142, 171, 222, 247], "replc": [142, 222], "oth": [142, 222], "stastist": [142, 222], "ignore_nan": [142, 222], "trend": [142, 222], "score": [142, 162, 222, 239], "preven": [142, 222], "instabl": [142, 222], "refular": [142, 222], "subtract": [142, 171, 222, 247], "analytic_sign": [142, 222], "doplot": [142, 222], "analyt": [142, 155, 158, 162, 222, 234, 237, 239], "rectifi": [142, 222], "heuriddddst": [142, 222], "basd": [142, 222], "abnorm": [142, 222], "extremum": [142, 222], "voltag": [142, 222], "curvatur": [142, 222], "demodul": [142, 222], "lag": [142, 169, 175, 222, 245, 251], "fft": [142, 146, 149, 222, 226, 229], "matter": [142, 222], "acf": [142, 222], "mirror": [142, 144, 156, 222, 224, 235], "partial_t": [142, 222], "syst": [142, 222], "nlag": [142, 222], "lagspac": [142, 222], "retrospect": [142, 222], "causal": [142, 222], "featur": [142, 170, 171, 189, 222, 246, 247, 256], "interp1d": [142, 176, 222, 252], "autocorrelogram": [142, 222], "triggerd": [142, 222], "dspguru": [142, 222], "dsp": [142, 222], "howto": [142, 222], "gloabal": [142, 222], "smoothli": [142, 156, 222, 235], "group_siz": [142, 222], "killep": [142, 222], "quirk": [142, 222], "maze": [142, 222], "mous": [142, 222], "spend": [142, 222], "dedicatd": [142, 222], "heurist": [142, 149, 222, 229], "dan": [142, 222], "helen": [142, 222], "ethan": [142, 222], "isn": [142, 222], "rankdata": [142, 222], "dedic": [142, 222], "timepoint": [142, 155, 162, 222, 234, 239], "actual": [142, 149, 222, 229], "uinform": [142, 222], "raw": [142, 149, 222, 229], "blank": [142, 222], "did": [142, 170, 222, 246], "recontruct": [142, 222], "original_x": [142, 222], "lfp": [142, 146, 149, 175, 222, 226, 229, 251], "hbw": [142, 222], "record": [142, 222], "1000hz": [142, 222], "60hz": [142, 222], "overton": [142, 222], "usa": [142, 222], "mostli": [144, 224], "2h": [144, 224], "2w": [144, 224], "shaoe": [144, 224], "3d": [144, 155, 224, 234], "supersed": [144, 156, 224, 235], "k2": [144, 224], "wavelength": [146, 155, 226, 234], "tempor": [146, 226], "nfreqss": [146, 226], "post": [146, 170, 201, 226, 246, 267], "magnitu": [146, 226], "nfreq": [146, 226], "specral": [146, 226], "ntime": [146, 155, 158, 162, 171, 226, 234, 237, 239, 247], "nchannel": [146, 155, 158, 162, 226, 234, 237, 239], "tradeoff": [146, 226], "timescal": [146, 226], "nch": [146, 226], "wavelt": [146, 226], "taper": [148, 149, 228, 229], "half_bandwidth_paramet": [148, 228], "dpss": [148, 228], "advantag": [148, 228], "expens": [148, 149, 228, 229], "nodc": [148, 228], "bw": [148, 228], "NOT": [148, 180, 181, 182, 183, 184, 185, 186, 187, 188, 228], "lowf": [148, 228], "highf": [148, 228], "ntaper": [148, 149, 228, 229], "use_parallel": [148, 228], "coupl": [149, 229], "sigal": [149, 229], "bia": [149, 193, 229, 259], "vicin": [149, 229], "attai": [149, 229], "npp": [149, 229], "transpose_warn": [149, 229], "nspike": [149, 229], "nwindow": [149, 229], "trace": [149, 229], "surround": [149, 229], "expos": [149, 229], "examin": [149, 162, 222, 229, 239], "lfp_segment": [149, 229], "booleanl": [149, 229], "nrand": [149, 229], "deafult": [149, 229], "nrandom": [149, 229], "trian": [149, 229], "savitski": [151, 231], "golai": [151, 231], "polynomi": [151, 231], "spline": [151, 231], "fc": [151, 231], "2m": [151, 231], "ou": 152, "ntrial": [152, 175, 203, 251, 269], "ornstein": 152, "uhlenbeck": 152, "damp": [152, 204, 270], "rxr": [154, 233], "nd": [155, 162, 234, 239], "kuramoto": [155, 162, 234, 239], "kuramotor": [155, 162, 234, 239], "syncroni": [155, 234], "diment": [155, 234], "exept": [155, 234], "arra": [155, 234], "electrode_spac": [155, 234], "mm": [155, 156, 234, 235], "4mm": [155, 234], "utah": [155, 234], "nclockwis": [155, 234], "clockwis": [155, 158, 234, 237], "nanticlockwis": [155, 234], "anticlockwis": [155, 158, 234, 237], "nsaddl": [155, 234], "saddl": [155, 158, 234, 237], "nmaxima": [155, 234], "nminima": [155, 234], "magnitur": [155, 234], "cycl": [155, 162, 234, 239], "assess": [155, 234], "thresh": [155, 234], "directionl": [155, 234], "contribut": [155, 234], "direction": [155, 234], "pgd": [155, 234], "planar": [155, 234], "denois": [155, 234], "accuraci": [155, 189, 234, 256], "mitig": [155, 234], "impact": [155, 234], "rubinto": [155, 234], "2009": [155, 234], "pg": [155, 234], "nonlinear": [155, 203, 234, 269], "easier": [155, 162, 234, 239], "nonlinearli": [155, 234], "empti": [155, 234], "crop": [155, 234], "lxkxntime": [155, 234], "primarili": [156, 235], "h_w": [156, 235], "aa": [156, 235], "anti": [156, 235], "antialias": [156, 235], "supsampl": [156, 235], "retrun": [156, 235], "intead": [156, 235], "a_i": [156, 235], "b_k": [156, 235], "1j": [156, 235], "guess": [156, 189, 193, 199, 235, 256, 259, 265], "brute": [156, 235], "dctcut": [156, 235], "compact": [156, 235], "downsampl": [156, 169, 235, 245], "made": [156, 235], "insert": [156, 235], "custom": [156, 235], "impliment": [156, 235], "frist": [156, 235], "aribtrari": [156, 235], "niter": [156, 235], "multielectrod": [157, 236], "session": [157, 236], "ch1": [157, 236], "ch2": [157, 236], "phi": [157, 236], "cgid": [157, 236], "dz": [158, 237], "zorder": [158, 237], "wheel": [158, 237], "flow": [158, 237], "anf": [158, 237], "compass": [158, 237], "needl": [158, 237], "complex1": [158, 237], "search": [158, 191, 219, 237, 275], "s1": [158, 162, 237, 239], "s2": [158, 162, 237, 239], "merg": [158, 166, 219, 237, 242, 275], "nearbi": [158, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 237, 242], "pk": [158, 237], "neighbord": [158, 237], "docoalesc": [158, 237], "edgeavoid": [158, 237], "antclockwis": [158, 237], "ss": [158, 237], "plotsaddl": [158, 237], "unknown": [158, 222, 237], "defualt": [158, 237], "sadd": [158, 237], "curl": [158, 237], "wt": [158, 237], "smt": [158, 237], "smf": [158, 237], "id": [158, 222, 237], "mesh": [160, 166, 238, 242], "absorb": [160, 238], "At": [160, 238], "showim": [160, 238], "bounari": [160, 238], "continuum": [160, 238], "magic": [160, 238], "piecewis": [160, 238], "johncostella": [160, 238], "conceptu": [160, 238], "repeatli": [160, 238], "orthogon": [160, 238], "help": [160, 238], "maintain": [160, 238], "oppos": [160, 238], "pop": [162, 239], "unitless": [162, 239], "analag": [162, 239], "tr": [162, 239], "spk120918": [162, 239], "get_all_analytic_pop": [162, 239], "600": [162, 239], "han": [162, 239], "population_signal_coher": [162, 239], "textrm": [162, 239], "langl": [162, 239], "rangl": [162, 239], "notion": [162, 239], "medv": [162, 239], "intoform": 163, "poini": 163, "otherpoint": 163, "witin": 163, "imatch": 163, "xymatch": 163, "closestmatch": 163, "z1": 163, "z2": 163, "xypoint": [165, 241], "\u00b2": [165, 241], "ntriangl": [166, 242], "indec": [166, 242], "delaunai": [166, 242], "simplic": [166, 242], "nedg": [166, 242], "iz": [166, 242], "microd": [166, 242], "edgelist": [166, 242], "join": [166, 216, 242], "centroid": [166, 242], "keword": [166, 242], "t1": [169, 245], "t2": [169, 245], "maxlag": [169, 245], "stand": [169, 245], "sampleat": [169, 245], "adapt": [169, 179, 245, 255], "xc": [169, 175, 245, 251], "raster": [169, 245], "binsiz": [169, 245], "snip": [170, 246], "li": [170, 246], "wf": [170, 246], "vallei": [170, 246], "trough": [170, 246], "extrema": [170, 246], "123": [170, 246], "thin": [170, 246], "amplituc": [170, 246], "300": [170, 203, 246, 269], "isol": [170, 246], "20160802_waveform_segment": [170, 246], "0349055393": [170, 246], "i_f": [170, 246], "estiamt": [171, 247], "nfold": [171, 247], "parrit": [171, 247], "crossvalid": [171, 189, 247, 256], "partit": [171, 247], "xtrain": [171, 247], "ytrain": [171, 247], "xtest": [171, 247], "ytest": [171, 247], "ntimepoint": [171, 247], "ndatapoint": [171, 247], "xh": [171, 247], "l1": [171, 204, 247, 270], "vali": [171, 247], "hx": [171, 247], "err": [171, 247], "errmethod": [171, 247], "fold": [171, 189, 247, 256], "lstsq": [171, 247], "anoth": [171, 247], "penalti": [171, 189, 204, 247, 256, 270], "constand": [171, 247], "extra": [171, 199, 216, 247, 265], "bhat": [171, 193, 247, 259], "traina": [171, 247], "trainb": [171, 247], "testa": [171, 247], "testb": [171, 247], "blocksiz": [171, 247], "blockshuffl": [171, 247], "integet": [171, 247], "prefix": [171, 215, 216, 218, 247], "ndarari": [171, 193, 247, 259], "halv": [171, 247], "kept": [171, 247], "n_keep": [171, 247], "rank_defici": [171, 247], "princip": [171, 247], "nyfeatur": [171, 247], "fewer": [171, 216, 247], "covariac": [171, 247], "abbrevi": [171, 247], "colum": [171, 247], "nob": [171, 247], "regressor": [171, 247], "intercept": [171, 247], "averagind": [175, 251], "apologi": [175, 251], "neuron": [175, 251], "nreplica": [175, 251], "nneuron": [175, 251], "ft": [175, 251], "fftspike": [175, 251], "shrinkag": [175, 251], "strenth": [175, 251], "prior_var": [175, 251], "x_grid": [176, 252], "gaussian_kd": [176, 179, 252, 255], "kde": [176, 179, 201, 252, 255, 267], "input_unit": [176, 252], "intens": [176, 252], "divis": [176, 252], "assign": [176, 193, 200, 252, 259, 266], "ngrid": [176, 252], "histogram2d": [176, 252], "counterpart": [177, 253], "whih": [177, 253], "pobabl": [177, 193, 253, 259], "pick": [177, 193, 253, 259], "accord": [177, 193, 253, 259], "joferkington": [179, 255], "d95101a61a02e0ba63e5": [179, 255], "joe": [179, 255], "kington": [179, 255], "gridsiz": [179, 255], "400": [179, 255], "1e7": [179, 255], "essenti": [179, 255], "coord": [179, 255], "nx": [179, 255], "ny": [179, 255], "xmin": [179, 255], "xmax": [179, 255], "ymin": [179, 255], "ymax": [179, 255], "weigh": [179, 255], "w_i": [179, 255], "sampled_dens": [179, 255], "applicationss": [180, 181, 182, 183, 184, 185, 186, 187, 188], "gaussian_quadratur": [180, 181, 182, 183, 184, 185, 186, 187, 188], "gaussian_quadrature_logarithm": [180, 181, 182, 183, 184, 185, 186, 187, 188], "logp": [180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 259], "abstract": [180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 259], "logpdf": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_check": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_logpdf": [180, 181, 182, 183, 184, 185, 186, 187, 188], "kxn": [180, 181, 182, 183, 184, 185, 186, 187, 188], "OR": [180, 181, 182, 183, 184, 185, 186, 187, 188], "pinv": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_pdf": [180, 181, 182, 183, 184, 185, 186, 187, 188], "nxk": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_sampl": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_multipli": [180, 181, 182, 183, 184, 185, 186, 187, 188], "p1": [180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 259], "p2": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_multiply_c": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_divid": [180, 181, 182, 183, 184, 185, 186, 187, 188], "handle_neg": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_project": [180, 181, 182, 183, 184, 185, 186, 187, 188], "unitari": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_entropi": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_dkl": [180, 181, 182, 183, 184, 185, 186, 187, 188], "m0": [180, 181, 182, 183, 184, 185, 186, 187, 188], "p0": [180, 181, 182, 183, 184, 185, 186, 187, 188], "kl": [180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 260], "diverg": [180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 260], "mgv_dkl": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_dkl_cp": [180, 181, 182, 183, 184, 185, 186, 187, 188], "c0": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_condit": [180, 181, 182, 183, 184, 185, 186, 187, 188], "joint": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_kalman": [180, 181, 182, 183, 184, 185, 186, 187, 188], "kalman": [180, 181, 182, 183, 184, 185, 186, 187, 188], "posterior": [180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 259], "mvg_kalman_p_inversea": [180, 181, 182, 183, 184, 185, 186, 187, 188], "inva": [180, 181, 182, 183, 184, 185, 186, 187, 188], "transit": [180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 259], "aca": [180, 181, 182, 183, 184, 185, 186, 187, 188], "inv": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_kalman_joint": [180, 181, 182, 183, 184, 185, 186, 187, 188], "mvg_kalman_joint_p": [180, 181, 182, 183, 184, 185, 186, 187, 188], "instal": [189, 256], "sklearn": [189, 256], "scikit": [189, 200, 256, 266], "net": [189, 256], "devel": [189, 256], "hessian": [189, 199, 256, 265], "jacobian": [189, 199, 256, 265], "overflow": [189, 193, 256, 259], "penal": [189, 256], "solver": [189, 199, 256, 265], "explicitli": [189, 256], "n_observ": [189, 256], "n_featur": [189, 256], "l2penalti": [189, 256], "mu0": [189, 193, 200, 256, 259, 266], "b0": [189, 256], "descent": [189, 256], "nxval": [189, 256], "roc": [189, 256], "mu_hat": [189, 256], "b_hat": [189, 256], "tfrac": [189, 256], "1920929e": [189, 256], "07": [189, 256], "jac": [189, 199, 256, 265], "climb": 191, "pargrid": 191, "hyperparamet": 191, "par": 191, "allresult": 191, "markov": [193, 259], "loga": [193, 259], "logb": [193, 259], "param": [193, 199, 259, 265], "p01": [193, 259], "p10": [193, 259], "mu1": [193, 200, 259, 266], "maxim": [193, 259], "latent": [193, 259], "em": [193, 259], "asymmetr": [193, 259], "viterbi_algorithm": [193, 259], "nstate": [193, 259], "emiss": [193, 259], "probabilti": [193, 259], "maxit": [193, 198, 259, 264], "overal": [193, 259], "baum": [193, 259], "welch": [193, 259], "algoirthm": [193, 259], "n_timepoint": [193, 259], "n_hidden_st": [193, 259], "n_observable_st": [193, 259], "pr": [193, 259], "n_state": [193, 259], "n_hid": [193, 259], "converg": [193, 198, 199, 259, 264, 265], "0001": [193, 259], "minit": [193, 259], "x0hat": [193, 259], "llikelihood": [193, 259], "tranisit": [193, 259], "diffus": [193, 259], "quadratur": [193, 259], "moment": [193, 198, 259, 264], "\u03bb": [193, 259], "cox": [193, 259], "a\u00b2x\u00b2": [193, 259], "2abx": [193, 259], "b\u00b2": [193, 259], "tm": [193, 259], "evolv": [193, 259], "px": [193, 259], "concern": [194, 260], "dkl": [194, 260], "nat": [194, 260], "shannon": [194, 260], "minp": [194, 260], "mayb": [194, 260], "extrapol": [194, 260], "mont": [198, 264], "carlo": [198, 264], "simplicit": [198, 264], "datatyp": [198, 264], "slowli": [198, 264], "ex": [198, 264], "ask": [198, 217, 264, 274], "exx": [198, 264], "runtimeerror": [199, 265], "distinguish": [199, 265], "hess": [199, 265], "printerror": [199, 265], "failthrough": [199, 265], "simplex_onli": [199, 265], "dontus": [199, 265], "maxfev": [199, 265], "maxgev": [199, 265], "retri": [199, 265], "few": [199, 265], "doesn": [199, 217, 265, 274], "unresolv": [199, 265], "upon": [199, 265], "robus": [199, 265], "ultim": [199, 265], "nelder": [199, 265], "mead": [199, 265], "simplex": [199, 265], "provided": [199, 265], "simple_onli": [199, 265], "dure": [199, 265], "toi": [200, 219, 266, 275], "presum": [200, 217, 266, 274], "mistur": [200, 266], "pr0": [200, 266], "obsrev": [200, 266], "belong": [200, 266], "pr1": [200, 266], "burst": [201, 267], "refractori": [201, 267], "mainli": [201, 267], "isi": [201, 267], "st": [201, 267], "py": [203, 269], "wilson": [203, 269], "pid": [203, 269], "pn": [203, 269], "nonparametr": [203, 269], "societi": [203, 269], "methodolog": [203, 269], "1995": [203, 269], "289": [203, 269], "_____________________________________________________________________________": [203, 269], "tom": [203, 269], "nichol": [203, 269], "02": [203, 269], "2007": [203, 269], "cvid": [203, 269], "cvn": [203, 269], "pvalue_dictionari": [203, 269], "test_popul": [203, 269], "null_popul": [203, 269], "bootstrap": [203, 269], "resampl": [203, 269], "cure": [203, 269], "suffici": [203, 269], "popa": [203, 269], "popb": [203, 269], "na": [203, 269], "nb": [203, 269], "task": [204, 270], "constrain": [204, 270], "lamb": [204, 270], "dc": [204, 270], "mx": [204, 270], "secretli": 215, "hdf": 215, "squeez": 215, "detectstr": 215, "detectscalar": 215, "unpack": 215, "subpath": 215, "sep": [215, 216], "hfdf5": 215, "outbut": 215, "tabwidth": 216, "suffix": 216, "newlin": 216, "columnd": 216, "weird": 216, "collat": 216, "decim": 216, "prec": 216, "shortest": 216, "viabl": 216, "notat": 216, "exp_digit": 216, "separtor": 216, "4f": 216, "ncol": 216, "1265665": 216, "filepath": [217, 274], "436198": [217, 274], "ye": [217, 274], "raw_input": [217, 274], "3041986": [217, 274], "apt": [217, 274], "hit": [217, 274], "enter": [217, 219, 274, 275], "yymmdd": 218, "d_": 218, "doprint": 218, "5849800": 218, "elaps": 218, "timestamp": 218, "varnam": [219, 275], "kw": [219, 275], "prompt": [219, 275], "matlabpath": [219, 275], "concept": [219, 275], "dector": [219, 275], "extend": [219, 275], "emit": [219, 275], "infix": [219, 275], "fun": [219, 275], "foo": [219, 275], "pip": [219, 275], "krg": [219, 275], "matfil": [219, 275], "matfilecach": [219, 275], "ext": [219, 275], "png": [219, 275], "dirnam": [219, 275], "944536": [219, 275], "member": [219, 275], "449560": [219, 275], "1175208": [219, 275], "eleg": [219, 275], "camelcas": [219, 275], "camel": [219, 275], "4303492": [219, 275], "underscor": [219, 275], "lost": [219, 275], "synonym": [219, 275], "linenois": 222, "morlet_coher": 222, "handler": [222, 232], "intenum": 222, "sig_dfl": [222, 232], "sig_ign": [222, 232], "itimererror": 222, "itimer_error": 222, "sigmask": 222, "sig_block": 222, "sig_unblock": 222, "sig_setmask": 222, "sighup": 222, "sigint": 222, "sigquit": 222, "sigil": 222, "sigtrap": 222, "sigabrt": 222, "sigiot": 222, "sigbu": 222, "sigfp": 222, "sigkil": 222, "sigusr1": 222, "sigsegv": 222, "sigusr2": 222, "sigpip": 222, "sigalrm": 222, "sigterm": 222, "sigchld": 222, "sigcld": 222, "sigcont": 222, "sigstop": 222, "sigtstp": 222, "sigttin": 222, "sigttou": 222, "sigurg": 222, "sigxcpu": 222, "sigxfsz": 222, "sigvtalrm": 222, "sigprof": 222, "sigwinch": 222, "sigio": 222, "sigpol": 222, "sigpwr": 222, "sigsi": 222, "sigrtmin": 222, "sigrtmax": 222, "getsign": [222, 232], "signalnum": 222, "action": [222, 232], "pthread_sigmask": 222, "fetch": 222, "notic": [222, 232], "interrupt": [222, 232], "stack": [222, 232], "sigpend": 222, "pend": 222, "deliveri": 222, "sigwait": 222, "sigset": 222, "suspend": 222, "struct_siginfo": 222, "sigwaitinfo": 222, "sigtimedwait": 222, "si_signo": 222, "si_cod": 222, "si_errno": 222, "si_pid": 222, "si_uid": 222, "si_statu": 222, "si_band": 222, "n_field": 222, "n_sequence_field": 222, "n_unnamed_field": 222, "errno": 222, "exit": 222, "valid_sign": 222, "spatialpsd": 233, "wave_parametric_model": 233, "gmm": 247, "history_basi": 247, "kent_reimann": 247, "lesson": 247, "matzner_bar": 247, "gad_plos_2015": 247, "mvg": 247, "spatiotemporal_glm_util": 247}, "objects": {"": [[1, 0, 0, "-", "functions"], [2, 0, 0, "-", "getfftw"], [3, 0, 0, "-", "gpu"], [21, 0, 0, "-", "graphics"], [28, 0, 0, "-", "jobs"], [35, 0, 0, "-", "linalg"], [39, 0, 0, "-", "models"], [50, 0, 0, "-", "neurotools"], [220, 0, 0, "-", "nlab"], [222, 0, 0, "-", "signal"], [233, 0, 0, "-", "spatial"], [244, 0, 0, "-", "spikes"], [247, 0, 0, "-", "stats"], [274, 0, 0, "-", "system"], [275, 0, 0, "-", "tools"]], "functions": [[1, 1, 1, "", "dsigmoid"], [1, 1, 1, "", "f"], [1, 1, 1, "", "f1"], [1, 1, 1, "", "f2"], [1, 1, 1, "", "g"], [1, 1, 1, "", "inversesigmoid"], [1, 1, 1, "", "log_factorial"], [1, 1, 1, "", "npdf"], [1, 1, 1, "", "sexp"], [1, 1, 1, "", "sigmoid"], [1, 1, 1, "", "slog"]], "getfftw": [[2, 1, 1, "", "ftwthr"]], "gpu": [[8, 0, 0, "-", "cpu"]], "gpu.cpu": [[9, 0, 0, "-", "util"]], "gpu.cpu.util": [[9, 1, 1, "", "cmap"], [9, 1, 1, "", "compose"], [9, 1, 1, "", "corr"], [9, 1, 1, "", "cov"], [9, 1, 1, "", "cut"], [9, 1, 1, "", "document"], [9, 1, 1, "", "dot"], [9, 1, 1, "", "elem"], [9, 1, 1, "", "fancy"], [9, 1, 1, "", "flat"], [9, 1, 1, "", "idivup"], [9, 1, 1, "", "ldif"], [9, 1, 1, "", "ldif2"], [9, 1, 1, "", "ldiv"], [9, 1, 1, "", "ldiv2"], [9, 1, 1, "", "length"], [9, 1, 1, "", "lmul"], [9, 1, 1, "", "lmul2"], [9, 1, 1, "", "lpow"], [9, 1, 1, "", "lpow2"], [9, 1, 1, "", "lsum"], [9, 1, 1, "", "lsum2"], [9, 1, 1, "", "mdif"], [9, 1, 1, "", "mdiv"], [9, 1, 1, "", "mean"], [9, 1, 1, "", "mmap"], [9, 1, 1, "", "mmean"], [9, 1, 1, "", "mmul"], [9, 1, 1, "", "mpow"], [9, 1, 1, "", "mstd"], [9, 1, 1, "", "msum"], [9, 1, 1, "", "mu"], [9, 1, 1, "", "mvar"], [9, 1, 1, "", "norm"], [9, 1, 1, "", "rnorm"], [9, 1, 1, "", "scale"], [9, 1, 1, "", "sem"], [9, 1, 1, "", "shift"], [9, 1, 1, "", "sigma"], [9, 1, 1, "", "sstd"], [9, 1, 1, "", "std"], [9, 1, 1, "", "svar"], [9, 1, 1, "", "var"]], "graphics": [[22, 0, 0, "-", "color"], [23, 0, 0, "-", "image"], [24, 0, 0, "-", "matplotlib"], [25, 0, 0, "-", "plot"], [26, 0, 0, "-", "pygame"]], "graphics.color": [[22, 1, 1, "", "RGBtoHCL"], [22, 1, 1, "", "bit16_RGB_to_tuple"], [22, 1, 1, "", "bit16_print_color"], [22, 1, 1, "", "circularly_smooth_colormap"], [22, 1, 1, "", "code_to_16bit"], [22, 1, 1, "", "color_boxplot"], [22, 1, 1, "", "complexHLArr2RGB"], [22, 1, 1, "", "darkhues"], [22, 1, 1, "", "enumerate_fast_colors"], [22, 1, 1, "", "hcl2rgb"], [22, 1, 1, "", "hex2rgb"], [22, 1, 1, "", "hex_pack_BGR"], [22, 1, 1, "", "hsv2rgb"], [22, 1, 1, "", "hue_angle"], [22, 1, 1, "", "isoluminance1"], [22, 1, 1, "", "isoluminance2"], [22, 1, 1, "", "isoluminance3"], [22, 1, 1, "", "isoluminance4"], [22, 1, 1, "", "lighthues"], [22, 1, 1, "", "lightness"], [22, 1, 1, "", "luminance_matrix"], [22, 1, 1, "", "match_luminance"], [22, 1, 1, "", "medhues"], [22, 1, 1, "", "radl2rgb"], [22, 1, 1, "", "radl2rgbLUT"], [22, 1, 1, "", "rgb2hex"], [22, 1, 1, "", "rotate"], [22, 1, 1, "", "show_complete_fast_pallet"], [22, 1, 1, "", "show_complete_fastest_pallet"], [22, 1, 1, "", "show_fast_pallet"], [22, 1, 1, "", "show_hex_pallet"], [22, 1, 1, "", "tuple_to_bit16"], [22, 1, 1, "", "tuple_to_bit24"]], "graphics.image": [[23, 1, 1, "", "mean_center"], [23, 1, 1, "", "median_center"], [23, 1, 1, "", "unitize"], [23, 1, 1, "", "visualize_derivatives"]], "graphics.matplotlib": [[24, 1, 1, "", "draw_array"], [24, 1, 1, "", "hide_toolbar"], [24, 1, 1, "", "start"]], "graphics.plot": [[25, 1, 1, "", "Gaussian2D_covellipse"], [25, 2, 1, "", "HandlerSquare"], [25, 1, 1, "", "addspikes"], [25, 1, 1, "", "adjust_axis_height_pixels"], [25, 1, 1, "", "adjust_xlabel_space"], [25, 1, 1, "", "adjust_ylabel_space"], [25, 1, 1, "", "adjustmap"], [25, 1, 1, "", "animate_complex"], [25, 1, 1, "", "arrow_between"], [25, 1, 1, "", "axvbands"], [25, 1, 1, "", "axvstripe"], [25, 1, 1, "", "barcompare"], [25, 1, 1, "", "base_legend"], [25, 1, 1, "", "border_width"], [25, 1, 1, "", "boxplot_significance"], [25, 1, 1, "", "broken_step"], [25, 1, 1, "", "ceil_to_precision"], [25, 1, 1, "", "centers"], [25, 1, 1, "", "clean_y_range"], [25, 1, 1, "", "cleartop"], [25, 1, 1, "", "colored_boxplot"], [25, 1, 1, "", "complex_axis"], [25, 1, 1, "", "covariance_crosshairs"], [25, 1, 1, "", "darken"], [25, 1, 1, "", "domask"], [25, 1, 1, "", "draw_circle"], [25, 1, 1, "", "expand_axis_x"], [25, 1, 1, "", "expand_axis_y"], [25, 1, 1, "", "expand_y_range"], [25, 1, 1, "", "figurebox"], [25, 1, 1, "", "flathist"], [25, 1, 1, "", "floor_to_precision"], [25, 1, 1, "", "force_aspect"], [25, 1, 1, "", "fsize"], [25, 1, 1, "", "fudgex"], [25, 1, 1, "", "fudgexy"], [25, 1, 1, "", "fudgey"], [25, 1, 1, "", "get_aspect"], [25, 1, 1, "", "get_ax_pixel"], [25, 1, 1, "", "get_ax_pixel_ratio"], [25, 1, 1, "", "get_ax_size"], [25, 1, 1, "", "get_bbox"], [25, 1, 1, "", "good_colorbar"], [25, 1, 1, "", "hsigbar"], [25, 1, 1, "", "inhibition_arrow"], [25, 1, 1, "", "label"], [25, 1, 1, "", "left_legend"], [25, 1, 1, "", "lighten"], [25, 1, 1, "", "match_image_aspect"], [25, 1, 1, "", "mock_legend"], [25, 1, 1, "", "more_xticks"], [25, 1, 1, "", "more_yticks"], [25, 1, 1, "", "nice_legend"], [25, 1, 1, "", "nicebp"], [25, 1, 1, "", "nicex"], [25, 1, 1, "", "nicexy"], [25, 1, 1, "", "nicey"], [25, 1, 1, "", "noaxis"], [25, 1, 1, "", "noclip"], [25, 1, 1, "", "nolabels"], [25, 1, 1, "", "notick"], [25, 1, 1, "", "nox"], [25, 1, 1, "", "noxlabels"], [25, 1, 1, "", "noxyaxes"], [25, 1, 1, "", "noy"], [25, 1, 1, "", "noylabels"], [25, 1, 1, "", "nudge_axis_baseline"], [25, 1, 1, "", "nudge_axis_left"], [25, 1, 1, "", "nudge_axis_x"], [25, 1, 1, "", "nudge_axis_y"], [25, 1, 1, "", "nudge_axis_y_pixels"], [25, 1, 1, "", "pixels_to_xfigureunits"], [25, 1, 1, "", "pixels_to_xunits"], [25, 1, 1, "", "pixels_to_yfigureunits"], [25, 1, 1, "", "pixels_to_yunits"], [25, 1, 1, "", "plotCWT"], [25, 1, 1, "", "plotWTPhase"], [25, 1, 1, "", "plotWTPhaseFig"], [25, 1, 1, "", "plot_complex"], [25, 1, 1, "", "plotz"], [25, 1, 1, "", "positivex"], [25, 1, 1, "", "positivexy"], [25, 1, 1, "", "positivey"], [25, 1, 1, "", "px2x"], [25, 1, 1, "", "px2y"], [25, 1, 1, "", "rangeover"], [25, 1, 1, "", "rangeto"], [25, 1, 1, "", "restore_limits"], [25, 1, 1, "", "right_legend"], [25, 1, 1, "", "rightaxis"], [25, 1, 1, "", "righty"], [25, 1, 1, "", "round_to_precision"], [25, 1, 1, "", "save_limits"], [25, 1, 1, "", "savefigure"], [25, 1, 1, "", "shade_edges"], [25, 1, 1, "", "shellmean"], [25, 1, 1, "", "shellplot"], [25, 1, 1, "", "sigbar"], [25, 1, 1, "", "simple_arrow"], [25, 1, 1, "", "simpleaxis"], [25, 1, 1, "", "simpleraxis"], [25, 1, 1, "", "simplerright"], [25, 1, 1, "", "splitz"], [25, 1, 1, "", "stderrplot"], [25, 1, 1, "", "subfigurelabel"], [25, 1, 1, "", "trendline"], [25, 1, 1, "", "unit_crosshairs"], [25, 1, 1, "", "unitaxes"], [25, 1, 1, "", "unitx"], [25, 1, 1, "", "unity"], [25, 1, 1, "", "widths_to_centers"], [25, 1, 1, "", "widths_to_edges"], [25, 1, 1, "", "wtpshow"], [25, 1, 1, "", "xbartext"], [25, 1, 1, "", "xfigureunits_to_pixels"], [25, 1, 1, "", "xin"], [25, 1, 1, "", "xscalebar"], [25, 1, 1, "", "xticklen"], [25, 1, 1, "", "xtickpad"], [25, 1, 1, "", "xunits_to_pixels"], [25, 1, 1, "", "xylim"], [25, 1, 1, "", "ybartext"], [25, 1, 1, "", "yfigureunits_to_pixels"], [25, 1, 1, "", "yin"], [25, 1, 1, "", "yscalebar"], [25, 1, 1, "", "yticklen"], [25, 1, 1, "", "ytickpad"], [25, 1, 1, "", "yunits_to_pixels"], [25, 1, 1, "", "zerohline"], [25, 1, 1, "", "zerovline"], [25, 1, 1, "", "zoombox"]], "graphics.plot.HandlerSquare": [[25, 3, 1, "", "create_artists"]], "graphics.pygame": [[26, 1, 1, "", "draw_array"], [26, 1, 1, "", "enable_vsync"], [26, 1, 1, "", "start"]], "jobs": [[29, 0, 0, "-", "cache"], [30, 0, 0, "-", "closure"], [32, 0, 0, "-", "filenames"], [33, 0, 0, "-", "initialize_system_cache"], [34, 0, 0, "-", "parallel"]], "jobs.cache": [[29, 1, 1, "", "base64hash"], [29, 1, 1, "", "base64hash2byte"], [29, 1, 1, "", "disk_cacher"], [29, 1, 1, "", "file_string_to_signature"], [29, 1, 1, "", "function_hash_no_subroutines"], [29, 1, 1, "", "function_hash_with_subroutines"], [29, 1, 1, "", "function_signature"], [29, 1, 1, "", "get_cache_path"], [29, 1, 1, "", "get_source"], [29, 1, 1, "", "hierarchical_cacher"], [29, 1, 1, "", "human_decode"], [29, 1, 1, "", "human_encode"], [29, 1, 1, "", "locate_cached"], [29, 1, 1, "", "read_cache_entry"], [29, 1, 1, "", "signature_to_file_string"], [29, 1, 1, "", "validate_for_matfile"], [29, 1, 1, "", "validate_for_numpy"]], "jobs.closure": [[30, 1, 1, "", "csv"], [30, 1, 1, "", "get_subroutines"], [30, 1, 1, "", "inspect_function_closure"], [30, 1, 1, "", "is_immutable"], [30, 1, 1, "", "is_probably_safe"], [30, 1, 1, "", "verify_function_closure"]], "jobs.filenames": [[32, 1, 1, "", "check_filename"], [32, 1, 1, "", "is_dangerous_filename"], [32, 1, 1, "", "validate_argument_signature"]], "jobs.initialize_system_cache": [[33, 1, 1, "", "cache_test"], [33, 1, 1, "", "du"], [33, 1, 1, "", "initialize_caches"], [33, 1, 1, "", "launch_cache_synchronizers"], [33, 1, 1, "", "purge_ram_cache"], [33, 1, 1, "", "purge_ssd_cache"], [33, 1, 1, "", "reset_ramdisk"]], "jobs.parallel": [[34, 1, 1, "", "close_pool"], [34, 1, 1, "", "eval_from_cached"], [34, 1, 1, "", "function_fingerprint"], [34, 1, 1, "", "parallel_cached_wrapper"], [34, 1, 1, "", "parallel_error_handling"], [34, 1, 1, "", "parallel_indirect_wrapper"], [34, 1, 1, "", "pararraymap"], [34, 1, 1, "", "parimap"], [34, 1, 1, "", "parmap"], [34, 1, 1, "", "parmap_dict"], [34, 1, 1, "", "reset_pool"]], "linalg": [[36, 0, 0, "-", "arguments"], [37, 0, 0, "-", "matrix"], [38, 0, 0, "-", "operators"]], "linalg.arguments": [[36, 1, 1, "", "ascolumn"], [36, 1, 1, "", "asrow"], [36, 1, 1, "", "assertcolumn"], [36, 1, 1, "", "assertfinite"], [36, 1, 1, "", "assertfinitereal"], [36, 1, 1, "", "assertreal"], [36, 1, 1, "", "assertrow"], [36, 1, 1, "", "assertshape"], [36, 1, 1, "", "assertsquare"], [36, 1, 1, "", "assertvector"], [36, 1, 1, "", "assquare"], [36, 1, 1, "", "asvector"], [36, 1, 1, "", "iscolumn"], [36, 1, 1, "", "isrow"], [36, 1, 1, "", "issquare"], [36, 1, 1, "", "scalar"]], "linalg.matrix": [[37, 1, 1, "", "Ldistance"], [37, 1, 1, "", "Llasso"], [37, 1, 1, "", "abserr"], [37, 1, 1, "", "autopredict"], [37, 1, 1, "", "cartesian_product"], [37, 1, 1, "", "check_covmat"], [37, 1, 1, "", "check_covmat_fast"], [37, 1, 1, "", "check_finite_real"], [37, 1, 1, "", "cholupdate"], [37, 1, 1, "", "cholupdate_eye"], [37, 1, 1, "", "cinv"], [37, 1, 1, "", "column"], [37, 1, 1, "", "csolve"], [37, 1, 1, "", "errmx"], [37, 1, 1, "", "kronsum"], [37, 1, 1, "", "laplace_kernel"], [37, 1, 1, "", "ldiv"], [37, 1, 1, "", "logdet"], [37, 1, 1, "", "match_covariance"], [37, 1, 1, "", "maxeig"], [37, 1, 1, "", "nearPDHigham"], [37, 1, 1, "", "nearPSDRebonatoJackel"], [37, 1, 1, "", "normedcovariance"], [37, 1, 1, "", "psd_eig"], [37, 1, 1, "", "qf"], [37, 1, 1, "", "rcond"], [37, 1, 1, "", "rdiv"], [37, 1, 1, "", "real_eig"], [37, 1, 1, "", "reglstsq"], [37, 1, 1, "", "rmatrix"], [37, 1, 1, "", "row"], [37, 1, 1, "", "rsolt"], [37, 1, 1, "", "rsolve"], [37, 1, 1, "", "selector_matrix"], [37, 1, 1, "", "solt"], [37, 1, 1, "", "top_v"], [37, 1, 1, "", "tril_elements"], [37, 1, 1, "", "triu_elements"], [37, 1, 1, "", "wheremax"], [37, 1, 1, "", "wheremin"]], "linalg.operators": [[38, 1, 1, "", "adjacency1D"], [38, 1, 1, "", "adjacency2D"], [38, 1, 1, "", "adjacency2D_circular"], [38, 1, 1, "", "adjacency2d_rotational"], [38, 1, 1, "", "circular1DblurOperator"], [38, 1, 1, "", "cosine_kernel"], [38, 1, 1, "", "covfrom"], [38, 1, 1, "", "delta"], [38, 1, 1, "", "differentiator"], [38, 1, 1, "", "diffuseFT1D"], [38, 1, 1, "", "flatcov"], [38, 1, 1, "", "gaussian1DblurOperator"], [38, 1, 1, "", "gaussian2DblurOperator"], [38, 1, 1, "", "integrator"], [38, 1, 1, "", "laplacian1D"], [38, 1, 1, "", "laplacian1D_circular"], [38, 1, 1, "", "laplacian2D"], [38, 1, 1, "", "laplacianFT1D"], [38, 1, 1, "", "log_cosine_basis"], [38, 1, 1, "", "make_cosine_basis"], [38, 1, 1, "", "oucov"], [38, 1, 1, "", "separable_guassian_blur"], [38, 1, 1, "", "wienerFT1D"]], "models": [[41, 0, 0, "-", "lif"]], "models.lif": [[41, 1, 1, "", "euler_integrate_LIF"], [41, 1, 1, "", "exponential_integrate_LIF"], [41, 1, 1, "", "exponential_moving_average"]], "neurotools": [[75, 0, 0, "-", "graphics"], [86, 0, 0, "-", "jobs"], [93, 0, 0, "-", "linalg"], [107, 0, 0, "-", "nlab"], [108, 0, 0, "-", "obsolete"], [142, 0, 0, "-", "signal"], [154, 0, 0, "-", "spatial"], [168, 0, 0, "-", "spikes"], [171, 0, 0, "-", "stats"], [211, 0, 0, "-", "util"]], "neurotools.graphics": [[76, 0, 0, "-", "color"], [77, 0, 0, "-", "colormaps"], [78, 0, 0, "-", "dendron"], [79, 0, 0, "-", "fabio_maps"], [80, 0, 0, "-", "image"], [81, 0, 0, "-", "matplotlib"], [82, 0, 0, "-", "plot"], [83, 0, 0, "-", "pygame"]], "neurotools.graphics.color": [[76, 1, 1, "", "RGBtoHCL"], [76, 1, 1, "", "bit16_RGB_to_tuple"], [76, 1, 1, "", "bit16_print_color"], [76, 1, 1, "", "circularly_smooth_colormap"], [76, 1, 1, "", "code_to_16bit"], [76, 1, 1, "", "color_boxplot"], [76, 1, 1, "", "complexHLArr2RGB"], [76, 1, 1, "", "darkhues"], [76, 1, 1, "", "enumerate_fast_colors"], [76, 1, 1, "", "hcl2rgb"], [76, 1, 1, "", "hex2rgb"], [76, 1, 1, "", "hex_pack_BGR"], [76, 1, 1, "", "hsv2rgb"], [76, 1, 1, "", "hue_angle"], [76, 1, 1, "", "isoluminance1"], [76, 1, 1, "", "isoluminance2"], [76, 1, 1, "", "isoluminance3"], [76, 1, 1, "", "isoluminance4"], [76, 1, 1, "", "lighthues"], [76, 1, 1, "", "lightness"], [76, 1, 1, "", "luminance_matrix"], [76, 1, 1, "", "match_luminance"], [76, 1, 1, "", "medhues"], [76, 1, 1, "", "radl2rgb"], [76, 1, 1, "", "radl2rgbLUT"], [76, 1, 1, "", "rgb2hex"], [76, 1, 1, "", "rotate"], [76, 1, 1, "", "show_complete_fast_pallet"], [76, 1, 1, "", "show_complete_fastest_pallet"], [76, 1, 1, "", "show_fast_pallet"], [76, 1, 1, "", "show_hex_pallet"], [76, 1, 1, "", "tuple_to_bit16"], [76, 1, 1, "", "tuple_to_bit24"]], "neurotools.graphics.colormaps": [[77, 1, 1, "", "test_colormaps"]], "neurotools.graphics.dendron": [[78, 1, 1, "", "count_nodes"], [78, 1, 1, "", "get_depth"], [78, 1, 1, "", "inorder_traversal"], [78, 1, 1, "", "list_like"], [78, 1, 1, "", "plot_brackets"], [78, 1, 1, "", "plot_brackets_polar"]], "neurotools.graphics.image": [[80, 1, 1, "", "mean_center"], [80, 1, 1, "", "median_center"], [80, 1, 1, "", "unitize"], [80, 1, 1, "", "visualize_derivatives"]], "neurotools.graphics.matplotlib": [[81, 1, 1, "", "draw_array"], [81, 1, 1, "", "hide_toolbar"], [81, 1, 1, "", "start"]], "neurotools.graphics.plot": [[82, 1, 1, "", "Gaussian2D_covellipse"], [82, 2, 1, "", "HandlerSquare"], [82, 1, 1, "", "addspikes"], [82, 1, 1, "", "adjust_axis_height_pixels"], [82, 1, 1, "", "adjust_xlabel_space"], [82, 1, 1, "", "adjust_ylabel_space"], [82, 1, 1, "", "adjustmap"], [82, 1, 1, "", "animate_complex"], [82, 1, 1, "", "arrow_between"], [82, 1, 1, "", "axvbands"], [82, 1, 1, "", "axvstripe"], [82, 1, 1, "", "barcompare"], [82, 1, 1, "", "base_legend"], [82, 1, 1, "", "border_width"], [82, 1, 1, "", "boxplot_significance"], [82, 1, 1, "", "broken_step"], [82, 1, 1, "", "ceil_to_precision"], [82, 1, 1, "", "centers"], [82, 1, 1, "", "clean_y_range"], [82, 1, 1, "", "cleartop"], [82, 1, 1, "", "colored_boxplot"], [82, 1, 1, "", "complex_axis"], [82, 1, 1, "", "covariance_crosshairs"], [82, 1, 1, "", "darken"], [82, 1, 1, "", "domask"], [82, 1, 1, "", "draw_circle"], [82, 1, 1, "", "expand_axis_x"], [82, 1, 1, "", "expand_axis_y"], [82, 1, 1, "", "expand_y_range"], [82, 1, 1, "", "figurebox"], [82, 1, 1, "", "flathist"], [82, 1, 1, "", "floor_to_precision"], [82, 1, 1, "", "force_aspect"], [82, 1, 1, "", "fsize"], [82, 1, 1, "", "fudgex"], [82, 1, 1, "", "fudgexy"], [82, 1, 1, "", "fudgey"], [82, 1, 1, "", "get_aspect"], [82, 1, 1, "", "get_ax_pixel"], [82, 1, 1, "", "get_ax_pixel_ratio"], [82, 1, 1, "", "get_ax_size"], [82, 1, 1, "", "get_bbox"], [82, 1, 1, "", "good_colorbar"], [82, 1, 1, "", "hsigbar"], [82, 1, 1, "", "inhibition_arrow"], [82, 1, 1, "", "label"], [82, 1, 1, "", "left_legend"], [82, 1, 1, "", "lighten"], [82, 1, 1, "", "match_image_aspect"], [82, 1, 1, "", "mock_legend"], [82, 1, 1, "", "more_xticks"], [82, 1, 1, "", "more_yticks"], [82, 1, 1, "", "nice_legend"], [82, 1, 1, "", "nicebp"], [82, 1, 1, "", "nicex"], [82, 1, 1, "", "nicexy"], [82, 1, 1, "", "nicey"], [82, 1, 1, "", "noaxis"], [82, 1, 1, "", "noclip"], [82, 1, 1, "", "nolabels"], [82, 1, 1, "", "notick"], [82, 1, 1, "", "nox"], [82, 1, 1, "", "noxlabels"], [82, 1, 1, "", "noxyaxes"], [82, 1, 1, "", "noy"], [82, 1, 1, "", "noylabels"], [82, 1, 1, "", "nudge_axis_baseline"], [82, 1, 1, "", "nudge_axis_left"], [82, 1, 1, "", "nudge_axis_x"], [82, 1, 1, "", "nudge_axis_y"], [82, 1, 1, "", "nudge_axis_y_pixels"], [82, 1, 1, "", "pixels_to_xfigureunits"], [82, 1, 1, "", "pixels_to_xunits"], [82, 1, 1, "", "pixels_to_yfigureunits"], [82, 1, 1, "", "pixels_to_yunits"], [82, 1, 1, "", "plotCWT"], [82, 1, 1, "", "plotWTPhase"], [82, 1, 1, "", "plotWTPhaseFig"], [82, 1, 1, "", "plot_complex"], [82, 1, 1, "", "plotz"], [82, 1, 1, "", "positivex"], [82, 1, 1, "", "positivexy"], [82, 1, 1, "", "positivey"], [82, 1, 1, "", "px2x"], [82, 1, 1, "", "px2y"], [82, 1, 1, "", "rangeover"], [82, 1, 1, "", "rangeto"], [82, 1, 1, "", "restore_limits"], [82, 1, 1, "", "right_legend"], [82, 1, 1, "", "rightaxis"], [82, 1, 1, "", "righty"], [82, 1, 1, "", "round_to_precision"], [82, 1, 1, "", "save_limits"], [82, 1, 1, "", "savefigure"], [82, 1, 1, "", "shade_edges"], [82, 1, 1, "", "shellmean"], [82, 1, 1, "", "shellplot"], [82, 1, 1, "", "sigbar"], [82, 1, 1, "", "simple_arrow"], [82, 1, 1, "", "simpleaxis"], [82, 1, 1, "", "simpleraxis"], [82, 1, 1, "", "simplerright"], [82, 1, 1, "", "splitz"], [82, 1, 1, "", "stderrplot"], [82, 1, 1, "", "subfigurelabel"], [82, 1, 1, "", "trendline"], [82, 1, 1, "", "unit_crosshairs"], [82, 1, 1, "", "unitaxes"], [82, 1, 1, "", "unitx"], [82, 1, 1, "", "unity"], [82, 1, 1, "", "widths_to_centers"], [82, 1, 1, "", "widths_to_edges"], [82, 1, 1, "", "wtpshow"], [82, 1, 1, "", "xbartext"], [82, 1, 1, "", "xfigureunits_to_pixels"], [82, 1, 1, "", "xin"], [82, 1, 1, "", "xscalebar"], [82, 1, 1, "", "xticklen"], [82, 1, 1, "", "xtickpad"], [82, 1, 1, "", "xunits_to_pixels"], [82, 1, 1, "", "xylim"], [82, 1, 1, "", "ybartext"], [82, 1, 1, "", "yfigureunits_to_pixels"], [82, 1, 1, "", "yin"], [82, 1, 1, "", "yscalebar"], [82, 1, 1, "", "yticklen"], [82, 1, 1, "", "ytickpad"], [82, 1, 1, "", "yunits_to_pixels"], [82, 1, 1, "", "zerohline"], [82, 1, 1, "", "zerovline"], [82, 1, 1, "", "zoombox"]], "neurotools.graphics.plot.HandlerSquare": [[82, 3, 1, "", "create_artists"]], "neurotools.graphics.pygame": [[83, 1, 1, "", "draw_array"], [83, 1, 1, "", "enable_vsync"], [83, 1, 1, "", "start"]], "neurotools.jobs": [[87, 0, 0, "-", "cache"], [88, 0, 0, "-", "closure"], [89, 0, 0, "-", "filenames"], [90, 0, 0, "-", "initialize_system_cache"], [91, 0, 0, "-", "ndecorator"], [92, 0, 0, "-", "parallel"]], "neurotools.jobs.cache": [[87, 1, 1, "", "base64hash"], [87, 1, 1, "", "base64hash2byte"], [87, 1, 1, "", "disk_cacher"], [87, 1, 1, "", "file_string_to_signature"], [87, 1, 1, "", "function_hash_no_subroutines"], [87, 1, 1, "", "function_hash_with_subroutines"], [87, 1, 1, "", "function_signature"], [87, 1, 1, "", "get_cache_path"], [87, 1, 1, "", "get_source"], [87, 1, 1, "", "hierarchical_cacher"], [87, 1, 1, "", "human_decode"], [87, 1, 1, "", "human_encode"], [87, 1, 1, "", "locate_cached"], [87, 1, 1, "", "read_cache_entry"], [87, 1, 1, "", "signature_to_file_string"], [87, 1, 1, "", "validate_for_matfile"], [87, 1, 1, "", "validate_for_numpy"]], "neurotools.jobs.closure": [[88, 1, 1, "", "csv"], [88, 1, 1, "", "get_subroutines"], [88, 1, 1, "", "inspect_function_closure"], [88, 1, 1, "", "is_immutable"], [88, 1, 1, "", "is_probably_safe"], [88, 1, 1, "", "verify_function_closure"]], "neurotools.jobs.filenames": [[89, 1, 1, "", "check_filename"], [89, 1, 1, "", "is_dangerous_filename"], [89, 1, 1, "", "validate_argument_signature"]], "neurotools.jobs.initialize_system_cache": [[90, 1, 1, "", "cache_test"], [90, 1, 1, "", "du"], [90, 1, 1, "", "initialize_caches"], [90, 1, 1, "", "launch_cache_synchronizers"], [90, 1, 1, "", "purge_ram_cache"], [90, 1, 1, "", "purge_ssd_cache"], [90, 1, 1, "", "reset_ramdisk"]], "neurotools.jobs.ndecorator": [[91, 1, 1, "", "argument_signature"], [91, 1, 1, "", "clear_memoized"], [91, 1, 1, "", "listit"], [91, 1, 1, "", "memoize"], [91, 1, 1, "", "print_signature"], [91, 1, 1, "", "sanitize"], [91, 1, 1, "", "summarize_function"], [91, 1, 1, "", "timed"], [91, 1, 1, "", "tupleit"], [91, 1, 1, "", "unwrap"]], "neurotools.jobs.parallel": [[92, 1, 1, "", "close_pool"], [92, 1, 1, "", "eval_from_cached"], [92, 1, 1, "", "function_fingerprint"], [92, 1, 1, "", "parallel_cached_wrapper"], [92, 1, 1, "", "parallel_error_handling"], [92, 1, 1, "", "parallel_indirect_wrapper"], [92, 1, 1, "", "pararraymap"], [92, 1, 1, "", "parimap"], [92, 1, 1, "", "parmap"], [92, 1, 1, "", "parmap_dict"], [92, 1, 1, "", "reset_pool"]], "neurotools.linalg": [[94, 0, 0, "-", "arguments"], [95, 0, 0, "-", "matrix"], [96, 0, 0, "-", "operators"]], "neurotools.linalg.arguments": [[94, 1, 1, "", "ascolumn"], [94, 1, 1, "", "asrow"], [94, 1, 1, "", "assertcolumn"], [94, 1, 1, "", "assertfinite"], [94, 1, 1, "", "assertfinitereal"], [94, 1, 1, "", "assertreal"], [94, 1, 1, "", "assertrow"], [94, 1, 1, "", "assertshape"], [94, 1, 1, "", "assertsquare"], [94, 1, 1, "", "assertvector"], [94, 1, 1, "", "assquare"], [94, 1, 1, "", "asvector"], [94, 1, 1, "", "iscolumn"], [94, 1, 1, "", "isrow"], [94, 1, 1, "", "issquare"], [94, 1, 1, "", "scalar"]], "neurotools.linalg.matrix": [[95, 1, 1, "", "Ldistance"], [95, 1, 1, "", "Llasso"], [95, 1, 1, "", "abserr"], [95, 1, 1, "", "autopredict"], [95, 1, 1, "", "cartesian_product"], [95, 1, 1, "", "check_covmat"], [95, 1, 1, "", "check_covmat_fast"], [95, 1, 1, "", "check_finite_real"], [95, 1, 1, "", "cholupdate"], [95, 1, 1, "", "cholupdate_eye"], [95, 1, 1, "", "cinv"], [95, 1, 1, "", "column"], [95, 1, 1, "", "csolve"], [95, 1, 1, "", "errmx"], [95, 1, 1, "", "kronsum"], [95, 1, 1, "", "laplace_kernel"], [95, 1, 1, "", "ldiv"], [95, 1, 1, "", "logdet"], [95, 1, 1, "", "match_covariance"], [95, 1, 1, "", "maxeig"], [95, 1, 1, "", "nearPDHigham"], [95, 1, 1, "", "nearPSDRebonatoJackel"], [95, 1, 1, "", "normedcovariance"], [95, 1, 1, "", "psd_eig"], [95, 1, 1, "", "qf"], [95, 1, 1, "", "rcond"], [95, 1, 1, "", "rdiv"], [95, 1, 1, "", "real_eig"], [95, 1, 1, "", "reglstsq"], [95, 1, 1, "", "rmatrix"], [95, 1, 1, "", "row"], [95, 1, 1, "", "rsolt"], [95, 1, 1, "", "rsolve"], [95, 1, 1, "", "selector_matrix"], [95, 1, 1, "", "solt"], [95, 1, 1, "", "top_v"], [95, 1, 1, "", "tril_elements"], [95, 1, 1, "", "triu_elements"], [95, 1, 1, "", "wheremax"], [95, 1, 1, "", "wheremin"]], "neurotools.linalg.operators": [[96, 1, 1, "", "adjacency1D"], [96, 1, 1, "", "adjacency2D"], [96, 1, 1, "", "adjacency2D_circular"], [96, 1, 1, "", "adjacency2d_rotational"], [96, 1, 1, "", "circular1DblurOperator"], [96, 1, 1, "", "cosine_kernel"], [96, 1, 1, "", "covfrom"], [96, 1, 1, "", "delta"], [96, 1, 1, "", "differentiator"], [96, 1, 1, "", "diffuseFT1D"], [96, 1, 1, "", "flatcov"], [96, 1, 1, "", "gaussian1DblurOperator"], [96, 1, 1, "", "gaussian2DblurOperator"], [96, 1, 1, "", "integrator"], [96, 1, 1, "", "laplacian1D"], [96, 1, 1, "", "laplacian1D_circular"], [96, 1, 1, "", "laplacian2D"], [96, 1, 1, "", "laplacianFT1D"], [96, 1, 1, "", "log_cosine_basis"], [96, 1, 1, "", "make_cosine_basis"], [96, 1, 1, "", "oucov"], [96, 1, 1, "", "separable_guassian_blur"], [96, 1, 1, "", "wienerFT1D"]], "neurotools.nlab": [[107, 1, 1, "", "beta"], [107, 1, 1, "", "binomial"], [107, 1, 1, "", "chisquare"], [107, 1, 1, "", "choice"], [107, 1, 1, "", "dirichlet"], [107, 1, 1, "", "exponential"], [107, 1, 1, "", "f"], [107, 1, 1, "", "gamma"], [107, 1, 1, "", "geometric"], [107, 1, 1, "", "get_state"], [107, 1, 1, "", "gumbel"], [107, 1, 1, "", "hypergeometric"], [107, 1, 1, "", "laplace"], [107, 1, 1, "", "logistic"], [107, 1, 1, "", "lognormal"], [107, 1, 1, "", "logseries"], [107, 1, 1, "", "multinomial"], [107, 1, 1, "", "multivariate_normal"], [107, 1, 1, "", "negative_binomial"], [107, 1, 1, "", "noncentral_chisquare"], [107, 1, 1, "", "noncentral_f"], [107, 1, 1, "", "normal"], [107, 1, 1, "", "pareto"], [107, 1, 1, "", "permutation"], [107, 1, 1, "", "poisson"], [107, 1, 1, "", "power"], [107, 1, 1, "", "rand"], [107, 1, 1, "", "randint"], [107, 1, 1, "", "randn"], [107, 1, 1, "", "random"], [107, 1, 1, "", "random_integers"], [107, 1, 1, "", "random_sample"], [107, 1, 1, "", "rayleigh"], [107, 1, 1, "", "seed"], [107, 1, 1, "", "set_state"], [107, 1, 1, "", "shuffle"], [107, 1, 1, "", "standard_cauchy"], [107, 1, 1, "", "standard_exponential"], [107, 1, 1, "", "standard_gamma"], [107, 1, 1, "", "standard_normal"], [107, 1, 1, "", "standard_t"], [107, 1, 1, "", "triangular"], [107, 1, 1, "", "uniform"], [107, 1, 1, "", "vonmises"], [107, 1, 1, "", "wald"], [107, 1, 1, "", "weibull"], [107, 1, 1, "", "zipf"]], "neurotools.obsolete": [[109, 0, 0, "-", "encoding"], [112, 0, 0, "-", "gpu"], [130, 0, 0, "-", "models"], [134, 0, 0, "-", "rbm"]], "neurotools.obsolete.gpu": [[117, 0, 0, "-", "cpu"]], "neurotools.obsolete.gpu.cpu": [[118, 0, 0, "-", "util"]], "neurotools.obsolete.gpu.cpu.util": [[118, 1, 1, "", "cmap"], [118, 1, 1, "", "compose"], [118, 1, 1, "", "corr"], [118, 1, 1, "", "cov"], [118, 1, 1, "", "cut"], [118, 1, 1, "", "document"], [118, 1, 1, "", "dot"], [118, 1, 1, "", "elem"], [118, 1, 1, "", "fancy"], [118, 1, 1, "", "flat"], [118, 1, 1, "", "idivup"], [118, 1, 1, "", "ldif"], [118, 1, 1, "", "ldif2"], [118, 1, 1, "", "ldiv"], [118, 1, 1, "", "ldiv2"], [118, 1, 1, "", "length"], [118, 1, 1, "", "lmul"], [118, 1, 1, "", "lmul2"], [118, 1, 1, "", "lpow"], [118, 1, 1, "", "lpow2"], [118, 1, 1, "", "lsum"], [118, 1, 1, "", "lsum2"], [118, 1, 1, "", "mdif"], [118, 1, 1, "", "mdiv"], [118, 1, 1, "", "mean"], [118, 1, 1, "", "mmap"], [118, 1, 1, "", "mmean"], [118, 1, 1, "", "mmul"], [118, 1, 1, "", "mpow"], [118, 1, 1, "", "mstd"], [118, 1, 1, "", "msum"], [118, 1, 1, "", "mu"], [118, 1, 1, "", "mvar"], [118, 1, 1, "", "norm"], [118, 1, 1, "", "rnorm"], [118, 1, 1, "", "scale"], [118, 1, 1, "", "sem"], [118, 1, 1, "", "shift"], [118, 1, 1, "", "sigma"], [118, 1, 1, "", "sstd"], [118, 1, 1, "", "std"], [118, 1, 1, "", "svar"], [118, 1, 1, "", "var"]], "neurotools.obsolete.models": [[132, 0, 0, "-", "lif"]], "neurotools.obsolete.models.lif": [[132, 1, 1, "", "euler_integrate_LIF"], [132, 1, 1, "", "exponential_integrate_LIF"], [132, 1, 1, "", "exponential_moving_average"]], "neurotools.obsolete.rbm": [[138, 0, 0, "-", "rbm_utils"]], "neurotools.obsolete.rbm.rbm_utils": [[139, 0, 0, "-", "rbm"]], "neurotools.obsolete.rbm.rbm_utils.rbm": [[139, 1, 1, "", "LoadRBM"], [139, 2, 1, "", "RBM"]], "neurotools.obsolete.rbm.rbm_utils.rbm.RBM": [[139, 3, 1, "", "free_energy"], [139, 3, 1, "", "get_cost_updates"], [139, 3, 1, "", "get_pseudo_likelihood_cost"], [139, 3, 1, "", "get_reconstruction_cost"], [139, 3, 1, "", "gibbs_hvh"], [139, 3, 1, "", "gibbs_vhv"], [139, 3, 1, "", "mean_h_given_v"], [139, 3, 1, "", "propdown"], [139, 3, 1, "", "propup"], [139, 3, 1, "", "sample"], [139, 3, 1, "", "sample_h_given_v"], [139, 3, 1, "", "sample_v_given_h"], [139, 3, 1, "", "savenp"], [139, 3, 1, "", "train"], [139, 3, 1, "", "vis_energy"]], "neurotools.signal": [[142, 1, 1, "", "amp"], [142, 1, 1, "", "ang"], [142, 1, 1, "", "arenear"], [142, 1, 1, "", "aresafe"], [142, 1, 1, "", "autocorrelation"], [142, 1, 1, "", "band_stop_line_noise_removal"], [142, 1, 1, "", "bandpass_filter"], [142, 1, 1, "", "box_filter"], [142, 1, 1, "", "circular_cosine_basis"], [142, 1, 1, "", "circular_gaussian_smooth"], [142, 1, 1, "", "circular_gaussian_smooth_2D"], [142, 1, 1, "", "complex_to_nan"], [144, 0, 0, "-", "conv"], [142, 1, 1, "", "deltaovermean"], [142, 1, 1, "", "drop_nonfinite"], [142, 1, 1, "", "estimate_padding"], [142, 1, 1, "", "fdiff"], [142, 1, 1, "", "fftacorr1d"], [142, 1, 1, "", "fftsta"], [142, 1, 1, "", "fm_mod"], [142, 1, 1, "", "fudge_derivative"], [142, 1, 1, "", "gaussian_kernel"], [142, 1, 1, "", "gaussian_smooth"], [142, 1, 1, "", "gaussianize"], [142, 1, 1, "", "geometric_window"], [142, 1, 1, "", "get_edges"], [142, 1, 1, "", "get_snips"], [142, 1, 1, "", "get_triggered_stats"], [142, 1, 1, "", "highpass_filter"], [142, 1, 1, "", "ifreq"], [142, 1, 1, "", "interpmax1d"], [142, 1, 1, "", "interpolate_NaN"], [142, 1, 1, "", "interpolate_NaN_quadratic"], [142, 1, 1, "", "invert_uniformize"], [142, 1, 1, "", "killSpikes"], [142, 1, 1, "", "linear_cosine_basis"], [142, 1, 1, "", "linfilter"], [142, 1, 1, "", "local_maxima"], [142, 1, 1, "", "local_minima"], [142, 1, 1, "", "local_peak_within"], [142, 1, 1, "", "lowpass_filter"], [142, 1, 1, "", "make_lagged"], [142, 1, 1, "", "make_rebroadcast_slice"], [142, 1, 1, "", "mean_block"], [142, 1, 1, "", "median_block"], [142, 1, 1, "", "median_filter"], [146, 0, 0, "-", "morlet"], [148, 0, 0, "-", "multitaper"], [142, 1, 1, "", "ndargmax"], [142, 1, 1, "", "nice_interp"], [142, 1, 1, "", "nonnegative_bandpass_filter"], [142, 1, 1, "", "pad_signal"], [142, 1, 1, "", "padin"], [142, 1, 1, "", "padout"], [142, 1, 1, "", "pdiff"], [142, 1, 1, "", "peak_within"], [142, 1, 1, "", "percentile_filter"], [142, 1, 1, "", "pghilbert"], [142, 1, 1, "", "phase_randomize"], [142, 1, 1, "", "phase_randomize_from_amplitudes"], [142, 1, 1, "", "phase_rotate"], [142, 1, 1, "", "pieces"], [149, 0, 0, "-", "ppc"], [142, 1, 1, "", "randband"], [142, 1, 1, "", "remove_gaps"], [142, 1, 1, "", "remove_short"], [142, 1, 1, "", "rewrap"], [151, 0, 0, "-", "savitskygolay"], [152, 0, 0, "-", "sde"], [142, 1, 1, "", "set_edges"], [142, 1, 1, "", "sign_preserving_amplitude_demodulate"], [142, 1, 1, "", "spaced_derivative"], [142, 1, 1, "", "span"], [142, 1, 1, "", "split_into_groups"], [142, 1, 1, "", "stats_block"], [142, 1, 1, "", "take_axis"], [142, 1, 1, "", "take_axis_slice"], [142, 1, 1, "", "topercentiles"], [142, 1, 1, "", "triggered_average"], [142, 1, 1, "", "uniformize"], [142, 1, 1, "", "unit_length"], [142, 1, 1, "", "unitscale"], [142, 1, 1, "", "unwrap"], [142, 1, 1, "", "upsample"], [142, 1, 1, "", "var_block"], [142, 1, 1, "", "variance_filter"], [142, 1, 1, "", "virtual_reference_line_noise_removal"], [142, 1, 1, "", "zeromean"], [142, 1, 1, "", "zgrid"], [142, 1, 1, "", "zscore"]], "neurotools.signal.conv": [[144, 1, 1, "", "convolve2dct"], [144, 1, 1, "", "gausskern1d"], [144, 1, 1, "", "gausskern2d"], [144, 1, 1, "", "mirror2d"], [144, 1, 1, "", "reflect2D"], [144, 1, 1, "", "reflect2D_1"], [144, 1, 1, "", "separable2d"]], "neurotools.signal.morlet": [[146, 1, 1, "", "fft_cwt"], [146, 1, 1, "", "fft_cwt_transposed"], [146, 1, 1, "", "fft_cwt_transposed_logspaced"], [146, 1, 1, "", "logfreqs"], [146, 1, 1, "", "normalized_morlet"], [146, 1, 1, "", "population_synchrony_spectrum"], [146, 1, 1, "", "prepare_wavelet_fft_basis"], [146, 1, 1, "", "prepare_wavelet_fft_basis_logspace"]], "neurotools.signal.multitaper": [[148, 1, 1, "", "dpss_cached"], [148, 1, 1, "", "multitaper_population_eigencoherence"], [148, 1, 1, "", "multitaper_spectrum"], [148, 1, 1, "", "multitaper_squared_spectrum"], [148, 1, 1, "", "sliding_multitaper_spectrum"]], "neurotools.signal.ppc": [[149, 1, 1, "", "discard_spikes_closer_than_delta"], [149, 1, 1, "", "estimate_bias_in_uncorrected_ppc"], [149, 1, 1, "", "fftppc"], [149, 1, 1, "", "fftppc_biased"], [149, 1, 1, "", "fftppc_biased_multitaper"], [149, 1, 1, "", "fftppc_multitaper"], [149, 1, 1, "", "pairwise_phase_consistancy"], [149, 1, 1, "", "phase_randomize"], [149, 1, 1, "", "phase_randomized_bias_correction"], [149, 1, 1, "", "ppc_chance_level"], [149, 1, 1, "", "ppc_phase_randomize_chance_level_sample"]], "neurotools.signal.savitskygolay": [[151, 1, 1, "", "SGKern"], [151, 1, 1, "", "SGKernA"], [151, 1, 1, "", "SGKernJ"], [151, 1, 1, "", "SGKernV"], [151, 1, 1, "", "SGOrd"], [151, 1, 1, "", "SGaccelerate"], [151, 1, 1, "", "SGdifferentiate"], [151, 1, 1, "", "SGfilt"], [151, 1, 1, "", "SGfiltA"], [151, 1, 1, "", "SGfiltJ"], [151, 1, 1, "", "SGfiltV"], [151, 1, 1, "", "SGjerk"], [151, 1, 1, "", "SGsmooth"]], "neurotools.signal.sde": [[152, 1, 1, "", "sample_ou_process"], [152, 1, 1, "", "sample_wiener_process"]], "neurotools.spatial": [[155, 0, 0, "-", "array"], [154, 1, 1, "", "brute_force_local_2d_maxima"], [156, 0, 0, "-", "dct"], [157, 0, 0, "-", "distance"], [158, 0, 0, "-", "fftzeros"], [160, 0, 0, "-", "kernels"], [162, 0, 0, "-", "phase"], [163, 0, 0, "-", "points"], [165, 0, 0, "-", "spiking"], [166, 0, 0, "-", "triangulation"]], "neurotools.spatial.array": [[155, 1, 1, "", "array_average_amplitude"], [155, 1, 1, "", "array_count_centers"], [155, 1, 1, "", "array_count_critical"], [155, 1, 1, "", "array_kuramoto"], [155, 1, 1, "", "array_kuramoto_pgd"], [155, 1, 1, "", "array_kuramoto_pgd_standard_deviation"], [155, 1, 1, "", "array_kuramoto_standard_deviation"], [155, 1, 1, "", "array_phase_gradient"], [155, 1, 1, "", "array_phasegradient_local"], [155, 1, 1, "", "array_phasegradient_magnitude_cv"], [155, 1, 1, "", "array_phasegradient_magnitude_sigma"], [155, 1, 1, "", "array_phasegradient_pgd_threshold"], [155, 1, 1, "", "array_phasegradient_planar"], [155, 1, 1, "", "array_speed_local"], [155, 1, 1, "", "array_speed_pgd_threshold"], [155, 1, 1, "", "array_synchrony"], [155, 1, 1, "", "array_synchrony_pgd"], [155, 1, 1, "", "array_synchrony_pgd_standard_deviation"], [155, 1, 1, "", "array_synchrony_standard_deviation"], [155, 1, 1, "", "array_wavelength_local"], [155, 1, 1, "", "array_wavelength_local_pgd_threshold"], [155, 1, 1, "", "array_wavelength_pgd_threshold"], [155, 1, 1, "", "array_wavelength_planar"], [155, 1, 1, "", "pack_array_data"], [155, 1, 1, "", "trim_array"], [155, 1, 1, "", "trim_array_as_if"]], "neurotools.spatial.dct": [[156, 1, 1, "", "dct_cut"], [156, 1, 1, "", "dct_cut_antialias"], [156, 1, 1, "", "dct_cut_downsampled"], [156, 1, 1, "", "dct_upsample"], [156, 1, 1, "", "dct_upsample_notrim"], [156, 1, 1, "", "get_mask"], [156, 1, 1, "", "get_mask_antialiased"], [156, 1, 1, "", "iterated_upsample"], [156, 1, 1, "", "outer_complex"]], "neurotools.spatial.distance": [[157, 1, 1, "", "distance_angular_deviation"], [157, 1, 1, "", "get_average_synchrony_length_constant_parallel"], [157, 1, 1, "", "get_averaged_angular_distance"], [157, 1, 1, "", "get_length_constant_trial"], [157, 1, 1, "", "get_pair_distance"], [157, 1, 1, "", "synchrony_length_constant_areas_summary"]], "neurotools.spatial.fftzeros": [[158, 1, 1, "", "coalesce"], [158, 1, 1, "", "coalesce_points"], [158, 1, 1, "", "cut_array_data"], [158, 1, 1, "", "dPhidx"], [158, 1, 1, "", "dPhidy"], [158, 1, 1, "", "find_critical_points"], [158, 1, 1, "", "find_critical_potential_points"], [158, 1, 1, "", "get_critical_spectra"], [158, 1, 1, "", "get_phase_gradient_as_complex"], [158, 1, 1, "", "getp"], [158, 1, 1, "", "getpeaks2d"], [158, 1, 1, "", "grad"], [158, 1, 1, "", "mirror2D"], [158, 1, 1, "", "plot_critical_points"], [158, 1, 1, "", "plot_critical_spectra"], [158, 1, 1, "", "plot_phase_direction"], [158, 1, 1, "", "plot_phase_gradient"], [158, 1, 1, "", "quickgrad"]], "neurotools.spatial.kernels": [[160, 1, 1, "", "absorbing_gaussian"], [160, 1, 1, "", "absorbing_laplacian"], [160, 1, 1, "", "continuum_kernel"], [160, 1, 1, "", "cosine_kernel"], [160, 1, 1, "", "diffusion_basis"], [160, 1, 1, "", "exponential_basis"], [160, 1, 1, "", "gaussian_2D_kernel"], [160, 1, 1, "", "iterative_orthogonalize_basis"], [160, 1, 1, "", "laplace_kernel"], [160, 1, 1, "", "laplacian"], [160, 1, 1, "", "log_cosine_basis"], [160, 1, 1, "", "log_spline_basis"], [160, 1, 1, "", "magickernel"], [160, 1, 1, "", "magicsharp"], [160, 1, 1, "", "make_cosine_basis"]], "neurotools.spatial.phase": [[162, 1, 1, "", "analytic_signal_coherence"], [162, 1, 1, "", "population_average_amplitude"], [162, 1, 1, "", "population_kuramoto"], [162, 1, 1, "", "population_median_frequency"], [162, 1, 1, "", "population_median_phase_velocity"], [162, 1, 1, "", "population_normalized_sliding_signal_coherence"], [162, 1, 1, "", "population_phase_coherence"], [162, 1, 1, "", "population_phase_relative_sliding_kuramoto"], [162, 1, 1, "", "population_polar_std"], [162, 1, 1, "", "population_signal_amplitude_dispersion"], [162, 1, 1, "", "population_signal_amplitude_precision"], [162, 1, 1, "", "population_signal_amplitude_std"], [162, 1, 1, "", "population_signal_concentration"], [162, 1, 1, "", "population_signal_description"], [162, 1, 1, "", "population_signal_dispersion"], [162, 1, 1, "", "population_signal_phase_dispersion"], [162, 1, 1, "", "population_signal_phase_precision"], [162, 1, 1, "", "population_signal_phase_std"], [162, 1, 1, "", "population_signal_precision"], [162, 1, 1, "", "population_sliding_signal_coherence"], [162, 1, 1, "", "population_synchrony"], [162, 1, 1, "", "population_synchrony_linear"], [162, 1, 1, "", "sliding_population_signal_coherence"]], "neurotools.spatial.points": [[163, 1, 1, "", "c2p"], [163, 1, 1, "", "closest"], [163, 1, 1, "", "p2c"], [163, 1, 1, "", "pair_neighbors"], [163, 1, 1, "", "paired_distances"], [163, 1, 1, "", "to_xypoint"]], "neurotools.spatial.spiking": [[165, 1, 1, "", "interp_bin"]], "neurotools.spatial.triangulation": [[166, 1, 1, "", "coalesce"], [166, 1, 1, "", "edgesNearby"], [166, 1, 1, "", "mergeNearby"], [166, 1, 1, "", "plot_edges"], [166, 1, 1, "", "plot_triangles"], [166, 1, 1, "", "trianglesToEdges"], [166, 1, 1, "", "uniquerow"], [166, 1, 1, "", "z2xy"]], "neurotools.spikes": [[169, 0, 0, "-", "spikes"], [170, 0, 0, "-", "waveform"]], "neurotools.spikes.spikes": [[169, 1, 1, "", "bin_spike_times"], [169, 1, 1, "", "bin_spikes_raster"], [169, 1, 1, "", "cut_spikes"], [169, 1, 1, "", "pack_cross_correlation_matrix"], [169, 1, 1, "", "pp_xcorr"], [169, 1, 1, "", "times_to_raster"], [169, 1, 1, "", "txcorr"]], "neurotools.spikes.waveform": [[170, 1, 1, "", "getFWHM"], [170, 1, 1, "", "getPHP"], [170, 1, 1, "", "getPT"], [170, 1, 1, "", "getPTHW"], [170, 1, 1, "", "getPVT"], [170, 1, 1, "", "getWAHP"], [170, 1, 1, "", "is_thin"], [170, 1, 1, "", "is_thin_pvt"], [170, 1, 1, "", "minmax"], [170, 1, 1, "", "normalized_waveform"], [170, 1, 1, "", "process"], [170, 1, 1, "", "realign"]], "neurotools.stats": [[171, 1, 1, "", "add_constant"], [171, 1, 1, "", "block_shuffle"], [175, 0, 0, "-", "convolutional"], [171, 1, 1, "", "covariance"], [171, 1, 1, "", "crossvalidated_least_squares"], [176, 0, 0, "-", "density"], [171, 2, 1, "", "description"], [177, 0, 0, "-", "distributions"], [179, 0, 0, "-", "fast_kde"], [188, 0, 0, "-", "gaussian"], [189, 0, 0, "-", "glm"], [171, 1, 1, "", "glmfit"], [191, 0, 0, "-", "grid_search"], [193, 0, 0, "-", "hmm"], [194, 0, 0, "-", "information"], [198, 0, 0, "-", "mcint"], [199, 0, 0, "-", "minimize"], [200, 0, 0, "-", "mixtures"], [201, 0, 0, "-", "modefind"], [171, 1, 1, "", "nrmse"], [171, 1, 1, "", "outliers"], [171, 1, 1, "", "partition_data"], [171, 1, 1, "", "partition_data_for_crossvalidation"], [171, 1, 1, "", "partition_trials_for_crossvalidation"], [171, 1, 1, "", "pca"], [171, 1, 1, "", "polar_error"], [171, 1, 1, "", "print_stats"], [203, 0, 0, "-", "pvalues"], [204, 0, 0, "-", "regressions"], [171, 1, 1, "", "reject_outliers"], [171, 1, 1, "", "trial_crossvalidated_least_squares"], [171, 1, 1, "", "weighted_avg_and_std"]], "neurotools.stats.convolutional": [[175, 1, 1, "", "autocorrelation_bayes"], [175, 1, 1, "", "blockccm"], [175, 1, 1, "", "blocksta"], [175, 1, 1, "", "ccm"], [175, 1, 1, "", "ccor"], [175, 1, 1, "", "construct_lowpass_operator"], [175, 1, 1, "", "create_spectral_model"], [175, 1, 1, "", "cspect"], [175, 1, 1, "", "cspectm"], [175, 1, 1, "", "reconstruct"], [175, 1, 1, "", "spectreconstruct"], [175, 1, 1, "", "spike_lfp_filters"], [175, 1, 1, "", "sta"]], "neurotools.stats.density": [[176, 1, 1, "", "adaptive_density_grid"], [176, 1, 1, "", "gridhist"], [176, 1, 1, "", "kdepeak"], [176, 1, 1, "", "knn_1d_density"]], "neurotools.stats.description": [[171, 3, 1, "", "short"]], "neurotools.stats.distributions": [[177, 1, 1, "", "explogpdf"], [177, 1, 1, "", "gaussian_logpdf"], [177, 1, 1, "", "gaussian_pdf"], [177, 1, 1, "", "poisson_logpdf"], [177, 1, 1, "", "poisson_pdf"], [177, 1, 1, "", "sample_categorical"]], "neurotools.stats.fast_kde": [[179, 1, 1, "", "fast_kde"], [179, 1, 1, "", "image_cov"]], "neurotools.stats.gaussian": [[188, 2, 1, "", "Gaussian"], [188, 1, 1, "", "MVG_DKL"], [188, 1, 1, "", "MVG_DKL_CP"], [188, 1, 1, "", "MVG_PDF"], [188, 1, 1, "", "MVG_check"], [188, 1, 1, "", "MVG_conditional"], [188, 1, 1, "", "MVG_divide"], [188, 1, 1, "", "MVG_entropy"], [188, 1, 1, "", "MVG_kalman"], [188, 1, 1, "", "MVG_kalman_P_inverseA"], [188, 1, 1, "", "MVG_kalman_joint"], [188, 1, 1, "", "MVG_kalman_joint_P"], [188, 1, 1, "", "MVG_logPDF"], [188, 1, 1, "", "MVG_multiply"], [188, 1, 1, "", "MVG_multiply_C"], [188, 1, 1, "", "MVG_projection"], [188, 1, 1, "", "MVG_sample"], [188, 1, 1, "", "gaussian_quadrature"], [188, 1, 1, "", "gaussian_quadrature_logarithmic"], [188, 1, 1, "", "randn"]], "neurotools.stats.gaussian.Gaussian": [[188, 3, 1, "", "logpdf"], [188, 4, 1, "", "m"], [188, 4, 1, "", "t"]], "neurotools.stats.glm": [[189, 1, 1, "", "GLMPenaltyBernoulli"], [189, 1, 1, "", "GLMPenaltyL2"], [189, 1, 1, "", "GLMPenaltyPoisson"], [189, 1, 1, "", "cosine_kernel"], [189, 1, 1, "", "crossvalidatedAUC"], [189, 1, 1, "", "fitGLM"], [189, 1, 1, "", "gradientglmfit"], [189, 1, 1, "", "log_cosine_basis"], [189, 1, 1, "", "make_cosine_basis"], [189, 1, 1, "", "numeric_grad"], [189, 1, 1, "", "numeric_hess"], [189, 1, 1, "", "ppglmfit"], [189, 1, 1, "", "sexp"], [189, 1, 1, "", "sigmoid"]], "neurotools.stats.grid_search": [[191, 1, 1, "", "grid_search"]], "neurotools.stats.hmm": [[193, 2, 1, "", "BernoulliObservationApproximator"], [193, 2, 1, "", "BernoulliObservationModel"], [193, 2, 1, "", "ChisquareCoxApproximator"], [193, 2, 1, "", "ChisquareCoxModel"], [193, 2, 1, "", "DiffusionGaussian"], [193, 2, 1, "", "GaussianCoxApproximator"], [193, 2, 1, "", "GaussianCoxModel"], [193, 2, 1, "", "LogGaussianCoxApproximator"], [193, 2, 1, "", "LogGaussianCoxModel"], [193, 2, 1, "", "MVGOUUpdate"], [193, 2, 1, "", "MVGUpdate"], [193, 2, 1, "", "MVGaussian"], [193, 2, 1, "", "MVLogGaussianCox"], [193, 2, 1, "", "OUGaussian"], [193, 2, 1, "", "PoissonObservationApproximator"], [193, 2, 1, "", "PoissonObservationModel"], [193, 2, 1, "", "TruncatedLogGaussianCoxApproximator"], [193, 2, 1, "", "TruncatedLogGaussianCoxModel"], [193, 2, 1, "", "TruncatedPoissonObservationApproximator"], [193, 2, 1, "", "TruncatedPoissonObservationModel"], [193, 1, 1, "", "backward_abstract"], [193, 1, 1, "", "baum_welch"], [193, 1, 1, "", "forward_abstract"], [193, 1, 1, "", "forward_backward"], [193, 1, 1, "", "forward_backward_abstract"], [193, 1, 1, "", "hasNaN"], [193, 1, 1, "", "jump"], [193, 1, 1, "", "lgcp_observation_minimizer"], [193, 1, 1, "", "log_likelihood"], [193, 1, 1, "", "poisson_baum_welch"], [193, 1, 1, "", "poisson_parameter_guess"], [193, 1, 1, "", "poisson_viterbi_state_infer"], [193, 1, 1, "", "sample"], [193, 1, 1, "", "viterbi"], [193, 1, 1, "", "viterbi_log"]], "neurotools.stats.hmm.DiffusionGaussian": [[193, 3, 1, "", "bwd"], [193, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVGOUUpdate": [[193, 3, 1, "", "bwd"], [193, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVGUpdate": [[193, 3, 1, "", "bwd"], [193, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVLogGaussianCox": [[193, 2, 1, "", "MVPoissonApproximator"]], "neurotools.stats.hmm.OUGaussian": [[193, 3, 1, "", "bwd"], [193, 3, 1, "", "fwd"]], "neurotools.stats.information": [[194, 1, 1, "", "DKL_discrete"], [194, 1, 1, "", "discrete_entropy_distribution"], [194, 1, 1, "", "discrete_entropy_samples"], [194, 1, 1, "", "poisson_entropy_nats"], [194, 1, 1, "", "regularized_discrete_entropy"]], "neurotools.stats.mcint": [[198, 1, 1, "", "monte_carlo_expectation"], [198, 1, 1, "", "monte_carlo_moments"]], "neurotools.stats.minimize": [[199, 5, 1, "", "FailureError"], [199, 1, 1, "", "minimize_retry"]], "neurotools.stats.mixtures": [[200, 1, 1, "", "two_class_poisson_mixture_model"]], "neurotools.stats.modefind": [[201, 1, 1, "", "logmode"], [201, 1, 1, "", "logmodeplot"], [201, 1, 1, "", "modefind"], [201, 1, 1, "", "peakfinder5"]], "neurotools.stats.pvalues": [[203, 1, 1, "", "benjamini_hochberg_positive_correlations"], [203, 1, 1, "", "bootstrap_compare_mean"], [203, 1, 1, "", "bootstrap_compare_median"], [203, 1, 1, "", "bootstrap_compare_statistic_two_sided"], [203, 1, 1, "", "bootstrap_compare_statistic_two_sided_parallel"], [203, 1, 1, "", "bootstrap_mean"], [203, 1, 1, "", "bootstrap_median"], [203, 1, 1, "", "bootstrap_statistic_two_sided"], [203, 1, 1, "", "correct_pvalues"], [203, 1, 1, "", "correct_pvalues_positive_dependent"]], "neurotools.stats.regressions": [[204, 1, 1, "", "damped_cosine"], [204, 1, 1, "", "exponential_decay"], [204, 1, 1, "", "gaussian_function"], [204, 1, 1, "", "half_gaussian_function"], [204, 1, 1, "", "power_law"], [204, 1, 1, "", "robust_line"], [204, 1, 1, "", "weighted_least_squares"]], "neurotools.util": [[213, 0, 0, "-", "functions"], [214, 0, 0, "-", "getfftw"], [215, 0, 0, "-", "hdfmat"], [216, 0, 0, "-", "string"], [217, 0, 0, "-", "system"], [218, 0, 0, "-", "time"], [219, 0, 0, "-", "tools"]], "neurotools.util.functions": [[213, 1, 1, "", "dsigmoid"], [213, 1, 1, "", "f"], [213, 1, 1, "", "f1"], [213, 1, 1, "", "f2"], [213, 1, 1, "", "g"], [213, 1, 1, "", "inversesigmoid"], [213, 1, 1, "", "log_factorial"], [213, 1, 1, "", "npdf"], [213, 1, 1, "", "sexp"], [213, 1, 1, "", "sigmoid"], [213, 1, 1, "", "slog"]], "neurotools.util.getfftw": [[214, 1, 1, "", "ftwthr"]], "neurotools.util.hdfmat": [[215, 1, 1, "", "getHDF"], [215, 1, 1, "", "getHDFvalue"], [215, 1, 1, "", "hdf2dict"], [215, 1, 1, "", "printmatHDF5"], [215, 1, 1, "", "recursive_printmatHDF5"]], "neurotools.util.string": [[216, 1, 1, "", "eformat"], [216, 1, 1, "", "hcat"], [216, 1, 1, "", "incolumns"], [216, 1, 1, "", "isInt"], [216, 1, 1, "", "nicetable"], [216, 1, 1, "", "percent"], [216, 1, 1, "", "shortscientific"], [216, 1, 1, "", "v2str"], [216, 1, 1, "", "v2str_long"], [216, 1, 1, "", "wordwrap"]], "neurotools.util.system": [[217, 1, 1, "", "execfile"], [217, 1, 1, "", "query_yes_no"]], "neurotools.util.time": [[218, 1, 1, "", "current_milli_time"], [218, 1, 1, "", "now"], [218, 1, 1, "", "tic"], [218, 1, 1, "", "toc"], [218, 1, 1, "", "today"], [218, 1, 1, "", "waitfor"]], "neurotools.util.tools": [[219, 1, 1, "", "aap"], [219, 1, 1, "", "amap"], [219, 1, 1, "", "arraymap"], [219, 1, 1, "", "asiterable"], [219, 1, 1, "", "c2p"], [219, 1, 1, "", "camel2underscore"], [219, 1, 1, "", "clear"], [219, 1, 1, "", "debug"], [219, 1, 1, "", "dowarn"], [219, 2, 1, "", "emitter"], [219, 1, 1, "", "ensure_dir"], [219, 1, 1, "", "exists"], [219, 1, 1, "", "ezip"], [219, 1, 1, "", "find"], [219, 1, 1, "", "find_all_extension"], [219, 1, 1, "", "getVariable"], [219, 1, 1, "", "getdict"], [219, 1, 1, "", "getsize"], [219, 1, 1, "", "globalize"], [219, 1, 1, "", "history"], [219, 1, 1, "", "invert_permutation"], [219, 1, 1, "", "lap"], [219, 1, 1, "", "lmap"], [219, 1, 1, "", "mapdict"], [219, 1, 1, "", "matlab"], [219, 1, 1, "", "metaloadmat"], [219, 1, 1, "", "nowarn"], [219, 1, 1, "", "okwarn"], [219, 1, 1, "", "oneslike"], [219, 1, 1, "", "p2c"], [219, 2, 1, "", "piper"], [219, 1, 1, "", "restoreContext"], [219, 1, 1, "", "saveContext"], [219, 1, 1, "", "setinrange"], [219, 1, 1, "", "slist"], [219, 1, 1, "", "sls"], [219, 2, 1, "", "stuff"], [219, 1, 1, "", "underscore2camel"], [219, 1, 1, "", "varexists"], [219, 1, 1, "", "wait"], [219, 1, 1, "", "warn"], [219, 1, 1, "", "zeroslike"]], "neurotools.util.tools.stuff": [[219, 3, 1, "", "add"]], "nlab": [[220, 1, 1, "", "beta"], [220, 1, 1, "", "binomial"], [220, 1, 1, "", "chisquare"], [220, 1, 1, "", "choice"], [220, 1, 1, "", "dirichlet"], [220, 1, 1, "", "exponential"], [220, 1, 1, "", "f"], [220, 1, 1, "", "gamma"], [220, 1, 1, "", "geometric"], [220, 1, 1, "", "get_state"], [220, 1, 1, "", "gumbel"], [220, 1, 1, "", "hypergeometric"], [220, 1, 1, "", "laplace"], [220, 1, 1, "", "logistic"], [220, 1, 1, "", "lognormal"], [220, 1, 1, "", "logseries"], [220, 1, 1, "", "multinomial"], [220, 1, 1, "", "multivariate_normal"], [220, 1, 1, "", "negative_binomial"], [220, 1, 1, "", "noncentral_chisquare"], [220, 1, 1, "", "noncentral_f"], [220, 1, 1, "", "normal"], [220, 1, 1, "", "pareto"], [220, 1, 1, "", "permutation"], [220, 1, 1, "", "poisson"], [220, 1, 1, "", "power"], [220, 1, 1, "", "rand"], [220, 1, 1, "", "randint"], [220, 1, 1, "", "randn"], [220, 1, 1, "", "random"], [220, 1, 1, "", "random_integers"], [220, 1, 1, "", "random_sample"], [220, 1, 1, "", "rayleigh"], [220, 1, 1, "", "seed"], [220, 1, 1, "", "set_state"], [220, 1, 1, "", "shuffle"], [220, 1, 1, "", "standard_cauchy"], [220, 1, 1, "", "standard_exponential"], [220, 1, 1, "", "standard_gamma"], [220, 1, 1, "", "standard_normal"], [220, 1, 1, "", "standard_t"], [220, 1, 1, "", "triangular"], [220, 1, 1, "", "uniform"], [220, 1, 1, "", "vonmises"], [220, 1, 1, "", "wald"], [220, 1, 1, "", "weibull"], [220, 1, 1, "", "zipf"]], "signal": [[222, 2, 1, "", "Handlers"], [222, 4, 1, "", "ItimerError"], [222, 2, 1, "", "Sigmasks"], [222, 2, 1, "", "Signals"], [222, 1, 1, "", "amp"], [222, 1, 1, "", "ang"], [222, 1, 1, "", "arenear"], [222, 1, 1, "", "aresafe"], [222, 1, 1, "", "autocorrelation"], [222, 1, 1, "", "band_stop_line_noise_removal"], [222, 1, 1, "", "bandpass_filter"], [222, 1, 1, "", "box_filter"], [222, 1, 1, "", "circular_cosine_basis"], [222, 1, 1, "", "circular_gaussian_smooth"], [222, 1, 1, "", "circular_gaussian_smooth_2D"], [222, 1, 1, "", "complex_to_nan"], [224, 0, 0, "-", "conv"], [222, 1, 1, "", "deltaovermean"], [222, 1, 1, "", "drop_nonfinite"], [222, 1, 1, "", "estimate_padding"], [222, 1, 1, "", "fdiff"], [222, 1, 1, "", "fftacorr1d"], [222, 1, 1, "", "fftsta"], [222, 1, 1, "", "fm_mod"], [222, 1, 1, "", "fudge_derivative"], [222, 1, 1, "", "gaussian_kernel"], [222, 1, 1, "", "gaussian_smooth"], [222, 1, 1, "", "gaussianize"], [222, 1, 1, "", "geometric_window"], [222, 1, 1, "", "get_edges"], [222, 1, 1, "", "get_snips"], [222, 1, 1, "", "get_triggered_stats"], [222, 1, 1, "", "getsignal"], [222, 1, 1, "", "highpass_filter"], [222, 1, 1, "", "ifreq"], [222, 1, 1, "", "interpmax1d"], [222, 1, 1, "", "interpolate_NaN"], [222, 1, 1, "", "interpolate_NaN_quadratic"], [222, 1, 1, "", "invert_uniformize"], [222, 1, 1, "", "killSpikes"], [222, 1, 1, "", "linear_cosine_basis"], [222, 1, 1, "", "linfilter"], [222, 1, 1, "", "local_maxima"], [222, 1, 1, "", "local_minima"], [222, 1, 1, "", "local_peak_within"], [222, 1, 1, "", "lowpass_filter"], [222, 1, 1, "", "make_lagged"], [222, 1, 1, "", "make_rebroadcast_slice"], [222, 1, 1, "", "mean_block"], [222, 1, 1, "", "median_block"], [222, 1, 1, "", "median_filter"], [226, 0, 0, "-", "morlet"], [228, 0, 0, "-", "multitaper"], [222, 1, 1, "", "ndargmax"], [222, 1, 1, "", "nice_interp"], [222, 1, 1, "", "nonnegative_bandpass_filter"], [222, 1, 1, "", "pad_signal"], [222, 1, 1, "", "padin"], [222, 1, 1, "", "padout"], [222, 1, 1, "", "pdiff"], [222, 1, 1, "", "peak_within"], [222, 1, 1, "", "percentile_filter"], [222, 1, 1, "", "pghilbert"], [222, 1, 1, "", "phase_randomize"], [222, 1, 1, "", "phase_randomize_from_amplitudes"], [222, 1, 1, "", "phase_rotate"], [222, 1, 1, "", "pieces"], [229, 0, 0, "-", "ppc"], [222, 1, 1, "", "pthread_sigmask"], [222, 1, 1, "", "randband"], [222, 1, 1, "", "remove_gaps"], [222, 1, 1, "", "remove_short"], [222, 1, 1, "", "rewrap"], [231, 0, 0, "-", "savitskygolay"], [222, 1, 1, "", "set_edges"], [222, 1, 1, "", "sign_preserving_amplitude_demodulate"], [232, 0, 0, "-", "signal"], [222, 1, 1, "", "sigpending"], [222, 1, 1, "", "sigwait"], [222, 1, 1, "", "spaced_derivative"], [222, 1, 1, "", "span"], [222, 1, 1, "", "split_into_groups"], [222, 1, 1, "", "stats_block"], [222, 2, 1, "", "struct_siginfo"], [222, 1, 1, "", "take_axis"], [222, 1, 1, "", "take_axis_slice"], [222, 1, 1, "", "topercentiles"], [222, 1, 1, "", "triggered_average"], [222, 1, 1, "", "uniformize"], [222, 1, 1, "", "unit_length"], [222, 1, 1, "", "unitscale"], [222, 1, 1, "", "unwrap"], [222, 1, 1, "", "upsample"], [222, 1, 1, "", "valid_signals"], [222, 1, 1, "", "var_block"], [222, 1, 1, "", "variance_filter"], [222, 1, 1, "", "virtual_reference_line_noise_removal"], [222, 1, 1, "", "zeromean"], [222, 1, 1, "", "zgrid"], [222, 1, 1, "", "zscore"]], "signal.Handlers": [[222, 4, 1, "", "SIG_DFL"], [222, 4, 1, "", "SIG_IGN"]], "signal.Sigmasks": [[222, 4, 1, "", "SIG_BLOCK"], [222, 4, 1, "", "SIG_SETMASK"], [222, 4, 1, "", "SIG_UNBLOCK"]], "signal.Signals": [[222, 4, 1, "", "SIGABRT"], [222, 4, 1, "", "SIGALRM"], [222, 4, 1, "", "SIGBUS"], [222, 4, 1, "", "SIGCHLD"], [222, 4, 1, "", "SIGCLD"], [222, 4, 1, "", "SIGCONT"], [222, 4, 1, "", "SIGFPE"], [222, 4, 1, "", "SIGHUP"], [222, 4, 1, "", "SIGILL"], [222, 4, 1, "", "SIGINT"], [222, 4, 1, "", "SIGIO"], [222, 4, 1, "", "SIGIOT"], [222, 4, 1, "", "SIGKILL"], [222, 4, 1, "", "SIGPIPE"], [222, 4, 1, "", "SIGPOLL"], [222, 4, 1, "", "SIGPROF"], [222, 4, 1, "", "SIGPWR"], [222, 4, 1, "", "SIGQUIT"], [222, 4, 1, "", "SIGRTMAX"], [222, 4, 1, "", "SIGRTMIN"], [222, 4, 1, "", "SIGSEGV"], [222, 4, 1, "", "SIGSTOP"], [222, 4, 1, "", "SIGSYS"], [222, 4, 1, "", "SIGTERM"], [222, 4, 1, "", "SIGTRAP"], [222, 4, 1, "", "SIGTSTP"], [222, 4, 1, "", "SIGTTIN"], [222, 4, 1, "", "SIGTTOU"], [222, 4, 1, "", "SIGURG"], [222, 4, 1, "", "SIGUSR1"], [222, 4, 1, "", "SIGUSR2"], [222, 4, 1, "", "SIGVTALRM"], [222, 4, 1, "", "SIGWINCH"], [222, 4, 1, "", "SIGXCPU"], [222, 4, 1, "", "SIGXFSZ"]], "signal.conv": [[224, 1, 1, "", "convolve2dct"], [224, 1, 1, "", "gausskern1d"], [224, 1, 1, "", "gausskern2d"], [224, 1, 1, "", "mirror2d"], [224, 1, 1, "", "reflect2D"], [224, 1, 1, "", "reflect2D_1"], [224, 1, 1, "", "separable2d"]], "signal.morlet": [[226, 1, 1, "", "fft_cwt"], [226, 1, 1, "", "fft_cwt_transposed"], [226, 1, 1, "", "fft_cwt_transposed_logspaced"], [226, 1, 1, "", "logfreqs"], [226, 1, 1, "", "normalized_morlet"], [226, 1, 1, "", "population_synchrony_spectrum"], [226, 1, 1, "", "prepare_wavelet_fft_basis"], [226, 1, 1, "", "prepare_wavelet_fft_basis_logspace"]], "signal.multitaper": [[228, 1, 1, "", "dpss_cached"], [228, 1, 1, "", "multitaper_population_eigencoherence"], [228, 1, 1, "", "multitaper_spectrum"], [228, 1, 1, "", "multitaper_squared_spectrum"], [228, 1, 1, "", "sliding_multitaper_spectrum"]], "signal.ppc": [[229, 1, 1, "", "discard_spikes_closer_than_delta"], [229, 1, 1, "", "estimate_bias_in_uncorrected_ppc"], [229, 1, 1, "", "fftppc"], [229, 1, 1, "", "fftppc_biased"], [229, 1, 1, "", "fftppc_biased_multitaper"], [229, 1, 1, "", "fftppc_multitaper"], [229, 1, 1, "", "pairwise_phase_consistancy"], [229, 1, 1, "", "phase_randomize"], [229, 1, 1, "", "phase_randomized_bias_correction"], [229, 1, 1, "", "ppc_chance_level"], [229, 1, 1, "", "ppc_phase_randomize_chance_level_sample"]], "signal.savitskygolay": [[231, 1, 1, "", "SGKern"], [231, 1, 1, "", "SGKernA"], [231, 1, 1, "", "SGKernJ"], [231, 1, 1, "", "SGKernV"], [231, 1, 1, "", "SGOrd"], [231, 1, 1, "", "SGaccelerate"], [231, 1, 1, "", "SGdifferentiate"], [231, 1, 1, "", "SGfilt"], [231, 1, 1, "", "SGfiltA"], [231, 1, 1, "", "SGfiltJ"], [231, 1, 1, "", "SGfiltV"], [231, 1, 1, "", "SGjerk"], [231, 1, 1, "", "SGsmooth"]], "signal.struct_siginfo": [[222, 4, 1, "", "n_fields"], [222, 4, 1, "", "n_sequence_fields"], [222, 4, 1, "", "n_unnamed_fields"], [222, 4, 1, "", "si_band"], [222, 4, 1, "", "si_code"], [222, 4, 1, "", "si_errno"], [222, 4, 1, "", "si_pid"], [222, 4, 1, "", "si_signo"], [222, 4, 1, "", "si_status"], [222, 4, 1, "", "si_uid"]], "spatial": [[234, 0, 0, "-", "array"], [233, 1, 1, "", "brute_force_local_2d_maxima"], [235, 0, 0, "-", "dct"], [236, 0, 0, "-", "distance"], [237, 0, 0, "-", "fftzeros"], [238, 0, 0, "-", "kernels"], [239, 0, 0, "-", "phase"], [241, 0, 0, "-", "spiking"], [242, 0, 0, "-", "triangulation"]], "spatial.array": [[234, 1, 1, "", "array_average_amplitude"], [234, 1, 1, "", "array_count_centers"], [234, 1, 1, "", "array_count_critical"], [234, 1, 1, "", "array_kuramoto"], [234, 1, 1, "", "array_kuramoto_pgd"], [234, 1, 1, "", "array_kuramoto_pgd_standard_deviation"], [234, 1, 1, "", "array_kuramoto_standard_deviation"], [234, 1, 1, "", "array_phase_gradient"], [234, 1, 1, "", "array_phasegradient_local"], [234, 1, 1, "", "array_phasegradient_magnitude_cv"], [234, 1, 1, "", "array_phasegradient_magnitude_sigma"], [234, 1, 1, "", "array_phasegradient_pgd_threshold"], [234, 1, 1, "", "array_phasegradient_planar"], [234, 1, 1, "", "array_speed_local"], [234, 1, 1, "", "array_speed_pgd_threshold"], [234, 1, 1, "", "array_synchrony"], [234, 1, 1, "", "array_synchrony_pgd"], [234, 1, 1, "", "array_synchrony_pgd_standard_deviation"], [234, 1, 1, "", "array_synchrony_standard_deviation"], [234, 1, 1, "", "array_wavelength_local"], [234, 1, 1, "", "array_wavelength_local_pgd_threshold"], [234, 1, 1, "", "array_wavelength_pgd_threshold"], [234, 1, 1, "", "array_wavelength_planar"], [234, 1, 1, "", "pack_array_data"], [234, 1, 1, "", "trim_array"], [234, 1, 1, "", "trim_array_as_if"]], "spatial.dct": [[235, 1, 1, "", "dct_cut"], [235, 1, 1, "", "dct_cut_antialias"], [235, 1, 1, "", "dct_cut_downsampled"], [235, 1, 1, "", "dct_upsample"], [235, 1, 1, "", "dct_upsample_notrim"], [235, 1, 1, "", "get_mask"], [235, 1, 1, "", "get_mask_antialiased"], [235, 1, 1, "", "iterated_upsample"], [235, 1, 1, "", "outer_complex"]], "spatial.distance": [[236, 1, 1, "", "distance_angular_deviation"], [236, 1, 1, "", "get_average_synchrony_length_constant_parallel"], [236, 1, 1, "", "get_averaged_angular_distance"], [236, 1, 1, "", "get_length_constant_trial"], [236, 1, 1, "", "get_pair_distance"], [236, 1, 1, "", "synchrony_length_constant_areas_summary"]], "spatial.fftzeros": [[237, 1, 1, "", "coalesce"], [237, 1, 1, "", "coalesce_points"], [237, 1, 1, "", "cut_array_data"], [237, 1, 1, "", "dPhidx"], [237, 1, 1, "", "dPhidy"], [237, 1, 1, "", "find_critical_points"], [237, 1, 1, "", "find_critical_potential_points"], [237, 1, 1, "", "get_critical_spectra"], [237, 1, 1, "", "get_phase_gradient_as_complex"], [237, 1, 1, "", "getp"], [237, 1, 1, "", "getpeaks2d"], [237, 1, 1, "", "grad"], [237, 1, 1, "", "mirror2D"], [237, 1, 1, "", "plot_critical_points"], [237, 1, 1, "", "plot_critical_spectra"], [237, 1, 1, "", "plot_phase_direction"], [237, 1, 1, "", "plot_phase_gradient"], [237, 1, 1, "", "quickgrad"]], "spatial.kernels": [[238, 1, 1, "", "absorbing_gaussian"], [238, 1, 1, "", "absorbing_laplacian"], [238, 1, 1, "", "continuum_kernel"], [238, 1, 1, "", "cosine_kernel"], [238, 1, 1, "", "diffusion_basis"], [238, 1, 1, "", "exponential_basis"], [238, 1, 1, "", "gaussian_2D_kernel"], [238, 1, 1, "", "iterative_orthogonalize_basis"], [238, 1, 1, "", "laplace_kernel"], [238, 1, 1, "", "laplacian"], [238, 1, 1, "", "log_cosine_basis"], [238, 1, 1, "", "log_spline_basis"], [238, 1, 1, "", "magickernel"], [238, 1, 1, "", "magicsharp"], [238, 1, 1, "", "make_cosine_basis"]], "spatial.phase": [[239, 1, 1, "", "analytic_signal_coherence"], [239, 1, 1, "", "population_average_amplitude"], [239, 1, 1, "", "population_kuramoto"], [239, 1, 1, "", "population_median_frequency"], [239, 1, 1, "", "population_median_phase_velocity"], [239, 1, 1, "", "population_normalized_sliding_signal_coherence"], [239, 1, 1, "", "population_phase_coherence"], [239, 1, 1, "", "population_phase_relative_sliding_kuramoto"], [239, 1, 1, "", "population_polar_std"], [239, 1, 1, "", "population_signal_amplitude_dispersion"], [239, 1, 1, "", "population_signal_amplitude_precision"], [239, 1, 1, "", "population_signal_amplitude_std"], [239, 1, 1, "", "population_signal_concentration"], [239, 1, 1, "", "population_signal_description"], [239, 1, 1, "", "population_signal_dispersion"], [239, 1, 1, "", "population_signal_phase_dispersion"], [239, 1, 1, "", "population_signal_phase_precision"], [239, 1, 1, "", "population_signal_phase_std"], [239, 1, 1, "", "population_signal_precision"], [239, 1, 1, "", "population_sliding_signal_coherence"], [239, 1, 1, "", "population_synchrony"], [239, 1, 1, "", "population_synchrony_linear"], [239, 1, 1, "", "sliding_population_signal_coherence"]], "spatial.spiking": [[241, 1, 1, "", "interp_bin"]], "spatial.triangulation": [[242, 1, 1, "", "coalesce"], [242, 1, 1, "", "edgesNearby"], [242, 1, 1, "", "mergeNearby"], [242, 1, 1, "", "plot_edges"], [242, 1, 1, "", "plot_triangles"], [242, 1, 1, "", "trianglesToEdges"], [242, 1, 1, "", "uniquerow"], [242, 1, 1, "", "z2xy"]], "spikes": [[245, 0, 0, "-", "spikes"], [246, 0, 0, "-", "waveform"]], "spikes.spikes": [[245, 1, 1, "", "bin_spike_times"], [245, 1, 1, "", "bin_spikes_raster"], [245, 1, 1, "", "cut_spikes"], [245, 1, 1, "", "pack_cross_correlation_matrix"], [245, 1, 1, "", "pp_xcorr"], [245, 1, 1, "", "times_to_raster"], [245, 1, 1, "", "txcorr"]], "spikes.waveform": [[246, 1, 1, "", "getFWHM"], [246, 1, 1, "", "getPHP"], [246, 1, 1, "", "getPT"], [246, 1, 1, "", "getPTHW"], [246, 1, 1, "", "getPVT"], [246, 1, 1, "", "getWAHP"], [246, 1, 1, "", "is_thin"], [246, 1, 1, "", "is_thin_pvt"], [246, 1, 1, "", "minmax"], [246, 1, 1, "", "normalized_waveform"], [246, 1, 1, "", "process"], [246, 1, 1, "", "realign"]], "stats": [[247, 1, 1, "", "add_constant"], [247, 1, 1, "", "block_shuffle"], [251, 0, 0, "-", "convolutional"], [247, 1, 1, "", "covariance"], [247, 1, 1, "", "crossvalidated_least_squares"], [252, 0, 0, "-", "density"], [247, 2, 1, "", "description"], [253, 0, 0, "-", "distributions"], [255, 0, 0, "-", "fast_kde"], [256, 0, 0, "-", "glm"], [247, 1, 1, "", "glmfit"], [259, 0, 0, "-", "hmm"], [260, 0, 0, "-", "information"], [264, 0, 0, "-", "mcint"], [265, 0, 0, "-", "minimize"], [266, 0, 0, "-", "mixtures"], [267, 0, 0, "-", "modefind"], [247, 1, 1, "", "nrmse"], [247, 1, 1, "", "outliers"], [247, 1, 1, "", "partition_data"], [247, 1, 1, "", "partition_data_for_crossvalidation"], [247, 1, 1, "", "partition_trials_for_crossvalidation"], [247, 1, 1, "", "pca"], [247, 1, 1, "", "polar_error"], [247, 1, 1, "", "print_stats"], [269, 0, 0, "-", "pvalues"], [270, 0, 0, "-", "regressions"], [247, 1, 1, "", "reject_outliers"], [247, 1, 1, "", "trial_crossvalidated_least_squares"], [247, 1, 1, "", "weighted_avg_and_std"]], "stats.convolutional": [[251, 1, 1, "", "autocorrelation_bayes"], [251, 1, 1, "", "blockccm"], [251, 1, 1, "", "blocksta"], [251, 1, 1, "", "ccm"], [251, 1, 1, "", "ccor"], [251, 1, 1, "", "construct_lowpass_operator"], [251, 1, 1, "", "create_spectral_model"], [251, 1, 1, "", "cspect"], [251, 1, 1, "", "cspectm"], [251, 1, 1, "", "reconstruct"], [251, 1, 1, "", "spectreconstruct"], [251, 1, 1, "", "spike_lfp_filters"], [251, 1, 1, "", "sta"]], "stats.density": [[252, 1, 1, "", "adaptive_density_grid"], [252, 1, 1, "", "gridhist"], [252, 1, 1, "", "kdepeak"], [252, 1, 1, "", "knn_1d_density"]], "stats.description": [[247, 3, 1, "", "short"]], "stats.distributions": [[253, 1, 1, "", "explogpdf"], [253, 1, 1, "", "gaussian_logpdf"], [253, 1, 1, "", "gaussian_pdf"], [253, 1, 1, "", "poisson_logpdf"], [253, 1, 1, "", "poisson_pdf"], [253, 1, 1, "", "sample_categorical"]], "stats.fast_kde": [[255, 1, 1, "", "fast_kde"], [255, 1, 1, "", "image_cov"]], "stats.glm": [[256, 1, 1, "", "GLMPenaltyBernoulli"], [256, 1, 1, "", "GLMPenaltyL2"], [256, 1, 1, "", "GLMPenaltyPoisson"], [256, 1, 1, "", "cosine_kernel"], [256, 1, 1, "", "crossvalidatedAUC"], [256, 1, 1, "", "fitGLM"], [256, 1, 1, "", "gradientglmfit"], [256, 1, 1, "", "log_cosine_basis"], [256, 1, 1, "", "make_cosine_basis"], [256, 1, 1, "", "numeric_grad"], [256, 1, 1, "", "numeric_hess"], [256, 1, 1, "", "ppglmfit"], [256, 1, 1, "", "sexp"], [256, 1, 1, "", "sigmoid"]], "stats.hmm": [[259, 2, 1, "", "BernoulliObservationApproximator"], [259, 2, 1, "", "BernoulliObservationModel"], [259, 2, 1, "", "ChisquareCoxApproximator"], [259, 2, 1, "", "ChisquareCoxModel"], [259, 2, 1, "", "DiffusionGaussian"], [259, 2, 1, "", "GaussianCoxApproximator"], [259, 2, 1, "", "GaussianCoxModel"], [259, 2, 1, "", "LogGaussianCoxApproximator"], [259, 2, 1, "", "LogGaussianCoxModel"], [259, 2, 1, "", "MVGOUUpdate"], [259, 2, 1, "", "MVGUpdate"], [259, 2, 1, "", "MVGaussian"], [259, 2, 1, "", "MVLogGaussianCox"], [259, 2, 1, "", "OUGaussian"], [259, 2, 1, "", "PoissonObservationApproximator"], [259, 2, 1, "", "PoissonObservationModel"], [259, 2, 1, "", "TruncatedLogGaussianCoxApproximator"], [259, 2, 1, "", "TruncatedLogGaussianCoxModel"], [259, 2, 1, "", "TruncatedPoissonObservationApproximator"], [259, 2, 1, "", "TruncatedPoissonObservationModel"], [259, 1, 1, "", "backward_abstract"], [259, 1, 1, "", "baum_welch"], [259, 1, 1, "", "forward_abstract"], [259, 1, 1, "", "forward_backward"], [259, 1, 1, "", "forward_backward_abstract"], [259, 1, 1, "", "hasNaN"], [259, 1, 1, "", "jump"], [259, 1, 1, "", "lgcp_observation_minimizer"], [259, 1, 1, "", "log_likelihood"], [259, 1, 1, "", "poisson_baum_welch"], [259, 1, 1, "", "poisson_parameter_guess"], [259, 1, 1, "", "poisson_viterbi_state_infer"], [259, 1, 1, "", "sample"], [259, 1, 1, "", "viterbi"], [259, 1, 1, "", "viterbi_log"]], "stats.hmm.DiffusionGaussian": [[259, 3, 1, "", "bwd"], [259, 3, 1, "", "fwd"]], "stats.hmm.MVGOUUpdate": [[259, 3, 1, "", "bwd"], [259, 3, 1, "", "fwd"]], "stats.hmm.MVGUpdate": [[259, 3, 1, "", "bwd"], [259, 3, 1, "", "fwd"]], "stats.hmm.MVLogGaussianCox": [[259, 2, 1, "", "MVPoissonApproximator"]], "stats.hmm.OUGaussian": [[259, 3, 1, "", "bwd"], [259, 3, 1, "", "fwd"]], "stats.information": [[260, 1, 1, "", "DKL_discrete"], [260, 1, 1, "", "discrete_entropy_distribution"], [260, 1, 1, "", "discrete_entropy_samples"], [260, 1, 1, "", "poisson_entropy_nats"], [260, 1, 1, "", "regularized_discrete_entropy"]], "stats.mcint": [[264, 1, 1, "", "monte_carlo_expectation"], [264, 1, 1, "", "monte_carlo_moments"]], "stats.minimize": [[265, 5, 1, "", "FailureError"], [265, 1, 1, "", "minimize_retry"]], "stats.mixtures": [[266, 1, 1, "", "two_class_poisson_mixture_model"]], "stats.modefind": [[267, 1, 1, "", "logmode"], [267, 1, 1, "", "logmodeplot"], [267, 1, 1, "", "modefind"], [267, 1, 1, "", "peakfinder5"]], "stats.pvalues": [[269, 1, 1, "", "benjamini_hochberg_positive_correlations"], [269, 1, 1, "", "bootstrap_compare_mean"], [269, 1, 1, "", "bootstrap_compare_median"], [269, 1, 1, "", "bootstrap_compare_statistic_two_sided"], [269, 1, 1, "", "bootstrap_compare_statistic_two_sided_parallel"], [269, 1, 1, "", "bootstrap_mean"], [269, 1, 1, "", "bootstrap_median"], [269, 1, 1, "", "bootstrap_statistic_two_sided"], [269, 1, 1, "", "correct_pvalues"], [269, 1, 1, "", "correct_pvalues_positive_dependent"]], "stats.regressions": [[270, 1, 1, "", "damped_cosine"], [270, 1, 1, "", "exponential_decay"], [270, 1, 1, "", "gaussian_function"], [270, 1, 1, "", "half_gaussian_function"], [270, 1, 1, "", "power_law"], [270, 1, 1, "", "robust_line"], [270, 1, 1, "", "weighted_least_squares"]], "system": [[274, 1, 1, "", "execfile"], [274, 1, 1, "", "query_yes_no"]], "tools": [[275, 1, 1, "", "aap"], [275, 1, 1, "", "amap"], [275, 1, 1, "", "arraymap"], [275, 1, 1, "", "asiterable"], [275, 1, 1, "", "c2p"], [275, 1, 1, "", "camel2underscore"], [275, 1, 1, "", "clear"], [275, 1, 1, "", "debug"], [275, 1, 1, "", "dowarn"], [275, 2, 1, "", "emitter"], [275, 1, 1, "", "ensure_dir"], [275, 1, 1, "", "exists"], [275, 1, 1, "", "ezip"], [275, 1, 1, "", "find"], [275, 1, 1, "", "find_all_extension"], [275, 1, 1, "", "getVariable"], [275, 1, 1, "", "getdict"], [275, 1, 1, "", "getsize"], [275, 1, 1, "", "globalize"], [275, 1, 1, "", "history"], [275, 1, 1, "", "invert_permutation"], [275, 1, 1, "", "lap"], [275, 1, 1, "", "lmap"], [275, 1, 1, "", "mapdict"], [275, 1, 1, "", "matlab"], [275, 1, 1, "", "metaloadmat"], [275, 1, 1, "", "nowarn"], [275, 1, 1, "", "okwarn"], [275, 1, 1, "", "oneslike"], [275, 1, 1, "", "p2c"], [275, 2, 1, "", "piper"], [275, 1, 1, "", "restoreContext"], [275, 1, 1, "", "saveContext"], [275, 1, 1, "", "setinrange"], [275, 1, 1, "", "slist"], [275, 1, 1, "", "sls"], [275, 2, 1, "", "stuff"], [275, 1, 1, "", "underscore2camel"], [275, 1, 1, "", "varexists"], [275, 1, 1, "", "wait"], [275, 1, 1, "", "warn"], [275, 1, 1, "", "zeroslike"]], "tools.stuff": [[275, 3, 1, "", "add"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"depend": [0, 51, 212], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275], "function": [1, 6, 13, 55, 60, 67, 115, 122, 213], "getfftw": [2, 56, 214], "gpu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "packag": [3, 4, 8, 10, 21, 28, 35, 39, 42, 46, 50, 52, 57, 58, 62, 64, 75, 86, 93, 97, 100, 104, 108, 109, 112, 113, 117, 119, 130, 134, 138, 142, 154, 168, 171, 211, 222, 233, 244, 247], "subpackag": [3, 27, 39, 42, 50, 57, 97, 100, 108, 112, 134], "content": [3, 4, 8, 10, 21, 28, 35, 39, 42, 46, 50, 52, 57, 58, 62, 64, 75, 86, 93, 97, 100, 104, 108, 109, 112, 113, 117, 119, 130, 134, 138, 142, 154, 168, 171, 211, 222, 233, 244, 247], "cl": [4, 5, 6, 7, 58, 59, 60, 61, 113, 114, 115, 116], "submodul": [4, 8, 10, 21, 28, 35, 39, 42, 46, 50, 52, 58, 62, 64, 75, 86, 93, 97, 100, 104, 108, 109, 113, 117, 119, 130, 134, 138, 142, 154, 168, 171, 211, 222, 233, 244, 247], "devic": [5, 12, 59, 66, 114, 121], "matrix": [7, 17, 37, 61, 71, 95, 116, 126], "cpu": [8, 9, 62, 63, 117, 118], "util": [9, 63, 118, 211, 212, 213, 214, 215, 216, 217, 218, 219], "cu": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "convolut": [11, 65, 120, 175, 251], "gpufun": [14, 68, 123], "graph": [15, 69, 124], "logic": [16, 70, 125], "plot": [18, 25, 72, 82, 127], "sequenc": [19, 73, 128], "statist": [20, 74, 129], "graphic": [21, 22, 23, 24, 25, 26, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "color": [22, 76], "imag": [23, 80], "matplotlib": [24, 81], "pygam": [26, 83], "welcom": 27, "neurotool": [27, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "": 27, "document": 27, "indic": 27, "tabl": 27, "job": [28, 29, 30, 31, 32, 33, 34, 86, 87, 88, 89, 90, 91, 92], "cach": [29, 87], "closur": [30, 88], "decor": 31, "filenam": [32, 89], "initialize_system_cach": [33, 90], "parallel": [34, 92], "linalg": [35, 36, 37, 38, 93, 94, 95, 96], "argument": [36, 94], "oper": [38, 96], "model": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 130, 131, 132], "izh": [40, 98, 131], "lif": [41, 99, 132], "rbm": [42, 43, 44, 45, 46, 47, 48, 100, 101, 102, 103, 104, 105, 106, 134, 135, 136, 137, 138, 139, 140], "rbm_helper": [44, 102, 136], "rbm_sampl": [45, 103, 137], "rbm_util": [46, 47, 48, 104, 105, 106, 138, 139, 140], "stutil": [48, 106, 140], "encod": [52, 53, 54, 109, 110, 111], "huffman": [53, 110], "naryhuffman": [54, 111], "colormap": 77, "dendron": 78, "fabio_map": 79, "ztransform_plot_help": 84, "hdfmat": [85, 215], "ndecor": 91, "nlab": [107, 220], "obsolet": [108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "opto": [133, 141, 221], "signal": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "coher": [143, 223], "conv": [144, 224], "linenois": [145, 225], "morlet": [146, 226], "morlet_coher": [147, 227], "multitap": [148, 228], "ppc": [149, 229], "reson": [150, 230], "savitskygolai": [151, 231], "sde": [152, 205, 271], "spatial": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "arrai": [155, 234], "dct": [156, 235], "distanc": [157, 236], "fftzero": [158, 237], "geometri": 159, "kernel": [160, 238], "mask": 161, "phase": [162, 239], "point": 163, "spatialpsd": [164, 240], "spike": [165, 168, 169, 170, 241, 244, 245, 246], "triangul": [166, 242], "wave_parametric_model": [167, 243], "waveform": [170, 246], "stat": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273], "glmfit": [172, 248], "gaussian": [173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 249], "circular": [174, 250], "densiti": [176, 252], "distribut": [177, 253], "entropi": [178, 254], "fast_kd": [179, 255], "glm": [189, 256], "gmm": [190, 257], "grid_search": 191, "history_basi": [192, 258], "hmm": [193, 259], "inform": [194, 260], "kent_reimann": [195, 261], "lesson": [196, 262], "matzner_bar": [197, 263], "gad_plos_2015": [197, 263], "mcint": [198, 264], "minim": [199, 265], "mixtur": [200, 266], "modefind": [201, 267], "mvg": [202, 268], "pvalu": [203, 269], "regress": [204, 270], "spatiotemporal_glm_util": [206, 272], "system": [208, 217, 274], "text": 209, "tool": [210, 219, 275], "string": 216, "time": 218}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"dependencies module": [[0, "dependencies-module"]], "functions module": [[1, "module-functions"]], "getfftw module": [[2, "module-getfftw"]], "gpu package": [[3, "gpu-package"]], "Subpackages": [[3, "subpackages"], [39, "subpackages"], [42, "subpackages"], [50, "subpackages"], [57, "subpackages"], [97, "subpackages"], [100, "subpackages"], [108, "subpackages"], [112, "subpackages"], [134, "subpackages"]], "Module contents": [[3, "module-gpu"], [4, "module-contents"], [8, "module-gpu.cpu"], [10, "module-contents"], [21, "module-graphics"], [28, "module-jobs"], [35, "module-linalg"], [39, "module-models"], [42, "module-contents"], [46, "module-contents"], [50, "module-neurotools"], [52, "module-contents"], [57, "module-contents"], [58, "module-contents"], [62, "module-contents"], [64, "module-contents"], [75, "module-neurotools.graphics"], [86, "module-neurotools.jobs"], [93, "module-neurotools.linalg"], [97, "module-contents"], [100, "module-contents"], [104, "module-contents"], [108, "module-neurotools.obsolete"], [109, "module-neurotools.obsolete.encoding"], [112, "module-neurotools.obsolete.gpu"], [113, "module-contents"], [117, "module-neurotools.obsolete.gpu.cpu"], [119, "module-contents"], [130, "module-neurotools.obsolete.models"], [134, "module-neurotools.obsolete.rbm"], [138, "module-neurotools.obsolete.rbm.rbm_utils"], [142, "module-neurotools.signal"], [154, "module-neurotools.spatial"], [168, "module-neurotools.spikes"], [171, "module-neurotools.stats"], [211, "module-neurotools.util"], [222, "module-signal"], [233, "module-spatial"], [244, "module-spikes"], [247, "module-stats"]], "gpu.cl package": [[4, "gpu-cl-package"]], "Submodules": [[4, "submodules"], [8, "submodules"], [10, "submodules"], [21, "submodules"], [28, "submodules"], [35, "submodules"], [39, "submodules"], [42, "submodules"], [46, "submodules"], [50, "submodules"], [52, "submodules"], [58, "submodules"], [62, "submodules"], [64, "submodules"], [75, "submodules"], [86, "submodules"], [93, "submodules"], [97, "submodules"], [100, "submodules"], [104, "submodules"], [108, "submodules"], [109, "submodules"], [113, "submodules"], [117, "submodules"], [119, "submodules"], [130, "submodules"], [134, "submodules"], [138, "submodules"], [142, "submodules"], [154, "submodules"], [168, "submodules"], [171, "submodules"], [211, "submodules"], [222, "submodules"], [233, "submodules"], [244, "submodules"], [247, "submodules"]], "gpu.cl.device module": [[5, "gpu-cl-device-module"]], "gpu.cl.function module": [[6, "gpu-cl-function-module"]], "gpu.cl.matrix module": [[7, "gpu-cl-matrix-module"]], "gpu.cpu package": [[8, "gpu-cpu-package"]], "gpu.cpu.util module": [[9, "module-gpu.cpu.util"]], "gpu.cu package": [[10, "gpu-cu-package"]], "gpu.cu.convolution module": [[11, "gpu-cu-convolution-module"]], "gpu.cu.device module": [[12, "gpu-cu-device-module"]], "gpu.cu.function module": [[13, "gpu-cu-function-module"]], "gpu.cu.gpufun module": [[14, "gpu-cu-gpufun-module"]], "gpu.cu.graph module": [[15, "gpu-cu-graph-module"]], "gpu.cu.logic module": [[16, "gpu-cu-logic-module"]], "gpu.cu.matrix module": [[17, "gpu-cu-matrix-module"]], "gpu.cu.plot module": [[18, "gpu-cu-plot-module"]], "gpu.cu.sequence module": [[19, "gpu-cu-sequence-module"]], "gpu.cu.statistics module": [[20, "gpu-cu-statistics-module"]], "graphics package": [[21, "graphics-package"]], "graphics.color module": [[22, "module-graphics.color"]], "graphics.image module": [[23, "module-graphics.image"]], "graphics.matplotlib module": [[24, "module-graphics.matplotlib"]], "graphics.plot module": [[25, "module-graphics.plot"]], "graphics.pygame module": [[26, "module-graphics.pygame"]], "Welcome to Neurotools\u2019s documentation!": [[27, "welcome-to-neurotools-s-documentation"]], "Indices and tables": [[27, "indices-and-tables"]], "Subpackages:": [[27, null]], "jobs package": [[28, "jobs-package"]], "jobs.cache module": [[29, "module-jobs.cache"]], "jobs.closure module": [[30, "module-jobs.closure"]], "jobs.decorator module": [[31, "jobs-decorator-module"]], "jobs.filenames module": [[32, "module-jobs.filenames"]], "jobs.initialize_system_cache module": [[33, "module-jobs.initialize_system_cache"]], "jobs.parallel module": [[34, "module-jobs.parallel"]], "linalg package": [[35, "linalg-package"]], "linalg.arguments module": [[36, "module-linalg.arguments"]], "linalg.matrix module": [[37, "module-linalg.matrix"]], "linalg.operators module": [[38, "module-linalg.operators"]], "models package": [[39, "models-package"]], "models.izh module": [[40, "models-izh-module"]], "models.lif module": [[41, "module-models.lif"]], "models.rbm package": [[42, "models-rbm-package"]], "models.rbm.rbm module": [[43, "models-rbm-rbm-module"]], "models.rbm.rbm_helper module": [[44, "models-rbm-rbm-helper-module"]], "models.rbm.rbm_sample module": [[45, "models-rbm-rbm-sample-module"]], "models.rbm.rbm_utils package": [[46, "models-rbm-rbm-utils-package"]], "models.rbm.rbm_utils.rbm module": [[47, "models-rbm-rbm-utils-rbm-module"]], "models.rbm.rbm_utils.stutils module": [[48, "models-rbm-rbm-utils-stutils-module"]], "neurotools": [[49, "neurotools"]], "neurotools package": [[50, "neurotools-package"]], "neurotools.dependencies module": [[51, "neurotools-dependencies-module"]], "neurotools.encoding package": [[52, "neurotools-encoding-package"]], "neurotools.encoding.Huffman module": [[53, "neurotools-encoding-huffman-module"]], "neurotools.encoding.NaryHuffman module": [[54, "neurotools-encoding-naryhuffman-module"]], "neurotools.functions module": [[55, "neurotools-functions-module"]], "neurotools.getfftw module": [[56, "neurotools-getfftw-module"]], "neurotools.gpu package": [[57, "neurotools-gpu-package"]], "neurotools.gpu.cl package": [[58, "neurotools-gpu-cl-package"]], "neurotools.gpu.cl.device module": [[59, "neurotools-gpu-cl-device-module"]], "neurotools.gpu.cl.function module": [[60, "neurotools-gpu-cl-function-module"]], "neurotools.gpu.cl.matrix module": [[61, "neurotools-gpu-cl-matrix-module"]], "neurotools.gpu.cpu package": [[62, "neurotools-gpu-cpu-package"]], "neurotools.gpu.cpu.util module": [[63, "neurotools-gpu-cpu-util-module"]], "neurotools.gpu.cu package": [[64, "neurotools-gpu-cu-package"]], "neurotools.gpu.cu.convolution module": [[65, "neurotools-gpu-cu-convolution-module"]], "neurotools.gpu.cu.device module": [[66, "neurotools-gpu-cu-device-module"]], "neurotools.gpu.cu.function module": [[67, "neurotools-gpu-cu-function-module"]], "neurotools.gpu.cu.gpufun module": [[68, "neurotools-gpu-cu-gpufun-module"]], "neurotools.gpu.cu.graph module": [[69, "neurotools-gpu-cu-graph-module"]], "neurotools.gpu.cu.logic module": [[70, "neurotools-gpu-cu-logic-module"]], "neurotools.gpu.cu.matrix module": [[71, "neurotools-gpu-cu-matrix-module"]], "neurotools.gpu.cu.plot module": [[72, "neurotools-gpu-cu-plot-module"]], "neurotools.gpu.cu.sequence module": [[73, "neurotools-gpu-cu-sequence-module"]], "neurotools.gpu.cu.statistics module": [[74, "neurotools-gpu-cu-statistics-module"]], "neurotools.graphics package": [[75, "neurotools-graphics-package"]], "neurotools.graphics.color module": [[76, "module-neurotools.graphics.color"]], "neurotools.graphics.colormaps module": [[77, "module-neurotools.graphics.colormaps"]], "neurotools.graphics.dendron module": [[78, "module-neurotools.graphics.dendron"]], "neurotools.graphics.fabio_maps module": [[79, "module-neurotools.graphics.fabio_maps"]], "neurotools.graphics.image module": [[80, "module-neurotools.graphics.image"]], "neurotools.graphics.matplotlib module": [[81, "module-neurotools.graphics.matplotlib"]], "neurotools.graphics.plot module": [[82, "module-neurotools.graphics.plot"]], "neurotools.graphics.pygame module": [[83, "module-neurotools.graphics.pygame"]], "neurotools.graphics.ztransform_plot_helpers module": [[84, "neurotools-graphics-ztransform-plot-helpers-module"]], "neurotools.hdfmat module": [[85, "neurotools-hdfmat-module"]], "neurotools.jobs package": [[86, "neurotools-jobs-package"]], "neurotools.jobs.cache module": [[87, "module-neurotools.jobs.cache"]], "neurotools.jobs.closure module": [[88, "module-neurotools.jobs.closure"]], "neurotools.jobs.filenames module": [[89, "module-neurotools.jobs.filenames"]], "neurotools.jobs.initialize_system_cache module": [[90, "module-neurotools.jobs.initialize_system_cache"]], "neurotools.jobs.ndecorator module": [[91, "module-neurotools.jobs.ndecorator"]], "neurotools.jobs.parallel module": [[92, "module-neurotools.jobs.parallel"]], "neurotools.linalg package": [[93, "neurotools-linalg-package"]], "neurotools.linalg.arguments module": [[94, "module-neurotools.linalg.arguments"]], "neurotools.linalg.matrix module": [[95, "module-neurotools.linalg.matrix"]], "neurotools.linalg.operators module": [[96, "module-neurotools.linalg.operators"]], "neurotools.models package": [[97, "neurotools-models-package"]], "neurotools.models.izh module": [[98, "neurotools-models-izh-module"]], "neurotools.models.lif module": [[99, "neurotools-models-lif-module"]], "neurotools.models.rbm package": [[100, "neurotools-models-rbm-package"]], "neurotools.models.rbm.rbm module": [[101, "neurotools-models-rbm-rbm-module"]], "neurotools.models.rbm.rbm_helper module": [[102, "neurotools-models-rbm-rbm-helper-module"]], "neurotools.models.rbm.rbm_sample module": [[103, "neurotools-models-rbm-rbm-sample-module"]], "neurotools.models.rbm.rbm_utils package": [[104, "neurotools-models-rbm-rbm-utils-package"]], "neurotools.models.rbm.rbm_utils.rbm module": [[105, "neurotools-models-rbm-rbm-utils-rbm-module"]], "neurotools.models.rbm.rbm_utils.stutils module": [[106, "neurotools-models-rbm-rbm-utils-stutils-module"]], "neurotools.nlab module": [[107, "module-neurotools.nlab"]], "neurotools.obsolete package": [[108, "neurotools-obsolete-package"]], "neurotools.obsolete.encoding package": [[109, "neurotools-obsolete-encoding-package"]], "neurotools.obsolete.encoding.Huffman module": [[110, "neurotools-obsolete-encoding-huffman-module"]], "neurotools.obsolete.encoding.NaryHuffman module": [[111, "neurotools-obsolete-encoding-naryhuffman-module"]], "neurotools.obsolete.gpu package": [[112, "neurotools-obsolete-gpu-package"]], "neurotools.obsolete.gpu.cl package": [[113, "neurotools-obsolete-gpu-cl-package"]], "neurotools.obsolete.gpu.cl.device module": [[114, "neurotools-obsolete-gpu-cl-device-module"]], "neurotools.obsolete.gpu.cl.function module": [[115, "neurotools-obsolete-gpu-cl-function-module"]], "neurotools.obsolete.gpu.cl.matrix module": [[116, "neurotools-obsolete-gpu-cl-matrix-module"]], "neurotools.obsolete.gpu.cpu package": [[117, "neurotools-obsolete-gpu-cpu-package"]], "neurotools.obsolete.gpu.cpu.util module": [[118, "module-neurotools.obsolete.gpu.cpu.util"]], "neurotools.obsolete.gpu.cu package": [[119, "neurotools-obsolete-gpu-cu-package"]], "neurotools.obsolete.gpu.cu.convolution module": [[120, "neurotools-obsolete-gpu-cu-convolution-module"]], "neurotools.obsolete.gpu.cu.device module": [[121, "neurotools-obsolete-gpu-cu-device-module"]], "neurotools.obsolete.gpu.cu.function module": [[122, "neurotools-obsolete-gpu-cu-function-module"]], "neurotools.obsolete.gpu.cu.gpufun module": [[123, "neurotools-obsolete-gpu-cu-gpufun-module"]], "neurotools.obsolete.gpu.cu.graph module": [[124, "neurotools-obsolete-gpu-cu-graph-module"]], "neurotools.obsolete.gpu.cu.logic module": [[125, "neurotools-obsolete-gpu-cu-logic-module"]], "neurotools.obsolete.gpu.cu.matrix module": [[126, "neurotools-obsolete-gpu-cu-matrix-module"]], "neurotools.obsolete.gpu.cu.plot module": [[127, "neurotools-obsolete-gpu-cu-plot-module"]], "neurotools.obsolete.gpu.cu.sequence module": [[128, "neurotools-obsolete-gpu-cu-sequence-module"]], "neurotools.obsolete.gpu.cu.statistics module": [[129, "neurotools-obsolete-gpu-cu-statistics-module"]], "neurotools.obsolete.models package": [[130, "neurotools-obsolete-models-package"]], "neurotools.obsolete.models.izh module": [[131, "neurotools-obsolete-models-izh-module"]], "neurotools.obsolete.models.lif module": [[132, "module-neurotools.obsolete.models.lif"]], "neurotools.obsolete.opto module": [[133, "neurotools-obsolete-opto-module"]], "neurotools.obsolete.rbm package": [[134, "neurotools-obsolete-rbm-package"]], "neurotools.obsolete.rbm.rbm module": [[135, "neurotools-obsolete-rbm-rbm-module"]], "neurotools.obsolete.rbm.rbm_helper module": [[136, "neurotools-obsolete-rbm-rbm-helper-module"]], "neurotools.obsolete.rbm.rbm_sample module": [[137, "neurotools-obsolete-rbm-rbm-sample-module"]], "neurotools.obsolete.rbm.rbm_utils package": [[138, "neurotools-obsolete-rbm-rbm-utils-package"]], "neurotools.obsolete.rbm.rbm_utils.rbm module": [[139, "module-neurotools.obsolete.rbm.rbm_utils.rbm"]], "neurotools.obsolete.rbm.rbm_utils.stutils module": [[140, "neurotools-obsolete-rbm-rbm-utils-stutils-module"]], "neurotools.opto module": [[141, "neurotools-opto-module"]], "neurotools.signal package": [[142, "neurotools-signal-package"]], "neurotools.signal.coherence module": [[143, "neurotools-signal-coherence-module"]], "neurotools.signal.conv module": [[144, "module-neurotools.signal.conv"]], "neurotools.signal.linenoise module": [[145, "neurotools-signal-linenoise-module"]], "neurotools.signal.morlet module": [[146, "module-neurotools.signal.morlet"]], "neurotools.signal.morlet_coherence module": [[147, "neurotools-signal-morlet-coherence-module"]], "neurotools.signal.multitaper module": [[148, "module-neurotools.signal.multitaper"]], "neurotools.signal.ppc module": [[149, "module-neurotools.signal.ppc"]], "neurotools.signal.resonator module": [[150, "neurotools-signal-resonator-module"]], "neurotools.signal.savitskygolay module": [[151, "module-neurotools.signal.savitskygolay"]], "neurotools.signal.sde module": [[152, "module-neurotools.signal.sde"]], "neurotools.signal.signal module": [[153, "neurotools-signal-signal-module"]], "neurotools.spatial package": [[154, "neurotools-spatial-package"]], "neurotools.spatial.array module": [[155, "module-neurotools.spatial.array"]], "neurotools.spatial.dct module": [[156, "module-neurotools.spatial.dct"]], "neurotools.spatial.distance module": [[157, "module-neurotools.spatial.distance"]], "neurotools.spatial.fftzeros module": [[158, "module-neurotools.spatial.fftzeros"]], "neurotools.spatial.geometry module": [[159, "neurotools-spatial-geometry-module"]], "neurotools.spatial.kernels module": [[160, "module-neurotools.spatial.kernels"]], "neurotools.spatial.masking module": [[161, "neurotools-spatial-masking-module"]], "neurotools.spatial.phase module": [[162, "module-neurotools.spatial.phase"]], "neurotools.spatial.points module": [[163, "module-neurotools.spatial.points"]], "neurotools.spatial.spatialPSD module": [[164, "neurotools-spatial-spatialpsd-module"]], "neurotools.spatial.spiking module": [[165, "module-neurotools.spatial.spiking"]], "neurotools.spatial.triangulation module": [[166, "module-neurotools.spatial.triangulation"]], "neurotools.spatial.wave_parametric_models module": [[167, "neurotools-spatial-wave-parametric-models-module"]], "neurotools.spikes package": [[168, "neurotools-spikes-package"]], "neurotools.spikes.spikes module": [[169, "module-neurotools.spikes.spikes"]], "neurotools.spikes.waveform module": [[170, "module-neurotools.spikes.waveform"]], "neurotools.stats package": [[171, "neurotools-stats-package"]], "neurotools.stats.GLMFit module": [[172, "neurotools-stats-glmfit-module"]], "neurotools.stats.Gaussian module": [[173, "neurotools-stats-gaussian-module"]], "neurotools.stats.circular module": [[174, "neurotools-stats-circular-module"]], "neurotools.stats.convolutional module": [[175, "module-neurotools.stats.convolutional"]], "neurotools.stats.density module": [[176, "module-neurotools.stats.density"]], "neurotools.stats.distributions module": [[177, "module-neurotools.stats.distributions"]], "neurotools.stats.entropy module": [[178, "neurotools-stats-entropy-module"]], "neurotools.stats.fast_kde module": [[179, "module-neurotools.stats.fast_kde"]], "neurotools.stats.gaussian module": [[180, "module-neurotools.stats.gaussian"], [181, "module-neurotools.stats.gaussian"], [182, "module-neurotools.stats.gaussian"], [183, "module-neurotools.stats.gaussian"], [184, "module-neurotools.stats.gaussian"], [185, "module-neurotools.stats.gaussian"], [186, "module-neurotools.stats.gaussian"], [187, "module-neurotools.stats.gaussian"], [188, "module-neurotools.stats.gaussian"]], "neurotools.stats.glm module": [[189, "module-neurotools.stats.glm"]], "neurotools.stats.gmm module": [[190, "neurotools-stats-gmm-module"]], "neurotools.stats.grid_search module": [[191, "module-neurotools.stats.grid_search"]], "neurotools.stats.history_basis module": [[192, "neurotools-stats-history-basis-module"]], "neurotools.stats.hmm module": [[193, "module-neurotools.stats.hmm"]], "neurotools.stats.information module": [[194, "module-neurotools.stats.information"]], "neurotools.stats.kent_reimann module": [[195, "neurotools-stats-kent-reimann-module"]], "neurotools.stats.lessons module": [[196, "neurotools-stats-lessons-module"]], "neurotools.stats.matzner_bar-gad_PLoS_2015 module": [[197, "neurotools-stats-matzner-bar-gad-plos-2015-module"]], "neurotools.stats.mcint module": [[198, "module-neurotools.stats.mcint"]], "neurotools.stats.minimize module": [[199, "module-neurotools.stats.minimize"]], "neurotools.stats.mixtures module": [[200, "module-neurotools.stats.mixtures"]], "neurotools.stats.modefind module": [[201, "module-neurotools.stats.modefind"]], "neurotools.stats.mvg module": [[202, "neurotools-stats-mvg-module"]], "neurotools.stats.pvalues module": [[203, "module-neurotools.stats.pvalues"]], "neurotools.stats.regressions module": [[204, "module-neurotools.stats.regressions"]], "neurotools.stats.sde module": [[205, "neurotools-stats-sde-module"]], "neurotools.stats.spatiotemporal_glm_utils module": [[206, "neurotools-stats-spatiotemporal-glm-utils-module"]], "neurotools.stats.stats module": [[207, "neurotools-stats-stats-module"]], "neurotools.system module": [[208, "neurotools-system-module"]], "neurotools.text module": [[209, "neurotools-text-module"]], "neurotools.tools module": [[210, "neurotools-tools-module"]], "neurotools.util package": [[211, "neurotools-util-package"]], "neurotools.util.dependencies module": [[212, "neurotools-util-dependencies-module"]], "neurotools.util.functions module": [[213, "module-neurotools.util.functions"]], "neurotools.util.getfftw module": [[214, "module-neurotools.util.getfftw"]], "neurotools.util.hdfmat module": [[215, "module-neurotools.util.hdfmat"]], "neurotools.util.string module": [[216, "module-neurotools.util.string"]], "neurotools.util.system module": [[217, "module-neurotools.util.system"]], "neurotools.util.time module": [[218, "module-neurotools.util.time"]], "neurotools.util.tools module": [[219, "module-neurotools.util.tools"]], "nlab module": [[220, "module-nlab"]], "opto module": [[221, "opto-module"]], "signal package": [[222, "signal-package"]], "signal.coherence module": [[223, "signal-coherence-module"]], "signal.conv module": [[224, "module-signal.conv"]], "signal.linenoise module": [[225, "signal-linenoise-module"]], "signal.morlet module": [[226, "module-signal.morlet"]], "signal.morlet_coherence module": [[227, "signal-morlet-coherence-module"]], "signal.multitaper module": [[228, "module-signal.multitaper"]], "signal.ppc module": [[229, "module-signal.ppc"]], "signal.resonator module": [[230, "signal-resonator-module"]], "signal.savitskygolay module": [[231, "module-signal.savitskygolay"]], "signal.signal module": [[232, "module-signal.signal"]], "spatial package": [[233, "spatial-package"]], "spatial.array module": [[234, "module-spatial.array"]], "spatial.dct module": [[235, "module-spatial.dct"]], "spatial.distance module": [[236, "module-spatial.distance"]], "spatial.fftzeros module": [[237, "module-spatial.fftzeros"]], "spatial.kernels module": [[238, "module-spatial.kernels"]], "spatial.phase module": [[239, "module-spatial.phase"]], "spatial.spatialPSD module": [[240, "spatial-spatialpsd-module"]], "spatial.spiking module": [[241, "module-spatial.spiking"]], "spatial.triangulation module": [[242, "module-spatial.triangulation"]], "spatial.wave_parametric_models module": [[243, "spatial-wave-parametric-models-module"]], "spikes package": [[244, "spikes-package"]], "spikes.spikes module": [[245, "module-spikes.spikes"]], "spikes.waveform module": [[246, "module-spikes.waveform"]], "stats package": [[247, "stats-package"]], "stats.GLMFit module": [[248, "stats-glmfit-module"]], "stats.Gaussian module": [[249, "stats-gaussian-module"]], "stats.circular module": [[250, "stats-circular-module"]], "stats.convolutional module": [[251, "module-stats.convolutional"]], "stats.density module": [[252, "module-stats.density"]], "stats.distributions module": [[253, "module-stats.distributions"]], "stats.entropy module": [[254, "stats-entropy-module"]], "stats.fast_kde module": [[255, "module-stats.fast_kde"]], "stats.glm module": [[256, "module-stats.glm"]], "stats.gmm module": [[257, "stats-gmm-module"]], "stats.history_basis module": [[258, "stats-history-basis-module"]], "stats.hmm module": [[259, "module-stats.hmm"]], "stats.information module": [[260, "module-stats.information"]], "stats.kent_reimann module": [[261, "stats-kent-reimann-module"]], "stats.lessons module": [[262, "stats-lessons-module"]], "stats.matzner_bar-gad_PLoS_2015 module": [[263, "stats-matzner-bar-gad-plos-2015-module"]], "stats.mcint module": [[264, "module-stats.mcint"]], "stats.minimize module": [[265, "module-stats.minimize"]], "stats.mixtures module": [[266, "module-stats.mixtures"]], "stats.modefind module": [[267, "module-stats.modefind"]], "stats.mvg module": [[268, "stats-mvg-module"]], "stats.pvalues module": [[269, "module-stats.pvalues"]], "stats.regressions module": [[270, "module-stats.regressions"]], "stats.sde module": [[271, "stats-sde-module"]], "stats.spatiotemporal_glm_utils module": [[272, "stats-spatiotemporal-glm-utils-module"]], "stats.stats module": [[273, "stats-stats-module"]], "system module": [[274, "module-system"]], "tools module": [[275, "module-tools"]]}, "indexentries": {"dsigmoid() (in module functions)": [[1, "functions.dsigmoid"]], "f() (in module functions)": [[1, "functions.f"]], "f1() (in module functions)": [[1, "functions.f1"]], "f2() (in module functions)": [[1, "functions.f2"]], "functions": [[1, "module-functions"]], "g() (in module functions)": [[1, "functions.g"]], "inversesigmoid() (in module functions)": [[1, "functions.inversesigmoid"]], "log_factorial() (in module functions)": [[1, "functions.log_factorial"]], "module": [[1, "module-functions"], [2, "module-getfftw"], [3, "module-gpu"], [8, "module-gpu.cpu"], [9, "module-gpu.cpu.util"], [21, "module-graphics"], [22, "module-graphics.color"], [23, "module-graphics.image"], [24, "module-graphics.matplotlib"], [25, "module-graphics.plot"], [26, "module-graphics.pygame"], [28, "module-jobs"], [29, "module-jobs.cache"], [30, "module-jobs.closure"], [32, "module-jobs.filenames"], [33, "module-jobs.initialize_system_cache"], [34, "module-jobs.parallel"], [35, "module-linalg"], [36, "module-linalg.arguments"], [37, "module-linalg.matrix"], [38, "module-linalg.operators"], [39, "module-models"], [41, "module-models.lif"], [50, "module-neurotools"], [75, "module-neurotools.graphics"], [76, "module-neurotools.graphics.color"], [77, "module-neurotools.graphics.colormaps"], [78, "module-neurotools.graphics.dendron"], [79, "module-neurotools.graphics.fabio_maps"], [80, "module-neurotools.graphics.image"], [81, "module-neurotools.graphics.matplotlib"], [82, "module-neurotools.graphics.plot"], [83, "module-neurotools.graphics.pygame"], [86, "module-neurotools.jobs"], [87, "module-neurotools.jobs.cache"], [88, "module-neurotools.jobs.closure"], [89, "module-neurotools.jobs.filenames"], [90, "module-neurotools.jobs.initialize_system_cache"], [91, "module-neurotools.jobs.ndecorator"], [92, "module-neurotools.jobs.parallel"], [93, "module-neurotools.linalg"], [94, "module-neurotools.linalg.arguments"], [95, "module-neurotools.linalg.matrix"], [96, "module-neurotools.linalg.operators"], [107, "module-neurotools.nlab"], [108, "module-neurotools.obsolete"], [109, "module-neurotools.obsolete.encoding"], [112, "module-neurotools.obsolete.gpu"], [117, "module-neurotools.obsolete.gpu.cpu"], [118, "module-neurotools.obsolete.gpu.cpu.util"], [130, "module-neurotools.obsolete.models"], [132, "module-neurotools.obsolete.models.lif"], [134, "module-neurotools.obsolete.rbm"], [138, "module-neurotools.obsolete.rbm.rbm_utils"], [139, "module-neurotools.obsolete.rbm.rbm_utils.rbm"], [142, "module-neurotools.signal"], [144, "module-neurotools.signal.conv"], [146, "module-neurotools.signal.morlet"], [148, "module-neurotools.signal.multitaper"], [149, "module-neurotools.signal.ppc"], [151, "module-neurotools.signal.savitskygolay"], [152, "module-neurotools.signal.sde"], [154, "module-neurotools.spatial"], [155, "module-neurotools.spatial.array"], [156, "module-neurotools.spatial.dct"], [157, "module-neurotools.spatial.distance"], [158, "module-neurotools.spatial.fftzeros"], [160, "module-neurotools.spatial.kernels"], [162, "module-neurotools.spatial.phase"], [163, "module-neurotools.spatial.points"], [165, "module-neurotools.spatial.spiking"], [166, "module-neurotools.spatial.triangulation"], [168, "module-neurotools.spikes"], [169, "module-neurotools.spikes.spikes"], [170, "module-neurotools.spikes.waveform"], [171, "module-neurotools.stats"], [175, "module-neurotools.stats.convolutional"], [176, "module-neurotools.stats.density"], [177, "module-neurotools.stats.distributions"], [179, "module-neurotools.stats.fast_kde"], [180, "module-neurotools.stats.gaussian"], [181, "module-neurotools.stats.gaussian"], [182, "module-neurotools.stats.gaussian"], [183, "module-neurotools.stats.gaussian"], [184, "module-neurotools.stats.gaussian"], [185, "module-neurotools.stats.gaussian"], [186, "module-neurotools.stats.gaussian"], [187, "module-neurotools.stats.gaussian"], [188, "module-neurotools.stats.gaussian"], [189, "module-neurotools.stats.glm"], [191, "module-neurotools.stats.grid_search"], [193, "module-neurotools.stats.hmm"], [194, "module-neurotools.stats.information"], [198, "module-neurotools.stats.mcint"], [199, "module-neurotools.stats.minimize"], [200, "module-neurotools.stats.mixtures"], [201, "module-neurotools.stats.modefind"], [203, "module-neurotools.stats.pvalues"], [204, "module-neurotools.stats.regressions"], [211, "module-neurotools.util"], [213, "module-neurotools.util.functions"], [214, "module-neurotools.util.getfftw"], [215, "module-neurotools.util.hdfmat"], [216, "module-neurotools.util.string"], [217, "module-neurotools.util.system"], [218, "module-neurotools.util.time"], [219, "module-neurotools.util.tools"], [220, "module-nlab"], [222, "module-signal"], [224, "module-signal.conv"], [226, "module-signal.morlet"], [228, "module-signal.multitaper"], [229, "module-signal.ppc"], [231, "module-signal.savitskygolay"], [232, "module-signal.signal"], [233, "module-spatial"], [234, "module-spatial.array"], [235, "module-spatial.dct"], [236, "module-spatial.distance"], [237, "module-spatial.fftzeros"], [238, "module-spatial.kernels"], [239, "module-spatial.phase"], [241, "module-spatial.spiking"], [242, "module-spatial.triangulation"], [244, "module-spikes"], [245, "module-spikes.spikes"], [246, "module-spikes.waveform"], [247, "module-stats"], [251, "module-stats.convolutional"], [252, "module-stats.density"], [253, "module-stats.distributions"], [255, "module-stats.fast_kde"], [256, "module-stats.glm"], [259, "module-stats.hmm"], [260, "module-stats.information"], [264, "module-stats.mcint"], [265, "module-stats.minimize"], [266, "module-stats.mixtures"], [267, "module-stats.modefind"], [269, "module-stats.pvalues"], [270, "module-stats.regressions"], [274, "module-system"], [275, "module-tools"]], "npdf() (in module functions)": [[1, "functions.npdf"]], "sexp() (in module functions)": [[1, "functions.sexp"]], "sigmoid() (in module functions)": [[1, "functions.sigmoid"]], "slog() (in module functions)": [[1, "functions.slog"]], "ftwthr() (in module getfftw)": [[2, "getfftw.ftwthr"]], "getfftw": [[2, "module-getfftw"]], "gpu": [[3, "module-gpu"]], "gpu.cpu": [[8, "module-gpu.cpu"]], "cmap() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.cmap"]], "compose() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.compose"]], "corr() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.corr"]], "cov() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.cov"]], "cut() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.cut"]], "document() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.document"]], "dot() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.dot"]], "elem() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.elem"]], "fancy() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.fancy"]], "flat() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.flat"]], "gpu.cpu.util": [[9, "module-gpu.cpu.util"]], "idivup() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.idivup"]], "ldif() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.ldif"]], "ldif2() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.ldif2"]], "ldiv() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.ldiv"]], "ldiv2() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.ldiv2"]], "length() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.length"]], "lmul() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lmul"]], "lmul2() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lmul2"]], "lpow() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lpow"]], "lpow2() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lpow2"]], "lsum() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lsum"]], "lsum2() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lsum2"]], "mdif() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mdif"]], "mdiv() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mdiv"]], "mean() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mean"]], "mmap() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mmap"]], "mmean() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mmean"]], "mmul() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mmul"]], "mpow() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mpow"]], "mstd() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mstd"]], "msum() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.msum"]], "mu() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mu"]], "mvar() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mvar"]], "norm() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.norm"]], "rnorm() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.rnorm"]], "scale() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.scale"]], "sem() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.sem"]], "shift() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.shift"]], "sigma() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.sigma"]], "sstd() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.sstd"]], "std() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.std"]], "svar() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.svar"]], "var() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.var"]], "graphics": [[21, "module-graphics"]], "rgbtohcl() (in module graphics.color)": [[22, "graphics.color.RGBtoHCL"]], "bit16_rgb_to_tuple() (in module graphics.color)": [[22, "graphics.color.bit16_RGB_to_tuple"]], "bit16_print_color() (in module graphics.color)": [[22, "graphics.color.bit16_print_color"]], "circularly_smooth_colormap() (in module graphics.color)": [[22, "graphics.color.circularly_smooth_colormap"]], "code_to_16bit() (in module graphics.color)": [[22, "graphics.color.code_to_16bit"]], "color_boxplot() (in module graphics.color)": [[22, "graphics.color.color_boxplot"]], "complexhlarr2rgb() (in module graphics.color)": [[22, "graphics.color.complexHLArr2RGB"]], "darkhues() (in module graphics.color)": [[22, "graphics.color.darkhues"]], "enumerate_fast_colors() (in module graphics.color)": [[22, "graphics.color.enumerate_fast_colors"]], "graphics.color": [[22, "module-graphics.color"]], "hcl2rgb() (in module graphics.color)": [[22, "graphics.color.hcl2rgb"]], "hex2rgb() (in module graphics.color)": [[22, "graphics.color.hex2rgb"]], "hex_pack_bgr() (in module graphics.color)": [[22, "graphics.color.hex_pack_BGR"]], "hsv2rgb() (in module graphics.color)": [[22, "graphics.color.hsv2rgb"]], "hue_angle() (in module graphics.color)": [[22, "graphics.color.hue_angle"]], "isoluminance1() (in module graphics.color)": [[22, "graphics.color.isoluminance1"]], "isoluminance2() (in module graphics.color)": [[22, "graphics.color.isoluminance2"]], "isoluminance3() (in module graphics.color)": [[22, "graphics.color.isoluminance3"]], "isoluminance4() (in module graphics.color)": [[22, "graphics.color.isoluminance4"]], "lighthues() (in module graphics.color)": [[22, "graphics.color.lighthues"]], "lightness() (in module graphics.color)": [[22, "graphics.color.lightness"]], "luminance_matrix() (in module graphics.color)": [[22, "graphics.color.luminance_matrix"]], "match_luminance() (in module graphics.color)": [[22, "graphics.color.match_luminance"]], "medhues() (in module graphics.color)": [[22, "graphics.color.medhues"]], "radl2rgb() (in module graphics.color)": [[22, "graphics.color.radl2rgb"]], "radl2rgblut() (in module graphics.color)": [[22, "graphics.color.radl2rgbLUT"]], "rgb2hex() (in module graphics.color)": [[22, "graphics.color.rgb2hex"]], "rotate() (in module graphics.color)": [[22, "graphics.color.rotate"]], "show_complete_fast_pallet() (in module graphics.color)": [[22, "graphics.color.show_complete_fast_pallet"]], "show_complete_fastest_pallet() (in module graphics.color)": [[22, "graphics.color.show_complete_fastest_pallet"]], "show_fast_pallet() (in module graphics.color)": [[22, "graphics.color.show_fast_pallet"]], "show_hex_pallet() (in module graphics.color)": [[22, "graphics.color.show_hex_pallet"]], "tuple_to_bit16() (in module graphics.color)": [[22, "graphics.color.tuple_to_bit16"]], "tuple_to_bit24() (in module graphics.color)": [[22, "graphics.color.tuple_to_bit24"]], "graphics.image": [[23, "module-graphics.image"]], "mean_center() (in module graphics.image)": [[23, "graphics.image.mean_center"]], "median_center() (in module graphics.image)": [[23, "graphics.image.median_center"]], "unitize() (in module graphics.image)": [[23, "graphics.image.unitize"]], "visualize_derivatives() (in module graphics.image)": [[23, "graphics.image.visualize_derivatives"]], "draw_array() (in module graphics.matplotlib)": [[24, "graphics.matplotlib.draw_array"]], "graphics.matplotlib": [[24, "module-graphics.matplotlib"]], "hide_toolbar() (in module graphics.matplotlib)": [[24, "graphics.matplotlib.hide_toolbar"]], "start() (in module graphics.matplotlib)": [[24, "graphics.matplotlib.start"]], "gaussian2d_covellipse() (in module graphics.plot)": [[25, "graphics.plot.Gaussian2D_covellipse"]], "handlersquare (class in graphics.plot)": [[25, "graphics.plot.HandlerSquare"]], "addspikes() (in module graphics.plot)": [[25, "graphics.plot.addspikes"]], "adjust_axis_height_pixels() (in module graphics.plot)": [[25, "graphics.plot.adjust_axis_height_pixels"]], "adjust_xlabel_space() (in module graphics.plot)": [[25, "graphics.plot.adjust_xlabel_space"]], "adjust_ylabel_space() (in module graphics.plot)": [[25, "graphics.plot.adjust_ylabel_space"]], "adjustmap() (in module graphics.plot)": [[25, "graphics.plot.adjustmap"]], "animate_complex() (in module graphics.plot)": [[25, "graphics.plot.animate_complex"]], "arrow_between() (in module graphics.plot)": [[25, "graphics.plot.arrow_between"]], "axvbands() (in module graphics.plot)": [[25, "graphics.plot.axvbands"]], "axvstripe() (in module graphics.plot)": [[25, "graphics.plot.axvstripe"]], "barcompare() (in module graphics.plot)": [[25, "graphics.plot.barcompare"]], "base_legend() (in module graphics.plot)": [[25, "graphics.plot.base_legend"]], "border_width() (in module graphics.plot)": [[25, "graphics.plot.border_width"]], "boxplot_significance() (in module graphics.plot)": [[25, "graphics.plot.boxplot_significance"]], "broken_step() (in module graphics.plot)": [[25, "graphics.plot.broken_step"]], "ceil_to_precision() (in module graphics.plot)": [[25, "graphics.plot.ceil_to_precision"]], "centers() (in module graphics.plot)": [[25, "graphics.plot.centers"]], "clean_y_range() (in module graphics.plot)": [[25, "graphics.plot.clean_y_range"]], "cleartop() (in module graphics.plot)": [[25, "graphics.plot.cleartop"]], "colored_boxplot() (in module graphics.plot)": [[25, "graphics.plot.colored_boxplot"]], "complex_axis() (in module graphics.plot)": [[25, "graphics.plot.complex_axis"]], "covariance_crosshairs() (in module graphics.plot)": [[25, "graphics.plot.covariance_crosshairs"]], "create_artists() (graphics.plot.handlersquare method)": [[25, "graphics.plot.HandlerSquare.create_artists"]], "darken() (in module graphics.plot)": [[25, "graphics.plot.darken"]], "domask() (in module graphics.plot)": [[25, "graphics.plot.domask"]], "draw_circle() (in module graphics.plot)": [[25, "graphics.plot.draw_circle"]], "expand_axis_x() (in module graphics.plot)": [[25, "graphics.plot.expand_axis_x"]], "expand_axis_y() (in module graphics.plot)": [[25, "graphics.plot.expand_axis_y"]], "expand_y_range() (in module graphics.plot)": [[25, "graphics.plot.expand_y_range"]], "figurebox() (in module graphics.plot)": [[25, "graphics.plot.figurebox"]], "flathist() (in module graphics.plot)": [[25, "graphics.plot.flathist"]], "floor_to_precision() (in module graphics.plot)": [[25, "graphics.plot.floor_to_precision"]], "force_aspect() (in module graphics.plot)": [[25, "graphics.plot.force_aspect"]], "fsize() (in module graphics.plot)": [[25, "graphics.plot.fsize"]], "fudgex() (in module graphics.plot)": [[25, "graphics.plot.fudgex"]], "fudgexy() (in module graphics.plot)": [[25, "graphics.plot.fudgexy"]], "fudgey() (in module graphics.plot)": [[25, "graphics.plot.fudgey"]], "get_aspect() (in module graphics.plot)": [[25, "graphics.plot.get_aspect"]], "get_ax_pixel() (in module graphics.plot)": [[25, "graphics.plot.get_ax_pixel"]], "get_ax_pixel_ratio() (in module graphics.plot)": [[25, "graphics.plot.get_ax_pixel_ratio"]], "get_ax_size() (in module graphics.plot)": [[25, "graphics.plot.get_ax_size"]], "get_bbox() (in module graphics.plot)": [[25, "graphics.plot.get_bbox"]], "good_colorbar() (in module graphics.plot)": [[25, "graphics.plot.good_colorbar"]], "graphics.plot": [[25, "module-graphics.plot"]], "hsigbar() (in module graphics.plot)": [[25, "graphics.plot.hsigbar"]], "inhibition_arrow() (in module graphics.plot)": [[25, "graphics.plot.inhibition_arrow"]], "label() (in module graphics.plot)": [[25, "graphics.plot.label"]], "left_legend() (in module graphics.plot)": [[25, "graphics.plot.left_legend"]], "lighten() (in module graphics.plot)": [[25, "graphics.plot.lighten"]], "match_image_aspect() (in module graphics.plot)": [[25, "graphics.plot.match_image_aspect"]], "mock_legend() (in module graphics.plot)": [[25, "graphics.plot.mock_legend"]], "more_xticks() (in module graphics.plot)": [[25, "graphics.plot.more_xticks"]], "more_yticks() (in module graphics.plot)": [[25, "graphics.plot.more_yticks"]], "nice_legend() (in module graphics.plot)": [[25, "graphics.plot.nice_legend"]], "nicebp() (in module graphics.plot)": [[25, "graphics.plot.nicebp"]], "nicex() (in module graphics.plot)": [[25, "graphics.plot.nicex"]], "nicexy() (in module graphics.plot)": [[25, "graphics.plot.nicexy"]], "nicey() (in module graphics.plot)": [[25, "graphics.plot.nicey"]], "noaxis() (in module graphics.plot)": [[25, "graphics.plot.noaxis"]], "noclip() (in module graphics.plot)": [[25, "graphics.plot.noclip"]], "nolabels() (in module graphics.plot)": [[25, "graphics.plot.nolabels"]], "notick() (in module graphics.plot)": [[25, "graphics.plot.notick"]], "nox() (in module graphics.plot)": [[25, "graphics.plot.nox"]], "noxlabels() (in module graphics.plot)": [[25, "graphics.plot.noxlabels"]], "noxyaxes() (in module graphics.plot)": [[25, "graphics.plot.noxyaxes"]], "noy() (in module graphics.plot)": [[25, "graphics.plot.noy"]], "noylabels() (in module graphics.plot)": [[25, "graphics.plot.noylabels"]], "nudge_axis_baseline() (in module graphics.plot)": [[25, "graphics.plot.nudge_axis_baseline"]], "nudge_axis_left() (in module graphics.plot)": [[25, "graphics.plot.nudge_axis_left"]], "nudge_axis_x() (in module graphics.plot)": [[25, "graphics.plot.nudge_axis_x"]], "nudge_axis_y() (in module graphics.plot)": [[25, "graphics.plot.nudge_axis_y"]], "nudge_axis_y_pixels() (in module graphics.plot)": [[25, "graphics.plot.nudge_axis_y_pixels"]], "pixels_to_xfigureunits() (in module graphics.plot)": [[25, "graphics.plot.pixels_to_xfigureunits"]], "pixels_to_xunits() (in module graphics.plot)": [[25, "graphics.plot.pixels_to_xunits"]], "pixels_to_yfigureunits() (in module graphics.plot)": [[25, "graphics.plot.pixels_to_yfigureunits"]], "pixels_to_yunits() (in module graphics.plot)": [[25, "graphics.plot.pixels_to_yunits"]], "plotcwt() (in module graphics.plot)": [[25, "graphics.plot.plotCWT"]], "plotwtphase() (in module graphics.plot)": [[25, "graphics.plot.plotWTPhase"]], "plotwtphasefig() (in module graphics.plot)": [[25, "graphics.plot.plotWTPhaseFig"]], "plot_complex() (in module graphics.plot)": [[25, "graphics.plot.plot_complex"]], "plotz() (in module graphics.plot)": [[25, "graphics.plot.plotz"]], "positivex() (in module graphics.plot)": [[25, "graphics.plot.positivex"]], "positivexy() (in module graphics.plot)": [[25, "graphics.plot.positivexy"]], "positivey() (in module graphics.plot)": [[25, "graphics.plot.positivey"]], "px2x() (in module graphics.plot)": [[25, "graphics.plot.px2x"]], "px2y() (in module graphics.plot)": [[25, "graphics.plot.px2y"]], "rangeover() (in module graphics.plot)": [[25, "graphics.plot.rangeover"]], "rangeto() (in module graphics.plot)": [[25, "graphics.plot.rangeto"]], "restore_limits() (in module graphics.plot)": [[25, "graphics.plot.restore_limits"]], "right_legend() (in module graphics.plot)": [[25, "graphics.plot.right_legend"]], "rightaxis() (in module graphics.plot)": [[25, "graphics.plot.rightaxis"]], "righty() (in module graphics.plot)": [[25, "graphics.plot.righty"]], "round_to_precision() (in module graphics.plot)": [[25, "graphics.plot.round_to_precision"]], "save_limits() (in module graphics.plot)": [[25, "graphics.plot.save_limits"]], "savefigure() (in module graphics.plot)": [[25, "graphics.plot.savefigure"]], "shade_edges() (in module graphics.plot)": [[25, "graphics.plot.shade_edges"]], "shellmean() (in module graphics.plot)": [[25, "graphics.plot.shellmean"]], "shellplot() (in module graphics.plot)": [[25, "graphics.plot.shellplot"]], "sigbar() (in module graphics.plot)": [[25, "graphics.plot.sigbar"]], "simple_arrow() (in module graphics.plot)": [[25, "graphics.plot.simple_arrow"]], "simpleaxis() (in module graphics.plot)": [[25, "graphics.plot.simpleaxis"]], "simpleraxis() (in module graphics.plot)": [[25, "graphics.plot.simpleraxis"]], "simplerright() (in module graphics.plot)": [[25, "graphics.plot.simplerright"]], "splitz() (in module graphics.plot)": [[25, "graphics.plot.splitz"]], "stderrplot() (in module graphics.plot)": [[25, "graphics.plot.stderrplot"]], "subfigurelabel() (in module graphics.plot)": [[25, "graphics.plot.subfigurelabel"]], "trendline() (in module graphics.plot)": [[25, "graphics.plot.trendline"]], "unit_crosshairs() (in module graphics.plot)": [[25, "graphics.plot.unit_crosshairs"]], "unitaxes() (in module graphics.plot)": [[25, "graphics.plot.unitaxes"]], "unitx() (in module graphics.plot)": [[25, "graphics.plot.unitx"]], "unity() (in module graphics.plot)": [[25, "graphics.plot.unity"]], "widths_to_centers() (in module graphics.plot)": [[25, "graphics.plot.widths_to_centers"]], "widths_to_edges() (in module graphics.plot)": [[25, "graphics.plot.widths_to_edges"]], "wtpshow() (in module graphics.plot)": [[25, "graphics.plot.wtpshow"]], "xbartext() (in module graphics.plot)": [[25, "graphics.plot.xbartext"]], "xfigureunits_to_pixels() (in module graphics.plot)": [[25, "graphics.plot.xfigureunits_to_pixels"]], "xin() (in module graphics.plot)": [[25, "graphics.plot.xin"]], "xscalebar() (in module graphics.plot)": [[25, "graphics.plot.xscalebar"]], "xticklen() (in module graphics.plot)": [[25, "graphics.plot.xticklen"]], "xtickpad() (in module graphics.plot)": [[25, "graphics.plot.xtickpad"]], "xunits_to_pixels() (in module graphics.plot)": [[25, "graphics.plot.xunits_to_pixels"]], "xylim() (in module graphics.plot)": [[25, "graphics.plot.xylim"]], "ybartext() (in module graphics.plot)": [[25, "graphics.plot.ybartext"]], "yfigureunits_to_pixels() (in module graphics.plot)": [[25, "graphics.plot.yfigureunits_to_pixels"]], "yin() (in module graphics.plot)": [[25, "graphics.plot.yin"]], "yscalebar() (in module graphics.plot)": [[25, "graphics.plot.yscalebar"]], "yticklen() (in module graphics.plot)": [[25, "graphics.plot.yticklen"]], "ytickpad() (in module graphics.plot)": [[25, "graphics.plot.ytickpad"]], "yunits_to_pixels() (in module graphics.plot)": [[25, "graphics.plot.yunits_to_pixels"]], "zerohline() (in module graphics.plot)": [[25, "graphics.plot.zerohline"]], "zerovline() (in module graphics.plot)": [[25, "graphics.plot.zerovline"]], "zoombox() (in module graphics.plot)": [[25, "graphics.plot.zoombox"]], "draw_array() (in module graphics.pygame)": [[26, "graphics.pygame.draw_array"]], "enable_vsync() (in module graphics.pygame)": [[26, "graphics.pygame.enable_vsync"]], "graphics.pygame": [[26, "module-graphics.pygame"]], "start() (in module graphics.pygame)": [[26, "graphics.pygame.start"]], "jobs": [[28, "module-jobs"]], "base64hash() (in module jobs.cache)": [[29, "jobs.cache.base64hash"]], "base64hash2byte() (in module jobs.cache)": [[29, "jobs.cache.base64hash2byte"]], "disk_cacher() (in module jobs.cache)": [[29, "jobs.cache.disk_cacher"]], "file_string_to_signature() (in module jobs.cache)": [[29, "jobs.cache.file_string_to_signature"]], "function_hash_no_subroutines() (in module jobs.cache)": [[29, "jobs.cache.function_hash_no_subroutines"]], "function_hash_with_subroutines() (in module jobs.cache)": [[29, "jobs.cache.function_hash_with_subroutines"]], "function_signature() (in module jobs.cache)": [[29, "jobs.cache.function_signature"]], "get_cache_path() (in module jobs.cache)": [[29, "jobs.cache.get_cache_path"]], "get_source() (in module jobs.cache)": [[29, "jobs.cache.get_source"]], "hierarchical_cacher() (in module jobs.cache)": [[29, "jobs.cache.hierarchical_cacher"]], "human_decode() (in module jobs.cache)": [[29, "jobs.cache.human_decode"]], "human_encode() (in module jobs.cache)": [[29, "jobs.cache.human_encode"]], "jobs.cache": [[29, "module-jobs.cache"]], "locate_cached() (in module jobs.cache)": [[29, "jobs.cache.locate_cached"]], "read_cache_entry() (in module jobs.cache)": [[29, "jobs.cache.read_cache_entry"]], "signature_to_file_string() (in module jobs.cache)": [[29, "jobs.cache.signature_to_file_string"]], "validate_for_matfile() (in module jobs.cache)": [[29, "jobs.cache.validate_for_matfile"]], "validate_for_numpy() (in module jobs.cache)": [[29, "jobs.cache.validate_for_numpy"]], "csv() (in module jobs.closure)": [[30, "jobs.closure.csv"]], "get_subroutines() (in module jobs.closure)": [[30, "jobs.closure.get_subroutines"]], "inspect_function_closure() (in module jobs.closure)": [[30, "jobs.closure.inspect_function_closure"]], "is_immutable() (in module jobs.closure)": [[30, "jobs.closure.is_immutable"]], "is_probably_safe() (in module jobs.closure)": [[30, "jobs.closure.is_probably_safe"]], "jobs.closure": [[30, "module-jobs.closure"]], "verify_function_closure() (in module jobs.closure)": [[30, "jobs.closure.verify_function_closure"]], "check_filename() (in module jobs.filenames)": [[32, "jobs.filenames.check_filename"]], "is_dangerous_filename() (in module jobs.filenames)": [[32, "jobs.filenames.is_dangerous_filename"]], "jobs.filenames": [[32, "module-jobs.filenames"]], "validate_argument_signature() (in module jobs.filenames)": [[32, "jobs.filenames.validate_argument_signature"]], "cache_test() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.cache_test"]], "du() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.du"]], "initialize_caches() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.initialize_caches"]], "jobs.initialize_system_cache": [[33, "module-jobs.initialize_system_cache"]], "launch_cache_synchronizers() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.launch_cache_synchronizers"]], "purge_ram_cache() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.purge_ram_cache"]], "purge_ssd_cache() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.purge_ssd_cache"]], "reset_ramdisk() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.reset_ramdisk"]], "close_pool() (in module jobs.parallel)": [[34, "jobs.parallel.close_pool"]], "eval_from_cached() (in module jobs.parallel)": [[34, "jobs.parallel.eval_from_cached"]], "function_fingerprint() (in module jobs.parallel)": [[34, "jobs.parallel.function_fingerprint"]], "jobs.parallel": [[34, "module-jobs.parallel"]], "parallel_cached_wrapper() (in module jobs.parallel)": [[34, "jobs.parallel.parallel_cached_wrapper"]], "parallel_error_handling() (in module jobs.parallel)": [[34, "jobs.parallel.parallel_error_handling"]], "parallel_indirect_wrapper() (in module jobs.parallel)": [[34, "jobs.parallel.parallel_indirect_wrapper"]], "pararraymap() (in module jobs.parallel)": [[34, "jobs.parallel.pararraymap"]], "parimap() (in module jobs.parallel)": [[34, "jobs.parallel.parimap"]], "parmap() (in module jobs.parallel)": [[34, "jobs.parallel.parmap"]], "parmap_dict() (in module jobs.parallel)": [[34, "jobs.parallel.parmap_dict"]], "reset_pool() (in module jobs.parallel)": [[34, "jobs.parallel.reset_pool"]], "linalg": [[35, "module-linalg"]], "ascolumn() (in module linalg.arguments)": [[36, "linalg.arguments.ascolumn"]], "asrow() (in module linalg.arguments)": [[36, "linalg.arguments.asrow"]], "assertcolumn() (in module linalg.arguments)": [[36, "linalg.arguments.assertcolumn"]], "assertfinite() (in module linalg.arguments)": [[36, "linalg.arguments.assertfinite"]], "assertfinitereal() (in module linalg.arguments)": [[36, "linalg.arguments.assertfinitereal"]], "assertreal() (in module linalg.arguments)": [[36, "linalg.arguments.assertreal"]], "assertrow() (in module linalg.arguments)": [[36, "linalg.arguments.assertrow"]], "assertshape() (in module linalg.arguments)": [[36, "linalg.arguments.assertshape"]], "assertsquare() (in module linalg.arguments)": [[36, "linalg.arguments.assertsquare"]], "assertvector() (in module linalg.arguments)": [[36, "linalg.arguments.assertvector"]], "assquare() (in module linalg.arguments)": [[36, "linalg.arguments.assquare"]], "asvector() (in module linalg.arguments)": [[36, "linalg.arguments.asvector"]], "iscolumn() (in module linalg.arguments)": [[36, "linalg.arguments.iscolumn"]], "isrow() (in module linalg.arguments)": [[36, "linalg.arguments.isrow"]], "issquare() (in module linalg.arguments)": [[36, "linalg.arguments.issquare"]], "linalg.arguments": [[36, "module-linalg.arguments"]], "scalar() (in module linalg.arguments)": [[36, "linalg.arguments.scalar"]], "ldistance() (in module linalg.matrix)": [[37, "linalg.matrix.Ldistance"]], "llasso() (in module linalg.matrix)": [[37, "linalg.matrix.Llasso"]], "abserr() (in module linalg.matrix)": [[37, "linalg.matrix.abserr"]], "autopredict() (in module linalg.matrix)": [[37, "linalg.matrix.autopredict"]], "cartesian_product() (in module linalg.matrix)": [[37, "linalg.matrix.cartesian_product"]], "check_covmat() (in module linalg.matrix)": [[37, "linalg.matrix.check_covmat"]], "check_covmat_fast() (in module linalg.matrix)": [[37, "linalg.matrix.check_covmat_fast"]], "check_finite_real() (in module linalg.matrix)": [[37, "linalg.matrix.check_finite_real"]], "cholupdate() (in module linalg.matrix)": [[37, "linalg.matrix.cholupdate"]], "cholupdate_eye() (in module linalg.matrix)": [[37, "linalg.matrix.cholupdate_eye"]], "cinv() (in module linalg.matrix)": [[37, "linalg.matrix.cinv"]], "column() (in module linalg.matrix)": [[37, "linalg.matrix.column"]], "csolve() (in module linalg.matrix)": [[37, "linalg.matrix.csolve"]], "errmx() (in module linalg.matrix)": [[37, "linalg.matrix.errmx"]], "kronsum() (in module linalg.matrix)": [[37, "linalg.matrix.kronsum"]], "laplace_kernel() (in module linalg.matrix)": [[37, "linalg.matrix.laplace_kernel"]], "ldiv() (in module linalg.matrix)": [[37, "linalg.matrix.ldiv"]], "linalg.matrix": [[37, "module-linalg.matrix"]], "logdet() (in module linalg.matrix)": [[37, "linalg.matrix.logdet"]], "match_covariance() (in module linalg.matrix)": [[37, "linalg.matrix.match_covariance"]], "maxeig() (in module linalg.matrix)": [[37, "linalg.matrix.maxeig"]], "nearpdhigham() (in module linalg.matrix)": [[37, "linalg.matrix.nearPDHigham"]], "nearpsdrebonatojackel() (in module linalg.matrix)": [[37, "linalg.matrix.nearPSDRebonatoJackel"]], "normedcovariance() (in module linalg.matrix)": [[37, "linalg.matrix.normedcovariance"]], "psd_eig() (in module linalg.matrix)": [[37, "linalg.matrix.psd_eig"]], "qf() (in module linalg.matrix)": [[37, "linalg.matrix.qf"]], "rcond() (in module linalg.matrix)": [[37, "linalg.matrix.rcond"]], "rdiv() (in module linalg.matrix)": [[37, "linalg.matrix.rdiv"]], "real_eig() (in module linalg.matrix)": [[37, "linalg.matrix.real_eig"]], "reglstsq() (in module linalg.matrix)": [[37, "linalg.matrix.reglstsq"]], "rmatrix() (in module linalg.matrix)": [[37, "linalg.matrix.rmatrix"]], "row() (in module linalg.matrix)": [[37, "linalg.matrix.row"]], "rsolt() (in module linalg.matrix)": [[37, "linalg.matrix.rsolt"]], "rsolve() (in module linalg.matrix)": [[37, "linalg.matrix.rsolve"]], "selector_matrix() (in module linalg.matrix)": [[37, "linalg.matrix.selector_matrix"]], "solt() (in module linalg.matrix)": [[37, "linalg.matrix.solt"]], "top_v() (in module linalg.matrix)": [[37, "linalg.matrix.top_v"]], "tril_elements() (in module linalg.matrix)": [[37, "linalg.matrix.tril_elements"]], "triu_elements() (in module linalg.matrix)": [[37, "linalg.matrix.triu_elements"]], "wheremax() (in module linalg.matrix)": [[37, "linalg.matrix.wheremax"]], "wheremin() (in module linalg.matrix)": [[37, "linalg.matrix.wheremin"]], "adjacency1d() (in module linalg.operators)": [[38, "linalg.operators.adjacency1D"]], "adjacency2d() (in module linalg.operators)": [[38, "linalg.operators.adjacency2D"]], "adjacency2d_circular() (in module linalg.operators)": [[38, "linalg.operators.adjacency2D_circular"]], "adjacency2d_rotational() (in module linalg.operators)": [[38, "linalg.operators.adjacency2d_rotational"]], "circular1dbluroperator() (in module linalg.operators)": [[38, "linalg.operators.circular1DblurOperator"]], "cosine_kernel() (in module linalg.operators)": [[38, "linalg.operators.cosine_kernel"]], "covfrom() (in module linalg.operators)": [[38, "linalg.operators.covfrom"]], "delta() (in module linalg.operators)": [[38, "linalg.operators.delta"]], "differentiator() (in module linalg.operators)": [[38, "linalg.operators.differentiator"]], "diffuseft1d() (in module linalg.operators)": [[38, "linalg.operators.diffuseFT1D"]], "flatcov() (in module linalg.operators)": [[38, "linalg.operators.flatcov"]], "gaussian1dbluroperator() (in module linalg.operators)": [[38, "linalg.operators.gaussian1DblurOperator"]], "gaussian2dbluroperator() (in module linalg.operators)": [[38, "linalg.operators.gaussian2DblurOperator"]], "integrator() (in module linalg.operators)": [[38, "linalg.operators.integrator"]], "laplacian1d() (in module linalg.operators)": [[38, "linalg.operators.laplacian1D"]], "laplacian1d_circular() (in module linalg.operators)": [[38, "linalg.operators.laplacian1D_circular"]], "laplacian2d() (in module linalg.operators)": [[38, "linalg.operators.laplacian2D"]], "laplacianft1d() (in module linalg.operators)": [[38, "linalg.operators.laplacianFT1D"]], "linalg.operators": [[38, "module-linalg.operators"]], "log_cosine_basis() (in module linalg.operators)": [[38, "linalg.operators.log_cosine_basis"]], "make_cosine_basis() (in module linalg.operators)": [[38, "linalg.operators.make_cosine_basis"]], "oucov() (in module linalg.operators)": [[38, "linalg.operators.oucov"]], "separable_guassian_blur() (in module linalg.operators)": [[38, "linalg.operators.separable_guassian_blur"]], "wienerft1d() (in module linalg.operators)": [[38, "linalg.operators.wienerFT1D"]], "models": [[39, "module-models"]], "euler_integrate_lif() (in module models.lif)": [[41, "models.lif.euler_integrate_LIF"]], "exponential_integrate_lif() (in module models.lif)": [[41, "models.lif.exponential_integrate_LIF"]], "exponential_moving_average() (in module models.lif)": [[41, "models.lif.exponential_moving_average"]], "models.lif": [[41, "module-models.lif"]], "neurotools": [[50, "module-neurotools"]], "neurotools.graphics": [[75, "module-neurotools.graphics"]], "rgbtohcl() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.RGBtoHCL"]], "bit16_rgb_to_tuple() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.bit16_RGB_to_tuple"]], "bit16_print_color() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.bit16_print_color"]], "circularly_smooth_colormap() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.circularly_smooth_colormap"]], "code_to_16bit() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.code_to_16bit"]], "color_boxplot() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.color_boxplot"]], "complexhlarr2rgb() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.complexHLArr2RGB"]], "darkhues() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.darkhues"]], "enumerate_fast_colors() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.enumerate_fast_colors"]], "hcl2rgb() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.hcl2rgb"]], "hex2rgb() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.hex2rgb"]], "hex_pack_bgr() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.hex_pack_BGR"]], "hsv2rgb() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.hsv2rgb"]], "hue_angle() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.hue_angle"]], "isoluminance1() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.isoluminance1"]], "isoluminance2() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.isoluminance2"]], "isoluminance3() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.isoluminance3"]], "isoluminance4() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.isoluminance4"]], "lighthues() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.lighthues"]], "lightness() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.lightness"]], "luminance_matrix() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.luminance_matrix"]], "match_luminance() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.match_luminance"]], "medhues() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.medhues"]], "neurotools.graphics.color": [[76, "module-neurotools.graphics.color"]], "radl2rgb() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.radl2rgb"]], "radl2rgblut() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.radl2rgbLUT"]], "rgb2hex() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.rgb2hex"]], "rotate() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.rotate"]], "show_complete_fast_pallet() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.show_complete_fast_pallet"]], "show_complete_fastest_pallet() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.show_complete_fastest_pallet"]], "show_fast_pallet() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.show_fast_pallet"]], "show_hex_pallet() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.show_hex_pallet"]], "tuple_to_bit16() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.tuple_to_bit16"]], "tuple_to_bit24() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.tuple_to_bit24"]], "neurotools.graphics.colormaps": [[77, "module-neurotools.graphics.colormaps"]], "test_colormaps() (in module neurotools.graphics.colormaps)": [[77, "neurotools.graphics.colormaps.test_colormaps"]], "count_nodes() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.count_nodes"]], "get_depth() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.get_depth"]], "inorder_traversal() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.inorder_traversal"]], "list_like() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.list_like"]], "neurotools.graphics.dendron": [[78, "module-neurotools.graphics.dendron"]], "plot_brackets() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.plot_brackets"]], "plot_brackets_polar() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.plot_brackets_polar"]], "neurotools.graphics.fabio_maps": [[79, "module-neurotools.graphics.fabio_maps"]], "mean_center() (in module neurotools.graphics.image)": [[80, "neurotools.graphics.image.mean_center"]], "median_center() (in module neurotools.graphics.image)": [[80, "neurotools.graphics.image.median_center"]], "neurotools.graphics.image": [[80, "module-neurotools.graphics.image"]], "unitize() (in module neurotools.graphics.image)": [[80, "neurotools.graphics.image.unitize"]], "visualize_derivatives() (in module neurotools.graphics.image)": [[80, "neurotools.graphics.image.visualize_derivatives"]], "draw_array() (in module neurotools.graphics.matplotlib)": [[81, "neurotools.graphics.matplotlib.draw_array"]], "hide_toolbar() (in module neurotools.graphics.matplotlib)": [[81, "neurotools.graphics.matplotlib.hide_toolbar"]], "neurotools.graphics.matplotlib": [[81, "module-neurotools.graphics.matplotlib"]], "start() (in module neurotools.graphics.matplotlib)": [[81, "neurotools.graphics.matplotlib.start"]], "gaussian2d_covellipse() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.Gaussian2D_covellipse"]], "handlersquare (class in neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.HandlerSquare"]], "addspikes() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.addspikes"]], "adjust_axis_height_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.adjust_axis_height_pixels"]], "adjust_xlabel_space() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.adjust_xlabel_space"]], "adjust_ylabel_space() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.adjust_ylabel_space"]], "adjustmap() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.adjustmap"]], "animate_complex() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.animate_complex"]], "arrow_between() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.arrow_between"]], "axvbands() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.axvbands"]], "axvstripe() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.axvstripe"]], "barcompare() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.barcompare"]], "base_legend() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.base_legend"]], "border_width() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.border_width"]], "boxplot_significance() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.boxplot_significance"]], "broken_step() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.broken_step"]], "ceil_to_precision() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.ceil_to_precision"]], "centers() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.centers"]], "clean_y_range() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.clean_y_range"]], "cleartop() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.cleartop"]], "colored_boxplot() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.colored_boxplot"]], "complex_axis() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.complex_axis"]], "covariance_crosshairs() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.covariance_crosshairs"]], "create_artists() (neurotools.graphics.plot.handlersquare method)": [[82, "neurotools.graphics.plot.HandlerSquare.create_artists"]], "darken() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.darken"]], "domask() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.domask"]], "draw_circle() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.draw_circle"]], "expand_axis_x() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.expand_axis_x"]], "expand_axis_y() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.expand_axis_y"]], "expand_y_range() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.expand_y_range"]], "figurebox() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.figurebox"]], "flathist() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.flathist"]], "floor_to_precision() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.floor_to_precision"]], "force_aspect() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.force_aspect"]], "fsize() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.fsize"]], "fudgex() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.fudgex"]], "fudgexy() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.fudgexy"]], "fudgey() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.fudgey"]], "get_aspect() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.get_aspect"]], "get_ax_pixel() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.get_ax_pixel"]], "get_ax_pixel_ratio() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.get_ax_pixel_ratio"]], "get_ax_size() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.get_ax_size"]], "get_bbox() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.get_bbox"]], "good_colorbar() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.good_colorbar"]], "hsigbar() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.hsigbar"]], "inhibition_arrow() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.inhibition_arrow"]], "label() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.label"]], "left_legend() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.left_legend"]], "lighten() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.lighten"]], "match_image_aspect() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.match_image_aspect"]], "mock_legend() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.mock_legend"]], "more_xticks() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.more_xticks"]], "more_yticks() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.more_yticks"]], "neurotools.graphics.plot": [[82, "module-neurotools.graphics.plot"]], "nice_legend() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nice_legend"]], "nicebp() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nicebp"]], "nicex() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nicex"]], "nicexy() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nicexy"]], "nicey() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nicey"]], "noaxis() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noaxis"]], "noclip() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noclip"]], "nolabels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nolabels"]], "notick() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.notick"]], "nox() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nox"]], "noxlabels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noxlabels"]], "noxyaxes() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noxyaxes"]], "noy() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noy"]], "noylabels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noylabels"]], "nudge_axis_baseline() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nudge_axis_baseline"]], "nudge_axis_left() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nudge_axis_left"]], "nudge_axis_x() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nudge_axis_x"]], "nudge_axis_y() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nudge_axis_y"]], "nudge_axis_y_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nudge_axis_y_pixels"]], "pixels_to_xfigureunits() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.pixels_to_xfigureunits"]], "pixels_to_xunits() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.pixels_to_xunits"]], "pixels_to_yfigureunits() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.pixels_to_yfigureunits"]], "pixels_to_yunits() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.pixels_to_yunits"]], "plotcwt() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.plotCWT"]], "plotwtphase() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.plotWTPhase"]], "plotwtphasefig() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.plotWTPhaseFig"]], "plot_complex() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.plot_complex"]], "plotz() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.plotz"]], "positivex() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.positivex"]], "positivexy() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.positivexy"]], "positivey() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.positivey"]], "px2x() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.px2x"]], "px2y() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.px2y"]], "rangeover() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.rangeover"]], "rangeto() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.rangeto"]], "restore_limits() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.restore_limits"]], "right_legend() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.right_legend"]], "rightaxis() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.rightaxis"]], "righty() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.righty"]], "round_to_precision() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.round_to_precision"]], "save_limits() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.save_limits"]], "savefigure() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.savefigure"]], "shade_edges() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.shade_edges"]], "shellmean() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.shellmean"]], "shellplot() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.shellplot"]], "sigbar() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.sigbar"]], "simple_arrow() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.simple_arrow"]], "simpleaxis() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.simpleaxis"]], "simpleraxis() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.simpleraxis"]], "simplerright() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.simplerright"]], "splitz() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.splitz"]], "stderrplot() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.stderrplot"]], "subfigurelabel() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.subfigurelabel"]], "trendline() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.trendline"]], "unit_crosshairs() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.unit_crosshairs"]], "unitaxes() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.unitaxes"]], "unitx() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.unitx"]], "unity() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.unity"]], "widths_to_centers() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.widths_to_centers"]], "widths_to_edges() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.widths_to_edges"]], "wtpshow() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.wtpshow"]], "xbartext() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xbartext"]], "xfigureunits_to_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xfigureunits_to_pixels"]], "xin() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xin"]], "xscalebar() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xscalebar"]], "xticklen() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xticklen"]], "xtickpad() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xtickpad"]], "xunits_to_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xunits_to_pixels"]], "xylim() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xylim"]], "ybartext() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.ybartext"]], "yfigureunits_to_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.yfigureunits_to_pixels"]], "yin() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.yin"]], "yscalebar() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.yscalebar"]], "yticklen() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.yticklen"]], "ytickpad() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.ytickpad"]], "yunits_to_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.yunits_to_pixels"]], "zerohline() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.zerohline"]], "zerovline() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.zerovline"]], "zoombox() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.zoombox"]], "draw_array() (in module neurotools.graphics.pygame)": [[83, "neurotools.graphics.pygame.draw_array"]], "enable_vsync() (in module neurotools.graphics.pygame)": [[83, "neurotools.graphics.pygame.enable_vsync"]], "neurotools.graphics.pygame": [[83, "module-neurotools.graphics.pygame"]], "start() (in module neurotools.graphics.pygame)": [[83, "neurotools.graphics.pygame.start"]], "neurotools.jobs": [[86, "module-neurotools.jobs"]], "base64hash() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.base64hash"]], "base64hash2byte() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.base64hash2byte"]], "disk_cacher() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.disk_cacher"]], "file_string_to_signature() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.file_string_to_signature"]], "function_hash_no_subroutines() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.function_hash_no_subroutines"]], "function_hash_with_subroutines() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.function_hash_with_subroutines"]], "function_signature() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.function_signature"]], "get_cache_path() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.get_cache_path"]], "get_source() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.get_source"]], "hierarchical_cacher() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.hierarchical_cacher"]], "human_decode() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.human_decode"]], "human_encode() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.human_encode"]], "locate_cached() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.locate_cached"]], "neurotools.jobs.cache": [[87, "module-neurotools.jobs.cache"]], "read_cache_entry() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.read_cache_entry"]], "signature_to_file_string() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.signature_to_file_string"]], "validate_for_matfile() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.validate_for_matfile"]], "validate_for_numpy() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.validate_for_numpy"]], "csv() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.csv"]], "get_subroutines() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.get_subroutines"]], "inspect_function_closure() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.inspect_function_closure"]], "is_immutable() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.is_immutable"]], "is_probably_safe() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.is_probably_safe"]], "neurotools.jobs.closure": [[88, "module-neurotools.jobs.closure"]], "verify_function_closure() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.verify_function_closure"]], "check_filename() (in module neurotools.jobs.filenames)": [[89, "neurotools.jobs.filenames.check_filename"]], "is_dangerous_filename() (in module neurotools.jobs.filenames)": [[89, "neurotools.jobs.filenames.is_dangerous_filename"]], "neurotools.jobs.filenames": [[89, "module-neurotools.jobs.filenames"]], "validate_argument_signature() (in module neurotools.jobs.filenames)": [[89, "neurotools.jobs.filenames.validate_argument_signature"]], "cache_test() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.cache_test"]], "du() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.du"]], "initialize_caches() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.initialize_caches"]], "launch_cache_synchronizers() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.launch_cache_synchronizers"]], "neurotools.jobs.initialize_system_cache": [[90, "module-neurotools.jobs.initialize_system_cache"]], "purge_ram_cache() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.purge_ram_cache"]], "purge_ssd_cache() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.purge_ssd_cache"]], "reset_ramdisk() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.reset_ramdisk"]], "argument_signature() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.argument_signature"]], "clear_memoized() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.clear_memoized"]], "listit() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.listit"]], "memoize() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.memoize"]], "neurotools.jobs.ndecorator": [[91, "module-neurotools.jobs.ndecorator"]], "print_signature() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.print_signature"]], "sanitize() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.sanitize"]], "summarize_function() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.summarize_function"]], "timed() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.timed"]], "tupleit() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.tupleit"]], "unwrap() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.unwrap"]], "close_pool() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.close_pool"]], "eval_from_cached() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.eval_from_cached"]], "function_fingerprint() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.function_fingerprint"]], "neurotools.jobs.parallel": [[92, "module-neurotools.jobs.parallel"]], "parallel_cached_wrapper() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parallel_cached_wrapper"]], "parallel_error_handling() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parallel_error_handling"]], "parallel_indirect_wrapper() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parallel_indirect_wrapper"]], "pararraymap() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.pararraymap"]], "parimap() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parimap"]], "parmap() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parmap"]], "parmap_dict() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parmap_dict"]], "reset_pool() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.reset_pool"]], "neurotools.linalg": [[93, "module-neurotools.linalg"]], "ascolumn() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.ascolumn"]], "asrow() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.asrow"]], "assertcolumn() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertcolumn"]], "assertfinite() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertfinite"]], "assertfinitereal() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertfinitereal"]], "assertreal() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertreal"]], "assertrow() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertrow"]], "assertshape() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertshape"]], "assertsquare() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertsquare"]], "assertvector() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertvector"]], "assquare() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assquare"]], "asvector() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.asvector"]], "iscolumn() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.iscolumn"]], "isrow() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.isrow"]], "issquare() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.issquare"]], "neurotools.linalg.arguments": [[94, "module-neurotools.linalg.arguments"]], "scalar() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.scalar"]], "ldistance() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.Ldistance"]], "llasso() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.Llasso"]], "abserr() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.abserr"]], "autopredict() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.autopredict"]], "cartesian_product() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.cartesian_product"]], "check_covmat() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.check_covmat"]], "check_covmat_fast() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.check_covmat_fast"]], "check_finite_real() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.check_finite_real"]], "cholupdate() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.cholupdate"]], "cholupdate_eye() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.cholupdate_eye"]], "cinv() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.cinv"]], "column() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.column"]], "csolve() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.csolve"]], "errmx() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.errmx"]], "kronsum() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.kronsum"]], "laplace_kernel() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.laplace_kernel"]], "ldiv() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.ldiv"]], "logdet() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.logdet"]], "match_covariance() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.match_covariance"]], "maxeig() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.maxeig"]], "nearpdhigham() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.nearPDHigham"]], "nearpsdrebonatojackel() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.nearPSDRebonatoJackel"]], "neurotools.linalg.matrix": [[95, "module-neurotools.linalg.matrix"]], "normedcovariance() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.normedcovariance"]], "psd_eig() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.psd_eig"]], "qf() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.qf"]], "rcond() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.rcond"]], "rdiv() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.rdiv"]], "real_eig() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.real_eig"]], "reglstsq() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.reglstsq"]], "rmatrix() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.rmatrix"]], "row() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.row"]], "rsolt() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.rsolt"]], "rsolve() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.rsolve"]], "selector_matrix() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.selector_matrix"]], "solt() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.solt"]], "top_v() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.top_v"]], "tril_elements() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.tril_elements"]], "triu_elements() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.triu_elements"]], "wheremax() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.wheremax"]], "wheremin() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.wheremin"]], "adjacency1d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.adjacency1D"]], "adjacency2d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.adjacency2D"]], "adjacency2d_circular() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.adjacency2D_circular"]], "adjacency2d_rotational() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.adjacency2d_rotational"]], "circular1dbluroperator() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.circular1DblurOperator"]], "cosine_kernel() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.cosine_kernel"]], "covfrom() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.covfrom"]], "delta() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.delta"]], "differentiator() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.differentiator"]], "diffuseft1d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.diffuseFT1D"]], "flatcov() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.flatcov"]], "gaussian1dbluroperator() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.gaussian1DblurOperator"]], "gaussian2dbluroperator() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.gaussian2DblurOperator"]], "integrator() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.integrator"]], "laplacian1d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.laplacian1D"]], "laplacian1d_circular() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.laplacian1D_circular"]], "laplacian2d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.laplacian2D"]], "laplacianft1d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.laplacianFT1D"]], "log_cosine_basis() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.log_cosine_basis"]], "make_cosine_basis() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.make_cosine_basis"]], "neurotools.linalg.operators": [[96, "module-neurotools.linalg.operators"]], "oucov() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.oucov"]], "separable_guassian_blur() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.separable_guassian_blur"]], "wienerft1d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.wienerFT1D"]], "beta() (in module neurotools.nlab)": [[107, "neurotools.nlab.beta"]], "binomial() (in module neurotools.nlab)": [[107, "neurotools.nlab.binomial"]], "chisquare() (in module neurotools.nlab)": [[107, "neurotools.nlab.chisquare"]], "choice() (in module neurotools.nlab)": [[107, "neurotools.nlab.choice"]], "dirichlet() (in module neurotools.nlab)": [[107, "neurotools.nlab.dirichlet"]], "exponential() (in module neurotools.nlab)": [[107, "neurotools.nlab.exponential"]], "f() (in module neurotools.nlab)": [[107, "neurotools.nlab.f"]], "gamma() (in module neurotools.nlab)": [[107, "neurotools.nlab.gamma"]], "geometric() (in module neurotools.nlab)": [[107, "neurotools.nlab.geometric"]], "get_state() (in module neurotools.nlab)": [[107, "neurotools.nlab.get_state"]], "gumbel() (in module neurotools.nlab)": [[107, "neurotools.nlab.gumbel"]], "hypergeometric() (in module neurotools.nlab)": [[107, "neurotools.nlab.hypergeometric"]], "laplace() (in module neurotools.nlab)": [[107, "neurotools.nlab.laplace"]], "logistic() (in module neurotools.nlab)": [[107, "neurotools.nlab.logistic"]], "lognormal() (in module neurotools.nlab)": [[107, "neurotools.nlab.lognormal"]], "logseries() (in module neurotools.nlab)": [[107, "neurotools.nlab.logseries"]], "multinomial() (in module neurotools.nlab)": [[107, "neurotools.nlab.multinomial"]], "multivariate_normal() (in module neurotools.nlab)": [[107, "neurotools.nlab.multivariate_normal"]], "negative_binomial() (in module neurotools.nlab)": [[107, "neurotools.nlab.negative_binomial"]], "neurotools.nlab": [[107, "module-neurotools.nlab"]], "noncentral_chisquare() (in module neurotools.nlab)": [[107, "neurotools.nlab.noncentral_chisquare"]], "noncentral_f() (in module neurotools.nlab)": [[107, "neurotools.nlab.noncentral_f"]], "normal() (in module neurotools.nlab)": [[107, "neurotools.nlab.normal"]], "pareto() (in module neurotools.nlab)": [[107, "neurotools.nlab.pareto"]], "permutation() (in module neurotools.nlab)": [[107, "neurotools.nlab.permutation"]], "poisson() (in module neurotools.nlab)": [[107, "neurotools.nlab.poisson"]], "power() (in module neurotools.nlab)": [[107, "neurotools.nlab.power"]], "rand() (in module neurotools.nlab)": [[107, "neurotools.nlab.rand"]], "randint() (in module neurotools.nlab)": [[107, "neurotools.nlab.randint"]], "randn() (in module neurotools.nlab)": [[107, "neurotools.nlab.randn"]], "random() (in module neurotools.nlab)": [[107, "neurotools.nlab.random"]], "random_integers() (in module neurotools.nlab)": [[107, "neurotools.nlab.random_integers"]], "random_sample() (in module neurotools.nlab)": [[107, "neurotools.nlab.random_sample"]], "rayleigh() (in module neurotools.nlab)": [[107, "neurotools.nlab.rayleigh"]], "seed() (in module neurotools.nlab)": [[107, "neurotools.nlab.seed"]], "set_state() (in module neurotools.nlab)": [[107, "neurotools.nlab.set_state"]], "shuffle() (in module neurotools.nlab)": [[107, "neurotools.nlab.shuffle"]], "standard_cauchy() (in module neurotools.nlab)": [[107, "neurotools.nlab.standard_cauchy"]], "standard_exponential() (in module neurotools.nlab)": [[107, "neurotools.nlab.standard_exponential"]], "standard_gamma() (in module neurotools.nlab)": [[107, "neurotools.nlab.standard_gamma"]], "standard_normal() (in module neurotools.nlab)": [[107, "neurotools.nlab.standard_normal"]], "standard_t() (in module neurotools.nlab)": [[107, "neurotools.nlab.standard_t"]], "triangular() (in module neurotools.nlab)": [[107, "neurotools.nlab.triangular"]], "uniform() (in module neurotools.nlab)": [[107, "neurotools.nlab.uniform"]], "vonmises() (in module neurotools.nlab)": [[107, "neurotools.nlab.vonmises"]], "wald() (in module neurotools.nlab)": [[107, "neurotools.nlab.wald"]], "weibull() (in module neurotools.nlab)": [[107, "neurotools.nlab.weibull"]], "zipf() (in module neurotools.nlab)": [[107, "neurotools.nlab.zipf"]], "neurotools.obsolete": [[108, "module-neurotools.obsolete"]], "neurotools.obsolete.encoding": [[109, "module-neurotools.obsolete.encoding"]], "neurotools.obsolete.gpu": [[112, "module-neurotools.obsolete.gpu"]], "neurotools.obsolete.gpu.cpu": [[117, "module-neurotools.obsolete.gpu.cpu"]], "cmap() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.cmap"]], "compose() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.compose"]], "corr() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.corr"]], "cov() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.cov"]], "cut() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.cut"]], "document() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.document"]], "dot() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.dot"]], "elem() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.elem"]], "fancy() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.fancy"]], "flat() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.flat"]], "idivup() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.idivup"]], "ldif() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.ldif"]], "ldif2() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.ldif2"]], "ldiv() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.ldiv"]], "ldiv2() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.ldiv2"]], "length() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.length"]], "lmul() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.lmul"]], "lmul2() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.lmul2"]], "lpow() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.lpow"]], "lpow2() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.lpow2"]], "lsum() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.lsum"]], "lsum2() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.lsum2"]], "mdif() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.mdif"]], "mdiv() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.mdiv"]], "mean() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.mean"]], "mmap() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.mmap"]], "mmean() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.mmean"]], "mmul() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.mmul"]], "mpow() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.mpow"]], "mstd() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.mstd"]], "msum() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.msum"]], "mu() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.mu"]], "mvar() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.mvar"]], "neurotools.obsolete.gpu.cpu.util": [[118, "module-neurotools.obsolete.gpu.cpu.util"]], "norm() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.norm"]], "rnorm() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.rnorm"]], "scale() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.scale"]], "sem() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.sem"]], "shift() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.shift"]], "sigma() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.sigma"]], "sstd() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.sstd"]], "std() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.std"]], "svar() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.svar"]], "var() (in module neurotools.obsolete.gpu.cpu.util)": [[118, "neurotools.obsolete.gpu.cpu.util.var"]], "neurotools.obsolete.models": [[130, "module-neurotools.obsolete.models"]], "euler_integrate_lif() (in module neurotools.obsolete.models.lif)": [[132, "neurotools.obsolete.models.lif.euler_integrate_LIF"]], "exponential_integrate_lif() (in module neurotools.obsolete.models.lif)": [[132, "neurotools.obsolete.models.lif.exponential_integrate_LIF"]], "exponential_moving_average() (in module neurotools.obsolete.models.lif)": [[132, "neurotools.obsolete.models.lif.exponential_moving_average"]], "neurotools.obsolete.models.lif": [[132, "module-neurotools.obsolete.models.lif"]], "neurotools.obsolete.rbm": [[134, "module-neurotools.obsolete.rbm"]], "neurotools.obsolete.rbm.rbm_utils": [[138, "module-neurotools.obsolete.rbm.rbm_utils"]], "loadrbm() (in module neurotools.obsolete.rbm.rbm_utils.rbm)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.LoadRBM"]], "rbm (class in neurotools.obsolete.rbm.rbm_utils.rbm)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM"]], "free_energy() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.free_energy"]], "get_cost_updates() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.get_cost_updates"]], "get_pseudo_likelihood_cost() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.get_pseudo_likelihood_cost"]], "get_reconstruction_cost() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.get_reconstruction_cost"]], "gibbs_hvh() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.gibbs_hvh"]], "gibbs_vhv() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.gibbs_vhv"]], "mean_h_given_v() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.mean_h_given_v"]], "neurotools.obsolete.rbm.rbm_utils.rbm": [[139, "module-neurotools.obsolete.rbm.rbm_utils.rbm"]], "propdown() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.propdown"]], "propup() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.propup"]], "sample() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.sample"]], "sample_h_given_v() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.sample_h_given_v"]], "sample_v_given_h() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.sample_v_given_h"]], "savenp() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.savenp"]], "train() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.train"]], "vis_energy() (neurotools.obsolete.rbm.rbm_utils.rbm.rbm method)": [[139, "neurotools.obsolete.rbm.rbm_utils.rbm.RBM.vis_energy"]], "amp() (in module neurotools.signal)": [[142, "neurotools.signal.amp"]], "ang() (in module neurotools.signal)": [[142, "neurotools.signal.ang"]], "arenear() (in module neurotools.signal)": [[142, "neurotools.signal.arenear"]], "aresafe() (in module neurotools.signal)": [[142, "neurotools.signal.aresafe"]], "autocorrelation() (in module neurotools.signal)": [[142, "neurotools.signal.autocorrelation"]], "band_stop_line_noise_removal() (in module neurotools.signal)": [[142, "neurotools.signal.band_stop_line_noise_removal"]], "bandpass_filter() (in module neurotools.signal)": [[142, "neurotools.signal.bandpass_filter"]], "box_filter() (in module neurotools.signal)": [[142, "neurotools.signal.box_filter"]], "circular_cosine_basis() (in module neurotools.signal)": [[142, "neurotools.signal.circular_cosine_basis"]], "circular_gaussian_smooth() (in module neurotools.signal)": [[142, "neurotools.signal.circular_gaussian_smooth"]], "circular_gaussian_smooth_2d() (in module neurotools.signal)": [[142, "neurotools.signal.circular_gaussian_smooth_2D"]], "complex_to_nan() (in module neurotools.signal)": [[142, "neurotools.signal.complex_to_nan"]], "deltaovermean() (in module neurotools.signal)": [[142, "neurotools.signal.deltaovermean"]], "drop_nonfinite() (in module neurotools.signal)": [[142, "neurotools.signal.drop_nonfinite"]], "estimate_padding() (in module neurotools.signal)": [[142, "neurotools.signal.estimate_padding"]], "fdiff() (in module neurotools.signal)": [[142, "neurotools.signal.fdiff"]], "fftacorr1d() (in module neurotools.signal)": [[142, "neurotools.signal.fftacorr1d"]], "fftsta() (in module neurotools.signal)": [[142, "neurotools.signal.fftsta"]], "fm_mod() (in module neurotools.signal)": [[142, "neurotools.signal.fm_mod"]], "fudge_derivative() (in module neurotools.signal)": [[142, "neurotools.signal.fudge_derivative"]], "gaussian_kernel() (in module neurotools.signal)": [[142, "neurotools.signal.gaussian_kernel"]], "gaussian_smooth() (in module neurotools.signal)": [[142, "neurotools.signal.gaussian_smooth"]], "gaussianize() (in module neurotools.signal)": [[142, "neurotools.signal.gaussianize"]], "geometric_window() (in module neurotools.signal)": [[142, "neurotools.signal.geometric_window"]], "get_edges() (in module neurotools.signal)": [[142, "neurotools.signal.get_edges"]], "get_snips() (in module neurotools.signal)": [[142, "neurotools.signal.get_snips"]], "get_triggered_stats() (in module neurotools.signal)": [[142, "neurotools.signal.get_triggered_stats"]], "highpass_filter() (in module neurotools.signal)": [[142, "neurotools.signal.highpass_filter"]], "ifreq() (in module neurotools.signal)": [[142, "neurotools.signal.ifreq"]], "interpmax1d() (in module neurotools.signal)": [[142, "neurotools.signal.interpmax1d"]], "interpolate_nan() (in module neurotools.signal)": [[142, "neurotools.signal.interpolate_NaN"]], "interpolate_nan_quadratic() (in module neurotools.signal)": [[142, "neurotools.signal.interpolate_NaN_quadratic"]], "invert_uniformize() (in module neurotools.signal)": [[142, "neurotools.signal.invert_uniformize"]], "killspikes() (in module neurotools.signal)": [[142, "neurotools.signal.killSpikes"]], "linear_cosine_basis() (in module neurotools.signal)": [[142, "neurotools.signal.linear_cosine_basis"]], "linfilter() (in module neurotools.signal)": [[142, "neurotools.signal.linfilter"]], "local_maxima() (in module neurotools.signal)": [[142, "neurotools.signal.local_maxima"]], "local_minima() (in module neurotools.signal)": [[142, "neurotools.signal.local_minima"]], "local_peak_within() (in module neurotools.signal)": [[142, "neurotools.signal.local_peak_within"]], "lowpass_filter() (in module neurotools.signal)": [[142, "neurotools.signal.lowpass_filter"]], "make_lagged() (in module neurotools.signal)": [[142, "neurotools.signal.make_lagged"]], "make_rebroadcast_slice() (in module neurotools.signal)": [[142, "neurotools.signal.make_rebroadcast_slice"]], "mean_block() (in module neurotools.signal)": [[142, "neurotools.signal.mean_block"]], "median_block() (in module neurotools.signal)": [[142, "neurotools.signal.median_block"]], "median_filter() (in module neurotools.signal)": [[142, "neurotools.signal.median_filter"]], "ndargmax() (in module neurotools.signal)": [[142, "neurotools.signal.ndargmax"]], "neurotools.signal": [[142, "module-neurotools.signal"]], "nice_interp() (in module neurotools.signal)": [[142, "neurotools.signal.nice_interp"]], "nonnegative_bandpass_filter() (in module neurotools.signal)": [[142, "neurotools.signal.nonnegative_bandpass_filter"]], "pad_signal() (in module neurotools.signal)": [[142, "neurotools.signal.pad_signal"]], "padin() (in module neurotools.signal)": [[142, "neurotools.signal.padin"]], "padout() (in module neurotools.signal)": [[142, "neurotools.signal.padout"]], "pdiff() (in module neurotools.signal)": [[142, "neurotools.signal.pdiff"]], "peak_within() (in module neurotools.signal)": [[142, "neurotools.signal.peak_within"]], "percentile_filter() (in module neurotools.signal)": [[142, "neurotools.signal.percentile_filter"]], "pghilbert() (in module neurotools.signal)": [[142, "neurotools.signal.pghilbert"]], "phase_randomize() (in module neurotools.signal)": [[142, "neurotools.signal.phase_randomize"]], "phase_randomize_from_amplitudes() (in module neurotools.signal)": [[142, "neurotools.signal.phase_randomize_from_amplitudes"]], "phase_rotate() (in module neurotools.signal)": [[142, "neurotools.signal.phase_rotate"]], "pieces() (in module neurotools.signal)": [[142, "neurotools.signal.pieces"]], "randband() (in module neurotools.signal)": [[142, "neurotools.signal.randband"]], "remove_gaps() (in module neurotools.signal)": [[142, "neurotools.signal.remove_gaps"]], "remove_short() (in module neurotools.signal)": [[142, "neurotools.signal.remove_short"]], "rewrap() (in module neurotools.signal)": [[142, "neurotools.signal.rewrap"]], "set_edges() (in module neurotools.signal)": [[142, "neurotools.signal.set_edges"]], "sign_preserving_amplitude_demodulate() (in module neurotools.signal)": [[142, "neurotools.signal.sign_preserving_amplitude_demodulate"]], "spaced_derivative() (in module neurotools.signal)": [[142, "neurotools.signal.spaced_derivative"]], "span() (in module neurotools.signal)": [[142, "neurotools.signal.span"]], "split_into_groups() (in module neurotools.signal)": [[142, "neurotools.signal.split_into_groups"]], "stats_block() (in module neurotools.signal)": [[142, "neurotools.signal.stats_block"]], "take_axis() (in module neurotools.signal)": [[142, "neurotools.signal.take_axis"]], "take_axis_slice() (in module neurotools.signal)": [[142, "neurotools.signal.take_axis_slice"]], "topercentiles() (in module neurotools.signal)": [[142, "neurotools.signal.topercentiles"]], "triggered_average() (in module neurotools.signal)": [[142, "neurotools.signal.triggered_average"]], "uniformize() (in module neurotools.signal)": [[142, "neurotools.signal.uniformize"]], "unit_length() (in module neurotools.signal)": [[142, "neurotools.signal.unit_length"]], "unitscale() (in module neurotools.signal)": [[142, "neurotools.signal.unitscale"]], "unwrap() (in module neurotools.signal)": [[142, "neurotools.signal.unwrap"]], "upsample() (in module neurotools.signal)": [[142, "neurotools.signal.upsample"]], "var_block() (in module neurotools.signal)": [[142, "neurotools.signal.var_block"]], "variance_filter() (in module neurotools.signal)": [[142, "neurotools.signal.variance_filter"]], "virtual_reference_line_noise_removal() (in module neurotools.signal)": [[142, "neurotools.signal.virtual_reference_line_noise_removal"]], "zeromean() (in module neurotools.signal)": [[142, "neurotools.signal.zeromean"]], "zgrid() (in module neurotools.signal)": [[142, "neurotools.signal.zgrid"]], "zscore() (in module neurotools.signal)": [[142, "neurotools.signal.zscore"]], "convolve2dct() (in module neurotools.signal.conv)": [[144, "neurotools.signal.conv.convolve2dct"]], "gausskern1d() (in module neurotools.signal.conv)": [[144, "neurotools.signal.conv.gausskern1d"]], "gausskern2d() (in module neurotools.signal.conv)": [[144, "neurotools.signal.conv.gausskern2d"]], "mirror2d() (in module neurotools.signal.conv)": [[144, "neurotools.signal.conv.mirror2d"]], "neurotools.signal.conv": [[144, "module-neurotools.signal.conv"]], "reflect2d() (in module neurotools.signal.conv)": [[144, "neurotools.signal.conv.reflect2D"]], "reflect2d_1() (in module neurotools.signal.conv)": [[144, "neurotools.signal.conv.reflect2D_1"]], "separable2d() (in module neurotools.signal.conv)": [[144, "neurotools.signal.conv.separable2d"]], "fft_cwt() (in module neurotools.signal.morlet)": [[146, "neurotools.signal.morlet.fft_cwt"]], "fft_cwt_transposed() (in module neurotools.signal.morlet)": [[146, "neurotools.signal.morlet.fft_cwt_transposed"]], "fft_cwt_transposed_logspaced() (in module neurotools.signal.morlet)": [[146, "neurotools.signal.morlet.fft_cwt_transposed_logspaced"]], "logfreqs() (in module neurotools.signal.morlet)": [[146, "neurotools.signal.morlet.logfreqs"]], "neurotools.signal.morlet": [[146, "module-neurotools.signal.morlet"]], "normalized_morlet() (in module neurotools.signal.morlet)": [[146, "neurotools.signal.morlet.normalized_morlet"]], "population_synchrony_spectrum() (in module neurotools.signal.morlet)": [[146, "neurotools.signal.morlet.population_synchrony_spectrum"]], "prepare_wavelet_fft_basis() (in module neurotools.signal.morlet)": [[146, "neurotools.signal.morlet.prepare_wavelet_fft_basis"]], "prepare_wavelet_fft_basis_logspace() (in module neurotools.signal.morlet)": [[146, "neurotools.signal.morlet.prepare_wavelet_fft_basis_logspace"]], "dpss_cached() (in module neurotools.signal.multitaper)": [[148, "neurotools.signal.multitaper.dpss_cached"]], "multitaper_population_eigencoherence() (in module neurotools.signal.multitaper)": [[148, "neurotools.signal.multitaper.multitaper_population_eigencoherence"]], "multitaper_spectrum() (in module neurotools.signal.multitaper)": [[148, "neurotools.signal.multitaper.multitaper_spectrum"]], "multitaper_squared_spectrum() (in module neurotools.signal.multitaper)": [[148, "neurotools.signal.multitaper.multitaper_squared_spectrum"]], "neurotools.signal.multitaper": [[148, "module-neurotools.signal.multitaper"]], "sliding_multitaper_spectrum() (in module neurotools.signal.multitaper)": [[148, "neurotools.signal.multitaper.sliding_multitaper_spectrum"]], "discard_spikes_closer_than_delta() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.discard_spikes_closer_than_delta"]], "estimate_bias_in_uncorrected_ppc() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.estimate_bias_in_uncorrected_ppc"]], "fftppc() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.fftppc"]], "fftppc_biased() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.fftppc_biased"]], "fftppc_biased_multitaper() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.fftppc_biased_multitaper"]], "fftppc_multitaper() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.fftppc_multitaper"]], "neurotools.signal.ppc": [[149, "module-neurotools.signal.ppc"]], "pairwise_phase_consistancy() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.pairwise_phase_consistancy"]], "phase_randomize() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.phase_randomize"]], "phase_randomized_bias_correction() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.phase_randomized_bias_correction"]], "ppc_chance_level() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.ppc_chance_level"]], "ppc_phase_randomize_chance_level_sample() (in module neurotools.signal.ppc)": [[149, "neurotools.signal.ppc.ppc_phase_randomize_chance_level_sample"]], "sgkern() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGKern"]], "sgkerna() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGKernA"]], "sgkernj() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGKernJ"]], "sgkernv() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGKernV"]], "sgord() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGOrd"]], "sgaccelerate() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGaccelerate"]], "sgdifferentiate() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGdifferentiate"]], "sgfilt() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGfilt"]], "sgfilta() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGfiltA"]], "sgfiltj() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGfiltJ"]], "sgfiltv() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGfiltV"]], "sgjerk() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGjerk"]], "sgsmooth() (in module neurotools.signal.savitskygolay)": [[151, "neurotools.signal.savitskygolay.SGsmooth"]], "neurotools.signal.savitskygolay": [[151, "module-neurotools.signal.savitskygolay"]], "neurotools.signal.sde": [[152, "module-neurotools.signal.sde"]], "sample_ou_process() (in module neurotools.signal.sde)": [[152, "neurotools.signal.sde.sample_ou_process"]], "sample_wiener_process() (in module neurotools.signal.sde)": [[152, "neurotools.signal.sde.sample_wiener_process"]], "brute_force_local_2d_maxima() (in module neurotools.spatial)": [[154, "neurotools.spatial.brute_force_local_2d_maxima"]], "neurotools.spatial": [[154, "module-neurotools.spatial"]], "array_average_amplitude() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_average_amplitude"]], "array_count_centers() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_count_centers"]], "array_count_critical() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_count_critical"]], "array_kuramoto() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_kuramoto"]], "array_kuramoto_pgd() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_kuramoto_pgd"]], "array_kuramoto_pgd_standard_deviation() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_kuramoto_pgd_standard_deviation"]], "array_kuramoto_standard_deviation() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_kuramoto_standard_deviation"]], "array_phase_gradient() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_phase_gradient"]], "array_phasegradient_local() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_phasegradient_local"]], "array_phasegradient_magnitude_cv() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_phasegradient_magnitude_cv"]], "array_phasegradient_magnitude_sigma() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_phasegradient_magnitude_sigma"]], "array_phasegradient_pgd_threshold() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_phasegradient_pgd_threshold"]], "array_phasegradient_planar() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_phasegradient_planar"]], "array_speed_local() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_speed_local"]], "array_speed_pgd_threshold() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_speed_pgd_threshold"]], "array_synchrony() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_synchrony"]], "array_synchrony_pgd() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_synchrony_pgd"]], "array_synchrony_pgd_standard_deviation() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_synchrony_pgd_standard_deviation"]], "array_synchrony_standard_deviation() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_synchrony_standard_deviation"]], "array_wavelength_local() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_wavelength_local"]], "array_wavelength_local_pgd_threshold() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_wavelength_local_pgd_threshold"]], "array_wavelength_pgd_threshold() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_wavelength_pgd_threshold"]], "array_wavelength_planar() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.array_wavelength_planar"]], "neurotools.spatial.array": [[155, "module-neurotools.spatial.array"]], "pack_array_data() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.pack_array_data"]], "trim_array() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.trim_array"]], "trim_array_as_if() (in module neurotools.spatial.array)": [[155, "neurotools.spatial.array.trim_array_as_if"]], "dct_cut() (in module neurotools.spatial.dct)": [[156, "neurotools.spatial.dct.dct_cut"]], "dct_cut_antialias() (in module neurotools.spatial.dct)": [[156, "neurotools.spatial.dct.dct_cut_antialias"]], "dct_cut_downsampled() (in module neurotools.spatial.dct)": [[156, "neurotools.spatial.dct.dct_cut_downsampled"]], "dct_upsample() (in module neurotools.spatial.dct)": [[156, "neurotools.spatial.dct.dct_upsample"]], "dct_upsample_notrim() (in module neurotools.spatial.dct)": [[156, "neurotools.spatial.dct.dct_upsample_notrim"]], "get_mask() (in module neurotools.spatial.dct)": [[156, "neurotools.spatial.dct.get_mask"]], "get_mask_antialiased() (in module neurotools.spatial.dct)": [[156, "neurotools.spatial.dct.get_mask_antialiased"]], "iterated_upsample() (in module neurotools.spatial.dct)": [[156, "neurotools.spatial.dct.iterated_upsample"]], "neurotools.spatial.dct": [[156, "module-neurotools.spatial.dct"]], "outer_complex() (in module neurotools.spatial.dct)": [[156, "neurotools.spatial.dct.outer_complex"]], "distance_angular_deviation() (in module neurotools.spatial.distance)": [[157, "neurotools.spatial.distance.distance_angular_deviation"]], "get_average_synchrony_length_constant_parallel() (in module neurotools.spatial.distance)": [[157, "neurotools.spatial.distance.get_average_synchrony_length_constant_parallel"]], "get_averaged_angular_distance() (in module neurotools.spatial.distance)": [[157, "neurotools.spatial.distance.get_averaged_angular_distance"]], "get_length_constant_trial() (in module neurotools.spatial.distance)": [[157, "neurotools.spatial.distance.get_length_constant_trial"]], "get_pair_distance() (in module neurotools.spatial.distance)": [[157, "neurotools.spatial.distance.get_pair_distance"]], "neurotools.spatial.distance": [[157, "module-neurotools.spatial.distance"]], "synchrony_length_constant_areas_summary() (in module neurotools.spatial.distance)": [[157, "neurotools.spatial.distance.synchrony_length_constant_areas_summary"]], "coalesce() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.coalesce"]], "coalesce_points() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.coalesce_points"]], "cut_array_data() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.cut_array_data"]], "dphidx() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.dPhidx"]], "dphidy() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.dPhidy"]], "find_critical_points() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.find_critical_points"]], "find_critical_potential_points() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.find_critical_potential_points"]], "get_critical_spectra() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.get_critical_spectra"]], "get_phase_gradient_as_complex() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.get_phase_gradient_as_complex"]], "getp() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.getp"]], "getpeaks2d() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.getpeaks2d"]], "grad() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.grad"]], "mirror2d() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.mirror2D"]], "neurotools.spatial.fftzeros": [[158, "module-neurotools.spatial.fftzeros"]], "plot_critical_points() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.plot_critical_points"]], "plot_critical_spectra() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.plot_critical_spectra"]], "plot_phase_direction() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.plot_phase_direction"]], "plot_phase_gradient() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.plot_phase_gradient"]], "quickgrad() (in module neurotools.spatial.fftzeros)": [[158, "neurotools.spatial.fftzeros.quickgrad"]], "absorbing_gaussian() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.absorbing_gaussian"]], "absorbing_laplacian() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.absorbing_laplacian"]], "continuum_kernel() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.continuum_kernel"]], "cosine_kernel() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.cosine_kernel"]], "diffusion_basis() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.diffusion_basis"]], "exponential_basis() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.exponential_basis"]], "gaussian_2d_kernel() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.gaussian_2D_kernel"]], "iterative_orthogonalize_basis() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.iterative_orthogonalize_basis"]], "laplace_kernel() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.laplace_kernel"]], "laplacian() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.laplacian"]], "log_cosine_basis() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.log_cosine_basis"]], "log_spline_basis() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.log_spline_basis"]], "magickernel() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.magickernel"]], "magicsharp() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.magicsharp"]], "make_cosine_basis() (in module neurotools.spatial.kernels)": [[160, "neurotools.spatial.kernels.make_cosine_basis"]], "neurotools.spatial.kernels": [[160, "module-neurotools.spatial.kernels"]], "analytic_signal_coherence() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.analytic_signal_coherence"]], "neurotools.spatial.phase": [[162, "module-neurotools.spatial.phase"]], "population_average_amplitude() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_average_amplitude"]], "population_kuramoto() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_kuramoto"]], "population_median_frequency() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_median_frequency"]], "population_median_phase_velocity() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_median_phase_velocity"]], "population_normalized_sliding_signal_coherence() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_normalized_sliding_signal_coherence"]], "population_phase_coherence() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_phase_coherence"]], "population_phase_relative_sliding_kuramoto() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_phase_relative_sliding_kuramoto"]], "population_polar_std() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_polar_std"]], "population_signal_amplitude_dispersion() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_signal_amplitude_dispersion"]], "population_signal_amplitude_precision() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_signal_amplitude_precision"]], "population_signal_amplitude_std() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_signal_amplitude_std"]], "population_signal_concentration() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_signal_concentration"]], "population_signal_description() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_signal_description"]], "population_signal_dispersion() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_signal_dispersion"]], "population_signal_phase_dispersion() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_signal_phase_dispersion"]], "population_signal_phase_precision() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_signal_phase_precision"]], "population_signal_phase_std() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_signal_phase_std"]], "population_signal_precision() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_signal_precision"]], "population_sliding_signal_coherence() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_sliding_signal_coherence"]], "population_synchrony() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_synchrony"]], "population_synchrony_linear() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.population_synchrony_linear"]], "sliding_population_signal_coherence() (in module neurotools.spatial.phase)": [[162, "neurotools.spatial.phase.sliding_population_signal_coherence"]], "c2p() (in module neurotools.spatial.points)": [[163, "neurotools.spatial.points.c2p"]], "closest() (in module neurotools.spatial.points)": [[163, "neurotools.spatial.points.closest"]], "neurotools.spatial.points": [[163, "module-neurotools.spatial.points"]], "p2c() (in module neurotools.spatial.points)": [[163, "neurotools.spatial.points.p2c"]], "pair_neighbors() (in module neurotools.spatial.points)": [[163, "neurotools.spatial.points.pair_neighbors"]], "paired_distances() (in module neurotools.spatial.points)": [[163, "neurotools.spatial.points.paired_distances"]], "to_xypoint() (in module neurotools.spatial.points)": [[163, "neurotools.spatial.points.to_xypoint"]], "interp_bin() (in module neurotools.spatial.spiking)": [[165, "neurotools.spatial.spiking.interp_bin"]], "neurotools.spatial.spiking": [[165, "module-neurotools.spatial.spiking"]], "coalesce() (in module neurotools.spatial.triangulation)": [[166, "neurotools.spatial.triangulation.coalesce"]], "edgesnearby() (in module neurotools.spatial.triangulation)": [[166, "neurotools.spatial.triangulation.edgesNearby"]], "mergenearby() (in module neurotools.spatial.triangulation)": [[166, "neurotools.spatial.triangulation.mergeNearby"]], "neurotools.spatial.triangulation": [[166, "module-neurotools.spatial.triangulation"]], "plot_edges() (in module neurotools.spatial.triangulation)": [[166, "neurotools.spatial.triangulation.plot_edges"]], "plot_triangles() (in module neurotools.spatial.triangulation)": [[166, "neurotools.spatial.triangulation.plot_triangles"]], "trianglestoedges() (in module neurotools.spatial.triangulation)": [[166, "neurotools.spatial.triangulation.trianglesToEdges"]], "uniquerow() (in module neurotools.spatial.triangulation)": [[166, "neurotools.spatial.triangulation.uniquerow"]], "z2xy() (in module neurotools.spatial.triangulation)": [[166, "neurotools.spatial.triangulation.z2xy"]], "neurotools.spikes": [[168, "module-neurotools.spikes"]], "bin_spike_times() (in module neurotools.spikes.spikes)": [[169, "neurotools.spikes.spikes.bin_spike_times"]], "bin_spikes_raster() (in module neurotools.spikes.spikes)": [[169, "neurotools.spikes.spikes.bin_spikes_raster"]], "cut_spikes() (in module neurotools.spikes.spikes)": [[169, "neurotools.spikes.spikes.cut_spikes"]], "neurotools.spikes.spikes": [[169, "module-neurotools.spikes.spikes"]], "pack_cross_correlation_matrix() (in module neurotools.spikes.spikes)": [[169, "neurotools.spikes.spikes.pack_cross_correlation_matrix"]], "pp_xcorr() (in module neurotools.spikes.spikes)": [[169, "neurotools.spikes.spikes.pp_xcorr"]], "times_to_raster() (in module neurotools.spikes.spikes)": [[169, "neurotools.spikes.spikes.times_to_raster"]], "txcorr() (in module neurotools.spikes.spikes)": [[169, "neurotools.spikes.spikes.txcorr"]], "getfwhm() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.getFWHM"]], "getphp() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.getPHP"]], "getpt() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.getPT"]], "getpthw() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.getPTHW"]], "getpvt() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.getPVT"]], "getwahp() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.getWAHP"]], "is_thin() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.is_thin"]], "is_thin_pvt() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.is_thin_pvt"]], "minmax() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.minmax"]], "neurotools.spikes.waveform": [[170, "module-neurotools.spikes.waveform"]], "normalized_waveform() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.normalized_waveform"]], "process() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.process"]], "realign() (in module neurotools.spikes.waveform)": [[170, "neurotools.spikes.waveform.realign"]], "add_constant() (in module neurotools.stats)": [[171, "neurotools.stats.add_constant"]], "block_shuffle() (in module neurotools.stats)": [[171, "neurotools.stats.block_shuffle"]], "covariance() (in module neurotools.stats)": [[171, "neurotools.stats.covariance"]], "crossvalidated_least_squares() (in module neurotools.stats)": [[171, "neurotools.stats.crossvalidated_least_squares"]], "description (class in neurotools.stats)": [[171, "neurotools.stats.description"]], "glmfit() (in module neurotools.stats)": [[171, "neurotools.stats.glmfit"]], "neurotools.stats": [[171, "module-neurotools.stats"]], "nrmse() (in module neurotools.stats)": [[171, "neurotools.stats.nrmse"]], "outliers() (in module neurotools.stats)": [[171, "neurotools.stats.outliers"]], "partition_data() (in module neurotools.stats)": [[171, "neurotools.stats.partition_data"]], "partition_data_for_crossvalidation() (in module neurotools.stats)": [[171, "neurotools.stats.partition_data_for_crossvalidation"]], "partition_trials_for_crossvalidation() (in module neurotools.stats)": [[171, "neurotools.stats.partition_trials_for_crossvalidation"]], "pca() (in module neurotools.stats)": [[171, "neurotools.stats.pca"]], "polar_error() (in module neurotools.stats)": [[171, "neurotools.stats.polar_error"]], "print_stats() (in module neurotools.stats)": [[171, "neurotools.stats.print_stats"]], "reject_outliers() (in module neurotools.stats)": [[171, "neurotools.stats.reject_outliers"]], "short() (neurotools.stats.description method)": [[171, "neurotools.stats.description.short"]], "trial_crossvalidated_least_squares() (in module neurotools.stats)": [[171, "neurotools.stats.trial_crossvalidated_least_squares"]], "weighted_avg_and_std() (in module neurotools.stats)": [[171, "neurotools.stats.weighted_avg_and_std"]], "autocorrelation_bayes() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.autocorrelation_bayes"]], "blockccm() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.blockccm"]], "blocksta() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.blocksta"]], "ccm() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.ccm"]], "ccor() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.ccor"]], "construct_lowpass_operator() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.construct_lowpass_operator"]], "create_spectral_model() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.create_spectral_model"]], "cspect() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.cspect"]], "cspectm() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.cspectm"]], "neurotools.stats.convolutional": [[175, "module-neurotools.stats.convolutional"]], "reconstruct() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.reconstruct"]], "spectreconstruct() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.spectreconstruct"]], "spike_lfp_filters() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.spike_lfp_filters"]], "sta() (in module neurotools.stats.convolutional)": [[175, "neurotools.stats.convolutional.sta"]], "adaptive_density_grid() (in module neurotools.stats.density)": [[176, "neurotools.stats.density.adaptive_density_grid"]], "gridhist() (in module neurotools.stats.density)": [[176, "neurotools.stats.density.gridhist"]], "kdepeak() (in module neurotools.stats.density)": [[176, "neurotools.stats.density.kdepeak"]], "knn_1d_density() (in module neurotools.stats.density)": [[176, "neurotools.stats.density.knn_1d_density"]], "neurotools.stats.density": [[176, "module-neurotools.stats.density"]], "explogpdf() (in module neurotools.stats.distributions)": [[177, "neurotools.stats.distributions.explogpdf"]], "gaussian_logpdf() (in module neurotools.stats.distributions)": [[177, "neurotools.stats.distributions.gaussian_logpdf"]], "gaussian_pdf() (in module neurotools.stats.distributions)": [[177, "neurotools.stats.distributions.gaussian_pdf"]], "neurotools.stats.distributions": [[177, "module-neurotools.stats.distributions"]], "poisson_logpdf() (in module neurotools.stats.distributions)": [[177, "neurotools.stats.distributions.poisson_logpdf"]], "poisson_pdf() (in module neurotools.stats.distributions)": [[177, "neurotools.stats.distributions.poisson_pdf"]], "sample_categorical() (in module neurotools.stats.distributions)": [[177, "neurotools.stats.distributions.sample_categorical"]], "fast_kde() (in module neurotools.stats.fast_kde)": [[179, "neurotools.stats.fast_kde.fast_kde"]], "image_cov() (in module neurotools.stats.fast_kde)": [[179, "neurotools.stats.fast_kde.image_cov"]], "neurotools.stats.fast_kde": [[179, "module-neurotools.stats.fast_kde"]], "gaussian (class in neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.Gaussian"], [181, "neurotools.stats.gaussian.Gaussian"], [182, "neurotools.stats.gaussian.Gaussian"], [183, "neurotools.stats.gaussian.Gaussian"], [184, "neurotools.stats.gaussian.Gaussian"], [185, "neurotools.stats.gaussian.Gaussian"], [186, "neurotools.stats.gaussian.Gaussian"], [187, "neurotools.stats.gaussian.Gaussian"], [188, "neurotools.stats.gaussian.Gaussian"]], "mvg_dkl() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_DKL"], [181, "neurotools.stats.gaussian.MVG_DKL"], [182, "neurotools.stats.gaussian.MVG_DKL"], [183, "neurotools.stats.gaussian.MVG_DKL"], [184, "neurotools.stats.gaussian.MVG_DKL"], [185, "neurotools.stats.gaussian.MVG_DKL"], [186, "neurotools.stats.gaussian.MVG_DKL"], [187, "neurotools.stats.gaussian.MVG_DKL"], [188, "neurotools.stats.gaussian.MVG_DKL"]], "mvg_dkl_cp() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_DKL_CP"], [181, "neurotools.stats.gaussian.MVG_DKL_CP"], [182, "neurotools.stats.gaussian.MVG_DKL_CP"], [183, "neurotools.stats.gaussian.MVG_DKL_CP"], [184, "neurotools.stats.gaussian.MVG_DKL_CP"], [185, "neurotools.stats.gaussian.MVG_DKL_CP"], [186, "neurotools.stats.gaussian.MVG_DKL_CP"], [187, "neurotools.stats.gaussian.MVG_DKL_CP"], [188, "neurotools.stats.gaussian.MVG_DKL_CP"]], "mvg_pdf() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_PDF"], [181, "neurotools.stats.gaussian.MVG_PDF"], [182, "neurotools.stats.gaussian.MVG_PDF"], [183, "neurotools.stats.gaussian.MVG_PDF"], [184, "neurotools.stats.gaussian.MVG_PDF"], [185, "neurotools.stats.gaussian.MVG_PDF"], [186, "neurotools.stats.gaussian.MVG_PDF"], [187, "neurotools.stats.gaussian.MVG_PDF"], [188, "neurotools.stats.gaussian.MVG_PDF"]], "mvg_check() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_check"], [181, "neurotools.stats.gaussian.MVG_check"], [182, "neurotools.stats.gaussian.MVG_check"], [183, "neurotools.stats.gaussian.MVG_check"], [184, "neurotools.stats.gaussian.MVG_check"], [185, "neurotools.stats.gaussian.MVG_check"], [186, "neurotools.stats.gaussian.MVG_check"], [187, "neurotools.stats.gaussian.MVG_check"], [188, "neurotools.stats.gaussian.MVG_check"]], "mvg_conditional() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_conditional"], [181, "neurotools.stats.gaussian.MVG_conditional"], [182, "neurotools.stats.gaussian.MVG_conditional"], [183, "neurotools.stats.gaussian.MVG_conditional"], [184, "neurotools.stats.gaussian.MVG_conditional"], [185, "neurotools.stats.gaussian.MVG_conditional"], [186, "neurotools.stats.gaussian.MVG_conditional"], [187, "neurotools.stats.gaussian.MVG_conditional"], [188, "neurotools.stats.gaussian.MVG_conditional"]], "mvg_divide() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_divide"], [181, "neurotools.stats.gaussian.MVG_divide"], [182, "neurotools.stats.gaussian.MVG_divide"], [183, "neurotools.stats.gaussian.MVG_divide"], [184, "neurotools.stats.gaussian.MVG_divide"], [185, "neurotools.stats.gaussian.MVG_divide"], [186, "neurotools.stats.gaussian.MVG_divide"], [187, "neurotools.stats.gaussian.MVG_divide"], [188, "neurotools.stats.gaussian.MVG_divide"]], "mvg_entropy() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_entropy"], [181, "neurotools.stats.gaussian.MVG_entropy"], [182, "neurotools.stats.gaussian.MVG_entropy"], [183, "neurotools.stats.gaussian.MVG_entropy"], [184, "neurotools.stats.gaussian.MVG_entropy"], [185, "neurotools.stats.gaussian.MVG_entropy"], [186, "neurotools.stats.gaussian.MVG_entropy"], [187, "neurotools.stats.gaussian.MVG_entropy"], [188, "neurotools.stats.gaussian.MVG_entropy"]], "mvg_kalman() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_kalman"], [181, "neurotools.stats.gaussian.MVG_kalman"], [182, "neurotools.stats.gaussian.MVG_kalman"], [183, "neurotools.stats.gaussian.MVG_kalman"], [184, "neurotools.stats.gaussian.MVG_kalman"], [185, "neurotools.stats.gaussian.MVG_kalman"], [186, "neurotools.stats.gaussian.MVG_kalman"], [187, "neurotools.stats.gaussian.MVG_kalman"], [188, "neurotools.stats.gaussian.MVG_kalman"]], "mvg_kalman_p_inversea() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [181, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [182, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [183, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [184, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [185, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [186, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [187, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"], [188, "neurotools.stats.gaussian.MVG_kalman_P_inverseA"]], "mvg_kalman_joint() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_kalman_joint"], [181, "neurotools.stats.gaussian.MVG_kalman_joint"], [182, "neurotools.stats.gaussian.MVG_kalman_joint"], [183, "neurotools.stats.gaussian.MVG_kalman_joint"], [184, "neurotools.stats.gaussian.MVG_kalman_joint"], [185, "neurotools.stats.gaussian.MVG_kalman_joint"], [186, "neurotools.stats.gaussian.MVG_kalman_joint"], [187, "neurotools.stats.gaussian.MVG_kalman_joint"], [188, "neurotools.stats.gaussian.MVG_kalman_joint"]], "mvg_kalman_joint_p() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [181, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [182, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [183, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [184, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [185, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [186, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [187, "neurotools.stats.gaussian.MVG_kalman_joint_P"], [188, "neurotools.stats.gaussian.MVG_kalman_joint_P"]], "mvg_logpdf() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_logPDF"], [181, "neurotools.stats.gaussian.MVG_logPDF"], [182, "neurotools.stats.gaussian.MVG_logPDF"], [183, "neurotools.stats.gaussian.MVG_logPDF"], [184, "neurotools.stats.gaussian.MVG_logPDF"], [185, "neurotools.stats.gaussian.MVG_logPDF"], [186, "neurotools.stats.gaussian.MVG_logPDF"], [187, "neurotools.stats.gaussian.MVG_logPDF"], [188, "neurotools.stats.gaussian.MVG_logPDF"]], "mvg_multiply() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_multiply"], [181, "neurotools.stats.gaussian.MVG_multiply"], [182, "neurotools.stats.gaussian.MVG_multiply"], [183, "neurotools.stats.gaussian.MVG_multiply"], [184, "neurotools.stats.gaussian.MVG_multiply"], [185, "neurotools.stats.gaussian.MVG_multiply"], [186, "neurotools.stats.gaussian.MVG_multiply"], [187, "neurotools.stats.gaussian.MVG_multiply"], [188, "neurotools.stats.gaussian.MVG_multiply"]], "mvg_multiply_c() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_multiply_C"], [181, "neurotools.stats.gaussian.MVG_multiply_C"], [182, "neurotools.stats.gaussian.MVG_multiply_C"], [183, "neurotools.stats.gaussian.MVG_multiply_C"], [184, "neurotools.stats.gaussian.MVG_multiply_C"], [185, "neurotools.stats.gaussian.MVG_multiply_C"], [186, "neurotools.stats.gaussian.MVG_multiply_C"], [187, "neurotools.stats.gaussian.MVG_multiply_C"], [188, "neurotools.stats.gaussian.MVG_multiply_C"]], "mvg_projection() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_projection"], [181, "neurotools.stats.gaussian.MVG_projection"], [182, "neurotools.stats.gaussian.MVG_projection"], [183, "neurotools.stats.gaussian.MVG_projection"], [184, "neurotools.stats.gaussian.MVG_projection"], [185, "neurotools.stats.gaussian.MVG_projection"], [186, "neurotools.stats.gaussian.MVG_projection"], [187, "neurotools.stats.gaussian.MVG_projection"], [188, "neurotools.stats.gaussian.MVG_projection"]], "mvg_sample() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.MVG_sample"], [181, "neurotools.stats.gaussian.MVG_sample"], [182, "neurotools.stats.gaussian.MVG_sample"], [183, "neurotools.stats.gaussian.MVG_sample"], [184, "neurotools.stats.gaussian.MVG_sample"], [185, "neurotools.stats.gaussian.MVG_sample"], [186, "neurotools.stats.gaussian.MVG_sample"], [187, "neurotools.stats.gaussian.MVG_sample"], [188, "neurotools.stats.gaussian.MVG_sample"]], "gaussian_quadrature() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.gaussian_quadrature"], [181, "neurotools.stats.gaussian.gaussian_quadrature"], [182, "neurotools.stats.gaussian.gaussian_quadrature"], [183, "neurotools.stats.gaussian.gaussian_quadrature"], [184, "neurotools.stats.gaussian.gaussian_quadrature"], [185, "neurotools.stats.gaussian.gaussian_quadrature"], [186, "neurotools.stats.gaussian.gaussian_quadrature"], [187, "neurotools.stats.gaussian.gaussian_quadrature"], [188, "neurotools.stats.gaussian.gaussian_quadrature"]], "gaussian_quadrature_logarithmic() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [181, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [182, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [183, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [184, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [185, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [186, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [187, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"], [188, "neurotools.stats.gaussian.gaussian_quadrature_logarithmic"]], "logpdf() (neurotools.stats.gaussian.gaussian method)": [[180, "neurotools.stats.gaussian.Gaussian.logpdf"], [181, "neurotools.stats.gaussian.Gaussian.logpdf"], [182, "neurotools.stats.gaussian.Gaussian.logpdf"], [183, "neurotools.stats.gaussian.Gaussian.logpdf"], [184, "neurotools.stats.gaussian.Gaussian.logpdf"], [185, "neurotools.stats.gaussian.Gaussian.logpdf"], [186, "neurotools.stats.gaussian.Gaussian.logpdf"], [187, "neurotools.stats.gaussian.Gaussian.logpdf"], [188, "neurotools.stats.gaussian.Gaussian.logpdf"]], "m (neurotools.stats.gaussian.gaussian attribute)": [[180, "neurotools.stats.gaussian.Gaussian.m"], [181, "neurotools.stats.gaussian.Gaussian.m"], [182, "neurotools.stats.gaussian.Gaussian.m"], [183, "neurotools.stats.gaussian.Gaussian.m"], [184, "neurotools.stats.gaussian.Gaussian.m"], [185, "neurotools.stats.gaussian.Gaussian.m"], [186, "neurotools.stats.gaussian.Gaussian.m"], [187, "neurotools.stats.gaussian.Gaussian.m"], [188, "neurotools.stats.gaussian.Gaussian.m"]], "neurotools.stats.gaussian": [[180, "module-neurotools.stats.gaussian"], [181, "module-neurotools.stats.gaussian"], [182, "module-neurotools.stats.gaussian"], [183, "module-neurotools.stats.gaussian"], [184, "module-neurotools.stats.gaussian"], [185, "module-neurotools.stats.gaussian"], [186, "module-neurotools.stats.gaussian"], [187, "module-neurotools.stats.gaussian"], [188, "module-neurotools.stats.gaussian"]], "randn() (in module neurotools.stats.gaussian)": [[180, "neurotools.stats.gaussian.randn"], [181, "neurotools.stats.gaussian.randn"], [182, "neurotools.stats.gaussian.randn"], [183, "neurotools.stats.gaussian.randn"], [184, "neurotools.stats.gaussian.randn"], [185, "neurotools.stats.gaussian.randn"], [186, "neurotools.stats.gaussian.randn"], [187, "neurotools.stats.gaussian.randn"], [188, "neurotools.stats.gaussian.randn"]], "t (neurotools.stats.gaussian.gaussian attribute)": [[180, "neurotools.stats.gaussian.Gaussian.t"], [181, "neurotools.stats.gaussian.Gaussian.t"], [182, "neurotools.stats.gaussian.Gaussian.t"], [183, "neurotools.stats.gaussian.Gaussian.t"], [184, "neurotools.stats.gaussian.Gaussian.t"], [185, "neurotools.stats.gaussian.Gaussian.t"], [186, "neurotools.stats.gaussian.Gaussian.t"], [187, "neurotools.stats.gaussian.Gaussian.t"], [188, "neurotools.stats.gaussian.Gaussian.t"]], "glmpenaltybernoulli() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.GLMPenaltyBernoulli"]], "glmpenaltyl2() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.GLMPenaltyL2"]], "glmpenaltypoisson() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.GLMPenaltyPoisson"]], "cosine_kernel() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.cosine_kernel"]], "crossvalidatedauc() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.crossvalidatedAUC"]], "fitglm() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.fitGLM"]], "gradientglmfit() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.gradientglmfit"]], "log_cosine_basis() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.log_cosine_basis"]], "make_cosine_basis() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.make_cosine_basis"]], "neurotools.stats.glm": [[189, "module-neurotools.stats.glm"]], "numeric_grad() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.numeric_grad"]], "numeric_hess() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.numeric_hess"]], "ppglmfit() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.ppglmfit"]], "sexp() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.sexp"]], "sigmoid() (in module neurotools.stats.glm)": [[189, "neurotools.stats.glm.sigmoid"]], "grid_search() (in module neurotools.stats.grid_search)": [[191, "neurotools.stats.grid_search.grid_search"]], "neurotools.stats.grid_search": [[191, "module-neurotools.stats.grid_search"]], "bernoulliobservationapproximator (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.BernoulliObservationApproximator"]], "bernoulliobservationmodel (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.BernoulliObservationModel"]], "chisquarecoxapproximator (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.ChisquareCoxApproximator"]], "chisquarecoxmodel (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.ChisquareCoxModel"]], "diffusiongaussian (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.DiffusionGaussian"]], "gaussiancoxapproximator (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.GaussianCoxApproximator"]], "gaussiancoxmodel (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.GaussianCoxModel"]], "loggaussiancoxapproximator (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.LogGaussianCoxApproximator"]], "loggaussiancoxmodel (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.LogGaussianCoxModel"]], "mvgouupdate (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.MVGOUUpdate"]], "mvgupdate (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.MVGUpdate"]], "mvgaussian (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.MVGaussian"]], "mvloggaussiancox (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.MVLogGaussianCox"]], "mvloggaussiancox.mvpoissonapproximator (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.MVLogGaussianCox.MVPoissonApproximator"]], "ougaussian (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.OUGaussian"]], "poissonobservationapproximator (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.PoissonObservationApproximator"]], "poissonobservationmodel (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.PoissonObservationModel"]], "truncatedloggaussiancoxapproximator (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.TruncatedLogGaussianCoxApproximator"]], "truncatedloggaussiancoxmodel (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.TruncatedLogGaussianCoxModel"]], "truncatedpoissonobservationapproximator (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.TruncatedPoissonObservationApproximator"]], "truncatedpoissonobservationmodel (class in neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.TruncatedPoissonObservationModel"]], "backward_abstract() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.backward_abstract"]], "baum_welch() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.baum_welch"]], "bwd() (neurotools.stats.hmm.diffusiongaussian method)": [[193, "neurotools.stats.hmm.DiffusionGaussian.bwd"]], "bwd() (neurotools.stats.hmm.mvgouupdate method)": [[193, "neurotools.stats.hmm.MVGOUUpdate.bwd"]], "bwd() (neurotools.stats.hmm.mvgupdate method)": [[193, "neurotools.stats.hmm.MVGUpdate.bwd"]], "bwd() (neurotools.stats.hmm.ougaussian method)": [[193, "neurotools.stats.hmm.OUGaussian.bwd"]], "forward_abstract() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.forward_abstract"]], "forward_backward() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.forward_backward"]], "forward_backward_abstract() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.forward_backward_abstract"]], "fwd() (neurotools.stats.hmm.diffusiongaussian method)": [[193, "neurotools.stats.hmm.DiffusionGaussian.fwd"]], "fwd() (neurotools.stats.hmm.mvgouupdate method)": [[193, "neurotools.stats.hmm.MVGOUUpdate.fwd"]], "fwd() (neurotools.stats.hmm.mvgupdate method)": [[193, "neurotools.stats.hmm.MVGUpdate.fwd"]], "fwd() (neurotools.stats.hmm.ougaussian method)": [[193, "neurotools.stats.hmm.OUGaussian.fwd"]], "hasnan() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.hasNaN"]], "jump() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.jump"]], "lgcp_observation_minimizer() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.lgcp_observation_minimizer"]], "log_likelihood() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.log_likelihood"]], "neurotools.stats.hmm": [[193, "module-neurotools.stats.hmm"]], "poisson_baum_welch() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.poisson_baum_welch"]], "poisson_parameter_guess() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.poisson_parameter_guess"]], "poisson_viterbi_state_infer() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.poisson_viterbi_state_infer"]], "sample() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.sample"]], "viterbi() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.viterbi"]], "viterbi_log() (in module neurotools.stats.hmm)": [[193, "neurotools.stats.hmm.viterbi_log"]], "dkl_discrete() (in module neurotools.stats.information)": [[194, "neurotools.stats.information.DKL_discrete"]], "discrete_entropy_distribution() (in module neurotools.stats.information)": [[194, "neurotools.stats.information.discrete_entropy_distribution"]], "discrete_entropy_samples() (in module neurotools.stats.information)": [[194, "neurotools.stats.information.discrete_entropy_samples"]], "neurotools.stats.information": [[194, "module-neurotools.stats.information"]], "poisson_entropy_nats() (in module neurotools.stats.information)": [[194, "neurotools.stats.information.poisson_entropy_nats"]], "regularized_discrete_entropy() (in module neurotools.stats.information)": [[194, "neurotools.stats.information.regularized_discrete_entropy"]], "monte_carlo_expectation() (in module neurotools.stats.mcint)": [[198, "neurotools.stats.mcint.monte_carlo_expectation"]], "monte_carlo_moments() (in module neurotools.stats.mcint)": [[198, "neurotools.stats.mcint.monte_carlo_moments"]], "neurotools.stats.mcint": [[198, "module-neurotools.stats.mcint"]], "failureerror": [[199, "neurotools.stats.minimize.FailureError"], [265, "stats.minimize.FailureError"]], "minimize_retry() (in module neurotools.stats.minimize)": [[199, "neurotools.stats.minimize.minimize_retry"]], "neurotools.stats.minimize": [[199, "module-neurotools.stats.minimize"]], "neurotools.stats.mixtures": [[200, "module-neurotools.stats.mixtures"]], "two_class_poisson_mixture_model() (in module neurotools.stats.mixtures)": [[200, "neurotools.stats.mixtures.two_class_poisson_mixture_model"]], "logmode() (in module neurotools.stats.modefind)": [[201, "neurotools.stats.modefind.logmode"]], "logmodeplot() (in module neurotools.stats.modefind)": [[201, "neurotools.stats.modefind.logmodeplot"]], "modefind() (in module neurotools.stats.modefind)": [[201, "neurotools.stats.modefind.modefind"]], "neurotools.stats.modefind": [[201, "module-neurotools.stats.modefind"]], "peakfinder5() (in module neurotools.stats.modefind)": [[201, "neurotools.stats.modefind.peakfinder5"]], "benjamini_hochberg_positive_correlations() (in module neurotools.stats.pvalues)": [[203, "neurotools.stats.pvalues.benjamini_hochberg_positive_correlations"]], "bootstrap_compare_mean() (in module neurotools.stats.pvalues)": [[203, "neurotools.stats.pvalues.bootstrap_compare_mean"]], "bootstrap_compare_median() (in module neurotools.stats.pvalues)": [[203, "neurotools.stats.pvalues.bootstrap_compare_median"]], "bootstrap_compare_statistic_two_sided() (in module neurotools.stats.pvalues)": [[203, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided"]], "bootstrap_compare_statistic_two_sided_parallel() (in module neurotools.stats.pvalues)": [[203, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided_parallel"]], "bootstrap_mean() (in module neurotools.stats.pvalues)": [[203, "neurotools.stats.pvalues.bootstrap_mean"]], "bootstrap_median() (in module neurotools.stats.pvalues)": [[203, "neurotools.stats.pvalues.bootstrap_median"]], "bootstrap_statistic_two_sided() (in module neurotools.stats.pvalues)": [[203, "neurotools.stats.pvalues.bootstrap_statistic_two_sided"]], "correct_pvalues() (in module neurotools.stats.pvalues)": [[203, "neurotools.stats.pvalues.correct_pvalues"]], "correct_pvalues_positive_dependent() (in module neurotools.stats.pvalues)": [[203, "neurotools.stats.pvalues.correct_pvalues_positive_dependent"]], "neurotools.stats.pvalues": [[203, "module-neurotools.stats.pvalues"]], "damped_cosine() (in module neurotools.stats.regressions)": [[204, "neurotools.stats.regressions.damped_cosine"]], "exponential_decay() (in module neurotools.stats.regressions)": [[204, "neurotools.stats.regressions.exponential_decay"]], "gaussian_function() (in module neurotools.stats.regressions)": [[204, "neurotools.stats.regressions.gaussian_function"]], "half_gaussian_function() (in module neurotools.stats.regressions)": [[204, "neurotools.stats.regressions.half_gaussian_function"]], "neurotools.stats.regressions": [[204, "module-neurotools.stats.regressions"]], "power_law() (in module neurotools.stats.regressions)": [[204, "neurotools.stats.regressions.power_law"]], "robust_line() (in module neurotools.stats.regressions)": [[204, "neurotools.stats.regressions.robust_line"]], "weighted_least_squares() (in module neurotools.stats.regressions)": [[204, "neurotools.stats.regressions.weighted_least_squares"]], "neurotools.util": [[211, "module-neurotools.util"]], "dsigmoid() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.dsigmoid"]], "f() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.f"]], "f1() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.f1"]], "f2() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.f2"]], "g() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.g"]], "inversesigmoid() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.inversesigmoid"]], "log_factorial() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.log_factorial"]], "neurotools.util.functions": [[213, "module-neurotools.util.functions"]], "npdf() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.npdf"]], "sexp() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.sexp"]], "sigmoid() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.sigmoid"]], "slog() (in module neurotools.util.functions)": [[213, "neurotools.util.functions.slog"]], "ftwthr() (in module neurotools.util.getfftw)": [[214, "neurotools.util.getfftw.ftwthr"]], "neurotools.util.getfftw": [[214, "module-neurotools.util.getfftw"]], "gethdf() (in module neurotools.util.hdfmat)": [[215, "neurotools.util.hdfmat.getHDF"]], "gethdfvalue() (in module neurotools.util.hdfmat)": [[215, "neurotools.util.hdfmat.getHDFvalue"]], "hdf2dict() (in module neurotools.util.hdfmat)": [[215, "neurotools.util.hdfmat.hdf2dict"]], "neurotools.util.hdfmat": [[215, "module-neurotools.util.hdfmat"]], "printmathdf5() (in module neurotools.util.hdfmat)": [[215, "neurotools.util.hdfmat.printmatHDF5"]], "recursive_printmathdf5() (in module neurotools.util.hdfmat)": [[215, "neurotools.util.hdfmat.recursive_printmatHDF5"]], "eformat() (in module neurotools.util.string)": [[216, "neurotools.util.string.eformat"]], "hcat() (in module neurotools.util.string)": [[216, "neurotools.util.string.hcat"]], "incolumns() (in module neurotools.util.string)": [[216, "neurotools.util.string.incolumns"]], "isint() (in module neurotools.util.string)": [[216, "neurotools.util.string.isInt"]], "neurotools.util.string": [[216, "module-neurotools.util.string"]], "nicetable() (in module neurotools.util.string)": [[216, "neurotools.util.string.nicetable"]], "percent() (in module neurotools.util.string)": [[216, "neurotools.util.string.percent"]], "shortscientific() (in module neurotools.util.string)": [[216, "neurotools.util.string.shortscientific"]], "v2str() (in module neurotools.util.string)": [[216, "neurotools.util.string.v2str"]], "v2str_long() (in module neurotools.util.string)": [[216, "neurotools.util.string.v2str_long"]], "wordwrap() (in module neurotools.util.string)": [[216, "neurotools.util.string.wordwrap"]], "execfile() (in module neurotools.util.system)": [[217, "neurotools.util.system.execfile"]], "neurotools.util.system": [[217, "module-neurotools.util.system"]], "query_yes_no() (in module neurotools.util.system)": [[217, "neurotools.util.system.query_yes_no"]], "current_milli_time() (in module neurotools.util.time)": [[218, "neurotools.util.time.current_milli_time"]], "neurotools.util.time": [[218, "module-neurotools.util.time"]], "now() (in module neurotools.util.time)": [[218, "neurotools.util.time.now"]], "tic() (in module neurotools.util.time)": [[218, "neurotools.util.time.tic"]], "toc() (in module neurotools.util.time)": [[218, "neurotools.util.time.toc"]], "today() (in module neurotools.util.time)": [[218, "neurotools.util.time.today"]], "waitfor() (in module neurotools.util.time)": [[218, "neurotools.util.time.waitfor"]], "aap() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.aap"]], "add() (neurotools.util.tools.stuff method)": [[219, "neurotools.util.tools.stuff.add"]], "amap() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.amap"]], "arraymap() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.arraymap"]], "asiterable() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.asiterable"]], "c2p() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.c2p"]], "camel2underscore() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.camel2underscore"]], "clear() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.clear"]], "debug() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.debug"]], "dowarn() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.dowarn"]], "emitter (class in neurotools.util.tools)": [[219, "neurotools.util.tools.emitter"]], "ensure_dir() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.ensure_dir"]], "exists() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.exists"]], "ezip() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.ezip"]], "find() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.find"]], "find_all_extension() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.find_all_extension"]], "getvariable() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.getVariable"]], "getdict() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.getdict"]], "getsize() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.getsize"]], "globalize() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.globalize"]], "history() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.history"]], "invert_permutation() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.invert_permutation"]], "lap() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.lap"]], "lmap() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.lmap"]], "mapdict() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.mapdict"]], "matlab() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.matlab"]], "metaloadmat() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.metaloadmat"]], "neurotools.util.tools": [[219, "module-neurotools.util.tools"]], "nowarn() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.nowarn"]], "okwarn() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.okwarn"]], "oneslike() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.oneslike"]], "p2c() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.p2c"]], "piper (class in neurotools.util.tools)": [[219, "neurotools.util.tools.piper"]], "restorecontext() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.restoreContext"]], "savecontext() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.saveContext"]], "setinrange() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.setinrange"]], "slist() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.slist"]], "sls() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.sls"]], "stuff (class in neurotools.util.tools)": [[219, "neurotools.util.tools.stuff"]], "underscore2camel() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.underscore2camel"]], "varexists() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.varexists"]], "wait() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.wait"]], "warn() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.warn"]], "zeroslike() (in module neurotools.util.tools)": [[219, "neurotools.util.tools.zeroslike"]], "beta() (in module nlab)": [[220, "nlab.beta"]], "binomial() (in module nlab)": [[220, "nlab.binomial"]], "chisquare() (in module nlab)": [[220, "nlab.chisquare"]], "choice() (in module nlab)": [[220, "nlab.choice"]], "dirichlet() (in module nlab)": [[220, "nlab.dirichlet"]], "exponential() (in module nlab)": [[220, "nlab.exponential"]], "f() (in module nlab)": [[220, "nlab.f"]], "gamma() (in module nlab)": [[220, "nlab.gamma"]], "geometric() (in module nlab)": [[220, "nlab.geometric"]], "get_state() (in module nlab)": [[220, "nlab.get_state"]], "gumbel() (in module nlab)": [[220, "nlab.gumbel"]], "hypergeometric() (in module nlab)": [[220, "nlab.hypergeometric"]], "laplace() (in module nlab)": [[220, "nlab.laplace"]], "logistic() (in module nlab)": [[220, "nlab.logistic"]], "lognormal() (in module nlab)": [[220, "nlab.lognormal"]], "logseries() (in module nlab)": [[220, "nlab.logseries"]], "multinomial() (in module nlab)": [[220, "nlab.multinomial"]], "multivariate_normal() (in module nlab)": [[220, "nlab.multivariate_normal"]], "negative_binomial() (in module nlab)": [[220, "nlab.negative_binomial"]], "nlab": [[220, "module-nlab"]], "noncentral_chisquare() (in module nlab)": [[220, "nlab.noncentral_chisquare"]], "noncentral_f() (in module nlab)": [[220, "nlab.noncentral_f"]], "normal() (in module nlab)": [[220, "nlab.normal"]], "pareto() (in module nlab)": [[220, "nlab.pareto"]], "permutation() (in module nlab)": [[220, "nlab.permutation"]], "poisson() (in module nlab)": [[220, "nlab.poisson"]], "power() (in module nlab)": [[220, "nlab.power"]], "rand() (in module nlab)": [[220, "nlab.rand"]], "randint() (in module nlab)": [[220, "nlab.randint"]], "randn() (in module nlab)": [[220, "nlab.randn"]], "random() (in module nlab)": [[220, "nlab.random"]], "random_integers() (in module nlab)": [[220, "nlab.random_integers"]], "random_sample() (in module nlab)": [[220, "nlab.random_sample"]], "rayleigh() (in module nlab)": [[220, "nlab.rayleigh"]], "seed() (in module nlab)": [[220, "nlab.seed"]], "set_state() (in module nlab)": [[220, "nlab.set_state"]], "shuffle() (in module nlab)": [[220, "nlab.shuffle"]], "standard_cauchy() (in module nlab)": [[220, "nlab.standard_cauchy"]], "standard_exponential() (in module nlab)": [[220, "nlab.standard_exponential"]], "standard_gamma() (in module nlab)": [[220, "nlab.standard_gamma"]], "standard_normal() (in module nlab)": [[220, "nlab.standard_normal"]], "standard_t() (in module nlab)": [[220, "nlab.standard_t"]], "triangular() (in module nlab)": [[220, "nlab.triangular"]], "uniform() (in module nlab)": [[220, "nlab.uniform"]], "vonmises() (in module nlab)": [[220, "nlab.vonmises"]], "wald() (in module nlab)": [[220, "nlab.wald"]], "weibull() (in module nlab)": [[220, "nlab.weibull"]], "zipf() (in module nlab)": [[220, "nlab.zipf"]], "handlers (class in signal)": [[222, "signal.Handlers"]], "itimererror (in module signal)": [[222, "signal.ItimerError"]], "sigabrt (signal.signals attribute)": [[222, "signal.Signals.SIGABRT"]], "sigalrm (signal.signals attribute)": [[222, "signal.Signals.SIGALRM"]], "sigbus (signal.signals attribute)": [[222, "signal.Signals.SIGBUS"]], "sigchld (signal.signals attribute)": [[222, "signal.Signals.SIGCHLD"]], "sigcld (signal.signals attribute)": [[222, "signal.Signals.SIGCLD"]], "sigcont (signal.signals attribute)": [[222, "signal.Signals.SIGCONT"]], "sigfpe (signal.signals attribute)": [[222, "signal.Signals.SIGFPE"]], "sighup (signal.signals attribute)": [[222, "signal.Signals.SIGHUP"]], "sigill (signal.signals attribute)": [[222, "signal.Signals.SIGILL"]], "sigint (signal.signals attribute)": [[222, "signal.Signals.SIGINT"]], "sigio (signal.signals attribute)": [[222, "signal.Signals.SIGIO"]], "sigiot (signal.signals attribute)": [[222, "signal.Signals.SIGIOT"]], "sigkill (signal.signals attribute)": [[222, "signal.Signals.SIGKILL"]], "sigpipe (signal.signals attribute)": [[222, "signal.Signals.SIGPIPE"]], "sigpoll (signal.signals attribute)": [[222, "signal.Signals.SIGPOLL"]], "sigprof (signal.signals attribute)": [[222, "signal.Signals.SIGPROF"]], "sigpwr (signal.signals attribute)": [[222, "signal.Signals.SIGPWR"]], "sigquit (signal.signals attribute)": [[222, "signal.Signals.SIGQUIT"]], "sigrtmax (signal.signals attribute)": [[222, "signal.Signals.SIGRTMAX"]], "sigrtmin (signal.signals attribute)": [[222, "signal.Signals.SIGRTMIN"]], "sigsegv (signal.signals attribute)": [[222, "signal.Signals.SIGSEGV"]], "sigstop (signal.signals attribute)": [[222, "signal.Signals.SIGSTOP"]], "sigsys (signal.signals attribute)": [[222, "signal.Signals.SIGSYS"]], "sigterm (signal.signals attribute)": [[222, "signal.Signals.SIGTERM"]], "sigtrap (signal.signals attribute)": [[222, "signal.Signals.SIGTRAP"]], "sigtstp (signal.signals attribute)": [[222, "signal.Signals.SIGTSTP"]], "sigttin (signal.signals attribute)": [[222, "signal.Signals.SIGTTIN"]], "sigttou (signal.signals attribute)": [[222, "signal.Signals.SIGTTOU"]], "sigurg (signal.signals attribute)": [[222, "signal.Signals.SIGURG"]], "sigusr1 (signal.signals attribute)": [[222, "signal.Signals.SIGUSR1"]], "sigusr2 (signal.signals attribute)": [[222, "signal.Signals.SIGUSR2"]], "sigvtalrm (signal.signals attribute)": [[222, "signal.Signals.SIGVTALRM"]], "sigwinch (signal.signals attribute)": [[222, "signal.Signals.SIGWINCH"]], "sigxcpu (signal.signals attribute)": [[222, "signal.Signals.SIGXCPU"]], "sigxfsz (signal.signals attribute)": [[222, "signal.Signals.SIGXFSZ"]], "sig_block (signal.sigmasks attribute)": [[222, "signal.Sigmasks.SIG_BLOCK"]], "sig_dfl (signal.handlers attribute)": [[222, "signal.Handlers.SIG_DFL"]], "sig_ign (signal.handlers attribute)": [[222, "signal.Handlers.SIG_IGN"]], "sig_setmask (signal.sigmasks attribute)": [[222, "signal.Sigmasks.SIG_SETMASK"]], "sig_unblock (signal.sigmasks attribute)": [[222, "signal.Sigmasks.SIG_UNBLOCK"]], "sigmasks (class in signal)": [[222, "signal.Sigmasks"]], "signals (class in signal)": [[222, "signal.Signals"]], "amp() (in module signal)": [[222, "signal.amp"]], "ang() (in module signal)": [[222, "signal.ang"]], "arenear() (in module signal)": [[222, "signal.arenear"]], "aresafe() (in module signal)": [[222, "signal.aresafe"]], "autocorrelation() (in module signal)": [[222, "signal.autocorrelation"]], "band_stop_line_noise_removal() (in module signal)": [[222, "signal.band_stop_line_noise_removal"]], "bandpass_filter() (in module signal)": [[222, "signal.bandpass_filter"]], "box_filter() (in module signal)": [[222, "signal.box_filter"]], "circular_cosine_basis() (in module signal)": [[222, "signal.circular_cosine_basis"]], "circular_gaussian_smooth() (in module signal)": [[222, "signal.circular_gaussian_smooth"]], "circular_gaussian_smooth_2d() (in module signal)": [[222, "signal.circular_gaussian_smooth_2D"]], "complex_to_nan() (in module signal)": [[222, "signal.complex_to_nan"]], "deltaovermean() (in module signal)": [[222, "signal.deltaovermean"]], "drop_nonfinite() (in module signal)": [[222, "signal.drop_nonfinite"]], "estimate_padding() (in module signal)": [[222, "signal.estimate_padding"]], "fdiff() (in module signal)": [[222, "signal.fdiff"]], "fftacorr1d() (in module signal)": [[222, "signal.fftacorr1d"]], "fftsta() (in module signal)": [[222, "signal.fftsta"]], "fm_mod() (in module signal)": [[222, "signal.fm_mod"]], "fudge_derivative() (in module signal)": [[222, "signal.fudge_derivative"]], "gaussian_kernel() (in module signal)": [[222, "signal.gaussian_kernel"]], "gaussian_smooth() (in module signal)": [[222, "signal.gaussian_smooth"]], "gaussianize() (in module signal)": [[222, "signal.gaussianize"]], "geometric_window() (in module signal)": [[222, "signal.geometric_window"]], "get_edges() (in module signal)": [[222, "signal.get_edges"]], "get_snips() (in module signal)": [[222, "signal.get_snips"]], "get_triggered_stats() (in module signal)": [[222, "signal.get_triggered_stats"]], "getsignal() (in module signal)": [[222, "signal.getsignal"]], "highpass_filter() (in module signal)": [[222, "signal.highpass_filter"]], "ifreq() (in module signal)": [[222, "signal.ifreq"]], "interpmax1d() (in module signal)": [[222, "signal.interpmax1d"]], "interpolate_nan() (in module signal)": [[222, "signal.interpolate_NaN"]], "interpolate_nan_quadratic() (in module signal)": [[222, "signal.interpolate_NaN_quadratic"]], "invert_uniformize() (in module signal)": [[222, "signal.invert_uniformize"]], "killspikes() (in module signal)": [[222, "signal.killSpikes"]], "linear_cosine_basis() (in module signal)": [[222, "signal.linear_cosine_basis"]], "linfilter() (in module signal)": [[222, "signal.linfilter"]], "local_maxima() (in module signal)": [[222, "signal.local_maxima"]], "local_minima() (in module signal)": [[222, "signal.local_minima"]], "local_peak_within() (in module signal)": [[222, "signal.local_peak_within"]], "lowpass_filter() (in module signal)": [[222, "signal.lowpass_filter"]], "make_lagged() (in module signal)": [[222, "signal.make_lagged"]], "make_rebroadcast_slice() (in module signal)": [[222, "signal.make_rebroadcast_slice"]], "mean_block() (in module signal)": [[222, "signal.mean_block"]], "median_block() (in module signal)": [[222, "signal.median_block"]], "median_filter() (in module signal)": [[222, "signal.median_filter"]], "n_fields (signal.struct_siginfo attribute)": [[222, "signal.struct_siginfo.n_fields"]], "n_sequence_fields (signal.struct_siginfo attribute)": [[222, "signal.struct_siginfo.n_sequence_fields"]], "n_unnamed_fields (signal.struct_siginfo attribute)": [[222, "signal.struct_siginfo.n_unnamed_fields"]], "ndargmax() (in module signal)": [[222, "signal.ndargmax"]], "nice_interp() (in module signal)": [[222, "signal.nice_interp"]], "nonnegative_bandpass_filter() (in module signal)": [[222, "signal.nonnegative_bandpass_filter"]], "pad_signal() (in module signal)": [[222, "signal.pad_signal"]], "padin() (in module signal)": [[222, "signal.padin"]], "padout() (in module signal)": [[222, "signal.padout"]], "pdiff() (in module signal)": [[222, "signal.pdiff"]], "peak_within() (in module signal)": [[222, "signal.peak_within"]], "percentile_filter() (in module signal)": [[222, "signal.percentile_filter"]], "pghilbert() (in module signal)": [[222, "signal.pghilbert"]], "phase_randomize() (in module signal)": [[222, "signal.phase_randomize"]], "phase_randomize_from_amplitudes() (in module signal)": [[222, "signal.phase_randomize_from_amplitudes"]], "phase_rotate() (in module signal)": [[222, "signal.phase_rotate"]], "pieces() (in module signal)": [[222, "signal.pieces"]], "pthread_sigmask() (in module signal)": [[222, "signal.pthread_sigmask"]], "randband() (in module signal)": [[222, "signal.randband"]], "remove_gaps() (in module signal)": [[222, "signal.remove_gaps"]], "remove_short() (in module signal)": [[222, "signal.remove_short"]], "rewrap() (in module signal)": [[222, "signal.rewrap"]], "set_edges() (in module signal)": [[222, "signal.set_edges"]], "si_band (signal.struct_siginfo attribute)": [[222, "signal.struct_siginfo.si_band"]], "si_code (signal.struct_siginfo attribute)": [[222, "signal.struct_siginfo.si_code"]], "si_errno (signal.struct_siginfo attribute)": [[222, "signal.struct_siginfo.si_errno"]], "si_pid (signal.struct_siginfo attribute)": [[222, "signal.struct_siginfo.si_pid"]], "si_signo (signal.struct_siginfo attribute)": [[222, "signal.struct_siginfo.si_signo"]], "si_status (signal.struct_siginfo attribute)": [[222, "signal.struct_siginfo.si_status"]], "si_uid (signal.struct_siginfo attribute)": [[222, "signal.struct_siginfo.si_uid"]], "sign_preserving_amplitude_demodulate() (in module signal)": [[222, "signal.sign_preserving_amplitude_demodulate"]], "signal": [[222, "module-signal"]], "signal() (in module signal)": [[222, "signal.signal"]], "sigpending() (in module signal)": [[222, "signal.sigpending"]], "sigwait() (in module signal)": [[222, "signal.sigwait"]], "spaced_derivative() (in module signal)": [[222, "signal.spaced_derivative"]], "span() (in module signal)": [[222, "signal.span"]], "split_into_groups() (in module signal)": [[222, "signal.split_into_groups"]], "stats_block() (in module signal)": [[222, "signal.stats_block"]], "struct_siginfo (class in signal)": [[222, "signal.struct_siginfo"]], "take_axis() (in module signal)": [[222, "signal.take_axis"]], "take_axis_slice() (in module signal)": [[222, "signal.take_axis_slice"]], "topercentiles() (in module signal)": [[222, "signal.topercentiles"]], "triggered_average() (in module signal)": [[222, "signal.triggered_average"]], "uniformize() (in module signal)": [[222, "signal.uniformize"]], "unit_length() (in module signal)": [[222, "signal.unit_length"]], "unitscale() (in module signal)": [[222, "signal.unitscale"]], "unwrap() (in module signal)": [[222, "signal.unwrap"]], "upsample() (in module signal)": [[222, "signal.upsample"]], "valid_signals() (in module signal)": [[222, "signal.valid_signals"]], "var_block() (in module signal)": [[222, "signal.var_block"]], "variance_filter() (in module signal)": [[222, "signal.variance_filter"]], "virtual_reference_line_noise_removal() (in module signal)": [[222, "signal.virtual_reference_line_noise_removal"]], "zeromean() (in module signal)": [[222, "signal.zeromean"]], "zgrid() (in module signal)": [[222, "signal.zgrid"]], "zscore() (in module signal)": [[222, "signal.zscore"]], "convolve2dct() (in module signal.conv)": [[224, "signal.conv.convolve2dct"]], "gausskern1d() (in module signal.conv)": [[224, "signal.conv.gausskern1d"]], "gausskern2d() (in module signal.conv)": [[224, "signal.conv.gausskern2d"]], "mirror2d() (in module signal.conv)": [[224, "signal.conv.mirror2d"]], "reflect2d() (in module signal.conv)": [[224, "signal.conv.reflect2D"]], "reflect2d_1() (in module signal.conv)": [[224, "signal.conv.reflect2D_1"]], "separable2d() (in module signal.conv)": [[224, "signal.conv.separable2d"]], "signal.conv": [[224, "module-signal.conv"]], "fft_cwt() (in module signal.morlet)": [[226, "signal.morlet.fft_cwt"]], "fft_cwt_transposed() (in module signal.morlet)": [[226, "signal.morlet.fft_cwt_transposed"]], "fft_cwt_transposed_logspaced() (in module signal.morlet)": [[226, "signal.morlet.fft_cwt_transposed_logspaced"]], "logfreqs() (in module signal.morlet)": [[226, "signal.morlet.logfreqs"]], "normalized_morlet() (in module signal.morlet)": [[226, "signal.morlet.normalized_morlet"]], "population_synchrony_spectrum() (in module signal.morlet)": [[226, "signal.morlet.population_synchrony_spectrum"]], "prepare_wavelet_fft_basis() (in module signal.morlet)": [[226, "signal.morlet.prepare_wavelet_fft_basis"]], "prepare_wavelet_fft_basis_logspace() (in module signal.morlet)": [[226, "signal.morlet.prepare_wavelet_fft_basis_logspace"]], "signal.morlet": [[226, "module-signal.morlet"]], "dpss_cached() (in module signal.multitaper)": [[228, "signal.multitaper.dpss_cached"]], "multitaper_population_eigencoherence() (in module signal.multitaper)": [[228, "signal.multitaper.multitaper_population_eigencoherence"]], "multitaper_spectrum() (in module signal.multitaper)": [[228, "signal.multitaper.multitaper_spectrum"]], "multitaper_squared_spectrum() (in module signal.multitaper)": [[228, "signal.multitaper.multitaper_squared_spectrum"]], "signal.multitaper": [[228, "module-signal.multitaper"]], "sliding_multitaper_spectrum() (in module signal.multitaper)": [[228, "signal.multitaper.sliding_multitaper_spectrum"]], "discard_spikes_closer_than_delta() (in module signal.ppc)": [[229, "signal.ppc.discard_spikes_closer_than_delta"]], "estimate_bias_in_uncorrected_ppc() (in module signal.ppc)": [[229, "signal.ppc.estimate_bias_in_uncorrected_ppc"]], "fftppc() (in module signal.ppc)": [[229, "signal.ppc.fftppc"]], "fftppc_biased() (in module signal.ppc)": [[229, "signal.ppc.fftppc_biased"]], "fftppc_biased_multitaper() (in module signal.ppc)": [[229, "signal.ppc.fftppc_biased_multitaper"]], "fftppc_multitaper() (in module signal.ppc)": [[229, "signal.ppc.fftppc_multitaper"]], "pairwise_phase_consistancy() (in module signal.ppc)": [[229, "signal.ppc.pairwise_phase_consistancy"]], "phase_randomize() (in module signal.ppc)": [[229, "signal.ppc.phase_randomize"]], "phase_randomized_bias_correction() (in module signal.ppc)": [[229, "signal.ppc.phase_randomized_bias_correction"]], "ppc_chance_level() (in module signal.ppc)": [[229, "signal.ppc.ppc_chance_level"]], "ppc_phase_randomize_chance_level_sample() (in module signal.ppc)": [[229, "signal.ppc.ppc_phase_randomize_chance_level_sample"]], "signal.ppc": [[229, "module-signal.ppc"]], "sgkern() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGKern"]], "sgkerna() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGKernA"]], "sgkernj() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGKernJ"]], "sgkernv() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGKernV"]], "sgord() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGOrd"]], "sgaccelerate() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGaccelerate"]], "sgdifferentiate() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGdifferentiate"]], "sgfilt() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGfilt"]], "sgfilta() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGfiltA"]], "sgfiltj() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGfiltJ"]], "sgfiltv() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGfiltV"]], "sgjerk() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGjerk"]], "sgsmooth() (in module signal.savitskygolay)": [[231, "signal.savitskygolay.SGsmooth"]], "signal.savitskygolay": [[231, "module-signal.savitskygolay"]], "signal.signal": [[232, "module-signal.signal"]], "brute_force_local_2d_maxima() (in module spatial)": [[233, "spatial.brute_force_local_2d_maxima"]], "spatial": [[233, "module-spatial"]], "array_average_amplitude() (in module spatial.array)": [[234, "spatial.array.array_average_amplitude"]], "array_count_centers() (in module spatial.array)": [[234, "spatial.array.array_count_centers"]], "array_count_critical() (in module spatial.array)": [[234, "spatial.array.array_count_critical"]], "array_kuramoto() (in module spatial.array)": [[234, "spatial.array.array_kuramoto"]], "array_kuramoto_pgd() (in module spatial.array)": [[234, "spatial.array.array_kuramoto_pgd"]], "array_kuramoto_pgd_standard_deviation() (in module spatial.array)": [[234, "spatial.array.array_kuramoto_pgd_standard_deviation"]], "array_kuramoto_standard_deviation() (in module spatial.array)": [[234, "spatial.array.array_kuramoto_standard_deviation"]], "array_phase_gradient() (in module spatial.array)": [[234, "spatial.array.array_phase_gradient"]], "array_phasegradient_local() (in module spatial.array)": [[234, "spatial.array.array_phasegradient_local"]], "array_phasegradient_magnitude_cv() (in module spatial.array)": [[234, "spatial.array.array_phasegradient_magnitude_cv"]], "array_phasegradient_magnitude_sigma() (in module spatial.array)": [[234, "spatial.array.array_phasegradient_magnitude_sigma"]], "array_phasegradient_pgd_threshold() (in module spatial.array)": [[234, "spatial.array.array_phasegradient_pgd_threshold"]], "array_phasegradient_planar() (in module spatial.array)": [[234, "spatial.array.array_phasegradient_planar"]], "array_speed_local() (in module spatial.array)": [[234, "spatial.array.array_speed_local"]], "array_speed_pgd_threshold() (in module spatial.array)": [[234, "spatial.array.array_speed_pgd_threshold"]], "array_synchrony() (in module spatial.array)": [[234, "spatial.array.array_synchrony"]], "array_synchrony_pgd() (in module spatial.array)": [[234, "spatial.array.array_synchrony_pgd"]], "array_synchrony_pgd_standard_deviation() (in module spatial.array)": [[234, "spatial.array.array_synchrony_pgd_standard_deviation"]], "array_synchrony_standard_deviation() (in module spatial.array)": [[234, "spatial.array.array_synchrony_standard_deviation"]], "array_wavelength_local() (in module spatial.array)": [[234, "spatial.array.array_wavelength_local"]], "array_wavelength_local_pgd_threshold() (in module spatial.array)": [[234, "spatial.array.array_wavelength_local_pgd_threshold"]], "array_wavelength_pgd_threshold() (in module spatial.array)": [[234, "spatial.array.array_wavelength_pgd_threshold"]], "array_wavelength_planar() (in module spatial.array)": [[234, "spatial.array.array_wavelength_planar"]], "pack_array_data() (in module spatial.array)": [[234, "spatial.array.pack_array_data"]], "spatial.array": [[234, "module-spatial.array"]], "trim_array() (in module spatial.array)": [[234, "spatial.array.trim_array"]], "trim_array_as_if() (in module spatial.array)": [[234, "spatial.array.trim_array_as_if"]], "dct_cut() (in module spatial.dct)": [[235, "spatial.dct.dct_cut"]], "dct_cut_antialias() (in module spatial.dct)": [[235, "spatial.dct.dct_cut_antialias"]], "dct_cut_downsampled() (in module spatial.dct)": [[235, "spatial.dct.dct_cut_downsampled"]], "dct_upsample() (in module spatial.dct)": [[235, "spatial.dct.dct_upsample"]], "dct_upsample_notrim() (in module spatial.dct)": [[235, "spatial.dct.dct_upsample_notrim"]], "get_mask() (in module spatial.dct)": [[235, "spatial.dct.get_mask"]], "get_mask_antialiased() (in module spatial.dct)": [[235, "spatial.dct.get_mask_antialiased"]], "iterated_upsample() (in module spatial.dct)": [[235, "spatial.dct.iterated_upsample"]], "outer_complex() (in module spatial.dct)": [[235, "spatial.dct.outer_complex"]], "spatial.dct": [[235, "module-spatial.dct"]], "distance_angular_deviation() (in module spatial.distance)": [[236, "spatial.distance.distance_angular_deviation"]], "get_average_synchrony_length_constant_parallel() (in module spatial.distance)": [[236, "spatial.distance.get_average_synchrony_length_constant_parallel"]], "get_averaged_angular_distance() (in module spatial.distance)": [[236, "spatial.distance.get_averaged_angular_distance"]], "get_length_constant_trial() (in module spatial.distance)": [[236, "spatial.distance.get_length_constant_trial"]], "get_pair_distance() (in module spatial.distance)": [[236, "spatial.distance.get_pair_distance"]], "spatial.distance": [[236, "module-spatial.distance"]], "synchrony_length_constant_areas_summary() (in module spatial.distance)": [[236, "spatial.distance.synchrony_length_constant_areas_summary"]], "coalesce() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.coalesce"]], "coalesce_points() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.coalesce_points"]], "cut_array_data() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.cut_array_data"]], "dphidx() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.dPhidx"]], "dphidy() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.dPhidy"]], "find_critical_points() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.find_critical_points"]], "find_critical_potential_points() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.find_critical_potential_points"]], "get_critical_spectra() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.get_critical_spectra"]], "get_phase_gradient_as_complex() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.get_phase_gradient_as_complex"]], "getp() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.getp"]], "getpeaks2d() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.getpeaks2d"]], "grad() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.grad"]], "mirror2d() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.mirror2D"]], "plot_critical_points() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.plot_critical_points"]], "plot_critical_spectra() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.plot_critical_spectra"]], "plot_phase_direction() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.plot_phase_direction"]], "plot_phase_gradient() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.plot_phase_gradient"]], "quickgrad() (in module spatial.fftzeros)": [[237, "spatial.fftzeros.quickgrad"]], "spatial.fftzeros": [[237, "module-spatial.fftzeros"]], "absorbing_gaussian() (in module spatial.kernels)": [[238, "spatial.kernels.absorbing_gaussian"]], "absorbing_laplacian() (in module spatial.kernels)": [[238, "spatial.kernels.absorbing_laplacian"]], "continuum_kernel() (in module spatial.kernels)": [[238, "spatial.kernels.continuum_kernel"]], "cosine_kernel() (in module spatial.kernels)": [[238, "spatial.kernels.cosine_kernel"]], "diffusion_basis() (in module spatial.kernels)": [[238, "spatial.kernels.diffusion_basis"]], "exponential_basis() (in module spatial.kernels)": [[238, "spatial.kernels.exponential_basis"]], "gaussian_2d_kernel() (in module spatial.kernels)": [[238, "spatial.kernels.gaussian_2D_kernel"]], "iterative_orthogonalize_basis() (in module spatial.kernels)": [[238, "spatial.kernels.iterative_orthogonalize_basis"]], "laplace_kernel() (in module spatial.kernels)": [[238, "spatial.kernels.laplace_kernel"]], "laplacian() (in module spatial.kernels)": [[238, "spatial.kernels.laplacian"]], "log_cosine_basis() (in module spatial.kernels)": [[238, "spatial.kernels.log_cosine_basis"]], "log_spline_basis() (in module spatial.kernels)": [[238, "spatial.kernels.log_spline_basis"]], "magickernel() (in module spatial.kernels)": [[238, "spatial.kernels.magickernel"]], "magicsharp() (in module spatial.kernels)": [[238, "spatial.kernels.magicsharp"]], "make_cosine_basis() (in module spatial.kernels)": [[238, "spatial.kernels.make_cosine_basis"]], "spatial.kernels": [[238, "module-spatial.kernels"]], "analytic_signal_coherence() (in module spatial.phase)": [[239, "spatial.phase.analytic_signal_coherence"]], "population_average_amplitude() (in module spatial.phase)": [[239, "spatial.phase.population_average_amplitude"]], "population_kuramoto() (in module spatial.phase)": [[239, "spatial.phase.population_kuramoto"]], "population_median_frequency() (in module spatial.phase)": [[239, "spatial.phase.population_median_frequency"]], "population_median_phase_velocity() (in module spatial.phase)": [[239, "spatial.phase.population_median_phase_velocity"]], "population_normalized_sliding_signal_coherence() (in module spatial.phase)": [[239, "spatial.phase.population_normalized_sliding_signal_coherence"]], "population_phase_coherence() (in module spatial.phase)": [[239, "spatial.phase.population_phase_coherence"]], "population_phase_relative_sliding_kuramoto() (in module spatial.phase)": [[239, "spatial.phase.population_phase_relative_sliding_kuramoto"]], "population_polar_std() (in module spatial.phase)": [[239, "spatial.phase.population_polar_std"]], "population_signal_amplitude_dispersion() (in module spatial.phase)": [[239, "spatial.phase.population_signal_amplitude_dispersion"]], "population_signal_amplitude_precision() (in module spatial.phase)": [[239, "spatial.phase.population_signal_amplitude_precision"]], "population_signal_amplitude_std() (in module spatial.phase)": [[239, "spatial.phase.population_signal_amplitude_std"]], "population_signal_concentration() (in module spatial.phase)": [[239, "spatial.phase.population_signal_concentration"]], "population_signal_description() (in module spatial.phase)": [[239, "spatial.phase.population_signal_description"]], "population_signal_dispersion() (in module spatial.phase)": [[239, "spatial.phase.population_signal_dispersion"]], "population_signal_phase_dispersion() (in module spatial.phase)": [[239, "spatial.phase.population_signal_phase_dispersion"]], "population_signal_phase_precision() (in module spatial.phase)": [[239, "spatial.phase.population_signal_phase_precision"]], "population_signal_phase_std() (in module spatial.phase)": [[239, "spatial.phase.population_signal_phase_std"]], "population_signal_precision() (in module spatial.phase)": [[239, "spatial.phase.population_signal_precision"]], "population_sliding_signal_coherence() (in module spatial.phase)": [[239, "spatial.phase.population_sliding_signal_coherence"]], "population_synchrony() (in module spatial.phase)": [[239, "spatial.phase.population_synchrony"]], "population_synchrony_linear() (in module spatial.phase)": [[239, "spatial.phase.population_synchrony_linear"]], "sliding_population_signal_coherence() (in module spatial.phase)": [[239, "spatial.phase.sliding_population_signal_coherence"]], "spatial.phase": [[239, "module-spatial.phase"]], "interp_bin() (in module spatial.spiking)": [[241, "spatial.spiking.interp_bin"]], "spatial.spiking": [[241, "module-spatial.spiking"]], "coalesce() (in module spatial.triangulation)": [[242, "spatial.triangulation.coalesce"]], "edgesnearby() (in module spatial.triangulation)": [[242, "spatial.triangulation.edgesNearby"]], "mergenearby() (in module spatial.triangulation)": [[242, "spatial.triangulation.mergeNearby"]], "plot_edges() (in module spatial.triangulation)": [[242, "spatial.triangulation.plot_edges"]], "plot_triangles() (in module spatial.triangulation)": [[242, "spatial.triangulation.plot_triangles"]], "spatial.triangulation": [[242, "module-spatial.triangulation"]], "trianglestoedges() (in module spatial.triangulation)": [[242, "spatial.triangulation.trianglesToEdges"]], "uniquerow() (in module spatial.triangulation)": [[242, "spatial.triangulation.uniquerow"]], "z2xy() (in module spatial.triangulation)": [[242, "spatial.triangulation.z2xy"]], "spikes": [[244, "module-spikes"]], "bin_spike_times() (in module spikes.spikes)": [[245, "spikes.spikes.bin_spike_times"]], "bin_spikes_raster() (in module spikes.spikes)": [[245, "spikes.spikes.bin_spikes_raster"]], "cut_spikes() (in module spikes.spikes)": [[245, "spikes.spikes.cut_spikes"]], "pack_cross_correlation_matrix() (in module spikes.spikes)": [[245, "spikes.spikes.pack_cross_correlation_matrix"]], "pp_xcorr() (in module spikes.spikes)": [[245, "spikes.spikes.pp_xcorr"]], "spikes.spikes": [[245, "module-spikes.spikes"]], "times_to_raster() (in module spikes.spikes)": [[245, "spikes.spikes.times_to_raster"]], "txcorr() (in module spikes.spikes)": [[245, "spikes.spikes.txcorr"]], "getfwhm() (in module spikes.waveform)": [[246, "spikes.waveform.getFWHM"]], "getphp() (in module spikes.waveform)": [[246, "spikes.waveform.getPHP"]], "getpt() (in module spikes.waveform)": [[246, "spikes.waveform.getPT"]], "getpthw() (in module spikes.waveform)": [[246, "spikes.waveform.getPTHW"]], "getpvt() (in module spikes.waveform)": [[246, "spikes.waveform.getPVT"]], "getwahp() (in module spikes.waveform)": [[246, "spikes.waveform.getWAHP"]], "is_thin() (in module spikes.waveform)": [[246, "spikes.waveform.is_thin"]], "is_thin_pvt() (in module spikes.waveform)": [[246, "spikes.waveform.is_thin_pvt"]], "minmax() (in module spikes.waveform)": [[246, "spikes.waveform.minmax"]], "normalized_waveform() (in module spikes.waveform)": [[246, "spikes.waveform.normalized_waveform"]], "process() (in module spikes.waveform)": [[246, "spikes.waveform.process"]], "realign() (in module spikes.waveform)": [[246, "spikes.waveform.realign"]], "spikes.waveform": [[246, "module-spikes.waveform"]], "add_constant() (in module stats)": [[247, "stats.add_constant"]], "block_shuffle() (in module stats)": [[247, "stats.block_shuffle"]], "covariance() (in module stats)": [[247, "stats.covariance"]], "crossvalidated_least_squares() (in module stats)": [[247, "stats.crossvalidated_least_squares"]], "description (class in stats)": [[247, "stats.description"]], "glmfit() (in module stats)": [[247, "stats.glmfit"]], "nrmse() (in module stats)": [[247, "stats.nrmse"]], "outliers() (in module stats)": [[247, "stats.outliers"]], "partition_data() (in module stats)": [[247, "stats.partition_data"]], "partition_data_for_crossvalidation() (in module stats)": [[247, "stats.partition_data_for_crossvalidation"]], "partition_trials_for_crossvalidation() (in module stats)": [[247, "stats.partition_trials_for_crossvalidation"]], "pca() (in module stats)": [[247, "stats.pca"]], "polar_error() (in module stats)": [[247, "stats.polar_error"]], "print_stats() (in module stats)": [[247, "stats.print_stats"]], "reject_outliers() (in module stats)": [[247, "stats.reject_outliers"]], "short() (stats.description method)": [[247, "stats.description.short"]], "stats": [[247, "module-stats"]], "trial_crossvalidated_least_squares() (in module stats)": [[247, "stats.trial_crossvalidated_least_squares"]], "weighted_avg_and_std() (in module stats)": [[247, "stats.weighted_avg_and_std"]], "autocorrelation_bayes() (in module stats.convolutional)": [[251, "stats.convolutional.autocorrelation_bayes"]], "blockccm() (in module stats.convolutional)": [[251, "stats.convolutional.blockccm"]], "blocksta() (in module stats.convolutional)": [[251, "stats.convolutional.blocksta"]], "ccm() (in module stats.convolutional)": [[251, "stats.convolutional.ccm"]], "ccor() (in module stats.convolutional)": [[251, "stats.convolutional.ccor"]], "construct_lowpass_operator() (in module stats.convolutional)": [[251, "stats.convolutional.construct_lowpass_operator"]], "create_spectral_model() (in module stats.convolutional)": [[251, "stats.convolutional.create_spectral_model"]], "cspect() (in module stats.convolutional)": [[251, "stats.convolutional.cspect"]], "cspectm() (in module stats.convolutional)": [[251, "stats.convolutional.cspectm"]], "reconstruct() (in module stats.convolutional)": [[251, "stats.convolutional.reconstruct"]], "spectreconstruct() (in module stats.convolutional)": [[251, "stats.convolutional.spectreconstruct"]], "spike_lfp_filters() (in module stats.convolutional)": [[251, "stats.convolutional.spike_lfp_filters"]], "sta() (in module stats.convolutional)": [[251, "stats.convolutional.sta"]], "stats.convolutional": [[251, "module-stats.convolutional"]], "adaptive_density_grid() (in module stats.density)": [[252, "stats.density.adaptive_density_grid"]], "gridhist() (in module stats.density)": [[252, "stats.density.gridhist"]], "kdepeak() (in module stats.density)": [[252, "stats.density.kdepeak"]], "knn_1d_density() (in module stats.density)": [[252, "stats.density.knn_1d_density"]], "stats.density": [[252, "module-stats.density"]], "explogpdf() (in module stats.distributions)": [[253, "stats.distributions.explogpdf"]], "gaussian_logpdf() (in module stats.distributions)": [[253, "stats.distributions.gaussian_logpdf"]], "gaussian_pdf() (in module stats.distributions)": [[253, "stats.distributions.gaussian_pdf"]], "poisson_logpdf() (in module stats.distributions)": [[253, "stats.distributions.poisson_logpdf"]], "poisson_pdf() (in module stats.distributions)": [[253, "stats.distributions.poisson_pdf"]], "sample_categorical() (in module stats.distributions)": [[253, "stats.distributions.sample_categorical"]], "stats.distributions": [[253, "module-stats.distributions"]], "fast_kde() (in module stats.fast_kde)": [[255, "stats.fast_kde.fast_kde"]], "image_cov() (in module stats.fast_kde)": [[255, "stats.fast_kde.image_cov"]], "stats.fast_kde": [[255, "module-stats.fast_kde"]], "glmpenaltybernoulli() (in module stats.glm)": [[256, "stats.glm.GLMPenaltyBernoulli"]], "glmpenaltyl2() (in module stats.glm)": [[256, "stats.glm.GLMPenaltyL2"]], "glmpenaltypoisson() (in module stats.glm)": [[256, "stats.glm.GLMPenaltyPoisson"]], "cosine_kernel() (in module stats.glm)": [[256, "stats.glm.cosine_kernel"]], "crossvalidatedauc() (in module stats.glm)": [[256, "stats.glm.crossvalidatedAUC"]], "fitglm() (in module stats.glm)": [[256, "stats.glm.fitGLM"]], "gradientglmfit() (in module stats.glm)": [[256, "stats.glm.gradientglmfit"]], "log_cosine_basis() (in module stats.glm)": [[256, "stats.glm.log_cosine_basis"]], "make_cosine_basis() (in module stats.glm)": [[256, "stats.glm.make_cosine_basis"]], "numeric_grad() (in module stats.glm)": [[256, "stats.glm.numeric_grad"]], "numeric_hess() (in module stats.glm)": [[256, "stats.glm.numeric_hess"]], "ppglmfit() (in module stats.glm)": [[256, "stats.glm.ppglmfit"]], "sexp() (in module stats.glm)": [[256, "stats.glm.sexp"]], "sigmoid() (in module stats.glm)": [[256, "stats.glm.sigmoid"]], "stats.glm": [[256, "module-stats.glm"]], "bernoulliobservationapproximator (class in stats.hmm)": [[259, "stats.hmm.BernoulliObservationApproximator"]], "bernoulliobservationmodel (class in stats.hmm)": [[259, "stats.hmm.BernoulliObservationModel"]], "chisquarecoxapproximator (class in stats.hmm)": [[259, "stats.hmm.ChisquareCoxApproximator"]], "chisquarecoxmodel (class in stats.hmm)": [[259, "stats.hmm.ChisquareCoxModel"]], "diffusiongaussian (class in stats.hmm)": [[259, "stats.hmm.DiffusionGaussian"]], "gaussiancoxapproximator (class in stats.hmm)": [[259, "stats.hmm.GaussianCoxApproximator"]], "gaussiancoxmodel (class in stats.hmm)": [[259, "stats.hmm.GaussianCoxModel"]], "loggaussiancoxapproximator (class in stats.hmm)": [[259, "stats.hmm.LogGaussianCoxApproximator"]], "loggaussiancoxmodel (class in stats.hmm)": [[259, "stats.hmm.LogGaussianCoxModel"]], "mvgouupdate (class in stats.hmm)": [[259, "stats.hmm.MVGOUUpdate"]], "mvgupdate (class in stats.hmm)": [[259, "stats.hmm.MVGUpdate"]], "mvgaussian (class in stats.hmm)": [[259, "stats.hmm.MVGaussian"]], "mvloggaussiancox (class in stats.hmm)": [[259, "stats.hmm.MVLogGaussianCox"]], "mvloggaussiancox.mvpoissonapproximator (class in stats.hmm)": [[259, "stats.hmm.MVLogGaussianCox.MVPoissonApproximator"]], "ougaussian (class in stats.hmm)": [[259, "stats.hmm.OUGaussian"]], "poissonobservationapproximator (class in stats.hmm)": [[259, "stats.hmm.PoissonObservationApproximator"]], "poissonobservationmodel (class in stats.hmm)": [[259, "stats.hmm.PoissonObservationModel"]], "truncatedloggaussiancoxapproximator (class in stats.hmm)": [[259, "stats.hmm.TruncatedLogGaussianCoxApproximator"]], "truncatedloggaussiancoxmodel (class in stats.hmm)": [[259, "stats.hmm.TruncatedLogGaussianCoxModel"]], "truncatedpoissonobservationapproximator (class in stats.hmm)": [[259, "stats.hmm.TruncatedPoissonObservationApproximator"]], "truncatedpoissonobservationmodel (class in stats.hmm)": [[259, "stats.hmm.TruncatedPoissonObservationModel"]], "backward_abstract() (in module stats.hmm)": [[259, "stats.hmm.backward_abstract"]], "baum_welch() (in module stats.hmm)": [[259, "stats.hmm.baum_welch"]], "bwd() (stats.hmm.diffusiongaussian method)": [[259, "stats.hmm.DiffusionGaussian.bwd"]], "bwd() (stats.hmm.mvgouupdate method)": [[259, "stats.hmm.MVGOUUpdate.bwd"]], "bwd() (stats.hmm.mvgupdate method)": [[259, "stats.hmm.MVGUpdate.bwd"]], "bwd() (stats.hmm.ougaussian method)": [[259, "stats.hmm.OUGaussian.bwd"]], "forward_abstract() (in module stats.hmm)": [[259, "stats.hmm.forward_abstract"]], "forward_backward() (in module stats.hmm)": [[259, "stats.hmm.forward_backward"]], "forward_backward_abstract() (in module stats.hmm)": [[259, "stats.hmm.forward_backward_abstract"]], "fwd() (stats.hmm.diffusiongaussian method)": [[259, "stats.hmm.DiffusionGaussian.fwd"]], "fwd() (stats.hmm.mvgouupdate method)": [[259, "stats.hmm.MVGOUUpdate.fwd"]], "fwd() (stats.hmm.mvgupdate method)": [[259, "stats.hmm.MVGUpdate.fwd"]], "fwd() (stats.hmm.ougaussian method)": [[259, "stats.hmm.OUGaussian.fwd"]], "hasnan() (in module stats.hmm)": [[259, "stats.hmm.hasNaN"]], "jump() (in module stats.hmm)": [[259, "stats.hmm.jump"]], "lgcp_observation_minimizer() (in module stats.hmm)": [[259, "stats.hmm.lgcp_observation_minimizer"]], "log_likelihood() (in module stats.hmm)": [[259, "stats.hmm.log_likelihood"]], "poisson_baum_welch() (in module stats.hmm)": [[259, "stats.hmm.poisson_baum_welch"]], "poisson_parameter_guess() (in module stats.hmm)": [[259, "stats.hmm.poisson_parameter_guess"]], "poisson_viterbi_state_infer() (in module stats.hmm)": [[259, "stats.hmm.poisson_viterbi_state_infer"]], "sample() (in module stats.hmm)": [[259, "stats.hmm.sample"]], "stats.hmm": [[259, "module-stats.hmm"]], "viterbi() (in module stats.hmm)": [[259, "stats.hmm.viterbi"]], "viterbi_log() (in module stats.hmm)": [[259, "stats.hmm.viterbi_log"]], "dkl_discrete() (in module stats.information)": [[260, "stats.information.DKL_discrete"]], "discrete_entropy_distribution() (in module stats.information)": [[260, "stats.information.discrete_entropy_distribution"]], "discrete_entropy_samples() (in module stats.information)": [[260, "stats.information.discrete_entropy_samples"]], "poisson_entropy_nats() (in module stats.information)": [[260, "stats.information.poisson_entropy_nats"]], "regularized_discrete_entropy() (in module stats.information)": [[260, "stats.information.regularized_discrete_entropy"]], "stats.information": [[260, "module-stats.information"]], "monte_carlo_expectation() (in module stats.mcint)": [[264, "stats.mcint.monte_carlo_expectation"]], "monte_carlo_moments() (in module stats.mcint)": [[264, "stats.mcint.monte_carlo_moments"]], "stats.mcint": [[264, "module-stats.mcint"]], "minimize_retry() (in module stats.minimize)": [[265, "stats.minimize.minimize_retry"]], "stats.minimize": [[265, "module-stats.minimize"]], "stats.mixtures": [[266, "module-stats.mixtures"]], "two_class_poisson_mixture_model() (in module stats.mixtures)": [[266, "stats.mixtures.two_class_poisson_mixture_model"]], "logmode() (in module stats.modefind)": [[267, "stats.modefind.logmode"]], "logmodeplot() (in module stats.modefind)": [[267, "stats.modefind.logmodeplot"]], "modefind() (in module stats.modefind)": [[267, "stats.modefind.modefind"]], "peakfinder5() (in module stats.modefind)": [[267, "stats.modefind.peakfinder5"]], "stats.modefind": [[267, "module-stats.modefind"]], "benjamini_hochberg_positive_correlations() (in module stats.pvalues)": [[269, "stats.pvalues.benjamini_hochberg_positive_correlations"]], "bootstrap_compare_mean() (in module stats.pvalues)": [[269, "stats.pvalues.bootstrap_compare_mean"]], "bootstrap_compare_median() (in module stats.pvalues)": [[269, "stats.pvalues.bootstrap_compare_median"]], "bootstrap_compare_statistic_two_sided() (in module stats.pvalues)": [[269, "stats.pvalues.bootstrap_compare_statistic_two_sided"]], "bootstrap_compare_statistic_two_sided_parallel() (in module stats.pvalues)": [[269, "stats.pvalues.bootstrap_compare_statistic_two_sided_parallel"]], "bootstrap_mean() (in module stats.pvalues)": [[269, "stats.pvalues.bootstrap_mean"]], "bootstrap_median() (in module stats.pvalues)": [[269, "stats.pvalues.bootstrap_median"]], "bootstrap_statistic_two_sided() (in module stats.pvalues)": [[269, "stats.pvalues.bootstrap_statistic_two_sided"]], "correct_pvalues() (in module stats.pvalues)": [[269, "stats.pvalues.correct_pvalues"]], "correct_pvalues_positive_dependent() (in module stats.pvalues)": [[269, "stats.pvalues.correct_pvalues_positive_dependent"]], "stats.pvalues": [[269, "module-stats.pvalues"]], "damped_cosine() (in module stats.regressions)": [[270, "stats.regressions.damped_cosine"]], "exponential_decay() (in module stats.regressions)": [[270, "stats.regressions.exponential_decay"]], "gaussian_function() (in module stats.regressions)": [[270, "stats.regressions.gaussian_function"]], "half_gaussian_function() (in module stats.regressions)": [[270, "stats.regressions.half_gaussian_function"]], "power_law() (in module stats.regressions)": [[270, "stats.regressions.power_law"]], "robust_line() (in module stats.regressions)": [[270, "stats.regressions.robust_line"]], "stats.regressions": [[270, "module-stats.regressions"]], "weighted_least_squares() (in module stats.regressions)": [[270, "stats.regressions.weighted_least_squares"]], "execfile() (in module system)": [[274, "system.execfile"]], "query_yes_no() (in module system)": [[274, "system.query_yes_no"]], "system": [[274, "module-system"]], "aap() (in module tools)": [[275, "tools.aap"]], "add() (tools.stuff method)": [[275, "tools.stuff.add"]], "amap() (in module tools)": [[275, "tools.amap"]], "arraymap() (in module tools)": [[275, "tools.arraymap"]], "asiterable() (in module tools)": [[275, "tools.asiterable"]], "c2p() (in module tools)": [[275, "tools.c2p"]], "camel2underscore() (in module tools)": [[275, "tools.camel2underscore"]], "clear() (in module tools)": [[275, "tools.clear"]], "debug() (in module tools)": [[275, "tools.debug"]], "dowarn() (in module tools)": [[275, "tools.dowarn"]], "emitter (class in tools)": [[275, "tools.emitter"]], "ensure_dir() (in module tools)": [[275, "tools.ensure_dir"]], "exists() (in module tools)": [[275, "tools.exists"]], "ezip() (in module tools)": [[275, "tools.ezip"]], "find() (in module tools)": [[275, "tools.find"]], "find_all_extension() (in module tools)": [[275, "tools.find_all_extension"]], "getvariable() (in module tools)": [[275, "tools.getVariable"]], "getdict() (in module tools)": [[275, "tools.getdict"]], "getsize() (in module tools)": [[275, "tools.getsize"]], "globalize() (in module tools)": [[275, "tools.globalize"]], "history() (in module tools)": [[275, "tools.history"]], "invert_permutation() (in module tools)": [[275, "tools.invert_permutation"]], "lap() (in module tools)": [[275, "tools.lap"]], "lmap() (in module tools)": [[275, "tools.lmap"]], "mapdict() (in module tools)": [[275, "tools.mapdict"]], "matlab() (in module tools)": [[275, "tools.matlab"]], "metaloadmat() (in module tools)": [[275, "tools.metaloadmat"]], "nowarn() (in module tools)": [[275, "tools.nowarn"]], "okwarn() (in module tools)": [[275, "tools.okwarn"]], "oneslike() (in module tools)": [[275, "tools.oneslike"]], "p2c() (in module tools)": [[275, "tools.p2c"]], "piper (class in tools)": [[275, "tools.piper"]], "restorecontext() (in module tools)": [[275, "tools.restoreContext"]], "savecontext() (in module tools)": [[275, "tools.saveContext"]], "setinrange() (in module tools)": [[275, "tools.setinrange"]], "slist() (in module tools)": [[275, "tools.slist"]], "sls() (in module tools)": [[275, "tools.sls"]], "stuff (class in tools)": [[275, "tools.stuff"]], "tools": [[275, "module-tools"]], "underscore2camel() (in module tools)": [[275, "tools.underscore2camel"]], "varexists() (in module tools)": [[275, "tools.varexists"]], "wait() (in module tools)": [[275, "tools.wait"]], "warn() (in module tools)": [[275, "tools.warn"]], "zeroslike() (in module tools)": [[275, "tools.zeroslike"]]}})