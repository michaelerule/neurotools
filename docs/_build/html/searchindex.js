Search.setIndex({"docnames": ["dependencies", "functions", "getfftw", "gpu", "gpu.cl", "gpu.cl.device", "gpu.cl.function", "gpu.cl.matrix", "gpu.cpu", "gpu.cpu.util", "gpu.cu", "gpu.cu.convolution", "gpu.cu.device", "gpu.cu.function", "gpu.cu.gpufun", "gpu.cu.graph", "gpu.cu.logic", "gpu.cu.matrix", "gpu.cu.plot", "gpu.cu.sequence", "gpu.cu.statistics", "graphics", "graphics.color", "graphics.image", "graphics.matplotlib", "graphics.plot", "graphics.pygame", "index", "jobs", "jobs.cache", "jobs.closure", "jobs.decorator", "jobs.filenames", "jobs.initialize_system_cache", "jobs.parallel", "linalg", "linalg.arguments", "linalg.matrix", "linalg.operators", "models", "models.izh", "models.lif", "models.rbm", "models.rbm.rbm", "models.rbm.rbm_helper", "models.rbm.rbm_sample", "models.rbm.rbm_utils", "models.rbm.rbm_utils.rbm", "models.rbm.rbm_utils.stutils", "modules", "neurotools", "neurotools.dependencies", "neurotools.encoding", "neurotools.encoding.Huffman", "neurotools.encoding.NaryHuffman", "neurotools.functions", "neurotools.getfftw", "neurotools.gpu", "neurotools.gpu.cl", "neurotools.gpu.cl.device", "neurotools.gpu.cl.function", "neurotools.gpu.cl.matrix", "neurotools.gpu.cpu", "neurotools.gpu.cpu.util", "neurotools.gpu.cu", "neurotools.gpu.cu.convolution", "neurotools.gpu.cu.device", "neurotools.gpu.cu.function", "neurotools.gpu.cu.gpufun", "neurotools.gpu.cu.graph", "neurotools.gpu.cu.logic", "neurotools.gpu.cu.matrix", "neurotools.gpu.cu.plot", "neurotools.gpu.cu.sequence", "neurotools.gpu.cu.statistics", "neurotools.graphics", "neurotools.graphics.color", "neurotools.graphics.colormaps", "neurotools.graphics.dendron", "neurotools.graphics.fabio_maps", "neurotools.graphics.image", "neurotools.graphics.matplotlib", "neurotools.graphics.plot", "neurotools.graphics.pygame", "neurotools.graphics.ztransform_plot_helpers", "neurotools.hdfmat", "neurotools.jobs", "neurotools.jobs.cache", "neurotools.jobs.closure", "neurotools.jobs.filenames", "neurotools.jobs.initialize_system_cache", "neurotools.jobs.ndecorator", "neurotools.jobs.parallel", "neurotools.linalg", "neurotools.linalg.arguments", "neurotools.linalg.matrix", "neurotools.linalg.operators", "neurotools.models", "neurotools.models.izh", "neurotools.models.lif", "neurotools.models.rbm", "neurotools.models.rbm.rbm", "neurotools.models.rbm.rbm_helper", "neurotools.models.rbm.rbm_sample", "neurotools.models.rbm.rbm_utils", "neurotools.models.rbm.rbm_utils.rbm", "neurotools.models.rbm.rbm_utils.stutils", "neurotools.nlab", "neurotools.opto", "neurotools.signal", "neurotools.signal.coherence", "neurotools.signal.conv", "neurotools.signal.linenoise", "neurotools.signal.morlet", "neurotools.signal.morlet_coherence", "neurotools.signal.multitaper", "neurotools.signal.ppc", "neurotools.signal.resonator", "neurotools.signal.savitskygolay", "neurotools.signal.signal", "neurotools.spatial", "neurotools.spatial.array", "neurotools.spatial.dct", "neurotools.spatial.distance", "neurotools.spatial.fftzeros", "neurotools.spatial.geometry", "neurotools.spatial.kernels", "neurotools.spatial.masking", "neurotools.spatial.phase", "neurotools.spatial.points", "neurotools.spatial.spatialPSD", "neurotools.spatial.spiking", "neurotools.spatial.triangulation", "neurotools.spatial.wave_parametric_models", "neurotools.spikes", "neurotools.spikes.spikes", "neurotools.spikes.waveform", "neurotools.stats", "neurotools.stats.GLMFit", "neurotools.stats.Gaussian", "neurotools.stats.circular", "neurotools.stats.convolutional", "neurotools.stats.density", "neurotools.stats.distributions", "neurotools.stats.entropy", "neurotools.stats.fast_kde", "neurotools.stats.glm", "neurotools.stats.gmm", "neurotools.stats.grid_search", "neurotools.stats.history_basis", "neurotools.stats.hmm", "neurotools.stats.information", "neurotools.stats.kent_reimann", "neurotools.stats.lessons", "neurotools.stats.matzner_bar-gad_PLoS_2015", "neurotools.stats.mcint", "neurotools.stats.minimize", "neurotools.stats.mixtures", "neurotools.stats.modefind", "neurotools.stats.mvg", "neurotools.stats.pvalues", "neurotools.stats.regressions", "neurotools.stats.sde", "neurotools.stats.spatiotemporal_glm_utils", "neurotools.stats.stats", "neurotools.system", "neurotools.text", "neurotools.tools", "nlab", "opto", "signal", "signal.coherence", "signal.conv", "signal.linenoise", "signal.morlet", "signal.morlet_coherence", "signal.multitaper", "signal.ppc", "signal.resonator", "signal.savitskygolay", "signal.signal", "spatial", "spatial.array", "spatial.dct", "spatial.distance", "spatial.fftzeros", "spatial.kernels", "spatial.phase", "spatial.spatialPSD", "spatial.spiking", "spatial.triangulation", "spatial.wave_parametric_models", "spikes", "spikes.spikes", "spikes.waveform", "stats", "stats.GLMFit", "stats.Gaussian", "stats.circular", "stats.convolutional", "stats.density", "stats.distributions", "stats.entropy", "stats.fast_kde", "stats.glm", "stats.gmm", "stats.history_basis", "stats.hmm", "stats.information", "stats.kent_reimann", "stats.lessons", "stats.matzner_bar-gad_PLoS_2015", "stats.mcint", "stats.minimize", "stats.mixtures", "stats.modefind", "stats.mvg", "stats.pvalues", "stats.regressions", "stats.sde", "stats.spatiotemporal_glm_utils", "stats.stats", "system", "tools"], "filenames": ["dependencies.rst", "functions.rst", "getfftw.rst", "gpu.rst", "gpu.cl.rst", "gpu.cl.device.rst", "gpu.cl.function.rst", "gpu.cl.matrix.rst", "gpu.cpu.rst", "gpu.cpu.util.rst", "gpu.cu.rst", "gpu.cu.convolution.rst", "gpu.cu.device.rst", "gpu.cu.function.rst", "gpu.cu.gpufun.rst", "gpu.cu.graph.rst", "gpu.cu.logic.rst", "gpu.cu.matrix.rst", "gpu.cu.plot.rst", "gpu.cu.sequence.rst", "gpu.cu.statistics.rst", "graphics.rst", "graphics.color.rst", "graphics.image.rst", "graphics.matplotlib.rst", "graphics.plot.rst", "graphics.pygame.rst", "index.rst", "jobs.rst", "jobs.cache.rst", "jobs.closure.rst", "jobs.decorator.rst", "jobs.filenames.rst", "jobs.initialize_system_cache.rst", "jobs.parallel.rst", "linalg.rst", "linalg.arguments.rst", "linalg.matrix.rst", "linalg.operators.rst", "models.rst", "models.izh.rst", "models.lif.rst", "models.rbm.rst", "models.rbm.rbm.rst", "models.rbm.rbm_helper.rst", "models.rbm.rbm_sample.rst", "models.rbm.rbm_utils.rst", "models.rbm.rbm_utils.rbm.rst", "models.rbm.rbm_utils.stutils.rst", "modules.rst", "neurotools.rst", "neurotools.dependencies.rst", "neurotools.encoding.rst", "neurotools.encoding.Huffman.rst", "neurotools.encoding.NaryHuffman.rst", "neurotools.functions.rst", "neurotools.getfftw.rst", "neurotools.gpu.rst", "neurotools.gpu.cl.rst", "neurotools.gpu.cl.device.rst", "neurotools.gpu.cl.function.rst", "neurotools.gpu.cl.matrix.rst", "neurotools.gpu.cpu.rst", "neurotools.gpu.cpu.util.rst", "neurotools.gpu.cu.rst", "neurotools.gpu.cu.convolution.rst", "neurotools.gpu.cu.device.rst", "neurotools.gpu.cu.function.rst", "neurotools.gpu.cu.gpufun.rst", "neurotools.gpu.cu.graph.rst", "neurotools.gpu.cu.logic.rst", "neurotools.gpu.cu.matrix.rst", "neurotools.gpu.cu.plot.rst", "neurotools.gpu.cu.sequence.rst", "neurotools.gpu.cu.statistics.rst", "neurotools.graphics.rst", "neurotools.graphics.color.rst", "neurotools.graphics.colormaps.rst", "neurotools.graphics.dendron.rst", "neurotools.graphics.fabio_maps.rst", "neurotools.graphics.image.rst", "neurotools.graphics.matplotlib.rst", "neurotools.graphics.plot.rst", "neurotools.graphics.pygame.rst", "neurotools.graphics.ztransform_plot_helpers.rst", "neurotools.hdfmat.rst", "neurotools.jobs.rst", "neurotools.jobs.cache.rst", "neurotools.jobs.closure.rst", "neurotools.jobs.filenames.rst", "neurotools.jobs.initialize_system_cache.rst", "neurotools.jobs.ndecorator.rst", "neurotools.jobs.parallel.rst", "neurotools.linalg.rst", "neurotools.linalg.arguments.rst", "neurotools.linalg.matrix.rst", "neurotools.linalg.operators.rst", "neurotools.models.rst", "neurotools.models.izh.rst", "neurotools.models.lif.rst", "neurotools.models.rbm.rst", "neurotools.models.rbm.rbm.rst", "neurotools.models.rbm.rbm_helper.rst", "neurotools.models.rbm.rbm_sample.rst", "neurotools.models.rbm.rbm_utils.rst", "neurotools.models.rbm.rbm_utils.rbm.rst", "neurotools.models.rbm.rbm_utils.stutils.rst", "neurotools.nlab.rst", "neurotools.opto.rst", "neurotools.signal.rst", "neurotools.signal.coherence.rst", "neurotools.signal.conv.rst", "neurotools.signal.linenoise.rst", "neurotools.signal.morlet.rst", "neurotools.signal.morlet_coherence.rst", "neurotools.signal.multitaper.rst", "neurotools.signal.ppc.rst", "neurotools.signal.resonator.rst", "neurotools.signal.savitskygolay.rst", "neurotools.signal.signal.rst", "neurotools.spatial.rst", "neurotools.spatial.array.rst", "neurotools.spatial.dct.rst", "neurotools.spatial.distance.rst", "neurotools.spatial.fftzeros.rst", "neurotools.spatial.geometry.rst", "neurotools.spatial.kernels.rst", "neurotools.spatial.masking.rst", "neurotools.spatial.phase.rst", "neurotools.spatial.points.rst", "neurotools.spatial.spatialPSD.rst", "neurotools.spatial.spiking.rst", "neurotools.spatial.triangulation.rst", "neurotools.spatial.wave_parametric_models.rst", "neurotools.spikes.rst", "neurotools.spikes.spikes.rst", "neurotools.spikes.waveform.rst", "neurotools.stats.rst", "neurotools.stats.GLMFit.rst", "neurotools.stats.Gaussian.rst", "neurotools.stats.circular.rst", "neurotools.stats.convolutional.rst", "neurotools.stats.density.rst", "neurotools.stats.distributions.rst", "neurotools.stats.entropy.rst", "neurotools.stats.fast_kde.rst", "neurotools.stats.glm.rst", "neurotools.stats.gmm.rst", "neurotools.stats.grid_search.rst", "neurotools.stats.history_basis.rst", "neurotools.stats.hmm.rst", "neurotools.stats.information.rst", "neurotools.stats.kent_reimann.rst", "neurotools.stats.lessons.rst", "neurotools.stats.matzner_bar-gad_PLoS_2015.rst", "neurotools.stats.mcint.rst", "neurotools.stats.minimize.rst", "neurotools.stats.mixtures.rst", "neurotools.stats.modefind.rst", "neurotools.stats.mvg.rst", "neurotools.stats.pvalues.rst", "neurotools.stats.regressions.rst", "neurotools.stats.sde.rst", "neurotools.stats.spatiotemporal_glm_utils.rst", "neurotools.stats.stats.rst", "neurotools.system.rst", "neurotools.text.rst", "neurotools.tools.rst", "nlab.rst", "opto.rst", "signal.rst", "signal.coherence.rst", "signal.conv.rst", "signal.linenoise.rst", "signal.morlet.rst", "signal.morlet_coherence.rst", "signal.multitaper.rst", "signal.ppc.rst", "signal.resonator.rst", "signal.savitskygolay.rst", "signal.signal.rst", "spatial.rst", "spatial.array.rst", "spatial.dct.rst", "spatial.distance.rst", "spatial.fftzeros.rst", "spatial.kernels.rst", "spatial.phase.rst", "spatial.spatialPSD.rst", "spatial.spiking.rst", "spatial.triangulation.rst", "spatial.wave_parametric_models.rst", "spikes.rst", "spikes.spikes.rst", "spikes.waveform.rst", "stats.rst", "stats.GLMFit.rst", "stats.Gaussian.rst", "stats.circular.rst", "stats.convolutional.rst", "stats.density.rst", "stats.distributions.rst", "stats.entropy.rst", "stats.fast_kde.rst", "stats.glm.rst", "stats.gmm.rst", "stats.history_basis.rst", "stats.hmm.rst", "stats.information.rst", "stats.kent_reimann.rst", "stats.lessons.rst", "stats.matzner_bar-gad_PLoS_2015.rst", "stats.mcint.rst", "stats.minimize.rst", "stats.mixtures.rst", "stats.modefind.rst", "stats.mvg.rst", "stats.pvalues.rst", "stats.regressions.rst", "stats.sde.rst", "stats.spatiotemporal_glm_utils.rst", "stats.stats.rst", "system.rst", "tools.rst"], "titles": ["dependencies module", "functions module", "getfftw module", "gpu package", "gpu.cl package", "gpu.cl.device module", "gpu.cl.function module", "gpu.cl.matrix module", "gpu.cpu package", "gpu.cpu.util module", "gpu.cu package", "gpu.cu.convolution module", "gpu.cu.device module", "gpu.cu.function module", "gpu.cu.gpufun module", "gpu.cu.graph module", "gpu.cu.logic module", "gpu.cu.matrix module", "gpu.cu.plot module", "gpu.cu.sequence module", "gpu.cu.statistics module", "graphics package", "graphics.color module", "graphics.image module", "graphics.matplotlib module", "graphics.plot module", "graphics.pygame module", "Welcome to Neurotools\u2019s documentation!", "jobs package", "jobs.cache module", "jobs.closure module", "jobs.decorator module", "jobs.filenames module", "jobs.initialize_system_cache module", "jobs.parallel module", "linalg package", "linalg.arguments module", "linalg.matrix module", "linalg.operators module", "models package", "models.izh module", "models.lif module", "models.rbm package", "models.rbm.rbm module", "models.rbm.rbm_helper module", "models.rbm.rbm_sample module", "models.rbm.rbm_utils package", "models.rbm.rbm_utils.rbm module", "models.rbm.rbm_utils.stutils module", "neurotools", "neurotools package", "neurotools.dependencies module", "neurotools.encoding package", "neurotools.encoding.Huffman module", "neurotools.encoding.NaryHuffman module", "neurotools.functions module", "neurotools.getfftw module", "neurotools.gpu package", "neurotools.gpu.cl package", "neurotools.gpu.cl.device module", "neurotools.gpu.cl.function module", "neurotools.gpu.cl.matrix module", "neurotools.gpu.cpu package", "neurotools.gpu.cpu.util module", "neurotools.gpu.cu package", "neurotools.gpu.cu.convolution module", "neurotools.gpu.cu.device module", "neurotools.gpu.cu.function module", "neurotools.gpu.cu.gpufun module", "neurotools.gpu.cu.graph module", "neurotools.gpu.cu.logic module", "neurotools.gpu.cu.matrix module", "neurotools.gpu.cu.plot module", "neurotools.gpu.cu.sequence module", "neurotools.gpu.cu.statistics module", "neurotools.graphics package", "neurotools.graphics.color module", "neurotools.graphics.colormaps module", "neurotools.graphics.dendron module", "neurotools.graphics.fabio_maps module", "neurotools.graphics.image module", "neurotools.graphics.matplotlib module", "neurotools.graphics.plot module", "neurotools.graphics.pygame module", "neurotools.graphics.ztransform_plot_helpers module", "neurotools.hdfmat module", "neurotools.jobs package", "neurotools.jobs.cache module", "neurotools.jobs.closure module", "neurotools.jobs.filenames module", "neurotools.jobs.initialize_system_cache module", "neurotools.jobs.ndecorator module", "neurotools.jobs.parallel module", "neurotools.linalg package", "neurotools.linalg.arguments module", "neurotools.linalg.matrix module", "neurotools.linalg.operators module", "neurotools.models package", "neurotools.models.izh module", "neurotools.models.lif module", "neurotools.models.rbm package", "neurotools.models.rbm.rbm module", "neurotools.models.rbm.rbm_helper module", "neurotools.models.rbm.rbm_sample module", "neurotools.models.rbm.rbm_utils package", "neurotools.models.rbm.rbm_utils.rbm module", "neurotools.models.rbm.rbm_utils.stutils module", "neurotools.nlab module", "neurotools.opto module", "neurotools.signal package", "neurotools.signal.coherence module", "neurotools.signal.conv module", "neurotools.signal.linenoise module", "neurotools.signal.morlet module", "neurotools.signal.morlet_coherence module", "neurotools.signal.multitaper module", "neurotools.signal.ppc module", "neurotools.signal.resonator module", "neurotools.signal.savitskygolay module", "neurotools.signal.signal module", "neurotools.spatial package", "neurotools.spatial.array module", "neurotools.spatial.dct module", "neurotools.spatial.distance module", "neurotools.spatial.fftzeros module", "neurotools.spatial.geometry module", "neurotools.spatial.kernels module", "neurotools.spatial.masking module", "neurotools.spatial.phase module", "neurotools.spatial.points module", "neurotools.spatial.spatialPSD module", "neurotools.spatial.spiking module", "neurotools.spatial.triangulation module", "neurotools.spatial.wave_parametric_models module", "neurotools.spikes package", "neurotools.spikes.spikes module", "neurotools.spikes.waveform module", "neurotools.stats package", "neurotools.stats.GLMFit module", "neurotools.stats.Gaussian module", "neurotools.stats.circular module", "neurotools.stats.convolutional module", "neurotools.stats.density module", "neurotools.stats.distributions module", "neurotools.stats.entropy module", "neurotools.stats.fast_kde module", "neurotools.stats.glm module", "neurotools.stats.gmm module", "neurotools.stats.grid_search module", "neurotools.stats.history_basis module", "neurotools.stats.hmm module", "neurotools.stats.information module", "neurotools.stats.kent_reimann module", "neurotools.stats.lessons module", "neurotools.stats.matzner_bar-gad_PLoS_2015 module", "neurotools.stats.mcint module", "neurotools.stats.minimize module", "neurotools.stats.mixtures module", "neurotools.stats.modefind module", "neurotools.stats.mvg module", "neurotools.stats.pvalues module", "neurotools.stats.regressions module", "neurotools.stats.sde module", "neurotools.stats.spatiotemporal_glm_utils module", "neurotools.stats.stats module", "neurotools.system module", "neurotools.text module", "neurotools.tools module", "nlab module", "opto module", "signal package", "signal.coherence module", "signal.conv module", "signal.linenoise module", "signal.morlet module", "signal.morlet_coherence module", "signal.multitaper module", "signal.ppc module", "signal.resonator module", "signal.savitskygolay module", "signal.signal module", "spatial package", "spatial.array module", "spatial.dct module", "spatial.distance module", "spatial.fftzeros module", "spatial.kernels module", "spatial.phase module", "spatial.spatialPSD module", "spatial.spiking module", "spatial.triangulation module", "spatial.wave_parametric_models module", "spikes package", "spikes.spikes module", "spikes.waveform module", "stats package", "stats.GLMFit module", "stats.Gaussian module", "stats.circular module", "stats.convolutional module", "stats.density module", "stats.distributions module", "stats.entropy module", "stats.fast_kde module", "stats.glm module", "stats.gmm module", "stats.history_basis module", "stats.hmm module", "stats.information module", "stats.kent_reimann module", "stats.lessons module", "stats.matzner_bar-gad_PLoS_2015 module", "stats.mcint module", "stats.minimize module", "stats.mixtures module", "stats.modefind module", "stats.mvg module", "stats.pvalues module", "stats.regressions module", "stats.sde module", "stats.spatiotemporal_glm_utils module", "stats.stats module", "system module", "tools module"], "terms": {"slog": [1, 27, 49, 50, 55], "x": [1, 2, 9, 13, 14, 16, 20, 25, 29, 30, 37, 38, 40, 41, 43, 44, 47, 55, 56, 63, 67, 68, 70, 74, 82, 87, 88, 95, 96, 98, 99, 101, 102, 105, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 152, 153, 155, 159, 161, 163, 167, 168, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 212, 216, 218, 220, 223], "ep": [1, 25, 37, 43, 55, 82, 95, 101, 131, 139, 142, 150, 151, 159, 161, 189, 197, 200, 207, 208, 216, 218], "3": [1, 22, 27, 29, 32, 38, 40, 54, 55, 76, 78, 87, 89, 96, 98, 107, 110, 118, 121, 126, 127, 130, 132, 137, 146, 148, 150, 152, 159, 160, 165, 168, 170, 182, 186, 188, 190, 195, 204, 207, 209, 216, 217, 222], "7433921782255195601e": [1, 55], "23": [1, 29, 38, 55, 87, 96, 107, 110, 126, 146, 168, 170, 186, 204], "returntyp": [1, 55], "class": [1, 25, 45, 47, 53, 54, 55, 82, 103, 105, 107, 137, 139, 147, 150, 153, 157, 167, 168, 170, 195, 197, 205, 207, 210, 214, 223], "numpi": [1, 6, 13, 22, 27, 29, 32, 34, 37, 45, 48, 55, 60, 67, 76, 87, 89, 92, 95, 103, 106, 107, 109, 121, 124, 125, 132, 133, 137, 142, 148, 159, 167, 168, 182, 185, 190, 191, 195, 200, 216, 223], "float64": [1, 29, 55, 87, 109, 155, 212], "sourc": [1, 4, 5, 6, 9, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 37, 38, 40, 41, 43, 44, 45, 47, 48, 53, 54, 55, 58, 59, 60, 63, 65, 66, 67, 69, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 101, 102, 103, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223], "safe": [1, 29, 30, 32, 34, 37, 55, 87, 88, 89, 91, 92, 95, 121, 159, 170, 182, 216], "natur": [1, 14, 55, 68, 107, 109, 110, 168], "logarithm": [1, 37, 55, 95, 107, 109, 149, 168, 206], "clip": [1, 25, 55, 82, 143, 201], "valu": [1, 20, 22, 25, 26, 29, 30, 32, 33, 34, 37, 38, 43, 45, 47, 55, 74, 76, 82, 83, 85, 87, 88, 89, 90, 91, 92, 95, 96, 101, 103, 105, 107, 109, 110, 114, 115, 116, 121, 124, 127, 128, 133, 136, 137, 139, 140, 141, 142, 145, 147, 148, 150, 152, 155, 159, 160, 161, 162, 165, 167, 168, 170, 180, 182, 185, 187, 191, 194, 195, 197, 198, 199, 200, 203, 205, 207, 209, 212, 216, 217, 218, 219, 222, 223], "avoid": [1, 20, 22, 29, 30, 34, 55, 74, 76, 87, 88, 92, 109, 122, 125, 142, 146, 150, 183, 200, 204, 207], "nan": [1, 25, 37, 47, 55, 82, 95, 105, 107, 109, 127, 129, 150, 168, 207], "inf": [1, 47, 55, 105, 129], "sexp": [1, 27, 49, 50, 55, 137, 146, 195, 204], "limit": [1, 12, 19, 22, 25, 29, 55, 66, 73, 76, 82, 87, 107, 126, 150, 168, 186, 207], "26": [1, 38, 55, 96, 107, 126, 146, 168, 170, 186, 204], "641747557046326023": [1, 55], "exponenti": [1, 9, 14, 27, 41, 49, 50, 55, 63, 68, 99, 107, 126, 146, 153, 161, 162, 168, 186, 204, 210, 218, 219], "sigmoid": [1, 27, 47, 49, 50, 55, 105, 137, 146, 195, 204], "1": [1, 9, 13, 14, 16, 22, 23, 25, 26, 29, 33, 34, 37, 38, 40, 41, 43, 47, 55, 63, 67, 68, 70, 76, 78, 80, 82, 83, 87, 90, 92, 95, 96, 98, 99, 101, 105, 107, 109, 110, 113, 114, 116, 117, 118, 121, 122, 123, 124, 126, 128, 130, 131, 133, 135, 140, 142, 143, 146, 147, 150, 152, 153, 155, 157, 159, 160, 161, 162, 163, 167, 168, 170, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 198, 200, 201, 204, 205, 207, 209, 210, 212, 214, 216, 217, 218, 219, 220, 223], "exp": [1, 13, 38, 41, 55, 67, 96, 99, 107, 117, 122, 126, 146, 147, 152, 161, 168, 183, 186, 204, 205, 209, 218], "inversesigmoid": [1, 27, 49, 50, 55], "invers": [1, 29, 37, 43, 55, 87, 95, 101, 107, 109, 122, 126, 128, 147, 159, 167, 168, 183, 186, 187, 205, 216, 223], "log": [1, 14, 29, 34, 38, 47, 55, 68, 87, 92, 96, 105, 107, 122, 126, 139, 140, 143, 146, 147, 150, 158, 161, 168, 183, 186, 197, 198, 201, 204, 205, 207, 215, 218], "dsigmoid": [1, 27, 49, 50, 55], "fist": [1, 55], "deriv": [1, 40, 55, 98, 107, 109, 118, 122, 124, 136, 160, 168, 183, 185, 194, 217], "g": [1, 9, 14, 22, 27, 29, 33, 48, 49, 50, 55, 63, 68, 76, 87, 90, 106, 107, 109, 137, 147, 152, 153, 168, 195, 205, 209, 210], "evalu": [1, 14, 55, 68, 116, 139, 143, 146, 148, 152, 155, 156, 197, 201, 204, 209, 212, 213], "accur": [1, 55, 121, 122, 147, 182, 183, 205], "possibl": [1, 29, 33, 37, 55, 87, 90, 95, 107, 126, 129, 168, 170, 180, 186], "f": [1, 9, 13, 14, 16, 25, 27, 29, 30, 34, 41, 49, 50, 55, 63, 67, 68, 70, 82, 87, 88, 91, 92, 99, 107, 109, 110, 113, 114, 115, 116, 117, 118, 121, 128, 130, 139, 141, 150, 152, 155, 167, 168, 182, 187, 188, 197, 199, 207, 209, 212, 223], "f1": [1, 27, 49, 50, 55], "f2": [1, 27, 49, 50, 55], "second": [1, 22, 40, 41, 55, 76, 98, 99, 107, 109, 110, 112, 114, 117, 118, 121, 124, 141, 142, 155, 159, 168, 170, 180, 182, 185, 199, 200, 212, 216], "q": [1, 37, 55, 95, 107, 151, 159, 160, 163, 168, 208, 216, 217, 220], "p": [1, 15, 19, 25, 29, 34, 43, 55, 69, 73, 82, 87, 92, 101, 107, 116, 125, 129, 139, 146, 150, 151, 152, 156, 159, 160, 167, 168, 197, 204, 207, 208, 209, 213, 216, 217, 223], "npdf": [1, 27, 49, 50, 55], "mu": [1, 3, 8, 9, 25, 55, 57, 62, 63, 82, 107, 143, 146, 147, 159, 168, 201, 204, 205, 216], "sigma": [1, 3, 8, 9, 22, 25, 38, 55, 57, 62, 63, 76, 82, 96, 107, 109, 111, 125, 126, 127, 140, 143, 150, 153, 159, 162, 168, 186, 198, 201, 207, 210, 216, 219], "univari": [1, 55, 107, 128, 139, 159, 168, 187, 197, 216], "gaussian": [1, 22, 25, 27, 38, 50, 55, 76, 82, 96, 107, 109, 124, 125, 126, 127, 137, 140, 141, 145, 147, 150, 153, 159, 168, 185, 186, 195, 198, 199, 203, 205, 207, 210, 216], "probabl": [1, 6, 13, 14, 27, 30, 37, 40, 43, 45, 53, 54, 55, 60, 67, 68, 88, 95, 98, 101, 103, 107, 122, 139, 142, 143, 144, 145, 147, 150, 151, 152, 157, 167, 168, 183, 197, 200, 201, 202, 203, 205, 207, 208, 209, 214, 223], "densiti": [1, 27, 40, 50, 55, 98, 107, 110, 130, 135, 137, 139, 141, 144, 145, 150, 152, 158, 159, 168, 188, 193, 195, 197, 199, 202, 203, 207, 209, 215, 216], "paramet": [1, 19, 22, 25, 26, 29, 32, 33, 34, 37, 38, 40, 43, 45, 47, 55, 73, 76, 82, 83, 85, 87, 89, 90, 91, 92, 95, 96, 98, 101, 103, 105, 107, 109, 113, 115, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 181, 182, 183, 185, 186, 187, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223], "float": [1, 6, 13, 16, 19, 20, 22, 23, 25, 29, 30, 37, 40, 55, 60, 67, 70, 73, 74, 76, 80, 82, 87, 88, 95, 98, 107, 109, 113, 121, 124, 125, 126, 127, 128, 129, 131, 133, 139, 140, 142, 144, 146, 148, 150, 151, 152, 157, 158, 159, 161, 168, 182, 185, 186, 187, 189, 191, 197, 198, 200, 202, 204, 207, 208, 209, 214, 215, 216, 218], "scalar": [1, 9, 22, 25, 35, 36, 37, 50, 55, 63, 76, 82, 93, 94, 95, 107, 109, 116, 137, 141, 142, 146, 148, 168, 195, 199, 200, 204], "arrai": [1, 9, 13, 14, 20, 22, 25, 26, 27, 29, 37, 38, 40, 45, 48, 50, 55, 63, 67, 68, 74, 76, 82, 83, 87, 95, 96, 98, 103, 106, 107, 109, 112, 114, 116, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 150, 151, 152, 155, 157, 158, 159, 161, 162, 163, 167, 168, 181, 183, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 202, 203, 204, 205, 207, 208, 209, 212, 214, 215, 216, 218, 219, 220, 223], "like": [1, 9, 13, 22, 25, 29, 30, 33, 37, 55, 63, 67, 76, 78, 82, 87, 88, 90, 95, 107, 109, 122, 128, 137, 138, 144, 145, 146, 148, 150, 155, 159, 161, 165, 168, 170, 183, 187, 195, 196, 202, 203, 204, 207, 212, 216, 218, 222], "mean": [1, 3, 8, 9, 14, 20, 25, 37, 44, 45, 55, 57, 62, 63, 68, 74, 82, 95, 102, 103, 107, 109, 110, 112, 116, 121, 128, 136, 137, 139, 141, 142, 146, 147, 150, 152, 155, 157, 159, 160, 163, 165, 167, 168, 182, 187, 194, 195, 197, 199, 200, 204, 205, 207, 209, 212, 214, 216, 217, 220, 222, 223], "": [1, 6, 9, 14, 15, 16, 19, 22, 25, 29, 37, 43, 44, 45, 47, 53, 54, 55, 60, 63, 68, 69, 70, 73, 76, 82, 87, 95, 101, 102, 103, 105, 107, 109, 110, 116, 117, 121, 127, 128, 135, 139, 141, 147, 150, 152, 167, 168, 182, 187, 193, 197, 199, 205, 207, 209, 223], "distribut": [1, 6, 13, 14, 27, 33, 43, 44, 50, 55, 60, 67, 68, 90, 101, 102, 107, 109, 110, 116, 121, 128, 137, 139, 140, 142, 144, 145, 150, 151, 152, 153, 157, 158, 159, 168, 182, 187, 195, 197, 198, 200, 202, 203, 207, 208, 209, 210, 214, 215, 216], "standard": [1, 9, 14, 20, 22, 25, 29, 38, 55, 63, 68, 74, 76, 82, 87, 91, 96, 107, 109, 110, 121, 125, 126, 128, 137, 153, 155, 159, 162, 167, 168, 182, 186, 187, 195, 210, 212, 216, 219, 223], "deviat": [1, 9, 14, 20, 25, 38, 55, 63, 68, 74, 82, 96, 107, 109, 121, 125, 126, 128, 137, 143, 153, 162, 168, 182, 186, 187, 195, 201, 210, 219], "point": [1, 9, 25, 27, 37, 47, 50, 55, 63, 82, 95, 105, 107, 109, 110, 114, 120, 121, 124, 125, 128, 131, 132, 133, 135, 139, 142, 143, 145, 146, 147, 148, 149, 150, 152, 157, 158, 159, 161, 163, 167, 168, 181, 182, 185, 187, 189, 190, 191, 193, 197, 200, 201, 203, 204, 205, 206, 207, 209, 214, 215, 216, 218, 220, 223], "which": [1, 13, 25, 26, 27, 29, 34, 37, 38, 47, 55, 67, 82, 83, 85, 87, 92, 95, 96, 105, 107, 109, 110, 115, 116, 120, 121, 122, 124, 125, 128, 133, 137, 139, 140, 142, 149, 150, 152, 159, 168, 181, 182, 183, 185, 187, 191, 195, 197, 198, 200, 206, 207, 209, 216], "log_factori": [1, 27, 49, 50, 55], "k": [1, 15, 19, 25, 37, 45, 47, 55, 69, 73, 78, 82, 95, 103, 105, 107, 109, 111, 115, 116, 124, 128, 135, 137, 138, 141, 142, 143, 146, 147, 149, 150, 152, 158, 159, 168, 185, 187, 193, 195, 196, 199, 200, 201, 204, 205, 206, 207, 209, 215, 216], "return": [1, 6, 9, 12, 13, 14, 20, 22, 25, 26, 29, 30, 32, 33, 34, 37, 38, 40, 43, 45, 47, 55, 60, 63, 66, 67, 68, 74, 76, 78, 82, 83, 85, 87, 88, 89, 90, 91, 92, 95, 96, 98, 101, 103, 105, 107, 109, 110, 111, 113, 114, 115, 116, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223], "factori": [1, 55], "take": [1, 29, 34, 37, 55, 87, 92, 95, 107, 109, 110, 114, 127, 133, 137, 159, 160, 168, 191, 195, 216, 217], "sum": [1, 9, 20, 37, 55, 63, 74, 95, 107, 113, 115, 116, 135, 143, 147, 150, 160, 167, 168, 193, 201, 205, 207, 217, 223], "n": [1, 5, 9, 14, 15, 19, 22, 25, 37, 38, 41, 43, 55, 59, 63, 68, 69, 73, 76, 82, 95, 96, 99, 101, 107, 109, 110, 114, 118, 126, 128, 131, 144, 146, 150, 153, 155, 159, 162, 163, 167, 168, 186, 187, 189, 202, 204, 207, 210, 212, 216, 219, 220, 223], "slow": [1, 29, 33, 55, 87, 90], "numer": [1, 25, 43, 55, 82, 91, 101, 107, 109, 113, 122, 124, 127, 133, 137, 139, 144, 146, 150, 168, 183, 185, 191, 195, 197, 202, 204, 207], "more": [1, 12, 22, 25, 29, 32, 47, 55, 66, 76, 82, 87, 89, 105, 107, 110, 114, 116, 121, 122, 123, 128, 138, 141, 150, 152, 156, 160, 167, 168, 182, 183, 184, 187, 196, 199, 207, 209, 213, 217, 223], "than": [1, 12, 29, 32, 37, 38, 47, 55, 66, 87, 89, 95, 96, 105, 107, 109, 110, 114, 115, 116, 120, 124, 137, 139, 140, 141, 145, 147, 150, 158, 168, 181, 185, 195, 197, 198, 199, 203, 205, 207, 215], "us": [1, 6, 9, 13, 14, 16, 19, 20, 22, 25, 27, 29, 32, 33, 34, 37, 38, 41, 45, 47, 55, 60, 63, 67, 68, 70, 73, 74, 76, 78, 82, 87, 89, 90, 91, 92, 95, 96, 99, 103, 105, 107, 109, 110, 111, 112, 114, 115, 116, 118, 121, 122, 124, 127, 128, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 152, 153, 155, 156, 158, 159, 160, 161, 163, 167, 168, 170, 182, 183, 185, 187, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 209, 210, 212, 213, 215, 216, 217, 218, 220, 223], "approxim": [1, 37, 47, 55, 95, 105, 107, 137, 144, 150, 153, 158, 168, 195, 202, 207, 210, 215], "should": [1, 6, 13, 25, 29, 32, 33, 37, 43, 55, 60, 67, 82, 87, 89, 90, 95, 101, 107, 109, 110, 112, 113, 121, 122, 124, 125, 137, 138, 141, 143, 150, 159, 160, 163, 167, 168, 182, 183, 185, 195, 196, 199, 201, 207, 216, 217, 220, 223], "an": [1, 9, 13, 14, 20, 25, 27, 29, 30, 32, 37, 38, 41, 44, 47, 48, 55, 63, 67, 68, 74, 82, 85, 87, 88, 89, 91, 95, 96, 99, 102, 105, 106, 107, 109, 112, 121, 124, 128, 132, 133, 135, 137, 138, 142, 145, 146, 150, 152, 153, 159, 160, 161, 165, 167, 168, 170, 182, 185, 187, 190, 191, 193, 195, 196, 200, 203, 204, 207, 209, 210, 216, 217, 218, 222, 223], "integ": [1, 6, 9, 13, 22, 25, 29, 33, 43, 55, 60, 63, 67, 76, 82, 87, 90, 101, 107, 109, 110, 115, 116, 133, 135, 142, 143, 147, 150, 168, 191, 193, 200, 201, 205, 207], "ftwthr": [2, 27, 49, 50, 56], "cl": [3, 27, 50, 57], "submodul": [3, 27, 49, 57], "devic": [3, 4, 10, 57, 58, 64], "zeros_float": [3, 4, 5, 57, 58, 59], "function": [3, 4, 9, 10, 12, 14, 16, 25, 27, 29, 30, 32, 33, 34, 37, 38, 41, 43, 45, 47, 48, 49, 50, 57, 58, 63, 64, 66, 68, 70, 82, 87, 88, 89, 90, 91, 92, 95, 96, 99, 101, 103, 105, 106, 107, 109, 115, 122, 123, 124, 125, 126, 128, 133, 135, 137, 142, 145, 146, 147, 148, 149, 150, 152, 155, 156, 159, 160, 163, 167, 168, 170, 180, 183, 184, 185, 186, 187, 191, 193, 195, 200, 203, 204, 205, 206, 207, 209, 212, 213, 216, 217, 220, 223], "format": [3, 4, 6, 10, 13, 19, 22, 25, 29, 32, 57, 58, 60, 64, 67, 73, 76, 82, 85, 87, 89, 91, 125, 132, 156, 160, 161, 167, 190, 213, 217, 218, 223], "printkernel": [3, 4, 6, 10, 13, 57, 58, 60, 64, 67], "guessgputyp": [3, 4, 6, 10, 13, 57, 58, 60, 64, 67], "togputyp": [3, 4, 6, 10, 13, 57, 58, 60, 64, 67], "insert_glob": [3, 4, 6, 57, 58, 60], "kernel": [3, 4, 6, 10, 12, 13, 14, 22, 27, 37, 38, 50, 57, 58, 60, 64, 66, 67, 68, 76, 95, 96, 109, 120, 121, 125, 145, 146, 181, 182, 203, 204], "element": [3, 4, 6, 9, 14, 20, 30, 37, 38, 57, 58, 60, 63, 68, 74, 88, 95, 96, 107, 126, 133, 146, 148, 149, 163, 168, 186, 191, 204, 206, 220], "gpumap": [3, 4, 6, 10, 13, 16, 57, 58, 60, 64, 67, 70], "matrix": [3, 4, 9, 10, 19, 25, 27, 35, 38, 50, 57, 58, 63, 64, 73, 82, 93, 96, 107, 109, 110, 114, 115, 125, 128, 137, 138, 141, 145, 146, 150, 152, 159, 163, 168, 187, 195, 196, 199, 203, 204, 207, 209, 216, 220], "miss": [3, 4, 10, 12, 18, 33, 34, 57, 58, 64, 66, 72, 90, 92, 107, 109, 121, 124, 136, 142, 167, 168, 182, 185, 194, 200, 223], "cpu": [3, 10, 13, 27, 50, 57, 64, 67], "util": [3, 8, 14, 57, 62, 68], "document": [3, 8, 9, 19, 57, 62, 63, 73, 109, 138, 141, 152, 161, 196, 199, 209, 218], "flat": [3, 8, 9, 57, 62, 63], "compos": [3, 8, 9, 30, 57, 62, 63, 88], "dot": [3, 8, 9, 37, 57, 62, 63, 95, 147, 159, 205, 216], "length": [3, 8, 9, 19, 22, 38, 45, 57, 62, 63, 73, 76, 96, 103, 107, 109, 115, 118, 125, 128, 129, 141, 146, 159, 160, 161, 167, 168, 187, 199, 204, 216, 217, 218, 223], "idivup": [3, 8, 9, 57, 62, 63], "fanci": [3, 8, 9, 57, 62, 63], "elem": [3, 8, 9, 57, 62, 63], "cmap": [3, 8, 9, 25, 57, 62, 63, 82, 124, 185], "mmap": [3, 8, 9, 57, 62, 63], "ldif": [3, 8, 9, 57, 62, 63], "lsum": [3, 8, 9, 57, 62, 63], "lmul": [3, 8, 9, 57, 62, 63], "ldiv": [3, 8, 9, 35, 37, 50, 57, 62, 63, 93, 95], "lpow": [3, 8, 9, 57, 62, 63], "ldif2": [3, 8, 9, 57, 62, 63], "lsum2": [3, 8, 9, 57, 62, 63], "lmul2": [3, 8, 9, 57, 62, 63], "ldiv2": [3, 8, 9, 57, 62, 63], "lpow2": [3, 8, 9, 57, 62, 63], "scale": [3, 8, 9, 25, 57, 62, 63, 82, 107, 121, 122, 124, 149, 161, 168, 182, 183, 185, 206, 218], "shift": [3, 8, 9, 57, 62, 63, 107, 109, 128, 168, 187], "var": [3, 8, 9, 57, 62, 63, 109, 150, 167, 207, 223], "svar": [3, 8, 9, 57, 62, 63], "std": [3, 8, 9, 57, 62, 63, 107, 109, 167, 168, 223], "sstd": [3, 8, 9, 57, 62, 63], "sem": [3, 8, 9, 57, 62, 63], "norm": [3, 8, 9, 37, 57, 62, 63, 95, 107, 133, 168, 191], "cov": [3, 8, 9, 44, 57, 62, 63, 102, 107, 145, 168, 203], "corr": [3, 8, 9, 57, 62, 63], "mdif": [3, 8, 9, 57, 62, 63], "msum": [3, 8, 9, 57, 62, 63], "mmul": [3, 8, 9, 57, 62, 63], "mdiv": [3, 8, 9, 57, 62, 63], "mpow": [3, 8, 9, 57, 62, 63], "mmean": [3, 8, 9, 57, 62, 63], "mstd": [3, 8, 9, 57, 62, 63], "mvar": [3, 8, 9, 57, 62, 63], "rnorm": [3, 8, 9, 57, 62, 63], "cut": [3, 8, 9, 57, 62, 63, 107, 109, 121, 130, 135, 168, 182, 188, 193], "cu": [3, 27, 50, 57], "convolut": [3, 10, 27, 50, 57, 64, 109, 126, 127, 137, 145, 186, 195, 203], "gpuboxconv_cor": [3, 10, 11, 57, 64, 65], "gpuboxconv": [3, 10, 11, 57, 64, 65], "estimatethreadsperblock": [3, 10, 12, 57, 64, 66], "estimateblock": [3, 10, 12, 57, 64, 66], "estimateloop": [3, 10, 12, 57, 64, 66], "card_info": [3, 10, 12, 57, 64, 66], "gpubin": [3, 10, 13, 20, 57, 64, 67, 74], "gpuscalar": [3, 10, 13, 57, 64, 67], "gpuintmap": [3, 10, 13, 57, 64, 67], "expsub": [3, 10, 13, 57, 64, 67], "gpumapeq": [3, 10, 13, 57, 64, 67], "gpubinaryeq": [3, 10, 13, 16, 57, 64, 67, 70], "ezkern": [3, 10, 13, 57, 64, 67], "gpupoint": [3, 10, 13, 19, 57, 64, 67, 73], "gpufloat": [3, 10, 13, 57, 64, 67], "gpufloatmat": [3, 10, 13, 57, 64, 67], "gpufloatr": [3, 10, 13, 57, 64, 67], "gpuint": [3, 10, 13, 57, 64, 67], "gpuintmat": [3, 10, 13, 57, 64, 67], "gpuintr": [3, 10, 13, 57, 64, 67], "gpufun": [3, 10, 57, 64], "gpulcomb": [3, 10, 14, 57, 64, 68], "gpumean": [3, 10, 14, 20, 57, 64, 68, 74], "gpunpdf": [3, 10, 14, 19, 57, 64, 68, 73], "gpulogpdf": [3, 10, 14, 57, 64, 68], "gpuhil": [3, 10, 14, 57, 64, 68], "gpurandf": [3, 10, 14, 57, 64, 68], "gpuuniform": [3, 10, 14, 57, 64, 68], "gpurandexp": [3, 10, 14, 57, 64, 68], "graph": [3, 10, 25, 29, 47, 57, 64, 82, 87, 105, 107, 126, 168, 186], "random_point_sheet": [3, 10, 15, 57, 64, 69], "uniform_point_sheet": [3, 10, 15, 57, 64, 69], "connect_gaussian": [3, 10, 15, 57, 64, 69], "spherepoint": [3, 10, 15, 57, 64, 69], "logic": [3, 10, 57, 64, 167, 223], "gpult": [3, 10, 16, 57, 64, 70], "gpugt": [3, 10, 16, 57, 64, 70], "gpueq": [3, 10, 16, 57, 64, 70], "gpuneq": [3, 10, 16, 57, 64, 70], "gpulteq": [3, 10, 16, 57, 64, 70], "gpugteq": [3, 10, 16, 57, 64, 70], "gpunot": [3, 10, 16, 57, 64, 70], "gpuy": [3, 10, 16, 57, 64, 70], "gpuand": [3, 10, 16, 57, 64, 70], "gpunor": [3, 10, 16, 57, 64, 70], "gpuhzero": [3, 10, 16, 57, 64, 70], "gpurang": [3, 10, 16, 57, 64, 70], "plot": [3, 10, 21, 23, 24, 27, 37, 41, 44, 47, 50, 57, 64, 75, 80, 81, 95, 99, 102, 105, 107, 124, 132, 140, 149, 158, 161, 163, 168, 185, 190, 198, 206, 215, 218, 220], "elementwisekernel": [3, 10, 18, 20, 57, 64, 72, 74], "gpubarlinedata": [3, 10, 18, 20, 57, 64, 72, 74], "sebarlin": [3, 10, 18, 20, 57, 64, 72, 74], "sebarline2": [3, 10, 18, 20, 57, 64, 72, 74], "gpuhistogram": [3, 10, 18, 20, 57, 64, 72, 74], "sequenc": [3, 10, 32, 53, 54, 57, 64, 89, 107, 109, 141, 142, 150, 168, 199, 200, 207], "gpusequenceautodetect": [3, 10, 19, 57, 64, 73], "gpupointautodist": [3, 10, 19, 57, 64, 73], "gpuautometr": [3, 10, 19, 57, 64, 73], "gpumagmetr": [3, 10, 19, 57, 64, 73], "gpudotmetr": [3, 10, 19, 57, 64, 73], "deltamag": [3, 10, 19, 57, 64, 73], "summag": [3, 10, 19, 57, 64, 73], "gpuderiv": [3, 10, 19, 57, 64, 73], "gpusmooth": [3, 10, 19, 57, 64, 73], "gputh": [3, 10, 19, 57, 64, 73], "mulmag": [3, 10, 19, 57, 64, 73], "frameeat": [3, 10, 19, 57, 64, 73], "gpusubsetmean": [3, 10, 19, 57, 64, 73], "gpusubsetgfit": [3, 10, 19, 57, 64, 73], "gpulognpdf": [3, 10, 19, 57, 64, 73], "fitgaussbimod": [3, 10, 19, 57, 64, 73], "fitgausstrimod": [3, 10, 19, 57, 64, 73], "statist": [3, 10, 27, 57, 64, 107, 109, 116, 121, 128, 137, 140, 152, 160, 168, 182, 187, 195, 198, 209, 217], "gpusdv": [3, 10, 20, 57, 64, 74], "gpucent": [3, 10, 20, 57, 64, 74], "gpusqmag": [3, 10, 20, 57, 64, 74], "gpumag": [3, 10, 20, 57, 64, 74], "gpusqdev": [3, 10, 20, 57, 64, 74], "gpuvar": [3, 10, 20, 57, 64, 74], "gpusvar": [3, 10, 20, 57, 64, 74], "gpustd": [3, 10, 20, 57, 64, 74], "gpusstd": [3, 10, 20, 57, 64, 74], "gpucov": [3, 10, 20, 57, 64, 74], "gpucorr": [3, 10, 20, 57, 64, 74], "gpuscov": [3, 10, 20, 57, 64, 74], "gpuscorr": [3, 10, 20, 57, 64, 74], "gpusem": [3, 10, 20, 57, 64, 74], "gpuzscor": [3, 10, 20, 57, 64, 74], "sdgpubarlinedata": [3, 10, 20, 57, 64, 74], "sdbarlin": [3, 10, 20, 57, 64, 74], "sdbarline2": [3, 10, 20, 57, 64, 74], "gpubin_cor": [3, 10, 20, 57, 64, 74], "gpu_histogram": [3, 10, 20, 57, 64, 74], "sprinkl": [3, 10, 20, 57, 64, 74], "arg": [4, 6, 12, 13, 18, 20, 25, 29, 34, 58, 60, 66, 67, 72, 74, 82, 87, 91, 92, 123, 130, 166, 167, 184, 188, 223], "kwarg": [4, 12, 18, 20, 25, 29, 48, 58, 66, 72, 74, 82, 87, 91, 106, 127, 132, 137, 146, 156, 167, 190, 195, 204, 213, 223], "code": [6, 9, 13, 14, 22, 27, 29, 33, 34, 37, 41, 60, 63, 67, 68, 76, 87, 90, 92, 95, 99, 107, 109, 116, 122, 124, 130, 159, 160, 168, 170, 183, 185, 188, 216, 217], "thi": [6, 9, 12, 13, 14, 16, 20, 22, 25, 27, 29, 30, 33, 34, 37, 38, 41, 45, 47, 60, 63, 66, 67, 68, 70, 74, 76, 82, 87, 88, 90, 92, 95, 96, 99, 103, 105, 107, 109, 110, 112, 113, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 135, 136, 137, 138, 141, 145, 146, 147, 149, 150, 155, 156, 158, 159, 160, 163, 165, 166, 167, 168, 170, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 199, 203, 204, 205, 206, 207, 212, 213, 215, 216, 217, 220, 222, 223], "i": [6, 8, 9, 12, 13, 14, 16, 18, 19, 20, 22, 25, 26, 27, 29, 30, 32, 33, 34, 37, 38, 40, 41, 45, 47, 60, 62, 63, 66, 67, 68, 70, 72, 73, 74, 76, 82, 83, 85, 87, 88, 89, 90, 92, 95, 96, 98, 99, 103, 105, 107, 109, 110, 113, 114, 115, 116, 117, 121, 122, 124, 125, 126, 127, 128, 129, 131, 133, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 158, 159, 160, 163, 165, 166, 167, 168, 170, 180, 182, 183, 185, 186, 187, 189, 191, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 215, 216, 217, 220, 222, 223], "auto": [6, 13, 25, 60, 67, 82, 124, 185], "formatt": [6, 13, 60, 67], "It": [6, 12, 13, 30, 32, 33, 34, 60, 66, 67, 88, 89, 90, 92, 107, 109, 121, 124, 141, 146, 152, 155, 160, 165, 167, 168, 182, 185, 199, 204, 209, 212, 217, 222, 223], "mostli": [6, 13, 60, 67], "just": [6, 13, 34, 60, 67, 92, 107, 133, 135, 165, 167, 168, 191, 193, 222, 223], "doe": [6, 13, 22, 25, 27, 29, 60, 67, 76, 82, 87, 107, 137, 167, 168, 195, 223], "indent": [6, 13, 60, 67], "print": [6, 13, 29, 33, 34, 37, 60, 67, 85, 87, 90, 91, 92, 95, 107, 137, 150, 155, 156, 167, 168, 195, 207, 212, 213, 223], "out": [6, 13, 29, 34, 37, 41, 47, 60, 67, 87, 92, 95, 99, 105, 107, 109, 116, 136, 168, 194], "line": [6, 13, 19, 25, 44, 60, 67, 73, 82, 102, 107, 109, 112, 116, 124, 161, 165, 166, 167, 168, 185, 218, 222, 223], "number": [6, 12, 13, 14, 19, 22, 25, 29, 34, 37, 38, 43, 47, 60, 66, 67, 68, 73, 76, 82, 87, 92, 95, 96, 101, 105, 107, 109, 110, 112, 115, 116, 121, 122, 124, 125, 127, 129, 131, 132, 133, 135, 137, 138, 140, 141, 142, 145, 146, 147, 149, 150, 152, 153, 155, 156, 158, 159, 162, 167, 168, 170, 180, 182, 183, 185, 189, 190, 191, 193, 195, 196, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 212, 213, 215, 216, 219, 223], "At": [6, 13, 60, 67, 126, 186], "moment": [6, 13, 60, 67, 140, 150, 155, 198, 207, 212], "float32": [6, 13, 29, 60, 67, 87, 107, 109, 126, 127, 129, 168, 186], "python": [6, 13, 14, 27, 29, 30, 32, 34, 60, 67, 68, 87, 88, 89, 92, 107, 133, 159, 165, 167, 168, 170, 180, 191, 216, 222, 223], "int32": [6, 13, 29, 60, 67, 87, 120, 129, 181], "otherwis": [6, 13, 27, 29, 60, 67, 87, 107, 128, 146, 168, 187, 204], "undefin": [6, 13, 34, 60, 67, 92, 107, 109, 168], "A": [6, 9, 13, 25, 29, 37, 60, 63, 67, 82, 87, 95, 107, 109, 110, 114, 121, 125, 128, 133, 137, 138, 145, 148, 150, 159, 168, 170, 180, 182, 187, 191, 195, 196, 203, 207, 216], "littl": [6, 13, 16, 22, 25, 60, 67, 70, 76, 82, 109], "wrapper": [6, 13, 14, 16, 34, 60, 67, 68, 70, 92, 107, 125, 138, 146, 168, 196, 204], "cast": [6, 13, 60, 67, 107, 109, 116, 155, 168, 212], "int": [6, 13, 19, 22, 25, 30, 34, 38, 60, 67, 73, 76, 82, 88, 92, 96, 107, 109, 115, 120, 121, 122, 124, 125, 127, 128, 129, 131, 133, 135, 137, 140, 142, 143, 146, 149, 150, 158, 159, 163, 166, 168, 181, 182, 183, 185, 187, 189, 191, 193, 195, 198, 200, 201, 204, 206, 207, 215, 216, 220], "respect": [6, 13, 60, 67, 107, 111, 132, 152, 163, 168, 190, 209, 220], "datatyp": [6, 13, 60, 67, 155, 212], "exist": [6, 13, 27, 29, 49, 50, 60, 67, 87, 107, 167, 168, 223], "elsewher": [6, 13, 27, 60, 67, 107, 124, 168, 185], "header": [6, 13, 60, 67], "other": [6, 13, 14, 30, 33, 34, 47, 60, 67, 68, 88, 90, 92, 105, 107, 126, 127, 129, 148, 159, 168, 186, 216], "none": [6, 13, 18, 19, 20, 22, 25, 33, 34, 37, 38, 41, 44, 47, 48, 60, 67, 72, 73, 74, 76, 82, 85, 90, 92, 95, 96, 99, 102, 105, 106, 107, 109, 111, 113, 115, 116, 122, 124, 125, 127, 129, 135, 137, 140, 141, 142, 145, 146, 148, 150, 153, 156, 158, 159, 160, 163, 165, 167, 168, 170, 183, 185, 193, 195, 198, 199, 200, 203, 204, 207, 210, 213, 215, 216, 217, 220, 222, 223], "my": [6, 12, 13, 60, 66, 67], "easi": [6, 13, 60, 67], "accept": [6, 9, 13, 60, 63, 67, 107, 112, 116, 121, 130, 132, 135, 146, 150, 158, 159, 163, 168, 170, 182, 188, 190, 193, 204, 207, 215, 216, 220], "list": [6, 9, 13, 19, 22, 25, 29, 34, 37, 45, 60, 63, 67, 73, 76, 78, 82, 87, 91, 92, 95, 103, 107, 109, 113, 115, 116, 121, 125, 127, 129, 132, 135, 137, 140, 142, 144, 146, 148, 158, 160, 161, 163, 166, 167, 168, 182, 190, 193, 195, 198, 200, 202, 204, 215, 217, 218, 220, 223], "argument": [6, 9, 13, 25, 27, 29, 30, 32, 34, 35, 48, 50, 60, 63, 67, 82, 87, 88, 89, 91, 92, 93, 106, 107, 132, 146, 148, 159, 167, 168, 170, 180, 190, 204, 216, 223], "bodi": [6, 13, 60, 67], "core": [6, 13, 34, 60, 67, 92], "loop": [6, 12, 13, 22, 29, 60, 66, 67, 76, 87], "option": [6, 13, 25, 29, 33, 60, 67, 82, 87, 90, 107, 109, 128, 137, 138, 140, 141, 145, 146, 148, 150, 153, 156, 159, 166, 168, 187, 195, 196, 198, 199, 203, 204, 207, 210, 213, 216], "block": [6, 12, 13, 60, 66, 67, 109, 128, 137, 141, 146, 187, 195, 199, 204], "helper": [6, 13, 60, 67], "The": [6, 13, 22, 27, 29, 32, 33, 34, 37, 38, 41, 47, 60, 67, 76, 78, 87, 89, 90, 92, 95, 96, 99, 105, 107, 109, 110, 114, 115, 116, 121, 124, 125, 128, 137, 139, 145, 146, 150, 152, 159, 165, 167, 168, 170, 180, 182, 185, 187, 195, 197, 203, 204, 207, 209, 216, 222, 223], "refer": [6, 13, 27, 30, 37, 60, 67, 88, 95, 107, 128, 160, 168, 187, 217], "tid": [6, 13, 60, 67], "thread": [6, 12, 13, 34, 60, 66, 67, 92, 113, 123, 170, 184], "index": [6, 13, 27, 34, 60, 67, 92, 107, 109, 115, 121, 124, 129, 133, 141, 148, 167, 168, 182, 185, 191, 199, 223], "variabl": [6, 13, 29, 34, 37, 40, 43, 44, 47, 60, 67, 87, 92, 95, 98, 101, 102, 105, 107, 137, 161, 167, 168, 195, 218, 223], "automat": [6, 13, 29, 33, 37, 60, 67, 87, 90, 95, 109, 138, 196], "manag": [6, 13, 60, 67], "here": [8, 14, 27, 29, 34, 47, 62, 68, 87, 92, 105, 107, 116, 136, 168, 194], "where": [8, 25, 29, 34, 37, 41, 62, 82, 87, 92, 95, 99, 107, 109, 121, 125, 127, 128, 138, 146, 152, 163, 168, 182, 187, 196, 204, 209, 220], "librari": [8, 14, 29, 33, 34, 37, 62, 68, 87, 90, 92, 95, 107, 168], "live": [8, 62], "name": [9, 25, 26, 29, 30, 63, 82, 83, 87, 88, 107, 137, 152, 167, 168, 195, 209, 223], "docstr": [9, 29, 63, 87], "add": [9, 25, 27, 50, 63, 82, 107, 109, 137, 138, 163, 167, 168, 195, 196, 220, 223], "anonym": [9, 63], "lambda": [9, 16, 34, 63, 70, 92, 107, 161, 168, 218], "sphinx": [9, 63], "autodoc": [9, 63], "also": [9, 27, 29, 34, 37, 41, 47, 63, 78, 87, 92, 95, 99, 105, 107, 109, 110, 116, 121, 122, 128, 148, 159, 168, 182, 183, 187, 216], "first": [9, 13, 19, 22, 34, 37, 40, 63, 67, 73, 76, 92, 95, 98, 107, 109, 110, 112, 114, 115, 121, 124, 128, 133, 137, 140, 141, 150, 152, 159, 160, 168, 170, 180, 182, 185, 187, 191, 195, 198, 199, 207, 209, 216, 217], "tripl": [9, 63], "quot": [9, 63], "string": [9, 12, 13, 22, 25, 29, 32, 33, 63, 66, 67, 76, 78, 82, 85, 87, 89, 90, 91, 107, 109, 124, 137, 142, 156, 165, 166, 167, 168, 185, 195, 200, 213, 222, 223], "follo": [9, 63], "declataion": [9, 63], "arr": [9, 63, 107, 168], "naiv": [9, 63], "flatten": [9, 13, 63, 67, 78], "concaten": [9, 63, 166], "via": [9, 27, 30, 33, 34, 37, 63, 88, 90, 92, 95, 109, 165, 170, 222], "lot": [9, 63, 110], "copi": [9, 13, 20, 25, 29, 63, 67, 74, 82, 87, 107, 109, 122, 141, 168, 183, 199], "curri": [9, 14, 29, 63, 68, 87], "composit": [9, 63], "oper": [9, 13, 14, 27, 35, 37, 50, 63, 67, 68, 93, 95, 109, 128, 141, 150, 167, 187, 199, 207, 223], "make": [9, 29, 63, 87, 107, 116, 141, 160, 167, 168, 199, 217, 223], "b": [9, 13, 14, 16, 20, 22, 25, 34, 37, 38, 40, 43, 53, 54, 63, 67, 68, 70, 74, 76, 82, 92, 95, 96, 98, 101, 107, 109, 122, 126, 133, 137, 141, 146, 150, 152, 153, 160, 161, 163, 167, 168, 183, 186, 191, 195, 199, 204, 207, 209, 210, 217, 218, 220, 223], "comput": [9, 18, 20, 27, 29, 37, 43, 45, 47, 48, 63, 72, 74, 87, 95, 101, 103, 105, 106, 107, 109, 110, 114, 115, 116, 118, 121, 122, 123, 124, 128, 131, 132, 133, 135, 137, 140, 141, 144, 150, 151, 159, 161, 168, 182, 183, 184, 185, 187, 189, 190, 191, 193, 195, 198, 199, 202, 207, 208, 216, 218], "product": [9, 37, 38, 63, 95, 96, 107, 110, 122, 126, 159, 168, 183, 186, 216], "two": [9, 20, 22, 25, 29, 30, 34, 37, 38, 45, 63, 74, 76, 82, 87, 88, 92, 95, 96, 103, 107, 109, 110, 114, 115, 121, 122, 124, 125, 127, 129, 132, 133, 135, 146, 150, 152, 157, 159, 160, 166, 168, 170, 180, 182, 183, 185, 190, 191, 193, 204, 207, 209, 214, 216, 217], "vector": [9, 19, 20, 22, 25, 37, 43, 63, 73, 74, 76, 82, 95, 101, 107, 109, 110, 114, 137, 141, 143, 146, 147, 150, 151, 152, 156, 159, 160, 163, 168, 195, 199, 201, 204, 205, 207, 208, 209, 213, 216, 217, 220], "v": [9, 13, 14, 16, 20, 22, 25, 37, 40, 41, 45, 63, 67, 68, 70, 74, 76, 82, 95, 98, 99, 103, 107, 137, 160, 163, 168, 195, 217, 220], "magnitud": [9, 20, 22, 25, 63, 74, 76, 82, 107, 109, 110, 114, 121, 124, 128, 145, 161, 168, 182, 185, 187, 203, 218], "interpret": [9, 63, 109, 121, 125, 128, 182, 187], "divid": [9, 37, 63, 95, 109, 133, 159, 191, 216], "round": [9, 12, 25, 38, 63, 66, 82, 96, 107, 168], "up": [9, 25, 33, 34, 45, 63, 82, 90, 92, 103, 107, 109, 135, 168, 193], "nearest": [9, 25, 63, 82, 121, 124, 129, 130, 135, 142, 182, 185, 188, 193, 200], "eqival": [9, 63], "ceil": [9, 63, 109], "wap": [9, 63], "math": [9, 63, 152, 209], "markup": [9, 63], "pyplot": [9, 63, 107, 168], "creat": [9, 13, 14, 29, 33, 34, 37, 63, 67, 68, 87, 90, 91, 92, 95, 107, 109, 122, 127, 167, 168, 183, 223], "elementwis": [9, 14, 20, 63, 68, 74], "binari": [9, 13, 22, 43, 63, 67, 76, 101, 109, 146, 150, 204, 207], "For": [9, 13, 14, 20, 25, 27, 29, 33, 47, 63, 67, 68, 74, 82, 87, 90, 105, 107, 109, 110, 112, 115, 118, 128, 137, 142, 147, 150, 155, 159, 160, 168, 187, 195, 200, 205, 207, 212, 216, 217], "exampl": [9, 13, 14, 20, 29, 33, 63, 67, 68, 74, 87, 90, 107, 109, 126, 128, 137, 142, 144, 147, 150, 155, 157, 159, 161, 163, 167, 168, 186, 187, 195, 200, 202, 205, 207, 212, 214, 216, 218, 220, 223], "y": [9, 13, 16, 25, 37, 40, 41, 44, 63, 67, 70, 82, 95, 98, 99, 102, 107, 109, 110, 115, 120, 121, 124, 125, 129, 132, 133, 137, 138, 142, 145, 146, 150, 152, 153, 161, 163, 167, 168, 181, 182, 185, 190, 191, 195, 196, 200, 203, 204, 207, 209, 210, 218, 220, 223], "lista": [9, 63], "listb": [9, 63], "third": [9, 40, 63, 98, 107, 148, 168], "contain": [9, 14, 16, 29, 30, 32, 37, 43, 47, 63, 68, 70, 87, 88, 89, 91, 95, 101, 105, 107, 109, 121, 122, 125, 126, 127, 137, 150, 166, 168, 182, 183, 186, 195, 207], "equival": [9, 13, 63, 67, 107, 116, 133, 168, 191], "zip": [9, 37, 63, 95], "verion": [9, 63], "map": [9, 13, 22, 25, 29, 33, 34, 43, 45, 63, 67, 76, 82, 87, 90, 92, 101, 103, 121, 124, 132, 133, 163, 167, 182, 185, 190, 191, 220, 223], "version": [9, 45, 63, 103, 107, 109, 163, 168, 220], "succesor": [9, 63], "would": [9, 14, 41, 63, 68, 99, 107, 168], "new": [9, 13, 14, 29, 33, 37, 63, 67, 68, 85, 87, 90, 95, 107, 109, 127, 150, 159, 168, 207, 216], "ad": [9, 14, 63, 68, 107, 109, 138, 146, 153, 163, 168, 196, 204, 210, 220], "everi": [9, 63, 121, 124, 128, 137, 150, 182, 185, 187, 195, 207], "over": [9, 14, 22, 25, 29, 30, 32, 33, 34, 40, 63, 68, 76, 82, 87, 88, 89, 90, 92, 98, 107, 109, 110, 114, 115, 121, 123, 128, 133, 135, 139, 140, 141, 145, 148, 150, 163, 167, 168, 182, 184, 187, 191, 193, 197, 198, 199, 203, 207, 220, 223], "wise": [9, 14, 37, 63, 68, 95], "differ": [9, 22, 29, 34, 37, 38, 41, 63, 76, 87, 92, 95, 96, 99, 107, 109, 133, 150, 157, 160, 168, 191, 207, 214, 217], "ratio": [9, 25, 63, 82, 107, 121, 124, 168, 182, 185], "from": [9, 12, 14, 20, 25, 27, 29, 33, 34, 37, 38, 40, 43, 45, 47, 63, 66, 68, 74, 82, 85, 87, 90, 91, 92, 95, 96, 98, 101, 103, 105, 107, 109, 116, 121, 122, 126, 127, 128, 129, 132, 133, 137, 141, 144, 146, 147, 148, 150, 151, 152, 153, 157, 159, 160, 161, 167, 168, 170, 182, 183, 186, 187, 190, 191, 195, 199, 202, 204, 205, 207, 208, 209, 210, 214, 216, 217, 218, 223], "pair": [9, 43, 63, 101, 109, 110, 129, 141, 199], "multipl": [9, 12, 63, 66, 107, 109, 110, 113, 139, 168, 197], "e": [9, 14, 27, 29, 33, 37, 40, 63, 68, 87, 90, 95, 98, 107, 109, 122, 137, 168, 183, 195], "2": [9, 16, 20, 22, 25, 29, 32, 34, 37, 38, 41, 63, 70, 74, 76, 82, 87, 89, 92, 95, 96, 99, 107, 109, 110, 111, 112, 115, 116, 117, 121, 122, 125, 126, 127, 129, 130, 131, 132, 140, 146, 147, 150, 152, 155, 159, 161, 163, 167, 168, 170, 182, 183, 186, 188, 189, 190, 198, 204, 205, 207, 209, 212, 216, 218, 220, 223], "produc": [9, 43, 63, 101, 107, 109, 145, 168, 203], "doubl": [9, 29, 63, 87, 107, 111, 133, 168, 191], "each": [9, 12, 22, 29, 30, 34, 43, 45, 47, 63, 66, 76, 87, 88, 92, 101, 103, 105, 107, 109, 110, 112, 114, 115, 116, 121, 127, 128, 129, 133, 137, 142, 145, 147, 148, 150, 157, 163, 168, 182, 187, 191, 195, 200, 203, 205, 207, 214, 220], "pass": [9, 13, 25, 29, 30, 34, 47, 63, 67, 82, 87, 88, 92, 105, 107, 109, 122, 128, 132, 141, 148, 150, 156, 168, 170, 183, 187, 190, 199, 207, 213], "popul": [9, 20, 27, 63, 74, 107, 115, 128, 168, 187], "varianc": [9, 20, 25, 63, 74, 82, 107, 109, 110, 116, 139, 140, 141, 153, 159, 168, 197, 198, 199, 210, 216], "sampl": [9, 20, 22, 25, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 50, 63, 74, 76, 82, 95, 96, 99, 101, 103, 104, 105, 106, 107, 109, 110, 112, 115, 116, 117, 118, 121, 122, 125, 126, 128, 135, 137, 140, 141, 144, 145, 146, 147, 150, 153, 155, 159, 162, 163, 168, 182, 183, 186, 187, 193, 195, 198, 199, 202, 203, 204, 205, 207, 210, 212, 216, 219, 220], "averag": [9, 14, 25, 41, 63, 68, 82, 99, 107, 109, 110, 115, 121, 128, 132, 137, 141, 161, 168, 182, 187, 190, 195, 199, 218], "error": [9, 20, 25, 30, 32, 34, 37, 47, 63, 74, 82, 88, 89, 91, 92, 95, 105, 107, 109, 133, 137, 155, 159, 161, 168, 191, 195, 212, 216, 218], "l": [9, 22, 37, 38, 63, 76, 95, 96, 107, 109, 113, 114, 124, 126, 128, 143, 144, 146, 150, 161, 168, 185, 186, 187, 201, 202, 204, 207, 218], "normal": [9, 14, 27, 34, 38, 45, 49, 50, 63, 68, 92, 96, 103, 107, 109, 121, 126, 135, 136, 137, 143, 146, 147, 149, 152, 159, 168, 182, 186, 193, 194, 195, 201, 204, 205, 206, 209, 216], "its": [9, 30, 33, 34, 37, 63, 88, 90, 92, 95, 107, 109, 122, 125, 128, 159, 168, 183, 187, 216], "covari": [9, 20, 25, 27, 37, 38, 50, 63, 74, 82, 95, 96, 107, 128, 137, 141, 145, 146, 150, 152, 159, 168, 187, 195, 199, 203, 204, 207, 209, 216], "pearson": [9, 63, 137, 195], "correl": [9, 20, 63, 74, 107, 109, 135, 137, 141, 160, 168, 193, 195, 199, 217], "coeffici": [9, 20, 63, 74, 107, 116, 121, 128, 137, 168, 182, 187, 195], "row": [9, 13, 35, 37, 50, 63, 67, 93, 95, 107, 121, 124, 125, 127, 132, 163, 168, 182, 185, 190, 220], "independ": [9, 37, 63, 95, 107, 116, 137, 160, 168, 195, 217], "mat": [9, 29, 63, 85, 87, 167, 223], "rowlen": [9, 63], "ani": [9, 29, 34, 63, 78, 87, 92, 107, 109, 116, 121, 127, 144, 146, 150, 168, 182, 202, 204, 207], "subscript": [9, 63], "object": [9, 25, 26, 29, 30, 37, 45, 47, 53, 54, 63, 82, 83, 85, 87, 88, 91, 95, 103, 105, 109, 133, 137, 139, 146, 148, 150, 153, 156, 161, 163, 166, 167, 170, 180, 191, 195, 197, 204, 207, 210, 213, 218, 220, 223], "rang": [9, 25, 38, 63, 82, 96, 107, 109, 126, 128, 135, 146, 150, 168, 186, 187, 193, 204, 207], "can": [9, 12, 22, 25, 27, 29, 30, 32, 33, 34, 38, 47, 63, 66, 76, 78, 82, 87, 88, 89, 90, 92, 96, 105, 107, 109, 113, 116, 121, 133, 135, 137, 138, 140, 141, 144, 156, 159, 167, 168, 170, 180, 182, 191, 193, 195, 196, 198, 199, 202, 213, 216, 223], "facilit": [9, 63], "creation": [9, 13, 20, 63, 67, 74], "form": [9, 13, 16, 22, 25, 33, 37, 47, 63, 67, 70, 76, 82, 90, 95, 105, 107, 109, 125, 131, 148, 150, 168, 189, 207], "major": [9, 13, 63, 67, 121, 127, 140, 152, 182, 198, 209], "pack": [9, 13, 22, 37, 43, 63, 67, 76, 95, 101, 107, 133, 168, 191], "instanc": [9, 25, 29, 63, 82, 87, 107, 159, 168, 216], "you": [9, 13, 34, 47, 63, 67, 92, 105, 107, 109, 116, 137, 146, 148, 150, 167, 168, 195, 204, 207, 223], "had": [9, 63, 107, 168], "100x100": [9, 63], "gpuarrai": [9, 13, 14, 63, 67, 68], "want": [9, 18, 29, 47, 63, 72, 87, 105, 107, 109, 116, 146, 150, 168, 204, 207], "repres": [9, 13, 29, 32, 63, 67, 87, 89, 107, 132, 159, 167, 168, 190, 216, 223], "100": [9, 14, 41, 44, 63, 68, 99, 102, 107, 109, 110, 115, 116, 128, 135, 137, 142, 149, 150, 159, 168, 187, 193, 195, 200, 206, 207, 216], "size": [9, 11, 12, 19, 20, 25, 33, 34, 37, 38, 47, 63, 65, 66, 73, 74, 82, 90, 92, 95, 96, 105, 107, 109, 110, 111, 121, 124, 133, 137, 141, 144, 145, 147, 159, 167, 168, 182, 185, 191, 195, 199, 202, 203, 205, 216, 223], "slice": [9, 63, 109], "your": [9, 34, 63, 92, 146, 204], "origin": [9, 13, 22, 25, 27, 33, 37, 63, 67, 76, 82, 90, 95, 109, 157, 161, 167, 214, 218, 223], "most": [9, 14, 27, 29, 32, 63, 68, 87, 89, 107, 150, 168, 207], "same": [9, 13, 25, 29, 37, 45, 63, 67, 82, 87, 95, 103, 107, 109, 124, 128, 135, 137, 145, 167, 168, 185, 187, 193, 195, 203, 223], "underli": [9, 29, 63, 87, 107, 109, 121, 128, 168, 182, 187], "section": [9, 63], "memori": [9, 12, 13, 33, 63, 66, 67, 90], "data": [11, 12, 14, 19, 20, 22, 25, 26, 29, 33, 37, 41, 44, 48, 65, 66, 68, 73, 74, 76, 82, 83, 87, 90, 91, 95, 99, 102, 106, 107, 109, 110, 111, 113, 116, 121, 122, 124, 126, 128, 130, 133, 136, 137, 140, 141, 145, 150, 158, 160, 161, 163, 167, 168, 182, 183, 185, 186, 187, 188, 191, 194, 195, 198, 199, 203, 207, 215, 217, 218, 220, 223], "cudamodul": [12, 66], "accepta": [12, 66], "cuda": [12, 13, 66, 67], "estim": [12, 44, 66, 102, 107, 109, 110, 112, 114, 116, 121, 128, 135, 137, 139, 142, 145, 146, 150, 155, 157, 158, 160, 163, 168, 182, 187, 193, 195, 197, 200, 203, 204, 207, 212, 214, 215, 217, 220], "fit": [12, 66, 107, 133, 138, 140, 146, 147, 148, 150, 161, 163, 168, 191, 196, 198, 204, 205, 207, 218, 220], "one": [12, 13, 19, 22, 25, 29, 33, 34, 37, 38, 41, 45, 47, 66, 67, 73, 76, 82, 87, 90, 92, 95, 96, 99, 103, 105, 107, 109, 110, 114, 124, 125, 127, 137, 140, 156, 158, 159, 160, 168, 170, 185, 195, 198, 213, 215, 216, 217], "current": [12, 25, 40, 41, 66, 82, 98, 99, 133, 167, 170, 191, 223], "context": [12, 34, 66, 92], "largest": [12, 25, 37, 38, 66, 82, 95, 96, 107, 109, 150, 168, 207], "do": [12, 14, 27, 29, 34, 37, 47, 66, 68, 87, 92, 95, 105, 107, 109, 110, 113, 116, 121, 141, 167, 168, 182, 199, 223], "exce": [12, 66, 107, 109, 168], "amount": [12, 25, 29, 66, 82, 87, 109], "share": [12, 27, 33, 47, 66, 90, 105], "regist": [12, 66], "hard": [12, 33, 66, 90, 147, 205], "per": [12, 41, 66, 99, 121, 128, 182, 187], "down": [12, 25, 38, 47, 66, 82, 96, 105, 121, 182], "warp": [12, 66], "n_unit": [12, 66], "call": [12, 13, 14, 25, 29, 30, 33, 34, 37, 66, 67, 68, 82, 87, 88, 90, 92, 95, 107, 109, 137, 156, 167, 168, 170, 180, 195, 213, 223], "after": [12, 34, 41, 66, 92, 99, 107, 152, 168, 209], "need": [12, 16, 29, 33, 37, 47, 66, 70, 87, 90, 95, 105, 107, 109, 116, 117, 141, 159, 163, 168, 199, 216, 220], "run": [12, 33, 34, 66, 90, 92, 107, 137, 167, 168, 195, 223], "ar": [12, 14, 22, 25, 27, 29, 30, 32, 33, 34, 37, 38, 45, 48, 66, 68, 76, 78, 82, 85, 87, 88, 89, 90, 92, 95, 96, 103, 106, 107, 109, 115, 116, 117, 121, 122, 124, 125, 127, 128, 132, 137, 139, 140, 141, 152, 156, 158, 159, 160, 163, 168, 170, 182, 183, 185, 187, 190, 195, 197, 198, 199, 209, 213, 215, 216, 217, 220], "multiprocessor": [12, 66], "If": [12, 25, 29, 30, 33, 34, 37, 38, 40, 47, 66, 82, 87, 88, 90, 91, 92, 95, 96, 98, 105, 107, 109, 110, 124, 125, 127, 128, 137, 140, 141, 150, 156, 158, 159, 168, 185, 187, 195, 198, 199, 207, 213, 215, 216], "convent": [12, 16, 66, 70, 109], "within": [12, 33, 34, 66, 85, 90, 92, 107, 109, 112, 120, 128, 129, 135, 168, 181, 187, 193], "unclear": [12, 66], "me": [12, 25, 66, 82], "weather": [12, 66], "processor": [12, 66], "less": [12, 25, 37, 47, 66, 82, 95, 105, 107, 109, 128, 147, 150, 168, 187, 205, 207], "effici": [12, 13, 47, 66, 67, 105, 107, 145, 167, 168, 203, 223], "enough": [12, 66], "handl": [12, 29, 34, 66, 85, 87, 92, 109], "process": [12, 33, 34, 37, 38, 50, 66, 90, 92, 95, 96, 107, 109, 113, 122, 134, 135, 136, 146, 150, 153, 158, 162, 163, 168, 170, 183, 192, 193, 194, 204, 207, 210, 215, 219, 220], "all": [12, 14, 20, 25, 27, 29, 30, 33, 34, 37, 66, 68, 74, 82, 87, 88, 90, 91, 92, 95, 107, 109, 110, 116, 120, 124, 125, 127, 131, 132, 135, 137, 141, 148, 150, 163, 167, 168, 181, 185, 189, 190, 193, 195, 199, 207, 220, 223], "inform": [12, 25, 27, 29, 34, 37, 50, 66, 82, 87, 91, 92, 95, 107, 137, 156, 168, 195, 213], "known": [12, 66, 107, 168], "pycuda": [12, 13, 14, 66, 67, 68], "fun": [13, 67, 167, 223], "small": [13, 37, 67, 95, 107, 109, 122, 131, 140, 142, 147, 150, 168, 183, 189, 198, 200, 205, 207], "simplifi": [13, 67, 107, 116, 146, 167, 168, 204, 223], "r": [13, 15, 22, 25, 37, 67, 69, 76, 82, 95, 107, 120, 152, 161, 168, 181, 209, 218], "op": [13, 14, 38, 47, 67, 68, 96, 105], "autom": [13, 67], "result": [13, 14, 22, 25, 29, 33, 34, 67, 68, 76, 82, 87, 90, 92, 107, 109, 110, 113, 115, 116, 121, 125, 126, 133, 140, 142, 145, 148, 150, 161, 167, 168, 170, 182, 186, 191, 198, 200, 203, 207, 218, 223], "express": [13, 34, 47, 67, 92, 105, 107, 125, 167, 168, 223], "dollar": [13, 67], "sign": [13, 29, 67, 87, 107, 109, 116, 168], "denot": [13, 67, 107, 168], "construct": [13, 29, 38, 67, 87, 96, 141, 163, 199, 220], "clone": [13, 14, 67, 68], "idenitii": [13, 67], "so": [13, 14, 19, 29, 34, 38, 47, 67, 68, 73, 87, 91, 92, 96, 105, 107, 109, 116, 121, 126, 133, 146, 150, 155, 156, 160, 167, 168, 170, 182, 186, 191, 204, 207, 212, 213, 217, 223], "assign": [13, 67, 127, 142, 150, 157, 200, 207, 214], "As": [13, 47, 67, 105, 107, 168], "nontrivi": [13, 67], "nonlinear": [13, 67, 121, 182], "might": [13, 33, 34, 67, 90, 92, 144, 202], "could": [13, 30, 33, 67, 88, 90, 107, 116, 122, 168, 183], "thing": [13, 25, 30, 32, 67, 82, 88, 89], "except": [13, 25, 34, 67, 82, 92, 107, 156, 168, 213], "alloc": [13, 67], "execut": [13, 33, 67, 90, 109, 170], "That": [13, 67, 107, 146, 150, 159, 168, 204, 207, 216], "left": [13, 23, 25, 53, 67, 80, 82, 107, 128, 137, 152, 168, 187, 195, 209], "suppliment": [13, 67], "support": [13, 14, 29, 67, 68, 87, 107, 109, 139, 168, 197], "alwai": [13, 67, 107, 112, 168], "hold": [13, 67], "allow": [13, 29, 33, 67, 87, 90, 107, 121, 129, 156, 167, 168, 182, 213, 223], "implement": [13, 29, 32, 33, 41, 47, 67, 87, 89, 90, 99, 105, 107, 109, 110, 114, 115, 139, 159, 166, 168, 197, 216], "gpuarr": [13, 67], "start": [13, 21, 24, 25, 26, 47, 50, 67, 75, 81, 82, 83, 105, 107, 109, 159, 168, 216], "locat": [13, 29, 33, 67, 87, 90, 107, 109, 120, 121, 124, 127, 131, 132, 133, 139, 142, 145, 149, 152, 158, 167, 168, 181, 182, 185, 189, 190, 191, 197, 200, 203, 206, 209, 215, 223], "type": [13, 22, 25, 29, 30, 32, 33, 34, 37, 38, 40, 43, 67, 76, 82, 85, 87, 88, 89, 90, 91, 92, 95, 96, 98, 101, 107, 109, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 181, 182, 185, 186, 187, 189, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 215, 216, 217, 218, 219, 220, 222, 223], "m": [13, 14, 19, 22, 25, 36, 37, 41, 67, 68, 73, 76, 82, 94, 95, 99, 107, 109, 113, 116, 118, 139, 150, 159, 160, 161, 167, 168, 197, 207, 216, 217, 218, 223], "move": [13, 25, 41, 67, 82, 99, 109, 123, 137, 184, 195], "matric": [13, 37, 38, 67, 95, 96, 141, 199], "simpli": [13, 29, 37, 67, 87, 95], "datastructur": [13, 29, 67, 87], "wrap": [13, 14, 29, 37, 38, 67, 68, 87, 95, 96, 107, 109, 121, 137, 159, 166, 168, 182, 195, 216], "reduct": [13, 67], "succint": [13, 67], "gener": [14, 27, 29, 32, 37, 38, 45, 68, 87, 89, 95, 96, 103, 107, 109, 110, 114, 123, 126, 133, 135, 140, 141, 146, 149, 159, 163, 168, 184, 186, 191, 193, 198, 199, 204, 206, 216, 220], "sever": [14, 27, 47, 68, 105, 145, 149, 203, 206], "simpl": [14, 68], "orix": [14, 68], "succinctli": [14, 68], "note": [14, 27, 29, 41, 47, 68, 87, 99, 105, 107, 112, 126, 127, 150, 152, 159, 165, 168, 186, 207, 209, 216, 222], "c": [14, 20, 22, 25, 37, 40, 41, 68, 74, 76, 82, 95, 98, 99, 107, 109, 110, 124, 133, 137, 152, 159, 168, 185, 191, 195, 209, 216], "overload": [14, 68], "duplic": [14, 27, 68, 132, 149, 190, 206], "much": [14, 16, 27, 68, 70, 107, 141, 155, 168, 199, 212], "somewhat": [14, 37, 68, 95, 110], "useless": [14, 68], "cumath": [14, 68], "syntax": [14, 68], "without": [14, 25, 29, 68, 82, 87, 107, 111, 122, 168, 183], "d": [14, 15, 16, 19, 29, 37, 40, 68, 69, 70, 73, 85, 87, 95, 98, 107, 141, 146, 148, 150, 163, 167, 168, 199, 204, 207, 220, 223], "linear": [14, 37, 41, 68, 95, 99, 109, 128, 133, 137, 141, 142, 150, 159, 161, 187, 191, 195, 199, 200, 207, 216, 218], "combin": [14, 29, 68, 87, 121, 153, 182, 210], "weight1": [14, 68], "weight2": [14, 68], "data1": [14, 68], "data2": [14, 68], "succes": [14, 68], "caus": [14, 22, 30, 33, 68, 76, 88, 90, 91, 109, 156, 213], "recompili": [14, 68], "pdf": [14, 25, 68, 82, 107, 139, 143, 147, 152, 159, 168, 197, 201, 205, 209, 216], "gpupdf": [14, 68], "0": [14, 16, 22, 25, 26, 27, 29, 37, 38, 40, 41, 43, 47, 48, 68, 70, 76, 78, 82, 83, 87, 95, 96, 98, 99, 101, 105, 106, 107, 109, 110, 113, 114, 115, 121, 122, 124, 126, 127, 128, 130, 131, 133, 136, 137, 141, 142, 143, 146, 147, 149, 150, 152, 153, 155, 157, 159, 160, 161, 163, 167, 168, 170, 182, 183, 185, 186, 187, 188, 189, 191, 194, 195, 199, 200, 201, 204, 205, 206, 207, 209, 210, 212, 214, 216, 217, 218, 220, 223], "zero": [14, 25, 37, 38, 41, 43, 68, 82, 95, 96, 99, 101, 107, 109, 124, 126, 128, 135, 141, 142, 146, 150, 159, 161, 163, 167, 168, 185, 186, 187, 193, 199, 200, 204, 207, 216, 218, 220, 223], "unit": [14, 21, 23, 25, 40, 41, 47, 50, 68, 75, 80, 82, 98, 99, 105, 107, 109, 121, 124, 125, 128, 135, 137, 142, 152, 163, 168, 182, 185, 187, 193, 195, 200, 209, 220], "compili": [14, 68], "memoiz": [14, 29, 33, 50, 68, 86, 87, 90, 91], "give": [14, 68, 107, 143, 168, 201], "standard_devi": [14, 68], "onli": [14, 23, 25, 27, 29, 30, 32, 37, 47, 68, 80, 82, 87, 88, 89, 95, 105, 107, 109, 110, 127, 128, 141, 145, 156, 168, 187, 199, 203, 213], "compil": [14, 34, 47, 68, 92, 105], "onc": [14, 68, 107, 113, 168], "distribt": [14, 68], "hill": [14, 68, 107, 168], "equat": [14, 41, 68, 99, 107, 133, 168, 191], "noncoop": [14, 68], "bind": [14, 29, 30, 68, 87, 88], "curandom": [14, 68], "rand": [14, 27, 49, 50, 68, 107, 167, 168, 223], "uniform": [14, 27, 49, 50, 68, 107, 125, 150, 168, 207], "random": [14, 27, 49, 50, 68, 107, 109, 116, 159, 163, 168, 216, 220], "draw": [14, 25, 68, 82, 107, 150, 153, 155, 162, 168, 207, 210, 212, 219], "dt": [15, 20, 40, 41, 48, 69, 74, 98, 99, 106, 107, 117, 150, 153, 162, 167, 168, 207, 210, 219, 223], "iter": [15, 22, 69, 76, 78, 126, 129, 139, 144, 150, 167, 170, 186, 197, 202, 207, 223], "perform": [16, 22, 29, 70, 76, 87, 107, 109, 110, 137, 145, 159, 168, 195, 203, 216], "boolean": [16, 25, 29, 33, 37, 43, 70, 82, 87, 90, 95, 101, 107, 109, 124, 125, 127, 135, 137, 145, 168, 185, 193, 195, 203], "parallel": [16, 27, 28, 47, 50, 70, 86, 105, 133, 191], "These": [16, 30, 70, 88, 107, 109, 152, 168, 209], "veri": [16, 18, 70, 72, 91, 107, 121, 146, 155, 168, 182, 204, 212], "work": [16, 29, 33, 34, 37, 47, 70, 87, 90, 92, 95, 105, 107, 112, 141, 150, 156, 165, 168, 199, 207, 213, 222], "sinc": [16, 47, 70, 105, 107, 122, 128, 167, 168, 183, 187, 223], "thei": [16, 30, 33, 34, 41, 70, 88, 90, 92, 99, 107, 133, 141, 167, 168, 191, 199, 223], "basic": [16, 70], "iverson": [16, 70], "0f": [16, 70], "fals": [16, 22, 25, 29, 32, 33, 34, 37, 44, 47, 48, 70, 76, 82, 87, 89, 90, 91, 92, 95, 102, 105, 106, 107, 109, 115, 116, 124, 127, 135, 137, 140, 145, 146, 155, 156, 160, 165, 168, 185, 193, 195, 198, 203, 204, 212, 213, 217, 222], "true": [16, 25, 26, 29, 33, 34, 37, 38, 44, 47, 70, 78, 82, 83, 85, 87, 90, 92, 95, 96, 102, 105, 107, 109, 110, 115, 116, 121, 124, 125, 127, 137, 140, 145, 146, 153, 156, 165, 167, 168, 182, 185, 195, 198, 203, 204, 210, 213, 222, 223], "nevertheless": [16, 27, 70], "have": [16, 34, 37, 47, 70, 92, 95, 105, 107, 109, 111, 116, 121, 128, 137, 140, 146, 150, 152, 168, 182, 187, 195, 198, 204, 207, 209], "found": [16, 70, 107, 109, 121, 156, 167, 168, 182, 213, 223], "quit": [16, 29, 30, 70, 87, 88, 122, 183], "present": [16, 29, 34, 70, 87, 92, 109, 116, 165, 222], "some": [16, 27, 29, 30, 33, 34, 70, 87, 88, 90, 92, 107, 109, 112, 122, 144, 156, 161, 168, 183, 202, 213, 218], "circumst": [16, 70], "w": [16, 24, 26, 37, 43, 45, 47, 70, 81, 83, 95, 101, 103, 105, 107, 109, 110, 113, 114, 122, 127, 133, 137, 159, 161, 168, 183, 191, 195, 216, 218], "rare": [18, 72], "acceler": [18, 72], "xdata": [18, 20, 72, 74], "ydata": [18, 20, 72, 74], "bin": [18, 19, 20, 25, 44, 72, 73, 74, 82, 102, 107, 109, 131, 135, 146, 163, 168, 189, 193, 204, 220], "minval": [18, 20, 72, 74], "maxval": [18, 20, 72, 74], "dataset": [18, 20, 27, 33, 72, 74, 90, 109], "min": [18, 20, 25, 48, 72, 74, 82, 106, 107, 109, 145, 168, 203], "max": [18, 20, 25, 48, 72, 74, 82, 106, 107, 109, 145, 160, 168, 203, 217], "lx": [18, 20, 72, 74], "ly": [18, 20, 72, 74, 107, 168], "titl": [18, 20, 24, 25, 37, 72, 74, 81, 82, 95, 107, 168], "distanc": [19, 20, 25, 27, 37, 50, 73, 74, 82, 95, 107, 120, 124, 129, 161, 168, 181, 185, 218], "t": [19, 22, 25, 27, 34, 37, 38, 41, 73, 76, 82, 91, 92, 95, 96, 99, 107, 109, 112, 115, 116, 117, 126, 133, 139, 146, 147, 149, 150, 152, 155, 156, 159, 163, 165, 167, 168, 186, 191, 197, 204, 205, 206, 207, 209, 212, 213, 216, 220, 222, 223], "thresh": [19, 73, 121, 182], "5": [19, 22, 25, 29, 37, 38, 73, 76, 78, 82, 87, 95, 96, 107, 109, 110, 112, 115, 120, 121, 124, 126, 127, 133, 135, 146, 149, 150, 152, 158, 159, 168, 170, 181, 182, 185, 186, 191, 193, 204, 206, 207, 209, 215, 216], "13k": [19, 73], "timestep": [19, 73], "256x256": [19, 73], "sim": [19, 73, 107, 168], "time": [19, 25, 29, 34, 38, 40, 41, 48, 50, 73, 82, 86, 87, 91, 92, 96, 98, 99, 106, 107, 109, 110, 112, 114, 115, 116, 117, 121, 123, 124, 126, 128, 133, 135, 136, 137, 141, 142, 146, 149, 150, 153, 156, 158, 161, 162, 163, 167, 168, 182, 184, 185, 186, 187, 191, 193, 194, 195, 199, 200, 204, 206, 207, 210, 213, 215, 218, 219, 220, 223], "datapoint": [19, 73], "inner": [19, 73], "dimens": [19, 25, 37, 73, 82, 95, 107, 109, 110, 111, 112, 114, 115, 121, 122, 124, 125, 128, 137, 150, 159, 163, 168, 182, 183, 185, 187, 195, 207, 216, 220], "rad": [19, 73], "filenam": [19, 27, 28, 29, 47, 50, 73, 86, 87, 105], "maxfram": [19, 73], "todo": [19, 29, 73, 87, 91, 109, 122, 123, 136, 137, 141, 149, 152, 161, 166, 167, 183, 184, 194, 195, 199, 206, 209, 218, 223], "file": [19, 25, 29, 33, 73, 82, 85, 87, 90, 126, 167, 186, 223], "imag": [19, 21, 25, 26, 27, 50, 73, 75, 82, 83, 122, 127, 145, 160, 163, 183, 203, 217, 220], "width": [19, 25, 38, 73, 82, 96, 107, 109, 122, 124, 136, 142, 163, 166, 168, 183, 185, 194, 200, 220], "height": [19, 25, 38, 73, 82, 96, 107, 122, 163, 168, 183, 220], "frame": [19, 73, 109, 121, 128, 133, 140, 163, 170, 180, 182, 187, 191, 198, 220], "tab": [19, 73], "delimit": [19, 73], "next": [19, 73], "end": [19, 73, 107, 109, 137, 168, 195], "step": [19, 25, 40, 41, 47, 73, 82, 98, 99, 105, 110, 115, 133, 150, 153, 162, 191, 207, 210, 219], "squar": [20, 22, 37, 38, 74, 76, 95, 96, 107, 110, 114, 115, 116, 124, 126, 133, 137, 140, 141, 150, 168, 185, 186, 191, 195, 198, 199, 207], "constant": [20, 41, 45, 74, 99, 103, 117, 122, 128, 138, 143, 146, 152, 153, 161, 162, 183, 187, 196, 201, 204, 209, 210, 218, 219], "gpusdev": [20, 74], "slightli": [20, 22, 74, 76], "better": [20, 22, 25, 27, 33, 74, 76, 82, 90, 107, 125, 148, 168], "wai": [20, 29, 34, 47, 74, 87, 91, 92, 105, 107, 122, 150, 167, 168, 183, 207, 223], "write": [20, 22, 29, 41, 47, 74, 76, 87, 99, 105], "intermedi": [20, 29, 33, 74, 87, 90, 116], "center": [20, 25, 38, 74, 82, 96, 107, 109, 121, 124, 126, 137, 142, 146, 152, 168, 182, 185, 186, 195, 200, 204, 209], "between": [20, 22, 25, 32, 33, 37, 43, 74, 76, 82, 89, 90, 95, 101, 107, 109, 110, 115, 116, 121, 129, 135, 137, 141, 143, 146, 151, 159, 168, 182, 193, 195, 199, 201, 204, 208, 216], "z": [20, 22, 25, 37, 74, 76, 82, 95, 107, 109, 110, 125, 127, 128, 129, 132, 140, 152, 159, 161, 167, 168, 187, 190, 198, 209, 216, 218, 223], "score": [20, 74, 109, 110, 128, 187], "spike": [20, 27, 40, 41, 49, 50, 74, 98, 99, 109, 116, 120, 141, 142, 146, 163, 181, 199, 200, 204, 220], "color": [21, 25, 26, 27, 50, 75, 78, 82, 83, 107, 168], "rgb2hex": [21, 22, 50, 75, 76], "hex2rgb": [21, 22, 50, 75, 76], "hsv2rgb": [21, 22, 50, 75, 76], "light": [21, 22, 25, 50, 75, 76, 82], "luminance_matrix": [21, 22, 50, 75, 76], "match_lumin": [21, 22, 50, 75, 76], "rotat": [21, 22, 37, 38, 50, 75, 76, 95, 96, 109, 116, 124, 133, 152, 185, 191, 209], "rgbtohcl": [21, 22, 50, 75, 76], "hue_angl": [21, 22, 50, 75, 76], "hcl2rgb": [21, 22, 50, 75, 76], "circularly_smooth_colormap": [21, 22, 50, 75, 76], "isoluminance1": [21, 22, 50, 75, 76], "isoluminance2": [21, 22, 50, 75, 76], "isoluminance3": [21, 22, 50, 75, 76], "isoluminance4": [21, 22, 50, 75, 76], "lighthu": [21, 22, 50, 75, 76], "darkhu": [21, 22, 50, 75, 76], "medhu": [21, 22, 50, 75, 76], "radl2rgb": [21, 22, 50, 75, 76], "radl2rgblut": [21, 22, 50, 75, 76], "complexhlarr2rgb": [21, 22, 50, 75, 76], "color_boxplot": [21, 22, 50, 75, 76], "hex_pack_bgr": [21, 22, 50, 75, 76], "code_to_16bit": [21, 22, 50, 75, 76], "bit16_rgb_to_tupl": [21, 22, 50, 75, 76], "enumerate_fast_color": [21, 22, 50, 75, 76], "tuple_to_bit16": [21, 22, 50, 75, 76], "tuple_to_bit24": [21, 22, 50, 75, 76], "bit16_print_color": [21, 22, 50, 75, 76], "show_fast_pallet": [21, 22, 50, 75, 76], "show_complete_fast_pallet": [21, 22, 50, 75, 76], "show_complete_fastest_pallet": [21, 22, 50, 75, 76], "show_hex_pallet": [21, 22, 50, 75, 76], "median_cent": [21, 23, 50, 75, 80], "mean_cent": [21, 23, 50, 75, 80], "visualize_deriv": [21, 23, 50, 75, 80], "matplotlib": [21, 25, 27, 50, 75, 82, 107, 124, 132, 168, 185, 190], "hide_toolbar": [21, 24, 50, 75, 81], "draw_arrai": [21, 24, 26, 50, 75, 81, 83], "simpleaxi": [21, 25, 37, 50, 75, 82, 95], "rightaxi": [21, 25, 50, 75, 82], "simpleraxi": [21, 25, 50, 75, 82], "simplerright": [21, 25, 50, 75, 82], "noaxi": [21, 25, 50, 75, 82], "nicebp": [21, 25, 50, 75, 82], "colored_boxplot": [21, 25, 50, 75, 82], "percent": [21, 25, 50, 75, 82, 107, 137, 168, 195], "shortscientif": [21, 25, 50, 75, 82], "eformat": [21, 25, 50, 75, 82], "v2str": [21, 25, 50, 75, 82], "v2str_long": [21, 25, 50, 75, 82, 137, 156, 195, 213], "nicet": [21, 25, 50, 75, 82], "nicei": [21, 25, 50, 75, 82], "nicex": [21, 25, 50, 75, 82], "nicexi": [21, 25, 50, 75, 82], "positivex": [21, 25, 50, 75, 82], "positivei": [21, 25, 50, 75, 82], "positivexi": [21, 25, 50, 75, 82], "xylim": [21, 25, 50, 75, 82], "noclip": [21, 25, 50, 75, 82], "notick": [21, 25, 50, 75, 82], "nox": [21, 25, 50, 75, 82], "noi": [21, 25, 50, 75, 82], "noxyax": [21, 25, 50, 75, 82], "noxlabel": [21, 25, 50, 75, 82], "noylabel": [21, 25, 50, 75, 82], "nolabel": [21, 25, 50, 75, 82], "righti": [21, 25, 50, 75, 82], "uniti": [21, 25, 50, 75, 82], "unitx": [21, 25, 50, 75, 82], "force_aspect": [21, 25, 37, 50, 75, 82, 95], "get_aspect": [21, 25, 50, 75, 82], "match_image_aspect": [21, 25, 50, 75, 82], "unitax": [21, 25, 50, 75, 82], "adjustmap": [21, 25, 50, 75, 82], "get_ax_s": [21, 25, 50, 75, 82], "get_ax_pixel": [21, 25, 50, 75, 82], "get_ax_pixel_ratio": [21, 25, 50, 75, 82], "pixels_to_xunit": [21, 25, 50, 75, 82], "yunits_to_pixel": [21, 25, 50, 75, 82], "xunits_to_pixel": [21, 25, 50, 75, 82], "pixels_to_yunit": [21, 25, 50, 75, 82], "pixels_to_xfigureunit": [21, 25, 50, 75, 82], "pixels_to_yfigureunit": [21, 25, 50, 75, 82], "xfigureunits_to_pixel": [21, 25, 50, 75, 82], "yfigureunits_to_pixel": [21, 25, 50, 75, 82], "px2x": [21, 25, 50, 75, 82], "px2y": [21, 25, 50, 75, 82], "adjust_ylabel_spac": [21, 25, 50, 75, 82], "adjust_xlabel_spac": [21, 25, 50, 75, 82], "get_bbox": [21, 25, 50, 75, 82], "nudge_axis_y_pixel": [21, 25, 50, 75, 82], "adjust_axis_height_pixel": [21, 25, 50, 75, 82], "nudge_axis_i": [21, 25, 50, 75, 82], "nudge_axis_x": [21, 25, 50, 75, 82], "expand_axis_x": [21, 25, 50, 75, 82], "expand_axis_i": [21, 25, 50, 75, 82], "nudge_axis_baselin": [21, 25, 50, 75, 82], "nudge_axis_left": [21, 25, 50, 75, 82], "zoombox": [21, 25, 50, 75, 82], "fudgex": [21, 25, 50, 75, 82], "fudgei": [21, 25, 50, 75, 82], "fudgexi": [21, 25, 50, 75, 82], "shade_edg": [21, 25, 50, 75, 82], "ybartext": [21, 25, 50, 75, 82], "xbartext": [21, 25, 50, 75, 82], "nice_legend": [21, 25, 50, 75, 82], "right_legend": [21, 25, 50, 75, 82], "left_legend": [21, 25, 50, 75, 82], "base_legend": [21, 25, 50, 75, 82], "rangeto": [21, 25, 50, 75, 82], "rangeov": [21, 25, 50, 75, 82], "cleartop": [21, 25, 50, 75, 82], "plotcwt": [21, 25, 50, 75, 82], "plotwtphas": [21, 25, 50, 75, 82], "wtpshow": [21, 25, 50, 75, 82], "plotwtphasefig": [21, 25, 50, 75, 82], "domask": [21, 25, 50, 75, 82], "fsize": [21, 25, 50, 75, 82], "handlersquar": [21, 25, 50, 75, 82], "create_artist": [21, 25, 75, 82], "plot_complex": [21, 25, 50, 75, 82], "animate_complex": [21, 25, 50, 75, 82], "good_colorbar": [21, 25, 50, 75, 82], "complex_axi": [21, 25, 50, 75, 82], "subfigurelabel": [21, 25, 50, 75, 82], "sigbar": [21, 25, 50, 75, 82], "savefigur": [21, 25, 50, 75, 82], "clean_y_rang": [21, 25, 50, 75, 82], "round_to_precis": [21, 25, 50, 75, 82], "ceil_to_precis": [21, 25, 50, 75, 82], "floor_to_precis": [21, 25, 50, 75, 82], "expand_y_rang": [21, 25, 50, 75, 82], "gaussian2d_covellips": [21, 25, 50, 75, 82], "stderrplot": [21, 25, 50, 75, 82], "yscalebar": [21, 25, 50, 75, 82], "xscalebar": [21, 25, 50, 75, 82], "addspik": [21, 25, 50, 75, 82], "unit_crosshair": [21, 25, 50, 75, 82], "covariance_crosshair": [21, 25, 50, 75, 82], "draw_circl": [21, 25, 50, 75, 82], "simple_arrow": [21, 25, 50, 75, 82], "inhibition_arrow": [21, 25, 50, 75, 82], "figurebox": [21, 25, 50, 75, 82], "more_xtick": [21, 25, 50, 75, 82], "more_ytick": [21, 25, 50, 75, 82], "border_width": [21, 25, 50, 75, 82], "broken_step": [21, 25, 50, 75, 82], "label": [21, 25, 50, 75, 82, 107, 147, 160, 168, 205, 217], "flathist": [21, 25, 50, 75, 82], "barcompar": [21, 25, 39, 42, 44, 50, 75, 82, 97, 100, 102], "shellmean": [21, 25, 50, 75, 82], "trendlin": [21, 25, 50, 75, 82], "shellplot": [21, 25, 50, 75, 82], "arrow_between": [21, 25, 50, 75, 82], "splitz": [21, 25, 50, 75, 82], "plotz": [21, 25, 50, 75, 82], "pygam": [21, 27, 50, 75], "enable_vsync": [21, 26, 50, 75, 83], "hexcod": [22, 76], "h": [22, 24, 26, 37, 38, 41, 43, 45, 76, 81, 83, 95, 96, 99, 101, 103, 107, 109, 122, 127, 128, 167, 168, 183, 187, 223], "force_lumin": [22, 76], "method": [22, 29, 76, 87, 107, 121, 137, 138, 142, 156, 159, 168, 182, 195, 196, 200, 213, 216], "perceiv": [22, 76], "convert": [22, 25, 29, 43, 76, 82, 85, 87, 91, 101, 109, 117, 125, 127, 128, 129, 132, 143, 152, 167, 187, 190, 201, 209, 223], "hsv": [22, 76, 124, 185], "rgb": [22, 26, 76, 83], "hue": [22, 25, 76, 82, 124, 185], "360": [22, 76], "satur": [22, 76], "tupl": [22, 25, 29, 30, 34, 37, 76, 78, 82, 87, 88, 91, 92, 95, 107, 109, 120, 124, 129, 133, 145, 148, 159, 161, 167, 168, 170, 181, 185, 191, 203, 216, 218, 223], "red": [22, 76], "green": [22, 76], "blue": [22, 76], "str": [22, 25, 29, 30, 33, 38, 76, 82, 87, 88, 90, 96, 107, 109, 137, 167, 168, 195, 223], "default": [22, 25, 29, 30, 33, 34, 37, 38, 40, 76, 82, 87, 88, 90, 92, 95, 96, 98, 107, 109, 110, 115, 116, 121, 124, 125, 126, 127, 128, 129, 131, 135, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 158, 159, 165, 166, 167, 168, 170, 182, 185, 186, 187, 189, 193, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 215, 216, 222, 223], "weight": [22, 37, 38, 47, 48, 76, 95, 96, 105, 106, 107, 115, 128, 137, 145, 146, 161, 163, 168, 187, 195, 203, 204, 218, 220], "lumin": [22, 76], "np": [22, 25, 37, 38, 40, 45, 76, 82, 95, 96, 98, 103, 107, 109, 116, 120, 121, 124, 125, 126, 127, 128, 129, 131, 133, 137, 139, 140, 141, 145, 146, 147, 150, 151, 152, 157, 158, 159, 161, 162, 168, 181, 182, 185, 186, 187, 189, 191, 195, 197, 198, 199, 203, 204, 205, 207, 208, 209, 214, 215, 216, 218, 219], "ndarrai": [22, 76, 107, 109, 115, 122, 124, 137, 142, 150, 159, 168, 183, 185, 195, 200, 207, 216], "299": [22, 76], "587": [22, 76], "114": [22, 76], "2126": [22, 76], "7152": [22, 76], "0722": [22, 76], "59": [22, 38, 76, 96, 126, 146, 150, 186, 204, 207], "11": [22, 29, 38, 76, 87, 96, 107, 126, 146, 168, 170, 186, 204], "lrgb": [22, 76], "target": [22, 37, 76, 95, 160, 217], "threshold": [22, 41, 76, 99, 107, 109, 121, 127, 132, 136, 160, 168, 182, 190, 194, 217], "01": [22, 76, 107, 142, 155, 160, 168, 200, 212, 217], "adjust": [22, 25, 37, 76, 82, 95, 109], "match": [22, 25, 37, 41, 43, 76, 82, 91, 95, 99, 101, 116, 129, 137, 139, 167, 195, 197, 223], "luminos": [22, 76], "th": [22, 76], "angl": [22, 37, 76, 78, 95, 107, 109, 116, 168], "theta": [22, 76, 107, 117, 123, 152, 168, 184, 209], "affect": [22, 76, 107, 168], "mai": [22, 25, 29, 30, 33, 41, 76, 82, 87, 88, 90, 99, 107, 109, 111, 121, 122, 150, 168, 170, 182, 183, 207], "fall": [22, 76, 131, 156, 189, 213], "outsid": [22, 25, 47, 76, 82, 105, 107, 131, 168, 189], "colorspac": [22, 76], "chroma": [22, 76], "space": [22, 24, 25, 29, 33, 38, 76, 81, 82, 87, 90, 91, 96, 107, 121, 122, 124, 126, 130, 133, 146, 159, 161, 163, 168, 182, 183, 185, 186, 188, 191, 204, 216, 218, 220], "c1": [22, 25, 76, 82, 159, 216], "c2": [22, 25, 37, 76, 82, 95, 159, 216], "calcul": [22, 45, 76, 103, 107, 109, 121, 129, 145, 146, 168, 182, 203, 204], "angular": [22, 76, 123, 125, 184], "hcl": [22, 76], "difer": [22, 76], "degre": [22, 54, 76, 107, 116, 137, 140, 152, 168, 195, 198, 209], "compon": [22, 25, 29, 76, 82, 87, 107, 109, 116, 122, 124, 125, 132, 133, 137, 168, 183, 185, 190, 191, 195], "cm": [22, 25, 41, 76, 82, 99], "smooth": [22, 25, 38, 76, 82, 96, 109, 118, 121, 122, 124, 125, 127, 135, 150, 182, 183, 185, 193, 207], "colormap": [22, 25, 27, 50, 75, 76, 82], "cirular": [22, 76], "boundari": [22, 38, 76, 96, 107, 109, 121, 122, 126, 131, 168, 182, 183, 186, 189], "condit": [22, 30, 37, 38, 43, 45, 76, 88, 95, 96, 101, 103, 107, 109, 116, 122, 126, 148, 150, 153, 159, 162, 168, 183, 186, 207, 210, 216, 219], "dev": [22, 39, 42, 45, 76, 100, 103], "radiu": [22, 25, 44, 76, 82, 102, 120, 124, 127, 129, 132, 163, 181, 185, 190, 220], "rbg": [22, 76], "circular": [22, 27, 38, 50, 76, 96, 107, 110, 125, 127, 128, 137, 168, 187, 195], "10": [22, 25, 29, 37, 38, 41, 44, 47, 76, 82, 87, 95, 96, 99, 102, 105, 107, 109, 122, 126, 128, 137, 142, 146, 149, 150, 158, 159, 160, 161, 167, 168, 170, 183, 186, 187, 195, 200, 204, 206, 207, 215, 216, 217, 218, 223], "7": [22, 25, 37, 38, 76, 82, 95, 96, 107, 126, 146, 159, 168, 170, 186, 204, 216], "4": [22, 25, 29, 38, 76, 82, 87, 96, 107, 109, 110, 113, 114, 116, 118, 121, 122, 124, 126, 130, 146, 149, 150, 159, 161, 166, 168, 170, 182, 183, 185, 186, 188, 204, 206, 207, 216, 218], "6": [22, 25, 37, 38, 76, 82, 95, 96, 107, 109, 118, 126, 128, 130, 146, 150, 159, 168, 170, 186, 187, 188, 204, 207, 216], "optim": [22, 47, 76, 105, 107, 122, 133, 146, 148, 150, 156, 161, 168, 183, 191, 204, 207, 213, 218], "hsl": [22, 76], "convers": [22, 29, 76, 87, 167, 223], "routin": [22, 27, 33, 34, 37, 76, 85, 90, 92, 95, 107, 121, 127, 128, 132, 137, 146, 147, 156, 168, 182, 187, 190, 195, 204, 205, 213], "fix": [22, 25, 76, 82, 107, 109, 118, 166, 168], "back": [22, 29, 33, 76, 87, 90, 109, 156, 213], "resolut": [22, 38, 76, 96, 109, 110, 113, 114, 126, 146, 163, 186, 204, 220], "lookup": [22, 76, 167, 223], "tabl": [22, 25, 76, 82, 107, 168], "bulk": [22, 76], "lut": [22, 76], "complex": [22, 25, 29, 76, 82, 87, 109, 110, 114, 116, 121, 124, 125, 128, 129, 132, 140, 152, 167, 182, 185, 187, 190, 198, 209, 223], "bp": [22, 25, 76, 82, 109], "boxplot": [22, 25, 76, 82], "aw": [22, 76, 137, 195], "hexadecim": [22, 76], "bgr": [22, 76], "fast": [22, 29, 33, 76, 87, 90, 107, 168], "render": [22, 25, 76, 82], "javascript": [22, 76], "canva": [22, 76], "import": [22, 33, 37, 76, 90, 95, 107, 135, 147, 168, 170, 180, 193, 205], "html": [22, 37, 76, 95, 107, 168], "demo": [22, 76], "256x3": [22, 76], "hex": [22, 76], "given": [22, 25, 32, 43, 45, 47, 76, 78, 82, 89, 101, 103, 105, 107, 109, 121, 132, 142, 146, 148, 150, 152, 159, 163, 167, 168, 170, 180, 182, 190, 200, 204, 207, 209, 216, 220, 223], "rrggbb": [22, 76], "16": [22, 38, 76, 96, 107, 126, 128, 146, 168, 186, 187, 204], "bit": [22, 29, 43, 47, 76, 87, 101, 105, 107, 166, 168], "565": [22, 76], "brg": [22, 26, 76, 83], "rrrrr": [22, 76], "gggggg": [22, 76], "bbbbb": [22, 76], "enumer": [22, 76, 170], "bu": [22, 76], "ident": [22, 44, 76, 102, 107, 145, 168, 203], "byte": [22, 29, 33, 76, 87, 90], "skip": [22, 44, 76, 102, 109, 116, 121, 124, 182, 185], "lowest": [22, 45, 76, 103, 107, 168], "reserv": [22, 76], "fourth": [22, 76], "mask": [22, 27, 38, 50, 76, 96, 120, 122, 170, 183], "storag": [22, 33, 76, 90], "intend": [22, 76, 133, 191], "develop": [22, 27, 76, 107, 168], "pallet": [22, 76], "mictrocontrol": [22, 76], "driven": [22, 76, 107, 168], "displai": [22, 76, 107, 168], "interfac": [22, 76, 165, 222], "formt": [22, 76], "liter": [22, 76], "subset": [22, 37, 76, 95, 107, 116, 163, 168, 220], "shownn": [22, 76], "quickli": [22, 76], "arduino": [22, 76], "uno": [22, 76], "inch": [22, 76], "tft": [22, 76], "touch": [22, 76], "screen": [22, 24, 26, 76, 81, 83], "breakout": [22, 76], "restrict": [22, 29, 47, 76, 87, 105, 121, 182], "sent": [22, 76, 121, 182], "singl": [22, 29, 34, 37, 41, 76, 87, 92, 95, 99, 107, 150, 159, 168, 207, 216], "port": [22, 76, 107, 159, 168, 216], "mode": [22, 25, 29, 76, 82, 87, 91, 107, 109, 137, 158, 168, 195, 215], "low": [22, 76, 107, 109, 118, 122, 128, 141, 168, 183, 187, 199], "high": [22, 76, 107, 109, 121, 122, 136, 168, 182, 183, 194], "don": [22, 34, 76, 92, 116, 133, 146, 155, 163, 191, 204, 212, 220], "even": [22, 47, 76, 105, 107, 109, 121, 133, 136, 156, 168, 182, 191, 194, 213], "lower": [22, 25, 37, 76, 82, 95, 107, 121, 122, 168, 182, 183], "show": [22, 25, 37, 76, 82, 95, 107, 124, 163, 168, 185, 220], "gradient": [23, 80, 109, 121, 124, 133, 146, 156, 163, 182, 185, 191, 204, 213, 220], "laplacian": [23, 37, 38, 50, 80, 95, 96, 120, 126, 181, 186], "right": [23, 25, 37, 53, 80, 82, 95, 107, 128, 137, 168, 187, 195], "test": [23, 33, 37, 41, 47, 80, 90, 95, 99, 105, 107, 109, 116, 122, 125, 126, 130, 137, 146, 150, 160, 167, 168, 183, 186, 188, 195, 204, 207, 217, 223], "2d": [23, 25, 37, 38, 80, 82, 95, 96, 109, 111, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 132, 133, 137, 138, 145, 163, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 195, 196, 203, 220], "channel": [23, 80, 110, 112, 121, 124, 128, 133, 163, 182, 185, 187, 191, 220], "fig": [24, 25, 81, 82], "untitl": [24, 26, 81, 83], "http": [24, 37, 81, 95, 107, 125, 126, 150, 165, 167, 168, 186, 207, 222, 223], "stackoverflow": [24, 27, 37, 81, 95, 125, 165, 167, 222, 223], "com": [24, 37, 81, 95, 107, 109, 125, 126, 165, 167, 168, 186, 222, 223], "question": [24, 37, 81, 95, 165, 167, 222, 223], "9295026": [24, 81], "remov": [24, 25, 81, 82, 109, 110, 112, 121, 127, 132, 136, 137, 158, 182, 190, 194, 195, 215], "axi": [24, 25, 43, 48, 81, 82, 101, 106, 107, 109, 124, 128, 137, 140, 152, 168, 185, 187, 195, 198, 209], "legend": [24, 25, 81, 82, 107, 168], "white": [24, 81, 107, 168], "rgbdata": [24, 26, 81, 83], "ax": [25, 37, 48, 82, 95, 106, 107, 121, 150, 152, 168, 182, 207, 209], "bottom": [25, 82], "plt": [25, 82, 107, 168], "gca": [25, 82], "noth": [25, 82], "els": [25, 33, 47, 82, 90, 105, 124, 148, 167, 170, 185, 223], "optiona": [25, 82], "hide": [25, 82], "linewidth": [25, 82, 107, 168], "improv": [25, 38, 82, 96, 121, 182], "appear": [25, 41, 82, 99, 107, 168], "box": [25, 82, 109], "whisker": [25, 82], "To": [25, 29, 47, 82, 87, 105, 107, 109, 121, 125, 168, 182], "accompani": [25, 82], "set": [25, 30, 33, 34, 38, 47, 82, 88, 90, 91, 92, 96, 105, 107, 109, 126, 127, 129, 132, 137, 139, 144, 146, 156, 163, 168, 170, 180, 186, 190, 195, 197, 202, 204, 213, 220], "posit": [25, 37, 38, 43, 82, 95, 96, 101, 107, 109, 110, 115, 116, 125, 126, 127, 131, 133, 135, 137, 141, 142, 143, 146, 150, 159, 160, 161, 166, 167, 168, 186, 189, 191, 193, 195, 199, 200, 201, 204, 207, 216, 217, 218, 223], "fill": [25, 82, 107, 109, 127, 142, 159, 167, 168, 200, 216, 223], "notch": [25, 82], "showflier": [25, 82], "whi": [25, 82], "95": [25, 38, 82, 96, 107, 126, 146, 168, 186, 204], "bgcolor": [25, 82], "9450980392156862": [25, 82], "9411764705882353": [25, 82], "9137254901960784": [25, 82], "mediancolor": [25, 82], "nice": [25, 29, 82, 87, 109, 122, 183], "style": [25, 82, 85], "parameterss": [25, 82], "total": [25, 29, 82, 87, 107, 168], "prec": [25, 82], "non": [25, 27, 29, 30, 37, 82, 87, 88, 91, 95, 107, 109, 121, 125, 133, 143, 146, 150, 159, 168, 182, 191, 201, 204, 207, 216], "neg": [25, 37, 82, 95, 107, 109, 110, 116, 150, 159, 168, 207, 216], "exp_digit": [25, 82], "scientif": [25, 27, 82], "notat": [25, 82], "fewer": [25, 82, 137, 195], "charact": [25, 29, 32, 82, 87, 89], "precis": [25, 29, 37, 82, 87, 95, 107, 128, 139, 155, 156, 159, 168, 187, 197, 212, 213, 216], "expon": [25, 29, 38, 82, 87, 96, 107, 126, 146, 149, 168, 186, 204, 206], "digit": [25, 82], "reformat": [25, 82], "short": [25, 50, 82, 109, 110, 114, 133, 137, 146, 191, 195, 204], "maximum": [25, 37, 82, 95, 107, 109, 129, 135, 136, 137, 150, 155, 156, 168, 193, 194, 195, 207, 212, 213], "4f": [25, 82], "ncol": [25, 82, 127], "8": [25, 29, 38, 82, 87, 96, 107, 124, 126, 130, 146, 150, 168, 170, 185, 186, 188, 204, 207], "prefix": [25, 44, 82, 85, 102, 137, 166, 167, 195, 223], "sep": [25, 82, 85, 166], "evenli": [25, 82, 107, 109, 168], "mark": [25, 82, 121, 182], "xby": [25, 82], "yby": [25, 82], "see": [25, 27, 29, 33, 37, 47, 82, 87, 90, 95, 105, 107, 109, 110, 113, 114, 125, 126, 127, 136, 138, 150, 159, 161, 168, 170, 180, 186, 194, 196, 207, 216, 218], "upper": [25, 37, 82, 95, 107, 121, 168, 182], "un": [25, 82], "xlimit": [25, 82], "curent": [25, 82], "xlim": [25, 82, 130, 188], "rais": [25, 32, 33, 38, 82, 89, 90, 96, 107, 126, 128, 137, 146, 149, 168, 186, 187, 195, 204, 206], "ylimit": [25, 82], "ylim": [25, 82], "both": [25, 29, 38, 41, 47, 82, 87, 96, 99, 105, 107, 115, 116, 137, 168, 195], "smae": [25, 82], "turn": [25, 47, 82, 105], "tick": [25, 82], "aspect": [25, 82, 124, 185], "interv": [25, 82, 107, 109, 125, 158, 168, 215], "im": [25, 82], "keep": [25, 33, 82, 90, 109, 116, 137, 159, 163, 195, 216, 220], "corner": [25, 38, 82, 96, 126, 186], "rescal": [25, 38, 82, 96, 109, 126, 146, 186, 204], "arraymap": [25, 27, 49, 50, 82, 121, 124, 133, 167, 182, 185, 191, 223], "get": [25, 29, 34, 37, 47, 78, 82, 87, 92, 95, 105, 107, 109, 115, 116, 127, 135, 136, 141, 143, 168, 193, 194, 199, 201], "tha": [25, 82], "figur": [25, 82, 107, 168], "rel": [25, 38, 45, 82, 96, 103, 107, 116, 128, 135, 168, 187, 193], "pixel": [25, 38, 82, 96, 124, 125, 127, 163, 185, 220], "measur": [25, 82, 107, 109, 110, 114, 121, 128, 133, 137, 168, 182, 187, 191, 195], "bound": [25, 30, 82, 88, 107, 121, 144, 168, 182, 202], "currenta": [25, 82], "dy": [25, 41, 82, 99, 124, 185], "dx": [25, 82, 117, 124, 143, 185, 201], "direct": [25, 38, 82, 96, 109, 116, 121, 124, 152, 182, 185, 209], "depend": [25, 27, 29, 30, 33, 37, 44, 45, 49, 50, 82, 87, 88, 90, 95, 102, 103, 107, 110, 121, 128, 137, 160, 168, 182, 187, 195, 217], "orient": [25, 82, 107, 152, 168, 209], "chang": [25, 29, 30, 47, 82, 87, 88, 105, 107, 109, 141, 150, 168, 170, 199, 207], "resiz": [25, 82], "baselin": [25, 82], "expand": [25, 29, 82, 87, 109], "top": [25, 82, 107, 168], "intact": [25, 82], "ax1": [25, 82], "ax2": [25, 82], "xspan1": [25, 82], "xspan2": [25, 82], "draw_left": [25, 82], "draw_right": [25, 82], "lw": [25, 37, 78, 82, 95, 124, 185], "doshow": [25, 26, 82, 83], "dishow": [25, 82], "edg": [25, 38, 82, 96, 109, 111, 116, 124, 126, 127, 129, 132, 185, 186, 190], "stop": [25, 82, 109, 112, 149, 150, 206, 207], "shade": [25, 82], "region": [25, 82, 107, 120, 168, 181], "defin": [25, 29, 34, 82, 87, 92, 107, 109, 132, 148, 168, 190], "keyword": [25, 29, 82, 87, 107, 146, 168, 204], "forward": [25, 37, 82, 95, 107, 109, 124, 132, 139, 146, 150, 153, 159, 168, 185, 190, 197, 204, 207, 210, 216], "text": [25, 27, 49, 50, 82, 107, 168], "fudg": [25, 82], "base": [25, 29, 37, 38, 45, 47, 53, 54, 82, 87, 95, 96, 103, 105, 107, 109, 121, 126, 136, 137, 139, 146, 150, 153, 156, 159, 160, 163, 167, 168, 170, 182, 186, 194, 195, 197, 204, 207, 210, 213, 216, 217, 220, 223], "pad": [25, 82, 109, 127, 131, 136, 142, 163, 189, 194, 200, 220], "rangefun": [25, 82], "ff": [25, 82, 124, 185], "cwt": [25, 82], "vmin": [25, 82], "vmax": [25, 82], "afmhot": [25, 82], "interpol": [25, 82, 109, 121, 130, 131, 142, 182, 188, 189, 200], "dodraw": [25, 82], "frequenc": [25, 41, 53, 54, 82, 99, 107, 109, 110, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 128, 130, 133, 141, 144, 150, 168, 182, 183, 184, 185, 187, 188, 191, 199, 202, 207], "wavelet": [25, 82, 110, 113, 114], "transform": [25, 37, 38, 82, 95, 96, 109, 111, 113, 121, 122, 128, 159, 182, 183, 187, 216], "what": [25, 29, 82, 87, 107, 116, 133, 165, 168, 191, 222], "ip": [25, 82], "50": [25, 38, 78, 82, 96, 107, 116, 126, 146, 168, 186, 204], "bone": [25, 82], "patch_func": [25, 82], "handlerpatch": [25, 82], "orig_handl": [25, 82], "xdescent": [25, 82], "ydescent": [25, 82], "fontsiz": [25, 78, 82], "tran": [25, 82, 107, 168], "vm": [25, 82], "bicub": [25, 82], "extent": [25, 82, 124, 145, 185, 203], "onlyphas": [25, 82], "previou": [25, 82, 170, 180], "polar": [25, 82, 125, 133, 137, 140, 191, 195, 198], "phase": [25, 27, 38, 50, 82, 96, 109, 116, 120, 121, 124, 126, 133, 146, 181, 182, 185, 186, 191, 204], "modulu": [25, 82], "ab": [25, 37, 82, 95, 107, 109, 116, 121, 168, 182], "imshow": [25, 82, 130, 188], "avail": [25, 27, 45, 82, 103, 107, 109, 141, 168, 199], "output": [25, 47, 82, 105, 107, 145, 159, 168, 203, 216], "skirt": [25, 82, 122, 183], "replot": [25, 82], "nuisanc": [25, 82], "updat": [25, 37, 40, 41, 47, 82, 95, 98, 99, 105, 117, 156, 159, 213, 216], "directli": [25, 82, 107, 122, 168, 183], "faster": [25, 29, 82, 87, 145, 150, 156, 203, 207, 213], "img": [25, 82], "reus": [25, 82], "subsequ": [25, 82, 148], "speed": [25, 47, 82, 105, 107, 121, 168, 182], "anim": [25, 82, 107, 168], "video": [25, 82], "ha": [25, 27, 29, 33, 48, 82, 87, 90, 106, 107, 109, 110, 114, 116, 121, 122, 125, 128, 133, 146, 153, 168, 182, 183, 187, 191, 204, 210], "addit": [25, 34, 82, 92, 107, 122, 137, 153, 168, 183, 195, 210], "sidewai": [25, 82], "border": [25, 82, 109], "15": [25, 37, 38, 47, 82, 95, 96, 105, 107, 110, 126, 146, 168, 170, 186, 204], "labelpad": [25, 82], "vscale": [25, 82], "va": [25, 82], "colorbar": [25, 82], "pretti": [25, 82, 107, 168], "bad": [25, 33, 82, 90, 107, 124, 168, 185], "mathrm": [25, 82], "mac": [25, 82], "bool": [25, 29, 30, 32, 33, 34, 37, 38, 82, 87, 88, 89, 90, 92, 95, 96, 107, 109, 121, 124, 125, 127, 137, 140, 150, 167, 168, 182, 185, 195, 198, 207, 223], "flip": [25, 82, 107, 109, 116, 168], "around": [25, 38, 82, 96, 109, 116, 121, 125, 128, 182, 187], "font": [25, 82], "12": [25, 38, 43, 82, 96, 101, 107, 126, 139, 146, 168, 170, 186, 197, 204], "parent": [25, 82, 107, 168], "vertic": [25, 82], "align": [25, 82, 107, 168], "plane": [25, 82, 121, 125, 128, 133, 182, 187, 191], "latex": [25, 82], "re": [25, 29, 34, 41, 82, 87, 92, 99, 107, 109, 133, 148, 168, 191], "everyth": [25, 33, 82, 90], "39": [25, 38, 82, 96, 126, 146, 186, 204], "bold": [25, 82], "x1": [25, 37, 82, 95], "x2": [25, 37, 82, 95, 129], "pvalu": [25, 27, 50, 82, 137, 195], "26666666666666666": [25, 82], "3215686274509804": [25, 82], "3607843137254902": [25, 82], "signific": [25, 82, 107, 168], "bar": [25, 44, 82, 102, 107, 168], "stamp": [25, 82], "save": [25, 29, 82, 87, 148], "svg": [25, 82], "prepend": [25, 82], "date": [25, 82, 167, 223], "ti": [25, 82], "yyyymmdd_hhmmss": [25, 82], "san": [25, 82], "extens": [25, 29, 82, 87, 167, 223], "specifi": [25, 27, 29, 82, 87, 107, 109, 122, 128, 138, 139, 144, 152, 159, 168, 170, 183, 187, 196, 197, 202, 209, 216], "yvalu": [25, 82], "60": [25, 38, 41, 82, 96, 99, 125, 126, 146, 186, 204], "xy": [25, 82, 133, 191], "ellips": [25, 82, 140, 198], "drawn": [25, 82, 107, 168], "coordin": [25, 82, 107, 109, 120, 125, 127, 129, 163, 168, 181, 220], "2x2": [25, 37, 82, 95], "alpha": [25, 41, 82, 99, 107, 160, 168, 217], "stdwidth": [25, 82], "96": [25, 38, 82, 96, 126, 146, 186, 204], "\u03c3": [25, 82, 128, 187], "confid": [25, 82], "blend": [25, 82], "ycenter": [25, 82], "yheight": [25, 82], "9": [25, 38, 78, 82, 91, 96, 107, 126, 131, 146, 155, 161, 168, 170, 186, 189, 204, 212, 218], "side": [25, 82, 107, 137, 167, 168, 195, 223], "xcenter": [25, 82], "xlength": [25, 82], "horizont": [25, 82, 166], "how": [25, 29, 34, 47, 82, 87, 92, 105, 107, 109, 128, 136, 160, 163, 167, 168, 170, 187, 194, 217, 220, 223], "wide": [25, 82, 107, 168], "draw_ellips": [25, 82], "draw_cross": [25, 82], "90": [25, 38, 82, 96, 126, 146, 186, 204], "605": [25, 82], "991": [25, 82], "97": [25, 38, 82, 96, 126, 146, 186, 204], "378": [25, 82], "99": [25, 38, 82, 96, 126, 146, 186, 204], "210": [25, 82], "597": [25, 82], "fraction": [25, 82, 107, 168], "enclos": [25, 82], "centx": [25, 82], "centi": [25, 82], "angle_": [25, 82], "theta2_": [25, 82], "arrows": [25, 82], "cap_start": [25, 82], "cap_end": [25, 82], "y1": [25, 82], "y2": [25, 82], "connect": [25, 82, 129, 132, 190], "triangular": [25, 27, 37, 49, 50, 82, 95, 107, 168], "headlength": [25, 82], "headwidth": [25, 82], "arrow": [25, 82], "properti": [25, 37, 45, 82, 95, 103, 107, 110, 114, 168], "inhibit": [25, 82], "brake": [25, 82], "1e": [25, 37, 38, 43, 82, 95, 96, 101, 107, 109, 131, 137, 139, 144, 150, 151, 155, 156, 159, 161, 168, 189, 195, 197, 202, 207, 208, 212, 213, 216, 218], "05": [25, 38, 82, 96, 107, 156, 160, 168, 213, 217], "adjac": [25, 38, 82, 96, 125], "level": [25, 30, 82, 88, 107, 116, 160, 168, 217], "abov": [25, 82, 107, 121, 168, 182], "break": [25, 32, 82, 89, 109, 137, 195], "conveni": [25, 82, 107, 159, 168, 216], "command": [25, 33, 78, 82, 90, 165, 167, 222, 223], "20": [25, 38, 47, 82, 96, 105, 107, 110, 126, 146, 168, 170, 186, 204], "p50": [25, 82], "markers": [25, 82], "summar": [25, 82, 109], "histogram": [25, 44, 82, 102, 107, 131, 145, 158, 168, 189, 203, 215], "\u03bc": [25, 82, 136, 146, 194, 204], "d\u03bc": [25, 82], "\u03b4e": [25, 82], "9215686274509803": [25, 82], "47843137254901963": [25, 82], "34901960784313724": [25, 82], "shell": [25, 33, 82, 90, 167, 223], "thr": [25, 41, 82, 99, 109, 127, 136, 194], "09": [25, 37, 82, 95, 107, 131, 151, 168, 189, 208], "split": [25, 82, 109, 137, 195], "1d": [25, 38, 82, 96, 109, 116, 125, 126, 127, 128, 129, 133, 135, 137, 138, 139, 144, 145, 146, 147, 150, 161, 186, 187, 191, 193, 195, 196, 197, 202, 203, 204, 205, 207, 218], "signal": [25, 27, 37, 40, 41, 49, 50, 82, 95, 98, 99, 107, 120, 121, 124, 128, 141, 168, 181, 182, 185, 187, 199], "real": [25, 29, 37, 82, 87, 95, 107, 109, 116, 121, 122, 124, 132, 133, 159, 168, 170, 182, 183, 185, 190, 191, 216], "imaginari": [25, 29, 82, 87, 121, 124, 132, 182, 185, 190], "part": [25, 27, 47, 82, 105, 121, 132, 182, 190], "either": [25, 30, 47, 82, 88, 105, 107, 122, 137, 168, 170, 183, 195], "let": [25, 82, 107, 110, 168], "u": [25, 40, 82, 98, 107, 109, 133, 168, 191], "separ": [25, 82, 85, 107, 128, 146, 166, 168, 187, 204], "overlap": [25, 38, 82, 96, 126, 146, 186, 204], "dash": [25, 82], "send": [26, 34, 83, 92, 170], "window": [26, 29, 32, 83, 87, 89, 109, 110, 115, 116, 128, 187], "order": [26, 29, 30, 78, 83, 87, 88, 107, 109, 117, 118, 121, 127, 128, 145, 168, 182, 187, 203], "unusu": [26, 83], "reorder": [26, 83], "neurotool": [26, 33, 37, 168, 191], "collect": [27, 33, 90, 115, 121, 128, 129, 182, 187], "modul": [27, 49], "exploratori": 27, "analysi": [27, 107, 121, 168, 182], "model": [27, 49, 50, 107, 133, 137, 138, 139, 140, 142, 146, 147, 148, 150, 157, 163, 168, 191, 195, 196, 197, 198, 200, 204, 205, 207, 214, 220], "neurosci": [27, 158, 215], "research": [27, 107, 168], "poor": 27, "qualiti": [27, 148], "unstabl": 27, "stabl": [27, 47, 105, 150, 207], "pleas": [27, 107, 137, 138, 142, 147, 150, 159, 168, 195, 196, 200, 205, 207, 216], "specif": [27, 29, 33, 87, 90, 107, 168], "further": [27, 121, 182], "project": [27, 107, 109, 112, 123, 150, 159, 163, 168, 184, 207, 216, 220], "packag": [27, 49], "includ": [27, 33, 90, 91, 107, 116, 120, 133, 138, 163, 168, 181, 191, 196, 220], "scipi": [27, 29, 37, 38, 87, 95, 96, 107, 125, 132, 133, 142, 145, 146, 156, 161, 168, 190, 191, 200, 203, 204, 213, 218], "statsmodel": [27, 138, 146, 196, 204], "panda": 27, "nipi": 27, "confus": [27, 43, 101], "organ": [27, 37, 95], "neural": [27, 110, 133, 191], "simul": [27, 40, 98, 107, 162, 168, 219], "There": [27, 34, 92, 117], "focu": 27, "spatiotempor": [27, 163, 220], "multi": [27, 37, 95, 107, 110, 121, 159, 168, 182, 216], "electrod": [27, 121, 133, 182, 191], "stochast": [27, 47, 105, 107, 168], "dynam": [27, 121, 182], "explor": [27, 37, 95, 107, 168], "synchroni": [27, 50, 110, 114, 120, 128, 133, 181, 187, 191], "play": 27, "aren": 27, "brows": 27, "download": [27, 107, 168], "github": 27, "been": [27, 29, 33, 87, 90, 107, 116, 122, 146, 152, 153, 168, 183, 204, 209, 210], "review": 27, "prepar": [27, 138, 196], "public": 27, "now": [27, 29, 33, 49, 50, 87, 90, 107, 116, 150, 155, 167, 168, 207, 212, 223], "associ": [27, 45, 103, 107, 116, 168, 170], "licens": 27, "under": [27, 107, 137, 146, 168, 195, 204], "creativ": 27, "common": [27, 34, 92, 107, 146, 152, 168, 204, 209], "attribut": [27, 91, 170], "commerci": 27, "alik": 27, "full": [27, 29, 87, 107, 109, 133, 136, 168, 191, 194], "appli": [27, 34, 37, 38, 40, 47, 91, 92, 95, 96, 98, 105, 107, 109, 110, 113, 121, 126, 128, 133, 140, 141, 167, 168, 182, 186, 187, 191, 198, 199, 223], "whole": [27, 122, 183], "those": [27, 29, 30, 87, 88, 107, 109, 121, 168, 182], "altern": [27, 29, 34, 87, 92, 107, 165, 168, 222], "aggreg": 27, "publish": [27, 37, 95, 107, 168], "answer": [27, 37, 95, 107, 165, 168, 222], "gist": 27, "taken": [27, 107, 115, 128, 132, 148, 168, 187, 190], "cite": [27, 107, 168], "link": [27, 146, 204], "provid": [27, 33, 34, 38, 90, 91, 92, 96, 107, 109, 121, 128, 135, 137, 142, 150, 159, 167, 168, 182, 187, 193, 195, 200, 207, 216, 223], "search": [27, 124, 148, 167, 185, 223], "page": [27, 37, 95, 107, 168], "subpackag": [27, 49], "encod": [27, 29, 43, 49, 50, 87, 101, 121, 125, 127, 129, 182], "huffman": [27, 50, 52], "naryhuffman": [27, 50, 52], "gpu": [27, 49, 50], "graphic": [27, 49, 50], "dendron": [27, 50, 75], "fabio_map": [27, 50, 75], "ztransform_plot_help": [27, 50, 75], "job": [27, 49, 50, 133, 191], "cach": [27, 28, 32, 33, 50, 86, 89, 90, 91, 107, 115, 167, 168, 223], "closur": [27, 28, 50, 86], "initialize_system_cach": [27, 28, 50, 86], "ndecor": [27, 33, 50, 86, 90], "linalg": [27, 49, 50, 137, 159, 195, 216], "rbm": [27, 39, 50, 97], "izh": [27, 39, 50, 97], "lif": [27, 39, 50, 97], "coher": [27, 50, 109, 114, 115, 121, 128, 170, 182, 187], "conv": [27, 50, 109, 170], "linenois": [27, 50, 109, 170], "morlet": [27, 50, 109, 110, 114, 170], "morlet_coher": [27, 50, 109, 170], "multitap": [27, 50, 109, 110, 114, 116, 170], "ppc": [27, 50, 109, 170], "reson": [27, 50, 109, 170], "savitskygolai": [27, 50, 109, 170], "find": [27, 37, 41, 49, 50, 95, 99, 109, 120, 129, 137, 147, 150, 158, 160, 167, 181, 195, 205, 207, 215, 217, 223], "geometric_window": [27, 50, 109], "gaussian_kernel": [27, 50, 109], "gaussian_smooth": [27, 50, 109], "circular_gaussian_smooth": [27, 50, 109], "circular_gaussian_smooth_2d": [27, 50, 109], "linear_cosine_basi": [27, 50, 109], "circular_cosine_basi": [27, 50, 109], "unitscal": [27, 50, 109], "topercentil": [27, 50, 109], "local_maxima": [27, 50, 109], "local_minima": [27, 50, 109], "amp": [27, 50, 109, 122, 183], "get_snip": [27, 50, 109], "triggered_averag": [27, 50, 109], "get_triggered_stat": [27, 50, 109], "padout": [27, 50, 109], "padin": [27, 50, 109], "nonnegative_bandpass_filt": [27, 50, 109], "pad_sign": [27, 50, 109], "bandpass_filt": [27, 50, 109], "box_filt": [27, 50, 109], "median_filt": [27, 50, 109], "percentile_filt": [27, 50, 109], "variance_filt": [27, 50, 109], "rewrap": [27, 50, 109], "pdiff": [27, 50, 109], "pghilbert": [27, 50, 109], "fudge_deriv": [27, 50, 109], "ifreq": [27, 50, 109], "unwrap": [27, 50, 86, 91, 109, 128, 187], "ang": [27, 50, 109], "randband": [27, 50, 109], "arenear": [27, 50, 109], "aresaf": [27, 50, 109], "get_edg": [27, 50, 109], "set_edg": [27, 50, 109], "remove_gap": [27, 50, 109], "remove_short": [27, 50, 109], "phase_rot": [27, 50, 109], "fm_mod": [27, 50, 109], "piec": [27, 50, 107, 109, 168], "stats_block": [27, 50, 109], "mean_block": [27, 50, 109], "var_block": [27, 50, 109], "median_block": [27, 50, 109], "phase_random": [27, 50, 109, 116], "phase_randomize_from_amplitud": [27, 50, 109], "estimate_pad": [27, 50, 109], "lowpass_filt": [27, 50, 109], "highpass_filt": [27, 50, 109], "fdiff": [27, 50, 109], "interpolate_nan": [27, 50, 109], "interpolate_nan_quadrat": [27, 50, 109], "killspik": [27, 50, 109], "peak_within": [27, 50, 109], "local_peak_within": [27, 50, 109], "take_axis_slic": [27, 50, 109], "take_axi": [27, 50, 109], "ndargmax": [27, 50, 109], "complex_to_nan": [27, 50, 109], "make_rebroadcast_slic": [27, 50, 109], "zeromean": [27, 50, 109], "zscore": [27, 50, 109, 120, 133, 167, 181, 191, 223], "deltaovermean": [27, 50, 109], "unit_length": [27, 50, 109], "sign_preserving_amplitude_demodul": [27, 50, 109], "autocorrel": [27, 50, 109, 116, 141, 199], "upsampl": [27, 50, 109, 121, 182], "linfilt": [27, 50, 109], "span": [27, 38, 50, 96, 109, 126, 135, 137, 146, 163, 186, 193, 195, 204, 220], "make_lag": [27, 50, 109], "zgrid": [27, 50, 109], "nice_interp": [27, 50, 109], "fftacorr1d": [27, 50, 109], "fftsta": [27, 50, 109], "interpmax1d": [27, 50, 109], "spaced_deriv": [27, 50, 109], "spatial": [27, 49, 50, 163, 220], "dct": [27, 50, 120, 181], "fftzero": [27, 50, 120, 181], "geometri": [27, 50, 120], "spatialpsd": [27, 50, 120, 181], "triangul": [27, 50, 120, 181], "wave_parametric_model": [27, 50, 120, 181], "brute_force_local_2d_maxima": [27, 50, 120, 181], "waveform": [27, 50, 134, 192], "stat": [27, 49, 50, 107, 168], "glmfit": [27, 50, 137, 195], "entropi": [27, 43, 45, 47, 50, 101, 103, 105, 137, 159, 195, 216], "fast_kd": [27, 50, 137, 195], "glm": [27, 50, 137, 138, 163, 195, 196, 220], "gmm": [27, 50, 137, 195], "grid_search": [27, 50, 137], "history_basi": [27, 50, 137, 195], "hmm": [27, 50, 137, 195], "kent_reimann": [27, 50, 137, 195], "lesson": [27, 50, 137, 195], "matzner_bar": [27, 50, 137, 195], "gad_plos_2015": [27, 50, 137, 195], "mcint": [27, 50, 137, 195], "minim": [27, 37, 50, 95, 133, 137, 146, 161, 191, 195, 204, 218], "mixtur": [27, 50, 107, 137, 147, 150, 168, 195, 205, 207], "modefind": [27, 50, 137, 195], "mvg": [27, 50, 137, 195], "regress": [27, 50, 137, 195], "sde": [27, 50, 137, 195], "spatiotemporal_glm_util": [27, 50, 137, 195], "nrmse": [27, 50, 137, 195], "weighted_avg_and_std": [27, 50, 137, 195], "partition_data": [27, 50, 137, 195], "partition_trials_for_crossvalid": [27, 50, 137, 195], "polar_error": [27, 50, 137, 195], "add_const": [27, 50, 137, 138, 195, 196], "trial_crossvalidated_least_squar": [27, 50, 137, 195], "partition_data_for_crossvalid": [27, 50, 137, 195], "block_shuffl": [27, 50, 137, 195], "crossvalidated_least_squar": [27, 50, 137, 195], "print_stat": [27, 50, 137, 195], "outlier": [27, 50, 137, 195], "reject_outli": [27, 50, 137, 195], "pca": [27, 50, 137, 163, 195, 220], "descript": [27, 29, 50, 87, 136, 137, 194, 195], "getfftw": [27, 49, 50], "hdfmat": [27, 49, 50], "gethdfvalu": [27, 49, 50, 85], "gethdf": [27, 49, 50, 85], "hdf2dict": [27, 49, 50, 85], "printmathdf5": [27, 49, 50, 85], "recursive_printmathdf5": [27, 49, 50, 85], "nlab": [27, 37, 49, 50, 95], "beta": [27, 47, 49, 50, 105, 107, 110, 113, 114, 133, 152, 168, 191, 209], "binomi": [27, 49, 50, 107, 168], "chisquar": [27, 49, 50, 107, 168], "choic": [27, 48, 49, 50, 106, 107, 168], "dirichlet": [27, 38, 49, 50, 96, 107, 168], "gamma": [27, 49, 50, 107, 152, 168, 209], "geometr": [27, 49, 50, 107, 168], "get_stat": [27, 49, 50, 107, 168], "gumbel": [27, 49, 50, 107, 168], "hypergeometr": [27, 49, 50, 107, 168], "laplac": [27, 49, 50, 107, 150, 168, 207], "logist": [27, 43, 49, 50, 101, 107, 146, 168, 204], "lognorm": [27, 49, 50, 107, 168], "logseri": [27, 49, 50, 107, 168], "multinomi": [27, 49, 50, 107, 168], "multivariate_norm": [27, 49, 50, 107, 168], "negative_binomi": [27, 49, 50, 107, 168], "noncentral_chisquar": [27, 49, 50, 107, 168], "noncentral_f": [27, 49, 50, 107, 168], "pareto": [27, 49, 50, 107, 168], "permut": [27, 49, 50, 107, 167, 168, 223], "poisson": [27, 49, 50, 107, 138, 143, 144, 146, 150, 153, 157, 163, 168, 196, 201, 202, 204, 207, 210, 214, 220], "power": [27, 49, 50, 107, 115, 128, 130, 161, 168, 187, 188, 218], "randint": [27, 49, 50, 107, 150, 168, 207], "randn": [27, 37, 49, 50, 95, 107, 130, 137, 155, 159, 161, 168, 188, 195, 212, 216, 218], "random_integ": [27, 49, 50, 107, 168], "random_sampl": [27, 49, 50, 107, 168], "rayleigh": [27, 49, 50, 107, 168], "seed": [27, 49, 50, 107, 168], "set_stat": [27, 49, 50, 107, 168], "shuffl": [27, 37, 49, 50, 95, 107, 137, 168, 195], "standard_cauchi": [27, 49, 50, 107, 168], "standard_exponenti": [27, 49, 50, 107, 168], "standard_gamma": [27, 49, 50, 107, 168], "standard_norm": [27, 49, 50, 107, 159, 168, 216], "standard_t": [27, 49, 50, 107, 168], "vonmis": [27, 49, 50, 107, 140, 168, 198], "wald": [27, 49, 50, 107, 168], "weibul": [27, 49, 50, 107, 168], "zipf": [27, 39, 42, 44, 46, 48, 49, 50, 100, 102, 104, 106, 107, 168], "opto": [27, 49, 50], "system": [27, 29, 33, 34, 37, 49, 50, 87, 90, 92, 95, 107, 109, 150, 168, 207], "execfil": [27, 49, 50, 165, 222], "query_yes_no": [27, 49, 50, 165, 222], "hcat": [27, 49, 50, 166], "wordwrap": [27, 49, 50, 166], "incolumn": [27, 49, 50, 166], "tool": [27, 49, 50, 138, 196], "varexist": [27, 49, 50, 167, 223], "nowarn": [27, 49, 50, 167, 223], "okwarn": [27, 49, 50, 167, 223], "dowarn": [27, 49, 50, 167, 223], "warn": [27, 29, 32, 33, 49, 50, 87, 89, 90, 107, 167, 168, 223], "debug": [27, 34, 37, 49, 50, 91, 92, 95, 167, 223], "wait": [27, 49, 50, 107, 167, 168, 170, 223], "matlab": [27, 29, 32, 37, 49, 50, 85, 87, 89, 95, 107, 116, 121, 133, 159, 160, 167, 168, 182, 191, 216, 217, 223], "zeroslik": [27, 49, 50, 167, 223], "oneslik": [27, 49, 50, 167, 223], "histori": [27, 49, 50, 149, 163, 167, 206, 220, 223], "p2c": [27, 49, 50, 120, 129, 167, 223], "c2p": [27, 49, 50, 120, 129, 167, 223], "emitt": [27, 49, 50, 167, 223], "piper": [27, 49, 50, 167, 223], "global": [27, 29, 30, 34, 49, 50, 87, 88, 92, 109, 165, 167, 222, 223], "metaloadmat": [27, 49, 50, 167, 223], "find_all_extens": [27, 49, 50, 167, 223], "lmap": [27, 49, 50, 167, 223], "amap": [27, 49, 50, 167, 223], "setinrang": [27, 49, 50, 167, 223], "mapdict": [27, 49, 50, 167, 223], "getdict": [27, 49, 50, 167, 223], "ensure_dir": [27, 49, 50, 167, 223], "getsiz": [27, 49, 50, 167, 223], "savecontext": [27, 49, 50, 167, 223], "clear": [27, 49, 50, 91, 167, 223], "restorecontext": [27, 49, 50, 167, 223], "camel2underscor": [27, 49, 50, 167, 223], "underscore2camel": [27, 49, 50, 167, 223], "current_milli_tim": [27, 49, 50, 137, 156, 167, 195, 213, 223], "todai": [27, 49, 50, 167, 223], "tic": [27, 49, 50, 167, 223], "toc": [27, 49, 50, 167, 223], "waitfor": [27, 49, 50, 167, 223], "getvari": [27, 49, 50, 167, 223], "invert_permut": [27, 49, 50, 167, 223], "ezip": [27, 49, 50, 167, 223], "asiter": [27, 49, 50, 167, 223], "stuff": [27, 37, 49, 50, 95, 167, 223], "function_hash_with_subroutin": [28, 29, 50, 86, 87], "get_sourc": [28, 29, 50, 86, 87], "function_hash_no_subroutin": [28, 29, 50, 86, 87], "base64hash": [28, 29, 50, 86, 87], "base64hash2byt": [28, 29, 50, 86, 87], "function_signatur": [28, 29, 50, 86, 87], "signature_to_file_str": [28, 29, 50, 86, 87], "file_string_to_signatur": [28, 29, 50, 86, 87], "human_encod": [28, 29, 50, 86, 87], "human_decod": [28, 29, 50, 86, 87], "get_cache_path": [28, 29, 50, 86, 87], "locate_cach": [28, 29, 50, 86, 87], "validate_for_matfil": [28, 29, 50, 86, 87], "validate_for_numpi": [28, 29, 50, 86, 87], "read_cache_entri": [28, 29, 50, 86, 87], "disk_cach": [28, 29, 50, 86, 87], "hierarchical_cach": [28, 29, 50, 86, 87], "is_immut": [28, 30, 50, 86, 88], "is_probably_saf": [28, 30, 50, 86, 88], "csv": [28, 30, 50, 86, 88], "inspect_function_closur": [28, 30, 50, 86, 88], "verify_function_closur": [28, 30, 50, 86, 88], "get_subroutin": [28, 30, 50, 86, 88], "decor": [28, 29, 87, 91], "validate_argument_signatur": [28, 32, 50, 86, 89], "is_dangerous_filenam": [28, 32, 50, 86, 89], "check_filenam": [28, 32, 50, 86, 89], "purge_ram_cach": [28, 33, 50, 86, 90], "purge_ssd_cach": [28, 33, 50, 86, 90], "du": [28, 33, 40, 50, 86, 90, 98], "reset_ramdisk": [28, 33, 50, 86, 90], "launch_cache_synchron": [28, 33, 50, 86, 90], "initialize_cach": [28, 33, 50, 86, 90], "cache_test": [28, 33, 50, 86, 90], "parmap": [28, 34, 50, 86, 92], "pararraymap": [28, 34, 50, 86, 92], "parmap_dict": [28, 34, 50, 86, 92], "function_fingerprint": [28, 34, 50, 86, 92], "eval_from_cach": [28, 34, 50, 86, 92], "parallel_indirect_wrapp": [28, 34, 50, 86, 92], "parallel_cached_wrapp": [28, 34, 50, 86, 92], "parimap": [28, 34, 50, 86, 92], "close_pool": [28, 34, 50, 86, 92], "reset_pool": [28, 34, 50, 86, 92], "parallel_error_handl": [28, 34, 50, 86, 92], "forc": [29, 33, 47, 87, 90, 105, 109, 122, 156, 183, 213], "subroutin": [29, 30, 33, 87, 88, 90], "hash": [29, 30, 45, 87, 88, 103], "sensit": [29, 87, 107, 121, 160, 167, 168, 182, 217, 223], "recurs": [29, 85, 87, 91, 167, 223], "procedur": [29, 87, 109, 110, 136, 150, 194, 207], "fair": [29, 87], "overhead": [29, 87], "mutual": [29, 37, 87, 95], "exclud": [29, 87, 107, 121, 158, 168, 182, 215], "alreadi": [29, 87, 116, 141, 146, 199, 204], "visit": [29, 87], "built": [29, 30, 34, 87, 88, 92], "compat": [29, 32, 87, 89, 107, 109, 121, 155, 168, 182, 212], "grace": [29, 87], "potenti": [29, 41, 87, 99, 124, 185], "recurr": [29, 87], "structur": [29, 37, 78, 87, 95], "tricki": [29, 30, 87, 88], "tree": [29, 78, 87], "node": [29, 52, 53, 54, 78, 87], "therefor": [29, 47, 87, 105, 107, 109, 168], "mani": [29, 32, 34, 87, 89, 92, 107, 168], "far": [29, 33, 87, 90, 107, 156, 168, 213], "encount": [29, 87], "we": [29, 30, 33, 34, 41, 47, 87, 88, 90, 92, 99, 105, 107, 109, 110, 114, 116, 117, 121, 133, 150, 156, 157, 168, 182, 191, 207, 213, 214], "cannot": [29, 30, 34, 87, 88, 91, 92, 109], "worth": [29, 87], "topologi": [29, 87], "least": [29, 37, 87, 95, 107, 121, 133, 137, 141, 168, 182, 191, 195, 199], "suffic": [29, 87], "grab": [29, 87, 107, 168], "profil": [29, 87], "obtain": [29, 85, 87, 107, 168], "assum": [29, 43, 87, 101, 107, 109, 112, 121, 128, 150, 160, 163, 168, 182, 187, 207, 217, 220], "modifi": [29, 33, 87, 90, 91, 107, 123, 152, 160, 168, 184, 209, 217], "strip": [29, 87, 91, 109], "assumpt": [29, 87, 107, 160, 168, 217], "detect": [29, 37, 87, 95, 109], "effect": [29, 87, 107, 109, 167, 168, 170, 223], "behavior": [29, 30, 87, 88, 107, 109, 168], "mutabl": [29, 30, 34, 87, 88, 92, 107, 168], "scope": [29, 34, 87, 92], "close": [29, 30, 34, 37, 38, 87, 88, 92, 95, 96, 107, 109, 116, 125, 168], "muse": [29, 87], "fail": [29, 33, 34, 87, 90, 92, 107, 150, 156, 168, 207, 213], "extract": [29, 37, 85, 87, 95, 109, 112, 121, 125, 128, 182, 187], "undecor": [29, 87], "obj": [29, 87, 146, 167, 204, 223], "identifi": [29, 87, 109, 124, 185], "correspond": [29, 45, 87, 103, 139, 197], "particular": [29, 87], "abl": [29, 87], "dist": [29, 87], "across": [29, 30, 87, 88, 107, 116, 121, 124, 168, 182, 185], "howev": [29, 34, 78, 87, 92, 107, 168], "pickl": [29, 34, 87, 92], "check": [29, 30, 32, 37, 41, 87, 88, 89, 95, 99, 107, 155, 159, 167, 168, 212, 216, 223], "whether": [29, 30, 32, 34, 37, 87, 88, 89, 92, 95, 107, 109, 121, 124, 127, 128, 136, 137, 140, 145, 150, 168, 182, 185, 187, 194, 195, 198, 203, 207], "meaning": [29, 87], "almost": [29, 87], "imposs": [29, 87], "becom": [29, 87, 107, 168], "invalid": [29, 87], "ll": [29, 87, 107, 168], "argspec": [29, 87, 91], "valid": [29, 32, 87, 89, 109, 137, 146, 159, 170, 195, 204, 216], "significantli": [29, 87], "sig": [29, 32, 87, 89, 91], "repr": [29, 87], "compress": [29, 87, 163, 220], "base64encod": [29, 87], "truncat": [29, 38, 87, 96, 107, 109, 167, 168, 223], "signatur": [29, 30, 32, 87, 88, 89, 91, 137, 195], "store": [29, 34, 43, 47, 87, 92, 101, 105, 124, 185], "human": [29, 87], "readabl": [29, 87], "still": [29, 30, 33, 87, 88, 90], "verif": [29, 87], "No": [29, 32, 87, 89, 107, 109, 128, 160, 163, 168, 187, 217, 220], "4096": [29, 87], "path": [29, 33, 85, 87, 90, 167, 223], "255": [29, 32, 87, 89], "try": [29, 34, 87, 92, 107, 126, 156, 168, 186, 213], "260": [29, 87], "pathlen": [29, 87], "ascii": [29, 32, 87, 89], "31": [29, 38, 87, 96, 107, 126, 146, 168, 170, 186, 204], "easiest": [29, 47, 87, 105], "problemat": [29, 87], "input": [29, 37, 41, 47, 87, 95, 99, 105, 107, 109, 114, 121, 124, 137, 145, 165, 168, 182, 185, 195, 203, 222], "64": [29, 38, 87, 96, 126, 146, 163, 170, 186, 204, 220], "follow": [29, 33, 37, 87, 90, 95, 107, 109, 116, 142, 160, 168, 200, 217], "ast": [29, 87], "literal_ev": [29, 87], "node_or_str": [29, 87], "serial": [29, 48, 87, 106], "permit": [29, 32, 87, 89, 139, 197], "paramtet": [29, 87], "json": [29, 87], "uniqu": [29, 39, 42, 45, 46, 48, 87, 91, 100, 103, 104, 106, 107, 132, 167, 168, 190, 223], "recov": [29, 87, 122, 183], "becaus": [29, 47, 87, 105, 107, 116, 168], "represent": [29, 38, 87, 96, 107, 122, 133, 168, 183, 191], "circumv": [29, 87], "longer": [29, 87], "attempt": [29, 34, 37, 87, 92, 95, 107, 122, 127, 167, 168, 183, 223], "experiment": [29, 33, 87, 90, 116, 133, 191], "defaut": [29, 87], "base64": [29, 87], "kei": [29, 45, 87, 103, 107, 167, 168, 223], "entri": [29, 33, 37, 38, 87, 90, 95, 96, 107, 109, 137, 160, 168, 195, 217], "eperiment": [29, 87], "nest": [29, 78, 85, 87, 91], "cache_root": [29, 87], "directori": [29, 87, 167, 223], "npy": [29, 47, 87, 105], "etc": [29, 87, 107, 109, 137, 161, 168, 195, 218], "fn": [29, 87], "info": [29, 87, 109, 110, 148], "argument_signatur": [29, 50, 86, 87, 91], "absolut": [29, 37, 87, 95, 107, 113, 121, 128, 137, 155, 167, 168, 182, 187, 195, 212, 223], "int8": [29, 87], "128": [29, 87], "127": [29, 87], "int16": [29, 87], "32768": [29, 87], "32767": [29, 87], "2147483648": [29, 87], "2147483647": [29, 87], "int64": [29, 43, 87, 101, 107, 168], "9223372036854775808": [29, 87], "9223372036854775807": [29, 87], "uint8": [29, 87, 107, 168], "unsign": [29, 87, 107, 168], "uint16": [29, 87], "65535": [29, 87], "uint32": [29, 87], "4294967295": [29, 87], "uint64": [29, 87], "18446744073709551615": [29, 87], "float16": [29, 87], "half": [29, 87, 107, 115, 136, 168, 194], "mantissa": [29, 87], "52": [29, 38, 87, 96, 126, 136, 146, 186, 194, 204], "complex64": [29, 87, 109, 125, 127, 129], "32": [29, 38, 87, 96, 107, 126, 146, 168, 186, 204], "complex128": [29, 87, 124, 185], "archiv": [29, 87, 107, 168], "cache_loc": [29, 87], "write_back": [29, 87], "skip_fast": [29, 87], "verbos": [29, 33, 34, 37, 47, 87, 90, 91, 92, 95, 105, 109, 146, 155, 156, 159, 160, 204, 212, 213, 216, 217], "allow_mutable_bind": [29, 87], "cache_identifi": [29, 33, 87, 90], "__neurotools_cache__": [29, 33, 87, 90], "disk": [29, 32, 33, 87, 89, 90], "pattern": [29, 45, 48, 87, 103, 106, 107, 168], "decotr": [29, 87], "In": [29, 30, 33, 34, 37, 87, 88, 90, 92, 95, 107, 109, 110, 114, 126, 168, 186], "case": [29, 33, 34, 45, 47, 87, 90, 92, 103, 105, 107, 109, 110, 114, 125, 142, 146, 156, 167, 168, 200, 204, 213, 223], "hierarch": [29, 87], "filesystem": [29, 32, 33, 87, 89, 90, 167, 223], "background": [29, 87], "rsync": [29, 33, 87, 90], "asynchron": [29, 87], "serious": [29, 87], "speedup": [29, 87], "due": [29, 47, 87, 105, 107, 109, 168], "cost": [29, 47, 87, 105, 110], "io": [29, 87], "savemat": [29, 87], "loadmat": [29, 87], "unfortun": [29, 87], "alter": [29, 87, 107, 168], "when": [29, 33, 34, 37, 87, 90, 92, 95, 107, 109, 116, 124, 150, 168, 185, 207], "retriev": [29, 85, 87], "Will": [29, 87], "hdf5": [29, 85, 87, 167, 223], "Not": [29, 32, 33, 43, 87, 89, 90, 101, 122, 139, 183, 197], "futur": [29, 87], "storang": [29, 87], "previous": [29, 87], "read": [29, 87, 167, 223], "too": [29, 87, 107, 116, 155, 168, 212], "long": [29, 30, 32, 87, 88, 89, 107, 109, 150, 168, 207], "detaild": [29, 87], "Such": [29, 87, 107, 168], "lead": [29, 33, 37, 87, 90, 95, 107, 109, 168], "subdirectori": [29, 85, 87], "cacher": [29, 33, 87, 90], "fast_to_slow": [29, 87], "term": [29, 47, 87, 105, 107, 125, 129, 135, 146, 161, 167, 168, 193, 204, 218, 223], "hierarchi": [29, 33, 87, 90], "slower": [29, 33, 37, 87, 90, 95, 156, 213], "fallback": [29, 87], "main": [29, 33, 87, 90], "newli": [29, 34, 87, 92], "detail": [29, 34, 47, 87, 92, 105, 107, 109, 138, 161, 168, 196, 218], "iform": [29, 87], "manipul": [29, 87], "unsaf": [29, 30, 87, 88], "namespac": [29, 30, 87, 88], "user": [29, 33, 34, 37, 87, 90, 92, 95, 107, 138, 148, 159, 165, 168, 170, 196, 216, 222], "consequenti": [29, 87], "tell": [29, 87], "old": [29, 47, 87, 105], "sub": [29, 87, 107, 109, 168], "folder": [29, 87], "immut": [30, 88], "must": [30, 32, 33, 47, 88, 89, 90, 105, 107, 109, 120, 121, 131, 143, 144, 150, 152, 159, 165, 168, 181, 182, 189, 201, 202, 207, 209, 216, 222], "unlikli": [30, 88], "obvious": [30, 88], "latter": [30, 88, 152, 209], "practic": [30, 88, 107, 109, 168], "ok": [30, 32, 33, 88, 89, 90, 160, 217], "riski": [30, 33, 34, 88, 90, 92], "formal": [30, 88], "sens": [30, 88, 141, 199], "access": [30, 34, 88, 92, 107, 167, 168, 170, 223], "later": [30, 47, 88, 105, 107, 167, 168, 223], "design": [30, 88, 107, 146, 163, 168, 204, 220], "late": [30, 88], "safeti": [30, 88], "state": [30, 34, 40, 45, 47, 88, 92, 98, 103, 105, 107, 109, 117, 143, 148, 150, 153, 159, 168, 201, 207, 210, 216], "incorpor": [30, 88], "themselv": [30, 88], "invok": [30, 88], "theori": [30, 37, 88, 95, 107, 168], "snapshot": [30, 88, 133, 191], "valueerror": [30, 37, 88, 91, 95, 107, 137, 159, 168, 195, 216], "resembl": [30, 88, 107, 168], "callabl": [30, 88, 167, 170, 180, 223], "objet": [30, 88], "determin": [32, 37, 89, 95, 107, 125, 128, 136, 148, 152, 167, 168, 187, 194, 209, 223], "hashabl": [32, 89, 91, 144, 202], "consist": [32, 89, 107, 159, 168, 216], "translat": [32, 89, 107, 168], "convenct": [32, 89], "modern": [32, 89], "filnam": [32, 89], "shorter": [32, 89, 109, 158, 215], "special": [32, 47, 89, 105, 107, 168], "escap": [32, 89], "unicod": [32, 89], "broadli": [32, 89], "lenient": [32, 89], "pythoon": [32, 89], "char": [32, 89], "trigger": [32, 89, 109, 116, 141, 199], "outright": [32, 89], "delet": [33, 90], "ramdisk": [33, 90], "WITH": [33, 90], "caution": [33, 90], "rm": [33, 90, 137, 195], "rf": [33, 90], "entir": [33, 90, 121, 182], "ramdisk_loc": [33, 90], "extrem": [33, 90, 107, 109, 137, 168, 195], "danger": [33, 90], "disabl": [33, 90], "notimplementederror": [33, 90], "ssd": [33, 90], "drive": [33, 90, 117, 153, 162, 210, 219], "level2_loc": [33, 90], "usav": [33, 90], "override_ramdisk_loc": [33, 90], "500gb": [33, 90], "debian": [33, 90], "linux": [33, 90], "ram": [33, 90, 115, 167, 223], "inter": [33, 90], "commun": [33, 90], "metaphor": [33, 90], "consid": [33, 41, 90, 99, 107, 135, 168, 193], "requir": [33, 47, 90, 91, 105, 107, 116, 165, 168, 222], "sudo": [33, 90], "privileg": [33, 90], "jupyt": [33, 90], "ipython": [33, 90, 165, 222], "notebook": [33, 90, 136, 165, 194, 222], "insid": [33, 47, 90, 105, 125], "browser": [33, 90], "hand": [33, 34, 37, 90, 92, 95, 107, 168], "configur": [33, 90, 138, 167, 196, 223], "unless": [33, 90, 107, 128, 168, 187], "mediat": [33, 90], "onto": [33, 90, 112], "larg": [33, 90, 107, 109, 145, 150, 168, 203, 207], "solut": [33, 37, 41, 90, 95, 99, 107, 133, 168, 191], "depric": [33, 90, 167, 223], "spawn": [33, 90], "synchron": [33, 90, 133, 191], "reason": [33, 34, 90, 92, 107, 110, 112, 115, 160, 168, 217], "mi": [33, 90], "loss": [33, 90], "sort": [33, 90, 107, 160, 168, 217], "lazi": [33, 90], "protocol": [33, 90], "level1": [33, 90], "home": [33, 90], "mer49": [33, 90], "neurotools_ramdisk": [33, 90], "level2": [33, 90], "level3": [33, 90], "static": [33, 90], "initi": [33, 34, 90, 92, 107, 109, 146, 148, 150, 153, 156, 161, 162, 168, 204, 207, 210, 213, 218, 219], "repopul": [33, 90], "local": [33, 90, 109, 120, 121, 124, 126, 128, 142, 150, 165, 181, 182, 185, 186, 187, 200, 207, 222], "life": [33, 90], "frequent": [33, 90, 107, 168], "hdd": [33, 90], "larger": [33, 47, 90, 105, 107, 109, 121, 122, 128, 168, 182, 183, 187], "network": [33, 90], "databas": [33, 90], "unsafe_disk_cach": [33, 90], "patch": [33, 90], "replac": [33, 47, 90, 105, 107, 167, 168, 223], "persist": [33, 47, 90, 105], "befor": [33, 90, 107, 109, 122, 137, 167, 168, 183, 195, 223], "framework": [33, 90], "bug": [33, 90, 156, 213], "wors": [33, 90], "By": [33, 90, 107, 168], "excplitli": [33, 90], "hopefulli": [33, 90], "enforc": [33, 90], "wa": [33, 34, 90, 92, 107, 128, 136, 152, 168, 187, 194, 209], "original": [33, 90], "truccolo": [33, 90, 160, 217], "lab": [33, 90], "myhost": [33, 90], "o": [33, 90, 107, 150, 168, 207], "unam": [33, 90], "moonbas": [33, 90], "level1_loc": [33, 90], "media": [33, 90], "neurotools_level1": [33, 90], "ssd_1": [33, 90], "mrule": [33, 90], "level3_loc": [33, 90], "ldisk_1": [33, 90], "elif": [33, 90], "basecamp": [33, 90], "robotfortress": [33, 90], "petra": [33, 90], "script": [33, 90], "problem": [34, 37, 92, 95, 107, 168], "leavefre": [34, 92], "show_progress": [34, 92, 156, 213], "implmenet": [34, 92], "multiprocess": [34, 92], "evaul": [34, 92, 122, 183], "leav": [34, 38, 78, 92, 96, 126, 146, 186, 204], "open": [34, 92, 107, 168], "handel": [34, 92, 109, 122, 183], "correctli": [34, 92, 109], "fingerprint": [34, 92], "recompil": [34, 92], "dictionari": [34, 45, 47, 85, 92, 103, 105, 107, 132, 160, 167, 168, 190, 217, 223], "__indirect_eval_fallback_cach": [34, 92], "worker": [34, 92], "pool": [34, 92], "usual": [34, 47, 92, 105], "were": [34, 91, 92, 107, 159, 168, 216], "yield": [34, 92, 107, 168], "rebuild": [34, 92], "them": [34, 92, 107, 109, 167, 168, 223], "ahead": [34, 92], "force_cach": [34, 92], "force_fallback": [34, 92], "allow_fallback": [34, 92], "defind": [34, 92], "happen": [34, 92, 107, 156, 168, 213], "unabl": [34, 92], "initiatl": [34, 92], "workaround": [34, 92], "funcion": [34, 92], "launch": [34, 92], "prevent": [34, 92, 109, 131, 189], "understand": [34, 47, 92, 105, 107, 127, 168], "ensur": [34, 37, 92, 95, 116, 125, 155, 167, 212, 223], "pointer": [34, 92], "workspac": [34, 92], "Then": [34, 92, 107, 141, 168, 199], "gain": [34, 92, 150, 207], "inheret": [34, 92], "halt": [34, 92], "stuck": [34, 92], "hang": [34, 92], "On": [34, 92, 107, 168], "anyth": [34, 92, 148, 170], "violent": [34, 92], "free": [34, 47, 92, 105, 133, 156, 191, 213], "minu": [34, 92, 107, 140, 168, 198], "restart": [34, 92, 107, 168], "realli": [34, 92, 141, 199], "catch": [34, 47, 92, 105], "propag": [34, 47, 92, 105, 121, 182], "issquar": [35, 36, 50, 93, 94], "iscolumn": [35, 36, 50, 93, 94], "isrow": [35, 36, 50, 93, 94], "asrow": [35, 36, 50, 93, 94], "ascolumn": [35, 36, 50, 93, 94], "assquar": [35, 36, 50, 93, 94], "assertsquar": [35, 36, 50, 93, 94], "assertcolumn": [35, 36, 50, 93, 94], "assertrow": [35, 36, 50, 93, 94], "assertvector": [35, 36, 50, 93, 94], "asvector": [35, 36, 50, 93, 94], "assertfinit": [35, 36, 50, 93, 94], "assertr": [35, 36, 50, 93, 94], "assertfiniter": [35, 36, 50, 93, 94], "assertshap": [35, 36, 50, 93, 94], "triu_el": [35, 37, 50, 93, 95], "tril_el": [35, 37, 50, 93, 95], "column": [35, 37, 40, 50, 93, 95, 98, 121, 124, 127, 146, 163, 166, 182, 185, 204, 220], "rcond": [35, 37, 50, 93, 95], "check_finite_r": [35, 37, 50, 93, 95], "check_covmat": [35, 37, 50, 93, 95], "check_covmat_fast": [35, 37, 50, 93, 95], "real_eig": [35, 37, 50, 93, 95], "psd_eig": [35, 37, 50, 93, 95], "logdet": [35, 37, 50, 93, 95], "solt": [35, 37, 50, 93, 95], "rsolt": [35, 37, 50, 93, 95], "rsolv": [35, 37, 50, 93, 95], "qf": [35, 37, 50, 93, 95], "abserr": [35, 37, 50, 93, 95], "errmx": [35, 37, 50, 93, 95], "cholupd": [35, 37, 50, 93, 95], "cholupdate_ey": [35, 37, 50, 93, 95], "cartesian_product": [35, 37, 50, 93, 95], "nearpdhigham": [35, 37, 50, 93, 95], "nearpsdrebonatojackel": [35, 37, 50, 93, 95], "cinv": [35, 37, 50, 93, 95], "csolv": [35, 37, 50, 93, 95], "wheremax": [35, 37, 50, 93, 95], "wheremin": [35, 37, 50, 93, 95], "reglstsq": [35, 37, 50, 93, 95], "ldistanc": [35, 37, 50, 93, 95], "llasso": [35, 37, 50, 93, 95], "rmatrix": [35, 37, 50, 93, 95], "rdiv": [35, 37, 50, 93, 95], "autopredict": [35, 37, 50, 93, 95], "kronsum": [35, 37, 50, 93, 95], "top_v": [35, 37, 50, 93, 95], "normedcovari": [35, 37, 50, 93, 95], "maxeig": [35, 37, 50, 93, 95], "selector_matrix": [35, 37, 50, 93, 95], "laplace_kernel": [35, 37, 50, 93, 95, 120, 126, 181, 186], "match_covari": [35, 37, 50, 93, 95], "adjacency1d": [35, 38, 50, 93, 96], "laplacian1d_circular": [35, 38, 50, 93, 96], "adjacency2d": [35, 38, 50, 93, 96], "laplacian2d": [35, 38, 50, 93, 96], "adjacency2d_circular": [35, 38, 50, 93, 96], "adjacency2d_rot": [35, 38, 50, 93, 96], "laplacian1d": [35, 38, 50, 93, 96], "laplacianft1d": [35, 38, 50, 93, 96], "wienerft1d": [35, 38, 50, 93, 96], "diffuseft1d": [35, 38, 50, 93, 96], "flatcov": [35, 38, 50, 93, 96], "delta": [35, 38, 50, 93, 96, 116, 129, 146, 204], "differenti": [35, 38, 41, 50, 93, 96, 99, 109, 118, 121, 124, 159, 182, 185, 216], "integr": [35, 38, 41, 50, 93, 96, 99, 126, 139, 143, 146, 150, 155, 186, 197, 201, 204, 207, 212], "covfrom": [35, 38, 50, 93, 96], "oucov": [35, 38, 50, 93, 96], "gaussian1dbluroper": [35, 38, 50, 93, 96], "circular1dbluroper": [35, 38, 50, 93, 96], "separable_guassian_blur": [35, 38, 50, 93, 96], "gaussian2dbluroper": [35, 38, 50, 93, 96], "cosine_kernel": [35, 38, 50, 93, 96, 120, 126, 137, 146, 181, 186, 195, 204], "log_cosine_basi": [35, 38, 50, 93, 96, 120, 126, 137, 146, 181, 186, 195, 204], "make_cosine_basi": [35, 38, 50, 93, 96, 120, 126, 137, 146, 181, 186, 195, 204], "shape": [36, 37, 38, 94, 95, 96, 107, 109, 122, 125, 126, 127, 128, 129, 130, 137, 141, 145, 146, 150, 159, 161, 163, 167, 168, 183, 186, 187, 188, 195, 199, 203, 204, 207, 216, 218, 220, 223], "diag": [37, 95], "triangl": [37, 95, 132, 190], "nxn": [37, 38, 95, 96, 159, 216], "triu_indeci": [37, 95], "multidimension": [37, 95, 109], "ravel": [37, 95], "reciproc": [37, 95, 128, 139, 187, 197], "finit": [37, 38, 95, 96, 159, 216], "06": [37, 95, 159, 216], "verifi": [37, 95, 107, 121, 127, 150, 168, 182, 207], "matirx": [37, 95, 159, 216], "expect": [37, 41, 45, 95, 99, 103, 107, 128, 140, 146, 150, 155, 163, 168, 187, 198, 204, 207, 212, 220], "hermetian": [37, 95], "throw": [37, 91, 95, 107, 116, 159, 168, 216], "redund": [37, 95], "eigh": [37, 95], "instead": [37, 47, 95, 105, 107, 142, 147, 159, 168, 200, 205, 216], "eigenvalu": [37, 95, 110, 114, 115, 137, 195], "eigenvector": [37, 95, 137, 195], "definit": [37, 95, 107, 110, 114, 159, 168, 216], "solve_triangular": [37, 95], "solv": [37, 38, 41, 95, 96, 99, 126, 146, 186, 204], "quatrat": [37, 95], "m1": [37, 95, 128, 159, 187, 216], "m2": [37, 95, 159, 216], "teo": [37, 95], "pairwis": [37, 95, 110, 114, 115, 129, 135, 141, 161, 193, 199, 218], "mst": [37, 95], "rank": [37, 95, 107, 168], "choleski": [37, 95], "factor": [37, 43, 45, 95, 101, 103, 109, 116, 121, 122, 135, 142, 153, 182, 183, 193, 200, 210], "possibli": [37, 95], "recomput": [37, 95], "qq": [37, 95], "ch": [37, 95, 107, 163, 168, 220], "chol": [37, 95], "xx": [37, 95, 107, 168], "outer": [37, 95, 122, 183], "pp": [37, 95, 107, 124, 160, 168, 185, 217], "cp": [37, 95], "idenet": [37, 95], "ey": [37, 95], "11144513": [37, 95], "cartesian": [37, 95], "nit": [37, 95], "algorithm": [37, 95, 107, 109, 150, 156, 168, 207, 213], "higham": [37, 95], "2000": [37, 41, 95, 99], "10940283": [37, 95], "900749": [37, 95, 125], "relev": [37, 95, 107, 168], "intellectu": [37, 95], "retain": [37, 95, 137, 195], "sega": [37, 95], "sai": [37, 95], "1269140": [37, 95], "semi": [37, 95], "epsilon": [37, 95], "rebonato": [37, 95], "jackel": [37, 95], "1999": [37, 95, 107, 168], "18542094": [37, 95], "minimum": [37, 95, 109, 121, 137, 139, 146, 182, 195, 197, 204], "repair": [37, 95, 159, 216], "invert": [37, 95, 159, 216], "alias": [37, 95, 122, 183], "analogi": [37, 95, 121, 124, 182, 185], "operatornam": [37, 95, 147, 205], "lapack": [37, 95], "dtrtri": [37, 95], "www": [37, 95, 107, 168], "netlib": [37, 95], "org": [37, 95, 107, 150, 168, 207], "da": [37, 95], "dba": [37, 95], "group__double_o_t_h_e_rcomputational_ga97c5ddb103f5f6bc2dc060886aaf2ffc": [37, 95], "ga97c5ddb103f5f6bc2dc060886aaf2ffc": [37, 95], "doc": [37, 95], "symmetr": [37, 38, 95, 96, 107, 122, 126, 159, 168, 183, 186, 216], "j": [37, 95, 107, 129, 141, 152, 160, 168, 199, 209, 217], "psd": [37, 95], "indeci": [37, 95, 109, 121, 129, 132, 137, 163, 182, 190, 195, 220], "dimension": [37, 38, 45, 95, 96, 103, 107, 109, 121, 124, 136, 150, 152, 158, 168, 182, 185, 194, 207, 209, 215], "indic": [37, 95, 107, 124, 128, 132, 137, 168, 185, 187, 190, 195], "reg": [37, 44, 95, 102, 137, 195], "transpos": [37, 95, 107, 115, 168], "regular": [37, 95, 109, 125, 137, 141, 145, 146, 150, 163, 195, 199, 203, 204, 207, 220], "xm": [37, 95], "l2": [37, 95, 137, 146, 163, 195, 204, 220], "observ": [37, 45, 95, 103, 107, 133, 138, 144, 146, 150, 153, 157, 163, 168, 191, 196, 202, 204, 207, 210, 214, 220], "explanatori": [37, 95], "nsampl": [37, 95, 107, 110, 116, 137, 141, 146, 163, 168, 195, 199, 204, 220], "nfeatur": [37, 95, 137, 146, 195, 204], "respons": [37, 40, 95, 98, 109, 141, 161, 199, 218], "001": [37, 95], "lasso": [37, 95], "think": [37, 95, 110, 122, 133, 183, 191], "radian": [37, 95, 117, 121, 124, 128, 137, 182, 185, 187, 195], "behav": [37, 95, 107, 109, 168], "multipli": [37, 95, 107, 116, 126, 150, 159, 168, 186, 207, 216], "noutput": [37, 95], "bx": [37, 95], "predict": [37, 50, 95, 120, 133, 137, 147, 181, 191, 195, 205], "kroneck": [37, 95], "largetst": [37, 95], "selector": [37, 95], "3x3": [37, 38, 95, 96, 126, 152, 186, 209], "radial": [37, 38, 95, 96, 122, 125, 126, 133, 183, 186, 191], "discret": [37, 38, 41, 95, 96, 99, 107, 109, 111, 117, 122, 126, 144, 150, 151, 168, 183, 186, 202, 207, 208], "sample_defici": [37, 95, 137, 195], "distort": [37, 95], "eigendecomposit": [37, 95], "whiten": [37, 95], "tutori": [37, 95], "approach": [37, 95, 107, 147, 168, 205], "eldar": [37, 95], "yc": [37, 95], "2003": [37, 41, 95, 99, 107, 168], "ieee": [37, 95], "intern": [37, 95, 107, 168], "confer": [37, 95], "acoust": [37, 95], "speech": [37, 95], "proceed": [37, 95], "icassp": [37, 95], "03": [37, 95], "apr": [37, 95], "vol": [37, 95, 107, 168], "vi": [37, 47, 95, 105], "713": [37, 95], "oppenheim": [37, 95], "av": [37, 95], "mmse": [37, 95], "subspac": [37, 95], "transact": [37, 95], "jun": [37, 95], "25": [37, 38, 95, 96, 107, 126, 146, 159, 168, 170, 186, 204, 216], "49": [37, 38, 95, 96, 107, 126, 146, 168, 186, 204], "1846": [37, 95], "51": [37, 38, 95, 96, 107, 126, 146, 168, 186, 204], "inproceed": [37, 95], "eldar2003minimum": [37, 95], "author": [37, 95], "yonina": [37, 95], "booktitl": [37, 95], "volum": [37, 40, 95, 98, 107, 168], "year": [37, 95, 107, 168], "articl": [37, 95], "eldar2003mms": [37, 95], "alan": [37, 95], "journal": [37, 95, 107, 168], "1851": [37, 95], "reli": [37, 95, 107, 168], "1000": [37, 41, 47, 95, 99, 105, 107, 109, 110, 113, 114, 115, 116, 117, 121, 128, 135, 141, 150, 160, 168, 182, 187, 193, 199, 207, 217], "subplot": [37, 95, 130, 188], "131": [37, 95], "scatter": [37, 44, 95, 102, 107, 130, 168, 188], "132": [37, 95, 107, 168], "133": [37, 95, 107, 168], "cat": [37, 95, 107, 168], "xi1": [37, 95], "xi2": [37, 95], "nfeatures\u00b2": [37, 95], "overrid": [37, 95], "saniti": [37, 95], "while": [37, 47, 95, 105, 107, 152, 168, 209], "spars": [38, 96], "domain": [38, 96, 109, 115, 122, 139, 141, 183, 197, 199], "circularli": [38, 96, 109, 121, 137, 182, 195], "neighborhood": [38, 96], "build": [38, 96, 110, 114, 126, 146, 186, 204], "approximatelli": [38, 96], "cell": [38, 96, 127, 136, 163, 194, 220], "lxl": [38, 96, 109], "neumann": [38, 96], "reflect": [38, 96, 109, 111, 122, 126, 137, 142, 150, 159, 183, 186, 195, 200, 207, 216], "csr_matrix": [38, 96], "diagon": [38, 96, 107, 137, 168, 195], "self": [38, 96, 107, 125, 168], "n\u00b2xn\u00b2": [38, 96], "nonzero": [38, 96, 128, 187], "neighbor": [38, 96, 120, 121, 135, 142, 181, 182, 193, 200], "symmetri": [38, 96], "fourier": [38, 96, 109, 122, 183], "lenght": [38, 96], "root": [38, 96, 107, 126, 137, 168, 186, 195], "wiener": [38, 96, 150, 153, 162, 207, 210, 219], "differentiaion": [38, 96], "ssvar": [38, 96], "tau": [38, 41, 96, 99, 117, 150, 153, 162, 207, 210, 219], "gaussan": [38, 96], "blur": [38, 96, 127], "buffer": [38, 96], "smaller": [38, 47, 96, 105, 109, 121, 124, 139, 140, 158, 182, 185, 197, 198, 215], "tensor": [38, 96], "cosin": [38, 96, 109, 111, 122, 126, 146, 149, 161, 183, 186, 204, 206, 218], "basi": [38, 96, 109, 126, 133, 146, 149, 163, 186, 191, 204, 206, 220], "13": [38, 96, 126, 146, 170, 186, 204], "14": [38, 96, 107, 124, 126, 146, 168, 170, 185, 186, 204], "17": [38, 96, 107, 126, 146, 168, 170, 186, 204], "18": [38, 96, 126, 146, 160, 170, 186, 204, 217], "19": [38, 96, 126, 144, 146, 160, 170, 186, 202, 204, 217], "21": [38, 96, 126, 146, 170, 186, 204], "22": [38, 96, 126, 146, 170, 186, 204], "24": [38, 96, 126, 146, 170, 186, 204], "27": [38, 96, 107, 126, 146, 168, 170, 186, 204], "28": [38, 96, 126, 146, 170, 186, 204], "29": [38, 96, 126, 146, 170, 186, 204], "30": [38, 47, 96, 105, 107, 109, 126, 146, 168, 170, 186, 204], "33": [38, 96, 126, 146, 186, 204], "34": [38, 96, 126, 146, 170, 186, 204], "35": [38, 96, 107, 126, 146, 168, 186, 204], "36": [38, 96, 107, 126, 146, 168, 186, 204], "37": [38, 96, 126, 146, 186, 204], "38": [38, 96, 107, 126, 146, 168, 186, 204], "40": [38, 96, 107, 109, 126, 146, 168, 186, 204], "41": [38, 96, 126, 146, 186, 204], "42": [38, 96, 107, 126, 146, 168, 186, 204], "43": [38, 96, 126, 146, 186, 204], "44": [38, 96, 126, 146, 186, 204], "45": [38, 96, 126, 128, 146, 186, 187, 204], "46": [38, 96, 126, 146, 186, 204], "47": [38, 96, 107, 126, 146, 168, 186, 204], "48": [38, 96, 107, 126, 146, 168, 186, 204], "53": [38, 96, 126, 146, 186, 204], "54": [38, 96, 126, 146, 186, 204], "55": [38, 96, 126, 146, 186, 204], "56": [38, 96, 126, 146, 186, 204], "57": [38, 96, 107, 126, 146, 160, 168, 186, 204, 217], "58": [38, 96, 107, 126, 146, 168, 186, 204], "61": [38, 96, 126, 146, 186, 204], "62": [38, 96, 107, 126, 146, 168, 186, 204], "63": [38, 96, 126, 146, 186, 204], "65": [38, 96, 126, 146, 186, 204], "66": [38, 96, 126, 146, 186, 204], "67": [38, 96, 126, 146, 186, 204], "68": [38, 96, 126, 146, 186, 204], "69": [38, 96, 126, 146, 150, 186, 204, 207], "70": [38, 41, 96, 99, 126, 146, 186, 204], "71": [38, 96, 126, 146, 186, 204], "72": [38, 96, 126, 146, 186, 204], "73": [38, 96, 126, 146, 186, 204], "74": [38, 96, 126, 146, 186, 204], "75": [38, 96, 126, 146, 186, 204], "76": [38, 96, 126, 146, 186, 204], "77": [38, 96, 126, 146, 186, 204], "78": [38, 96, 126, 146, 186, 204], "79": [38, 96, 126, 146, 186, 204], "80": [38, 96, 107, 126, 146, 166, 168, 186, 204], "81": [38, 96, 126, 146, 186, 204], "82": [38, 96, 107, 126, 146, 168, 186, 204], "83": [38, 96, 107, 126, 146, 168, 186, 204], "84": [38, 96, 126, 146, 186, 204], "85": [38, 96, 126, 146, 186, 204], "86": [38, 96, 107, 126, 146, 168, 186, 204], "87": [38, 96, 126, 146, 186, 204], "88": [38, 96, 126, 146, 186, 204], "89": [38, 96, 126, 146, 186, 204], "91": [38, 96, 126, 146, 186, 204], "92": [38, 96, 126, 146, 186, 204], "93": [38, 96, 126, 146, 186, 204], "94": [38, 96, 126, 146, 186, 204], "98": [38, 96, 126, 136, 146, 186, 194, 204], "offset": [38, 96, 109, 126, 133, 137, 146, 161, 186, 191, 195, 204, 218], "wave": [38, 96, 107, 121, 124, 126, 128, 133, 146, 168, 182, 185, 186, 187, 191, 204], "quarter": [38, 96, 126, 146, 186, 204], "n_element": [38, 96, 126, 146, 186, 204], "n_time": [38, 96, 126, 146, 186, 204], "min_interv": [38, 96, 126, 146, 186, 204], "logarightm": [38, 96, 126, 146, 186, 204], "peak": [38, 96, 107, 109, 120, 124, 126, 136, 146, 158, 168, 181, 185, 186, 194, 204, 215], "constraint": [38, 96, 126, 146, 186, 204], "n_basi": [38, 96, 126, 146, 186, 204], "rbm_util": [39, 42, 97, 100], "loadrbm": [39, 42, 46, 47, 100, 104, 105], "free_energi": [39, 42, 46, 47, 104, 105], "propup": [39, 42, 46, 47, 104, 105], "sample_h_given_v": [39, 42, 46, 47, 104, 105], "propdown": [39, 42, 46, 47, 104, 105], "sample_v_given_h": [39, 42, 46, 47, 104, 105], "gibbs_hvh": [39, 42, 46, 47, 104, 105], "gibbs_vhv": [39, 42, 46, 47, 104, 105], "mean_h_given_v": [39, 42, 46, 47, 104, 105], "get_cost_upd": [39, 42, 46, 47, 104, 105], "get_pseudo_likelihood_cost": [39, 42, 46, 47, 104, 105], "get_reconstruction_cost": [39, 42, 46, 47, 104, 105], "train": [39, 42, 46, 47, 104, 105, 135, 136, 137, 193, 194, 195], "vis_energi": [39, 42, 46, 47, 104, 105], "savenp": [39, 42, 46, 47, 104, 105], "stutil": [39, 42, 46, 100, 104], "data_model_kldiv": [39, 42, 46, 48, 100, 104, 106], "exact_logz_seri": [39, 42, 46, 48, 100, 104, 106], "exact_logz": [39, 42, 46, 48, 100, 104, 106], "rbm_pattern_logprob_unnorm": [39, 42, 46, 48, 100, 104, 106], "rbm_pattern_logprob": [39, 42, 46, 48, 100, 104, 106], "data_pattern_logprob": [39, 42, 46, 48, 100, 104, 106], "gen_cov": [39, 42, 46, 48, 100, 104, 106], "rbm_fim_numpi": [39, 42, 46, 48, 100, 104, 106], "rbm_fim_lowmem": [39, 42, 46, 48, 100, 104, 106], "fim_eig": [39, 42, 46, 48, 100, 104, 106], "select_clust": [39, 42, 46, 48, 100, 104, 106], "select_tim": [39, 42, 46, 48, 100, 104, 106], "plot_rast": [39, 42, 46, 48, 100, 104, 106], "bin_timeseri": [39, 42, 46, 48, 100, 104, 106], "sum_ov": [39, 42, 46, 48, 100, 104, 106], "plot_zipf": [39, 42, 46, 48, 100, 104, 106], "bar_f": [39, 42, 43, 97, 100, 101], "inv_f": [39, 42, 43, 97, 100, 101], "a2q": [39, 42, 43, 97, 100, 101], "p2a": [39, 42, 43, 97, 100, 101], "acond": [39, 42, 43, 97, 100, 101], "pcond": [39, 42, 43, 97, 100, 101], "lnpr": [39, 42, 43, 97, 100, 101], "lnpr_activ": [39, 42, 43, 97, 100, 101], "ground_stat": [39, 42, 43, 97, 100, 101], "unique_count": [39, 42, 43, 97, 100, 101], "bernoulli_entropi": [39, 42, 43, 97, 100, 101], "bernoulli_entropy_activ": [39, 42, 43, 97, 100, 101], "hashint64": [39, 42, 43, 97, 100, 101], "unhashint64": [39, 42, 43, 97, 100, 101], "hashfloat128": [39, 42, 43, 97, 100, 101], "unhashfloat128": [39, 42, 43, 97, 100, 101], "hashbit": [39, 42, 43, 97, 100, 101], "unhashbit": [39, 42, 43, 97, 100, 101], "natent": [39, 42, 43, 97, 100, 101], "bitent": [39, 42, 43, 97, 100, 101], "rbm_helper": [39, 42, 97, 100], "make_filenam": [39, 42, 44, 97, 100, 102], "get_trial": [39, 42, 44, 97, 100, 102], "scattercompar": [39, 42, 44, 97, 100, 102], "zipfplot": [39, 42, 44, 97, 100, 102], "rbm_sampl": [39, 42, 47, 97, 100, 105], "conditional_map": [39, 42, 45, 97, 100, 103], "precomput": [39, 42, 45, 100, 103], "ahv": [39, 42, 45, 100, 103], "phv": [39, 42, 45, 100, 103], "avh": [39, 42, 45, 100, 103], "pvh": [39, 42, 45, 100, 103], "eh_unnorm": [39, 42, 45, 100, 103], "ev_unnorm": [39, 42, 45, 100, 103], "deh": [39, 42, 45, 100, 103], "get_eh": [39, 42, 45, 100, 103], "get_ev": [39, 42, 45, 100, 103], "get_deh": [39, 42, 45, 100, 103], "get_dev": [39, 42, 45, 100, 103], "get_hhhv": [39, 42, 45, 100, 103], "get_hvcondh": [39, 42, 45, 100, 103], "get_ehhv_factori": [39, 42, 45, 100, 103], "get_ehhv_meanfield": [39, 42, 45, 100, 103], "get_evh": [39, 42, 45, 100, 103], "hhv": [39, 42, 45, 100, 103], "barhhv": [39, 42, 45, 100, 103], "hvh": [39, 42, 45, 100, 103], "barhvh": [39, 42, 45, 100, 103], "euh_factori": [39, 42, 45, 100, 103], "deuh": [39, 42, 45, 100, 103], "deuv": [39, 42, 45, 100, 103], "dehhv_meanfield": [39, 42, 45, 100, 103], "dehhv": [39, 42, 45, 100, 103], "devvh": [39, 42, 45, 100, 103], "evvh": [39, 42, 45, 100, 103], "evh": [39, 42, 45, 100, 103], "ehv": [39, 42, 45, 100, 103], "evhhv_meanfield": [39, 42, 45, 100, 103], "evhhv": [39, 42, 45, 100, 103], "ehvvh_meanfield": [39, 42, 45, 100, 103], "ehvvh": [39, 42, 45, 100, 103], "short_report": [39, 42, 45, 100, 103], "long_report": [39, 42, 45, 100, 103], "dv_izh": [39, 40, 50, 97, 98], "du_izh": [39, 40, 50, 97, 98], "update_izh": [39, 40, 50, 97, 98], "sim_izh": [39, 40, 50, 97, 98], "euler_integrate_lif": [39, 41, 50, 97, 99], "exponential_integrate_lif": [39, 41, 50, 97, 99], "exponential_moving_averag": [39, 41, 50, 97, 99], "izhikevich": [40, 98], "dv": [40, 41, 98, 99], "neuron": [40, 98, 141, 199], "occur": [40, 98, 107, 109, 168], "mass": [40, 98, 107, 142, 168, 200], "ntime": [40, 98, 110, 113, 114, 121, 124, 128, 133, 137, 182, 185, 187, 191, 195], "g_l": [41, 99], "g_e": [41, 99], "00074": [41, 99], "e_": [41, 99], "e_l": [41, 99], "g_": [41, 99], "baker": [41, 99], "pinch": [41, 99], "lemon": [41, 99], "euler": [41, 99], "though": [41, 99], "similar": [41, 99, 107, 126, 128, 159, 167, 168, 186, 187, 216, 223], "synapt": [41, 99], "count": [41, 78, 99, 107, 109, 121, 135, 138, 144, 146, 150, 157, 163, 168, 182, 193, 196, 202, 204, 207, 214, 220], "activ": [41, 43, 45, 47, 99, 101, 103, 105, 128, 187], "event": [41, 99, 107, 116, 121, 158, 168, 170, 182, 215], "uf": [41, 99], "membran": [41, 99], "capacit": [41, 99], "leak": [41, 99], "conduct": [41, 99], "mv": [41, 99, 128, 187], "rest": [41, 99], "excitatori": [41, 99], "hz": [41, 99, 109, 112, 115, 116, 117, 128, 142, 187, 200], "rate": [41, 47, 99, 105, 107, 109, 112, 115, 116, 118, 121, 122, 128, 142, 143, 150, 160, 168, 182, 183, 187, 200, 201, 207, 217], "10m": [41, 99], "rc": [41, 99], "epsp": [41, 99], "microvolt": [41, 99], "1mv": [41, 99], "emper": [41, 99], "farad": [41, 99], "volt": [41, 99], "amper": [41, 99], "siemen": [41, 99], "ohm": [41, 99], "millisiemen": [41, 99], "millivolt": [41, 99], "microamp": [41, 99], "microfarad": [41, 99], "millisecond": [41, 99, 156, 167, 213, 223], "clf": [41, 99, 130, 188], "against": [41, 99, 107, 168], "y_": [41, 99, 107, 168], "y_n": [41, 99], "x_n": [41, 99, 107, 168], "relat": [41, 99, 107, 109, 168], "convolv": [41, 99, 109, 126, 186], "decai": [41, 99, 107, 161, 168, 218], "heavisid": [41, 99], "And": [41, 99], "exact": [41, 99], "impuls": [41, 99, 141, 161, 199, 218], "y_0": [41, 99], "bv": [43, 45, 101, 103], "bh": [43, 45, 101, 103, 163, 220], "bernoulli": [43, 101, 107, 146, 150, 168, 204, 207], "prod": [43, 101], "being": [43, 101, 107, 122, 168, 170, 183], "energi": [43, 44, 45, 47, 101, 102, 103, 105, 107, 144, 168, 202], "activatoin": [43, 101], "lie": [43, 101], "float128": [43, 101], "pylab": [43, 101, 107, 109, 167, 168, 223], "packbit": [43, 101], "whose": [43, 101], "unpack": [43, 85, 101], "unpackbit": [43, 101], "complex256": [43, 101], "batch": [44, 47, 102, 105], "num": [44, 102, 107, 168], "dir": [44, 102], "xl": [44, 102], "yl": [44, 102], "tit": [44, 102], "nbin": [44, 102], "idlin": [44, 102], "adaptlimit": [44, 102], "meanlin": [44, 102], "shadevari": [44, 102], "well": [44, 102, 107, 112, 121, 127, 136, 163, 168, 182, 194, 220], "eh": [44, 102, 109], "law": [44, 102, 107, 161, 168, 218], "contains": [45, 103], "newer": [45, 103], "offer": [45, 103], "recommend": [45, 103, 107, 168], "visibl": [45, 47, 103, 105], "margin": [45, 103], "samepl": [45, 103], "hidden": [45, 47, 103, 105, 150, 207], "joint": [45, 103, 159, 216], "partit": [45, 103, 137, 195], "difficult": [45, 103], "compar": [45, 103, 107, 116, 129, 135, 168, 193], "theoret": [45, 103], "layer": [45, 47, 103, 105], "hop": [45, 103], "field": [45, 103, 107, 124, 152, 168, 185, 209], "fname": [47, 105], "n_visibl": [47, 105], "784": [47, 105], "n_hidden": [47, 105], "500": [47, 105, 107, 110, 115, 128, 168, 187], "hbia": [47, 105], "vbia": [47, 105], "numpy_rng": [47, 105], "theano_rng": [47, 105], "reg_weight": [47, 105], "boltzmann": [47, 105], "machin": [47, 105], "v_sampl": [47, 105], "upward": [47, 105], "pre": [47, 105, 107, 168], "theano": [47, 105], "deal": [47, 105], "symbol": [47, 53, 54, 105], "reconstruct": [47, 50, 105, 137, 141, 163, 195, 199, 220], "v0_sampl": [47, 105], "infer": [47, 105, 107, 148, 150, 168, 207], "hid": [47, 105], "downward": [47, 105], "pre_sigmoid_activ": [47, 105], "h0_sampl": [47, 105], "gibb": [47, 105], "lr": [47, 105], "cd": [47, 105], "pcd": [47, 105], "learn": [47, 105, 107, 168], "chain": [47, 105], "proxi": [47, 105], "rule": [47, 105, 107, 168], "bias": [47, 105, 107, 116, 168], "pseudo": [47, 105, 107, 168], "likelihood": [47, 105, 148, 150, 163, 207, 220], "pre_sigmoid_nv": [47, 105], "why": [47, 105], "about": [47, 105, 107, 152, 160, 168, 209, 217], "whenev": [47, 105], "stabil": [47, 105, 109, 128, 187], "done": [47, 105], "subgraph": [47, 105], "One": [47, 105, 109, 150, 207], "softplu": [47, 105], "cross": [47, 105, 109, 110, 124, 135, 137, 141, 146, 185, 193, 195, 199, 204], "undesir": [47, 105, 109], "behaviour": [47, 105], "fine": [47, 105], "scan": [47, 105], "go": [47, 105, 150, 207], "someth": [47, 105, 167, 223], "last": [47, 105, 107, 109, 115, 142, 167, 168, 200, 223], "data_x": [47, 105], "learning_r": [47, 105], "training_epoch": [47, 105], "batch_siz": [47, 105], "output_al": [47, 105], "output_fin": [47, 105], "cd_step": [47, 105], "epoch": [47, 105, 123, 128, 184, 187], "test_x": [47, 105], "output_fil": [47, 105], "n_chain": [47, 105], "n_sampl": [47, 105], "plot_everi": [47, 105], "include_hidden": [47, 105], "visbia": [48, 106], "hidbia": [48, 106], "d_kl": [48, 106], "bias1": [48, 106], "bias2": [48, 106], "nvi": [48, 106], "fim": [48, 106], "return_eigenvector": [48, 106], "clusterid": [48, 106], "id": [48, 106, 124, 170, 185], "normalis": [48, 106], "return_index": [48, 106], "return_invers": [48, 106], "return_count": [48, 106], "soon": [48, 106], "content": [49, 107, 168], "test_colormap": [50, 75, 77], "list_lik": [50, 75, 78], "get_depth": [50, 75, 78], "count_nod": [50, 75, 78], "inorder_travers": [50, 75, 78], "plot_bracket": [50, 75, 78], "plot_brackets_polar": [50, 75, 78], "listit": [50, 86, 91], "tupleit": [50, 86, 91], "sanit": [50, 86, 91], "summarize_funct": [50, 86, 91], "print_signatur": [50, 86, 91], "clear_memo": [50, 86, 91], "morlet_population_synchrony_spectrum": [50, 109, 110], "population_eigencoher": [50, 109, 110, 114], "population_coherence_matrix": [50, 109, 110], "multitaper_coher": [50, 109, 110], "sliding_multitaper_coher": [50, 109, 110], "sliding_multitaper_coherence_parallel": [50, 109, 110], "coherence_pvalu": [50, 109, 110], "multitaper_multitrial_coher": [50, 109, 110], "reflect2d": [50, 109, 111], "reflect2d_1": [50, 109, 111], "mirror2d": [50, 109, 111, 120, 124, 181, 185], "convolve2dct": [50, 109, 111], "separable2d": [50, 109, 111], "gausskern2d": [50, 109, 111], "gausskern1d": [50, 109, 111], "virtual_reference_line_noise_remov": [50, 109, 112], "band_stop_line_noise_remov": [50, 109, 112], "normalized_morlet": [50, 109, 113], "prepare_wavelet_fft_basi": [50, 109, 113, 114], "fft_cwt": [50, 109, 113, 114], "fft_cwt_transpos": [50, 109, 113], "logfreq": [50, 109, 113], "prepare_wavelet_fft_basis_logspac": [50, 109, 113], "fft_cwt_transposed_logspac": [50, 109, 113], "population_coherence_spectrum": [50, 109, 114], "mtm_coher": [50, 109, 114], "dpss_cach": [50, 109, 115], "multitaper_spectrum": [50, 109, 115], "multitaper_squared_spectrum": [50, 109, 115], "sliding_multitaper_spectrum": [50, 109, 115], "multitaper_population_eigencoher": [50, 109, 115], "phase_randomize_complex": [50, 109, 116], "fftppc_bias": [50, 109, 116], "fftppc": [50, 109, 116], "fftppc_biased_multitap": [50, 109, 116], "fftppc_multitap": [50, 109, 116], "nodc": [50, 109, 115, 116], "discard_spikes_closer_than_delta": [50, 109, 116], "pairwise_phase_consist": [50, 109, 116], "estimate_bias_in_uncorrected_ppc": [50, 109, 116], "phase_randomized_bias_correct": [50, 109, 116], "temp_code_for_exploring_chance_level_delete_lat": [50, 109, 116], "ppc_chance_level": [50, 109, 116], "ppc_phase_randomize_chance_level_sampl": [50, 109, 116], "resonantdr": [50, 109, 117], "resonantfiltfilt": [50, 109, 117], "resonantfilt": [50, 109, 117], "sgord": [50, 109, 118], "sgkern": [50, 109, 118], "sgkernv": [50, 109, 118], "sgkerna": [50, 109, 118], "sgkernj": [50, 109, 118], "sgfilt": [50, 109, 118], "sgfiltv": [50, 109, 118], "sgfilta": [50, 109, 118], "sgfiltj": [50, 109, 118], "sgacceler": [50, 109, 118], "sgjerk": [50, 109, 118], "sgdifferenti": [50, 109, 118], "sgsmooth": [50, 109, 118], "array_average_amplitud": [50, 120, 121, 181, 182], "array_kuramoto": [50, 120, 121, 181, 182], "array_synchroni": [50, 120, 121, 181, 182], "array_kuramoto_standard_devi": [50, 120, 121, 181, 182], "array_synchrony_standard_devi": [50, 120, 121, 181, 182], "array_phase_gradi": [50, 120, 121, 181, 182], "array_count_cent": [50, 120, 121, 181, 182], "array_count_crit": [50, 120, 121, 181, 182], "array_phasegradient_loc": [50, 120, 121, 181, 182], "array_phasegradient_planar": [50, 120, 121, 181, 182], "array_phasegradient_magnitude_sigma": [50, 120, 121, 181, 182], "array_phasegradient_magnitude_cv": [50, 120, 121, 181, 182], "array_phasegradient_pgd_threshold": [50, 120, 121, 181, 182], "array_wavelength_pgd_threshold": [50, 120, 121, 181, 182], "array_wavelength_local_pgd_threshold": [50, 120, 121, 181, 182], "array_speed_pgd_threshold": [50, 120, 121, 181, 182], "array_speed_loc": [50, 120, 121, 181, 182], "array_wavelength_loc": [50, 120, 121, 181, 182], "array_wavelength_planar": [50, 120, 121, 181, 182], "array_synchrony_pgd": [50, 120, 121, 181, 182], "array_synchrony_pgd_standard_devi": [50, 120, 121, 181, 182], "array_kuramoto_pgd": [50, 120, 121, 181, 182], "array_kuramoto_pgd_standard_devi": [50, 120, 121, 181, 182], "trim_arrai": [50, 120, 121, 181, 182], "trim_array_as_if": [50, 120, 121, 181, 182], "pack_array_data": [50, 120, 121, 181, 182], "get_mask_antialias": [50, 120, 122, 181, 183], "get_mask": [50, 120, 122, 181, 183], "dct_cut": [50, 120, 122, 181, 183], "outer_complex": [50, 120, 122, 181, 183], "dct_cut_antialia": [50, 120, 122, 181, 183], "dct_cut_downsampl": [50, 120, 122, 181, 183], "dct_upsampl": [50, 120, 122, 181, 183], "iterated_upsampl": [50, 120, 122, 181, 183], "dct_upsample_notrim": [50, 120, 122, 181, 183], "get_electrode_loc": [50, 120, 123, 181, 184], "get_pair_dist": [50, 120, 123, 181, 184], "distance_angular_devi": [50, 120, 123, 181, 184], "get_averaged_angular_dist": [50, 120, 123, 181, 184], "get_length_constant_tri": [50, 120, 123, 181, 184], "get_average_synchrony_length_constant_parallel": [50, 120, 123, 181, 184], "synchrony_length_constant_areas_summari": [50, 120, 123, 181, 184], "plot_phase_gradi": [50, 120, 124, 181, 185], "plot_phase_direct": [50, 120, 124, 181, 185], "dphidx": [50, 120, 124, 181, 185], "dphidi": [50, 120, 124, 181, 185], "get_phase_gradient_as_complex": [50, 120, 124, 181, 185], "getpeaks2d": [50, 120, 124, 181, 185], "coalesc": [50, 120, 124, 132, 181, 185, 190], "coalesce_point": [50, 120, 124, 181, 185], "find_critical_point": [50, 120, 124, 181, 185], "plot_critical_point": [50, 120, 124, 181, 185], "find_critical_potential_point": [50, 120, 124, 181, 185], "grad": [50, 120, 124, 181, 185], "quickgrad": [50, 120, 124, 181, 185], "getp": [50, 120, 124, 181, 185], "get_critical_spectra": [50, 120, 124, 181, 185], "plot_critical_spectra": [50, 120, 124, 181, 185], "cut_array_data": [50, 120, 124, 181, 185], "p2z": [50, 120, 125], "polar_smooth_contour": [50, 120, 125], "convex_hul": [50, 120, 125], "convex_hull_from_mask": [50, 120, 125], "resample_convex_hul": [50, 120, 125], "in_hul": [50, 120, 125], "gaussian_2d_kernel": [50, 120, 126, 181, 186], "absorbing_gaussian": [50, 120, 126, 181, 186], "absorbing_laplacian": [50, 120, 126, 181, 186], "magicsharp": [50, 120, 126, 181, 186], "magickernel": [50, 120, 126, 181, 186], "continuum_kernel": [50, 120, 126, 181, 186], "log_spline_basi": [50, 120, 126, 181, 186], "exponential_basi": [50, 120, 126, 181, 186], "diffusion_basi": [50, 120, 126, 181, 186], "iterative_orthogonalize_basi": [50, 120, 126, 181, 186], "as_mask": [50, 120, 127], "mask_to_point": [50, 120, 127], "extend_mask": [50, 120, 127], "pgrid": [50, 120, 127], "nan_mask": [50, 120, 127], "maskout": [50, 120, 127], "trim_mask": [50, 120, 127], "mask_crop": [50, 120, 127], "to_imag": [50, 120, 127], "population_kuramoto": [50, 120, 128, 181, 187], "population_synchroni": [50, 120, 128, 181, 187], "population_polar_std": [50, 120, 128, 181, 187], "population_average_amplitud": [50, 120, 128, 181, 187], "population_signal_dispers": [50, 120, 128, 181, 187], "population_signal_concentr": [50, 120, 128, 181, 187], "population_signal_precis": [50, 120, 128, 181, 187], "population_signal_phase_dispers": [50, 120, 128, 181, 187], "population_signal_phase_std": [50, 120, 128, 181, 187], "population_signal_amplitude_std": [50, 120, 128, 181, 187], "population_signal_amplitude_dispers": [50, 120, 128, 181, 187], "population_signal_phase_precis": [50, 120, 128, 181, 187], "population_signal_amplitude_precis": [50, 120, 128, 181, 187], "population_signal_descript": [50, 120, 128, 181, 187], "population_synchrony_linear": [50, 120, 128, 181, 187], "population_phase_coher": [50, 120, 128, 181, 187], "analytic_signal_coher": [50, 120, 128, 181, 187], "population_sliding_signal_coher": [50, 120, 128, 181, 187], "sliding_population_signal_coher": [50, 120, 128, 181, 187], "population_normalized_sliding_signal_coher": [50, 120, 128, 181, 187], "population_phase_relative_sliding_kuramoto": [50, 120, 128, 181, 187], "population_median_phase_veloc": [50, 120, 128, 181, 187], "population_median_frequ": [50, 120, 128, 181, 187], "to_xypoint": [50, 120, 129], "closest": [50, 120, 129], "pair_neighbor": [50, 120, 129], "paired_dist": [50, 120, 129], "psd2d": [50, 120, 130, 181, 188], "spatialpsd_length_scale_spectrum": [50, 120, 130, 181, 188], "spatialpsd_parallel_wrapp": [50, 120, 130, 181, 188], "all_spatial_psd_parallel": [50, 120, 130, 181, 188], "interp_bin": [50, 120, 131, 181, 189], "z2xy": [50, 120, 132, 181, 190], "uniquerow": [50, 120, 132, 181, 190], "trianglestoedg": [50, 120, 132, 181, 190], "edgesnearbi": [50, 120, 132, 181, 190], "plot_edg": [50, 120, 132, 181, 190], "plot_triangl": [50, 120, 132, 181, 190], "mergenearbi": [50, 120, 132, 181, 190], "plotdata": [50, 120, 133, 181, 191], "makelsqminimizerpolar": [50, 120, 133, 181, 191], "makelsqminimizerstand": [50, 120, 133, 181, 191], "makelsqminimizersynchron": [50, 120, 133, 181, 191], "makelsqminimizerplan": [50, 120, 133, 181, 191], "makelsqminimizerdoubleplan": [50, 120, 133, 181, 191], "phase_gradi": [50, 120, 133, 181, 191], "heuristic_b_polar": [50, 120, 133, 181, 191], "heuristic_b_planar": [50, 120, 133, 181, 191], "heuristic_b_stand": [50, 120, 133, 181, 191], "heuristic_b_synchron": [50, 120, 133, 181, 191], "heuristic_b_double_planar": [50, 120, 133, 181, 191], "frame_synchroni": [50, 120, 133, 181, 191], "pairwise_phase_differ": [50, 120, 133, 181, 191], "spatial_phase_gradi": [50, 120, 133, 181, 191], "directionality_index": [50, 120, 133, 181, 191], "phase_unwrap": [50, 120, 133, 181, 191], "averaged_directionality_index": [50, 120, 133, 181, 191], "heuristic_solver_double_planar": [50, 120, 133, 181, 191], "heuristic_solver_stand": [50, 120, 133, 181, 191], "heuristic_solver_planar": [50, 120, 133, 181, 191], "heuristic_solver_polar": [50, 120, 133, 181, 191], "heuristic_solver_synchron": [50, 120, 133, 181, 191], "pp_xcorr": [50, 134, 135, 192, 193], "txcorr": [50, 134, 135, 192, 193], "pack_cross_correlation_matrix": [50, 134, 135, 192, 193], "cut_spik": [50, 134, 135, 192, 193], "times_to_rast": [50, 134, 135, 192, 193], "bin_spikes_rast": [50, 134, 135, 192, 193], "bin_spike_tim": [50, 134, 135, 192, 193], "realign": [50, 134, 136, 192, 194], "realign_speci": [50, 134, 136, 192, 194], "getfwhm": [50, 134, 136, 192, 194], "getpvt": [50, 134, 136, 192, 194], "getwahp": [50, 134, 136, 192, 194], "getpt": [50, 134, 136, 192, 194], "getpthw": [50, 134, 136, 192, 194], "getphp": [50, 134, 136, 192, 194], "minmax": [50, 134, 136, 192, 194], "normalized_waveform": [50, 134, 136, 192, 194], "is_thin": [50, 134, 136, 192, 194], "is_thin_pvt": [50, 134, 136, 192, 194], "gaussian_quadratur": [50, 137, 139, 195, 197], "gaussian_quadrature_logarithm": [50, 137, 139, 195, 197], "logpolar_gaussian": [50, 137, 140, 195, 198], "complex_gaussian": [50, 137, 140, 195, 198], "logpolar_stat": [50, 137, 140, 195, 198], "abspolar_stat": [50, 137, 140, 195, 198], "squared_first_circular_mo": [50, 137, 140, 195, 198], "fit_vonmis": [50, 137, 140, 195, 198], "ccor": [50, 137, 141, 195, 199], "ccm": [50, 137, 141, 195, 199], "blockccm": [50, 137, 141, 195, 199], "sta": [50, 109, 137, 141, 195, 199], "blocksta": [50, 137, 141, 195, 199], "cspect": [50, 137, 141, 195, 199], "cspectm": [50, 137, 141, 195, 199], "spike_lfp_filt": [50, 137, 141, 195, 199], "spectreconstruct": [50, 137, 141, 195, 199], "create_spectral_model": [50, 137, 141, 195, 199], "construct_lowpass_oper": [50, 137, 141, 195, 199], "autocorrelation_bay": [50, 137, 141, 195, 199], "kdepeak": [50, 137, 142, 195, 200], "knn_1d_densiti": [50, 137, 142, 195, 200], "adaptive_density_grid": [50, 137, 142, 195, 200], "gridhist": [50, 137, 142, 195, 200], "poisson_logpdf": [50, 137, 143, 195, 201], "poisson_pdf": [50, 137, 143, 195, 201], "gaussian_logpdf": [50, 137, 143, 195, 201], "gaussian_pdf": [50, 137, 143, 195, 201], "explogpdf": [50, 137, 143, 195, 201], "sample_categor": [50, 137, 143, 195, 201], "discrete_entropy_sampl": [50, 137, 144, 195, 202], "discrete_entropy_distribut": [50, 137, 144, 195, 202], "regularized_discrete_entropi": [50, 137, 144, 195, 202], "poisson_entropy_nat": [50, 137, 144, 195, 202], "image_cov": [50, 137, 145, 195, 203], "glmpenaltypoisson": [50, 137, 146, 195, 204], "glmpenaltybernoulli": [50, 137, 146, 195, 204], "glmpenaltyl2": [50, 137, 146, 195, 204], "ppglmfit": [50, 137, 146, 195, 204], "fitglm": [50, 137, 146, 195, 204], "crossvalidatedauc": [50, 137, 146, 195, 204], "gradientglmfit": [50, 137, 146, 163, 195, 204, 220], "numeric_grad": [50, 137, 146, 195, 204], "numeric_hess": [50, 137, 146, 195, 204], "gmm1d": [50, 137, 147, 195, 205], "poisson_parameter_guess": [50, 137, 150, 195, 207], "poisson_baum_welch": [50, 137, 150, 195, 207], "viterbi": [50, 137, 150, 195, 207], "viterbi_log": [50, 137, 150, 195, 207], "hasnan": [50, 137, 150, 195, 207], "poisson_viterbi_state_inf": [50, 137, 150, 195, 207], "forward_backward": [50, 137, 150, 195, 207], "jump": [50, 137, 150, 195, 207], "log_likelihood": [50, 137, 150, 195, 207], "baum_welch": [50, 137, 150, 195, 207], "forward_abstract": [50, 137, 150, 195, 207], "backward_abstract": [50, 137, 150, 195, 207], "forward_backward_abstract": [50, 137, 150, 195, 207], "diffusiongaussian": [50, 137, 150, 195, 207], "loggaussiancoxapproxim": [50, 137, 150, 195, 207], "loggaussiancoxmodel": [50, 137, 150, 195, 207], "gaussiancoxapproxim": [50, 137, 150, 195, 207], "gaussiancoxmodel": [50, 137, 150, 195, 207], "chisquarecoxapproxim": [50, 137, 150, 195, 207], "chisquarecoxmodel": [50, 137, 150, 195, 207], "bernoulliobservationapproxim": [50, 137, 150, 195, 207], "bernoulliobservationmodel": [50, 137, 150, 195, 207], "truncatedloggaussiancoxapproxim": [50, 137, 150, 153, 195, 207, 210], "truncatedloggaussiancoxmodel": [50, 137, 150, 195, 207], "mvgaussian": [50, 137, 150, 195, 207], "mvgupdat": [50, 137, 150, 195, 207], "lgcp_observation_minim": [50, 137, 150, 195, 207], "mvloggaussiancox": [50, 137, 150, 195, 207], "ougaussian": [50, 137, 150, 195, 207], "mvgouupdat": [50, 137, 150, 195, 207], "poissonobservationapproxim": [50, 137, 150, 195, 207], "poissonobservationmodel": [50, 137, 150, 195, 207], "truncatedpoissonobservationapproxim": [50, 137, 150, 195, 207], "truncatedpoissonobservationmodel": [50, 137, 150, 195, 207], "dkl_discret": [50, 137, 151, 195, 208], "riemann2complex": [50, 137, 152, 195, 209], "complex2riemann": [50, 137, 152, 195, 209], "kentpdf": [50, 137, 152, 195, 209], "kentpdfriemann": [50, 137, 152, 195, 209], "rotatex": [50, 137, 152, 195, 209], "rotatei": [50, 137, 152, 195, 209], "rotatez": [50, 137, 152, 195, 209], "sample_wiener_process": [50, 137, 153, 195, 210], "sample_ou_process": [50, 137, 153, 162, 195, 210, 219], "add_spik": [50, 137, 153, 195, 210], "precision1d": [50, 137, 153, 195, 210], "showim": [50, 126, 137, 153, 186, 195, 210], "infer_states_gaussian_adf": [50, 137, 153, 195, 210], "pgom": [50, 137, 153, 195, 210], "monte_carlo_expect": [50, 137, 155, 195, 212], "monte_carlo_mo": [50, 137, 155, 195, 212], "failureerror": [50, 137, 156, 195, 213], "minimize_retri": [50, 137, 156, 195, 213], "two_class_poisson_mixture_model": [50, 137, 157, 195, 214], "logmodeplot": [50, 137, 158, 195, 215], "logmod": [50, 137, 158, 195, 215], "peakfinder5": [50, 137, 158, 195, 215], "mvg_check": [50, 137, 159, 195, 216], "mvg_logpdf": [50, 137, 159, 195, 216], "mvg_pdf": [50, 137, 159, 195, 216], "mvg_sampl": [50, 137, 159, 195, 216], "mvg_multipli": [50, 137, 159, 195, 216], "mvg_multiply_c": [50, 137, 159, 195, 216], "mvg_divid": [50, 137, 159, 195, 216], "mvg_project": [50, 137, 159, 195, 216], "mvg_entropi": [50, 137, 159, 195, 216], "mvg_dkl": [50, 137, 159, 195, 216], "mvg_dkl_cp": [50, 137, 159, 195, 216], "mvg_condit": [50, 137, 159, 195, 216], "mvg_kalman": [50, 137, 159, 195, 216], "mvg_kalman_p_inversea": [50, 137, 159, 195, 216], "mvg_kalman_joint": [50, 137, 159, 195, 216], "mvg_kalman_joint_p": [50, 137, 159, 195, 216], "benjamini_hochberg_positive_correl": [50, 137, 160, 195, 217], "correct_pvalues_positive_depend": [50, 137, 160, 195, 217], "correct_pvalu": [50, 137, 160, 195, 217], "bootstrap_statistic_two_sid": [50, 137, 160, 195, 217], "bootstrap_median": [50, 137, 160, 195, 217], "bootstrap_mean": [50, 137, 160, 195, 217], "bootstrap_compare_statistic_two_sid": [50, 137, 160, 195, 217], "sample_parallel_help": [50, 137, 160, 195, 217], "bootstrap_compare_statistic_two_sided_parallel": [50, 137, 160, 195, 217], "bootstrap_compare_median": [50, 137, 160, 195, 217], "bootstrap_compare_mean": [50, 137, 160, 195, 217], "damped_cosin": [50, 137, 161, 195, 218], "weighted_least_squar": [50, 137, 161, 195, 218], "power_law": [50, 137, 161, 195, 218], "gaussian_funct": [50, 137, 161, 195, 218], "half_gaussian_funct": [50, 137, 161, 195, 218], "exponential_decai": [50, 137, 161, 195, 218], "robust_lin": [50, 137, 161, 195, 218], "orthogon": [50, 126, 137, 152, 163, 186, 195, 209, 220], "isint": [50, 137, 163, 195, 220], "local_ch_map": [50, 137, 163, 195, 220], "spatiotemporal_history_project": [50, 137, 163, 195, 220], "spatiotemporal_histori": [50, 137, 163, 195, 220], "plot_spatiotempor": [50, 137, 163, 195, 220], "plot_histfilt": [50, 137, 163, 195, 220], "glmpenaltyl2_subsampl": [50, 137, 163, 195, 220], "gradientglmfit_subsampl": [50, 137, 163, 195, 220], "walk": [52, 53, 54], "leaf": [52, 53, 54, 78], "encode_packet": [52, 53, 54], "decod": [52, 53, 54], "children": [54, 107, 168], "depth": 78, "deep": 78, "rotate_label": 78, "label_offset": 78, "arcspan": 78, "figsiz": 78, "line_resolut": 78, "secretli": 85, "hdf": 85, "squeez": 85, "detectstr": 85, "detectscalar": 85, "subpath": 85, "hfdf5": 85, "outbut": 85, "dict": [85, 107, 160, 167, 168, 217, 223], "liber": 91, "strict": 91, "primit": 91, "chracter": 91, "za": 91, "z0": 91, "timer": [91, 109], "runtim": 91, "purg": 91, "kind": [91, 142, 200], "__wrapped__": 91, "commonli": [107, 168], "alia": [107, 122, 168, 170, 183], "eas": [107, 168], "api": [107, 168], "frac": [107, 152, 168, 209], "int_0": [107, 168], "often": [107, 168], "seen": [107, 168], "bayesian": [107, 168], "default_rng": [107, 159, 168, 216], "quick": [107, 137, 159, 168, 195, 216], "array_lik": [107, 155, 168, 212], "broadcast": [107, 109, 168], "parameter": [107, 168], "trial": [107, 110, 123, 130, 137, 168, 184, 188, 195], "success": [107, 168], "equal": [107, 115, 152, 168, 209], "binom": [107, 168], "cumul": [107, 168], "proport": [107, 168], "peopl": [107, 168], "who": [107, 168], "dalgaard": [107, 168], "peter": [107, 168], "introductori": [107, 168], "springer": [107, 168], "verlag": [107, 168], "2002": [107, 168], "glantz": [107, 168], "stanton": [107, 168], "primer": [107, 168], "biostatist": [107, 168], "mcgraw": [107, 168], "fifth": [107, 168], "edit": [107, 168], "lentner": [107, 168], "marvin": [107, 168], "elementari": [107, 168], "bogden": [107, 168], "quiglei": [107, 168], "1972": [107, 168], "weisstein": [107, 168], "eric": [107, 168], "mathworld": [107, 168], "wolfram": [107, 168], "web": [107, 126, 168, 186], "resourc": [107, 168], "binomialdistribut": [107, 168], "wikipedia": [107, 150, 152, 168, 207, 209], "en": [107, 150, 168, 207], "wiki": [107, 150, 168, 207], "binomial_distribut": [107, 168], "coin": [107, 168], "world": [107, 168], "compani": [107, 168], "drill": [107, 168], "wild": [107, 168], "oil": [107, 168], "nine": [107, 168], "000": [107, 168], "20000": [107, 168], "38885": [107, 168], "df": [107, 168], "chi": [107, 133, 150, 168, 191, 207], "hypothesi": [107, 116, 168], "freedom": [107, 116, 140, 168, 198], "inappropri": [107, 168], "sum_": [107, 168], "mathtt": [107, 168], "2_i": [107, 168], "2_k": [107, 168], "infti": [107, 168], "nist": [107, 168], "engin": [107, 168], "handbook": [107, 168], "itl": [107, 168], "gov": [107, 168], "div898": [107, 168], "eda": [107, 168], "section3": [107, 168], "eda3666": [107, 168], "htm": [107, 168], "89920014": [107, 168], "00867716": [107, 168], "13710533": [107, 168], "62318272": [107, 168], "arang": [107, 122, 161, 168, 183, 218], "select": [107, 116, 122, 168, 183], "item": [107, 168], "greater": [107, 168], "through": [107, 167, 168, 223], "sampler": [107, 168], "len": [107, 109, 143, 145, 146, 163, 168, 201, 203, 204, 220], "repeat": [107, 168], "arbitrari": [107, 121, 168, 182], "aa_milne_arr": [107, 168], "pooh": [107, 168], "rabbit": [107, 168], "piglet": [107, 168], "christoph": [107, 152, 168, 209], "dtype": [107, 168], "u11": [107, 168], "multivari": [107, 150, 159, 168, 207, 216], "conjug": [107, 168], "prior": [107, 141, 150, 159, 168, 199, 207, 216], "fulfil": [107, 168], "x_i": [107, 145, 168, 203], "propto": [107, 168], "prod_": [107, 168], "alpha_i": [107, 168], "_i": [107, 168], "concentr": [107, 128, 152, 168, 187, 209], "y_i": [107, 145, 168, 203], "david": [107, 168], "mckai": [107, 168], "chapter": [107, 168], "uk": [107, 168], "mackai": [107, 168], "itila": [107, 168], "dirichlet_distribut": [107, 168], "variat": [107, 121, 128, 159, 168, 182, 187, 216], "barh": [107, 168], "Its": [107, 168], "_": [107, 152, 168, 209], "continu": [107, 109, 142, 156, 167, 168, 200, 213, 223], "analogu": [107, 152, 168, 209], "describ": [107, 128, 168, 187], "situat": [107, 168], "raindrop": [107, 168], "rainstorm": [107, 168], "request": [107, 168], "peyton": [107, 168], "peebl": [107, 168], "jr": [107, 168], "principl": [107, 137, 168, 195], "4th": [107, 128, 168, 187], "ed": [107, 168], "2001": [107, 110, 128, 168, 187], "poisson_process": [107, 168], "exponential_distribut": [107, 168], "dfnum": [107, 168], "dfden": [107, 168], "denomin": [107, 168], "fisher": [107, 152, 168, 209], "aris": [107, 157, 168, 214], "anova": [107, 168], "group": [107, 147, 168, 205], "diabet": [107, 168], "control": [107, 109, 167, 168, 223], "blood": [107, 168], "glucos": [107, 168], "null": [107, 116, 168], "statu": [107, 156, 168, 213], "61988120985": [107, 168], "chanc": [107, 116, 168], "reject": [107, 137, 160, 168, 195, 217], "sometim": [107, 168], "failur": [107, 168], "electron": [107, 168], "gammadistribut": [107, 168], "gamma_distribut": [107, 168], "sqrt": [107, 115, 155, 168, 212], "along": [107, 110, 121, 124, 137, 158, 168, 182, 185, 195, 215], "sp": [107, 168], "ignor": [107, 159, 168, 170, 216], "hist": [107, 131, 168, 189], "experi": [107, 168], "outcom": [107, 168], "achiev": [107, 109, 168], "individu": [107, 168], "ten": [107, 168], "thousand": [107, 168], "10000": [107, 150, 160, 168, 207, 217], "succeed": [107, 168], "34889999999999999": [107, 168], "legaci": [107, 110, 115, 168], "flag": [107, 147, 168, 205], "bitgener": [107, 168], "mt19937": [107, 168], "624": [107, 168], "po": [107, 168], "has_gauss": [107, 168], "cached_gaussian": [107, 168], "uint": [107, 168], "manual": [107, 146, 168, 204], "know": [107, 168], "exactli": [107, 168], "he": [107, 168], "she": [107, 168], "loc": [107, 168], "below": [107, 121, 167, 168, 182, 223], "gumbel_l": [107, 168], "gumbel_r": [107, 168], "genextrem": [107, 168], "smallest": [107, 168], "sev": [107, 168], "gev": [107, 168], "tail": [107, 168], "german": [107, 168], "mathematician": [107, 168], "emil": [107, 168], "juliu": [107, 168], "earli": [107, 168], "hydrologi": [107, 168], "literatur": [107, 168], "occurr": [107, 168], "flood": [107, 168], "wind": [107, 168], "rainfal": [107, 168], "fat": [107, 168], "henc": [107, 168], "surprisingli": [107, 168], "underestim": [107, 116, 168], "frechet": [107, 168], "57721": [107, 168], "pi": [107, 109, 117, 121, 146, 168, 182, 204], "york": [107, 168], "columbia": [107, 168], "univers": [107, 168], "press": [107, 167, 168, 223], "1958": [107, 168], "reiss": [107, 168], "thoma": [107, 168], "insur": [107, 168], "financ": [107, 168], "basel": [107, 168], "birkhaus": [107, 168], "maxima": [107, 120, 121, 124, 168, 181, 182, 185], "append": [107, 137, 168, 195], "ngood": [107, 168], "nbad": [107, 168], "good": [107, 168], "nonneg": [107, 168], "randomli": [107, 109, 116, 159, 168, 216], "hypergeom": [107, 168], "le": [107, 168], "urn": [107, 168], "black": [107, 168], "marbl": [107, 168], "ball": [107, 168], "wherea": [107, 168], "infinit": [107, 168], "hypergeometricdistribut": [107, 168], "hypergeometric_distribut": [107, 168], "nsamp": [107, 168], "unlik": [107, 168], "suppos": [107, 168], "pull": [107, 168], "100000": [107, 155, 160, 168, 212, 217], "003": [107, 168], "sharper": [107, 168], "fatter": [107, 168], "1774": [107, 168], "econom": [107, 168], "health": [107, 168], "scienc": [107, 168], "seem": [107, 165, 168, 222], "abramowitz": [107, 168], "stegun": [107, 168], "mathemat": [107, 168], "formula": [107, 138, 168, 196], "9th": [107, 168], "dover": [107, 168], "kotz": [107, 168], "samuel": [107, 168], "et": [107, 110, 114, 121, 133, 168, 182, 191], "al": [107, 110, 114, 121, 133, 168, 182, 191], "laplacedistribut": [107, 168], "laplace_distribut": [107, 168], "comparison": [107, 168], "median": [107, 109, 128, 137, 160, 168, 187, 195, 217], "act": [107, 168], "epidemiologi": [107, 168], "chess": [107, 168], "feder": [107, 168], "fide": [107, 168], "elo": [107, 168], "player": [107, 168], "logisticdistribut": [107, 168], "logistic_distribut": [107, 168], "def": [107, 147, 155, 167, 168, 205, 212, 223], "lgst_val": [107, 168], "itself": [107, 126, 168, 186], "ln": [107, 168], "limpert": [107, 168], "stahel": [107, 168], "abbt": [107, 168], "clue": [107, 168], "bioscienc": [107, 168], "ethz": [107, 168], "mid": [107, 168], "linspac": [107, 168], "tight": [107, 168], "demonstr": [107, 168], "seri": [107, 109, 160, 162, 168, 217, 219], "logser": [107, 168], "speci": [107, 168], "rich": [107, 168], "propos": [107, 152, 168, 209], "corbet": [107, 168], "william": [107, 168], "1943": [107, 168], "occup": [107, 168], "car": [107, 168], "buza": [107, 168], "martin": [107, 168], "culver": [107, 168], "stephen": [107, 168], "divers": [107, 168], "biodivers": [107, 168], "septemb": [107, 168], "187": [107, 168], "195": [107, 168], "ecologi": [107, 168], "dali": [107, 168], "lunn": [107, 168], "ostrowski": [107, 168], "crc": [107, 168], "1994": [107, 168], "logarithmic_distribut": [107, 168], "pval": [107, 168], "dice": [107, 168], "x_0": [107, 150, 168, 207], "x_1": [107, 168], "x_p": [107, 168], "account": [107, 109, 168], "remain": [107, 109, 121, 168, 182], "word": [107, 166, 168], "land": [107, 168], "again": [107, 168], "threw": [107, 168], "load": [107, 167, 168, 223], "die": [107, 168], "leftov": [107, 168], "twice": [107, 168], "wrong": [107, 168], "traceback": [107, 168], "recent": [107, 168], "check_valid": [107, 168], "tol": [107, 156, 168, 213], "multinorm": [107, 168], "higher": [107, 120, 148, 152, 168, 181, 209], "analog": [107, 167, 168, 223], "semidefinit": [107, 168], "proper": [107, 168], "arrang": [107, 168], "toler": [107, 121, 155, 156, 168, 182, 212, 213], "singular": [107, 115, 125, 168], "bell": [107, 168], "curv": [107, 146, 168, 204], "vari": [107, 133, 168, 191], "togeth": [107, 109, 116, 168], "x_2": [107, 168], "c_": [107, 168], "ij": [107, 168], "x_j": [107, 168], "ii": [107, 125, 129, 132, 168, 190], "spread": [107, 152, 168, 209], "popular": [107, 168], "spheric": [107, 168], "5000": [107, 168], "backward": [107, 109, 121, 139, 150, 153, 168, 182, 197, 207, 210], "guarante": [107, 168], "papouli": [107, 168], "3rd": [107, 168], "1991": [107, 168], "duda": [107, 168], "hart": [107, 168], "stork": [107, 168], "classif": [107, 147, 168, 205], "2nd": [107, 168], "wilei": [107, 168], "800": [107, 168], "bivari": [107, 152, 168, 209], "65465": [107, 168], "pt": [107, 160, 168, 217], "0326911": [107, 168], "01280782": [107, 168], "96202397": [107, 168], "85602287": [107, 168], "47613949": [107, 168], "corrcoef": [107, 168], "6273591314603949": [107, 168], "visual": [107, 122, 163, 168, 183, 220], "cloud": [107, 168], "illustr": [107, 168], "grid": [107, 109, 122, 127, 131, 142, 145, 148, 168, 183, 189, 200, 203], "reach": [107, 168], "pmf": [107, 168], "repeatedli": [107, 168], "until": [107, 168, 170], "negativebinomialdistribut": [107, 168], "negative_binomial_distribut": [107, 168], "nonc": [107, 168], "noncentr": [107, 168], "earlier": [107, 168], "central": [107, 168], "p_": [107, 168], "2i": [107, 168], "noncentral_chi": [107, 168], "squared_distribut": [107, 168], "200": [107, 109, 141, 168, 199], "0000001": [107, 168], "values2": [107, 168], "ob": [107, 168], "noncentralf": [107, 168], "studi": [107, 168], "area": [107, 123, 130, 146, 168, 184, 188, 204], "deg": [107, 168], "nc_val": [107, 168], "1000000": [107, 155, 168, 212], "nf": [107, 168], "c_val": [107, 168], "de": [107, 168], "moivr": [107, 168], "gauss": [107, 168], "characterist": [107, 168], "influenc": [107, 168], "tini": [107, 168], "disturb": [107, 168], "own": [107, 125, 168], "centr": [107, 168], "increas": [107, 109, 110, 168], "607": [107, 168], "impli": [107, 168], "rather": [107, 109, 115, 116, 150, 168, 207], "awai": [107, 168], "normal_distribut": [107, 168], "theorem": [107, 168], "125": [107, 168], "ddof": [107, 168], "four": [107, 159, 168, 216], "49401501": [107, 159, 168, 216], "00950034": [107, 159, 168, 216], "81814867": [107, 159, 168, 216], "29718677": [107, 159, 168, 216], "39924804": [107, 159, 168, 216], "68456316": [107, 159, 168, 216], "99394529": [107, 159, 168, 216], "84057254": [107, 159, 168, 216], "lomax": [107, 168], "classic": [107, 168], "unbound": [107, 168], "genpareto": [107, 168], "am": [107, 168], "italian": [107, 168], "economist": [107, 168], "vilfredo": [107, 168], "bradford": [107, 168], "wealth": [107, 168], "economi": [107, 168], "sourceforg": [107, 168], "franci": [107, 168], "hunt": [107, 168], "paul": [107, 168], "johnson": [107, 168], "1896": [107, 168], "cours": [107, 168], "polit": [107, 168], "lausann": [107, 168], "pareto_distribut": [107, 168], "reshap": [107, 147, 168, 205], "lam": [107, 168], "poissondistribut": [107, 168], "poisson_distribut": [107, 168], "report": [107, 168], "claim": [107, 168], "christian": [107, 168], "kleiber": [107, 168], "actuari": [107, 168], "heckert": [107, 168], "filliben": [107, 168], "jame": [107, 168], "148": [107, 168], "dataplot": [107, 168], "subcommand": [107, 168], "nation": [107, 168], "institut": [107, 168], "technologi": [107, 168], "june": [107, 168], "softwar": [107, 168], "refman2": [107, 168], "auxillar": [107, 168], "powpdf": [107, 168], "normed_i": [107, 168], "diff": [107, 150, 168, 207], "rv": [107, 168], "rvsp": [107, 168], "powerlaw": [107, 168], "d0": [107, 159, 168, 216], "d1": [107, 159, 168, 216], "dn": [107, 159, 168, 216], "ones": [107, 109, 145, 146, 159, 161, 167, 168, 203, 204, 216, 218, 223], "14022471": [107, 168], "96360618": [107, 168], "37601032": [107, 168], "25528411": [107, 168], "49313049": [107, 168], "94909878": [107, 168], "inclus": [107, 168], "exclus": [107, 168], "highest": [107, 168], "desir": [107, 109, 168], "byteord": [107, 168], "nativ": [107, 168], "appropri": [107, 121, 137, 168, 182, 195], "omit": [107, 124, 168, 185], "int_lik": [107, 159, 168, 216], "suppli": [107, 159, 168, 216], "1923875335537315": [107, 159, 168, 216], "int_": [107, 168], "platform": [107, 168, 170], "deprec": [107, 147, 168, 205], "choos": [107, 168], "five": [107, 168], "625": [107, 168], "roll": [107, 168], "six": [107, 168], "d2": [107, 168], "dsum": [107, 168], "unif": [107, 168], "47108547995356098": [107, 168], "30220482": [107, 168], "86820401": [107, 168], "1654503": [107, 168], "11659149": [107, 168], "54323428": [107, 168], "three": [107, 152, 168, 209], "99149989": [107, 168], "52338984": [107, 168], "99091858": [107, 168], "79479508": [107, 168], "23204345": [107, 168], "75224494": [107, 168], "cdotp": [107, 168], "east": [107, 168], "north": [107, 168], "veloc": [107, 109, 128, 168, 187], "brighton": [107, 168], "ltd": [107, 168], "20090514091424": [107, 168], "co": [107, 123, 146, 161, 167, 168, 184, 204, 218, 223], "asp": [107, 168], "rayleigh_distribut": [107, 168], "tend": [107, 109, 168], "meter": [107, 168], "meanvalu": [107, 168], "modevalu": [107, 168], "percentag": [107, 168], "087300000000000003": [107, 168], "rese": [107, 168], "best": [107, 148, 156, 168, 213], "recreat": [107, 168], "randomst": [107, 168], "seedsequ": [107, 168], "123456789": [107, 168], "stream": [107, 168], "987654321": [107, 168], "mersenn": [107, 168], "twister": [107, 168], "although": [107, 156, 168, 213], "matsumoto": [107, 168], "nishimura": [107, 168], "623": [107, 168], "equidistribut": [107, 168], "pseudorandom": [107, 168], "acm": [107, 168], "jan": [107, 168], "1998": [107, 168], "place": [107, 109, 168], "mutablesequ": [107, 168], "cauchi": [107, 168], "lorentz": [107, 168], "bigl": [107, 168], "bigr": [107, 168], "harmon": [107, 168], "oscil": [107, 128, 133, 168, 187, 191], "spectral": [107, 110, 130, 141, 168, 188, 199], "broaden": [107, 168], "tilt": [107, 168], "heavi": [107, 168], "look": [107, 121, 124, 168, 182, 185], "heavier": [107, 168], "sematech": [107, 168], "eda3663": [107, 168], "cauchydistribut": [107, 168], "cauchy_distribut": [107, 168], "3x8000": [107, 168], "8000": [107, 168], "stdev": [107, 168], "6888893": [107, 168], "78096262": [107, 168], "89086505": [107, 168], "49876311": [107, 168], "38672696": [107, 168], "4685006": [107, 168], "student": [107, 168], "hyperbol": [107, 168], "come": [107, 144, 168, 202], "1908": [107, 168], "gosset": [107, 168], "guin": [107, 168], "breweri": [107, 168], "dublin": [107, 168], "proprietari": [107, 168], "issu": [107, 122, 168, 183], "pseudonym": [107, 168], "With": [107, 168], "s_t": [107, 168], "daili": [107, 168], "intak": [107, 168], "women": [107, 168], "kilojoul": [107, 168], "kj": [107, 168], "5260": [107, 168], "5470": [107, 168], "5640": [107, 168], "6180": [107, 168], "6390": [107, 168], "6515": [107, 168], "6805": [107, 168], "7515": [107, 168], "8230": [107, 168], "8770": [107, 168], "systemat": [107, 168], "7725": [107, 168], "our": [107, 116, 168], "absenc": [107, 168], "presenc": [107, 116, 121, 168, 182], "empir": [107, 168], "unbias": [107, 110, 140, 168, 198], "final": [107, 116, 142, 161, 168, 200, 218], "concav": [107, 168], "6753": [107, 168], "636363636364": [107, 168], "1142": [107, 168], "1232221373727": [107, 168], "8207540608310198": [107, 168], "adequ": [107, 168], "critic": [107, 121, 124, 168, 182, 185], "018318": [107, 168], "condition": [107, 168], "begin": [107, 109, 163, 168, 220], "leq": [107, 168], "ill": [107, 168], "knowledg": [107, 168], "triangular_distribut": [107, 168], "uniformli": [107, 168], "anywher": [107, 168], "offici": [107, 168], "eventu": [107, 168], "satisfi": [107, 168], "inequ": [107, 168], "99999999": [107, 168], "ones_lik": [107, 168], "kappa": [107, 152, 168, 209], "von": [107, 152, 168, 209], "mise": [107, 152, 168, 209], "dispers": [107, 128, 168, 187], "circl": [107, 168], "thought": [107, 168], "i_0": [107, 168], "bessel": [107, 152, 168, 209], "richard": [107, 168], "edler": [107, 168], "born": [107, 168], "austria": [107, 168], "hungari": [107, 168], "ukrain": [107, 168], "fled": [107, 168], "1939": [107, 168], "becam": [107, 168], "professor": [107, 168], "harvard": [107, 168], "aerodynam": [107, 168], "fluid": [107, 168], "mechan": [107, 168], "philosophi": [107, 168], "academ": [107, 168], "1964": [107, 168], "i0": [107, 168], "infin": [107, 168], "relationship": [107, 168], "brownian": [107, 168], "motion": [107, 109, 168], "1956": [107, 168], "tweedi": [107, 168], "cover": [107, 168], "2x": [107, 168], "competitor": [107, 168], "reliabl": [107, 121, 128, 168, 182, 187], "stock": [107, 168], "interest": [107, 168], "20090423014010": [107, 168], "chhikara": [107, 168], "raj": [107, 168], "folk": [107, 168], "leroi": [107, 168], "methodologi": [107, 168], "applic": [107, 168], "1988": [107, 168], "inverse_gaussian_distribut": [107, 168], "weibull_max": [107, 168], "weibull_min": [107, 168], "iii": [107, 168], "asymptot": [107, 161, 168, 218], "rosin": [107, 168], "rammler": [107, 168], "reduc": [107, 109, 121, 168, 182], "waloddi": [107, 168], "royal": [107, 160, 168, 217], "technic": [107, 168], "stockholm": [107, 168], "Of": [107, 168], "strength": [107, 168], "materi": [107, 168], "ingeniorsvetenskapsakademien": [107, 168], "handlingar": [107, 168], "nr": [107, 168], "151": [107, 168], "generalstaben": [107, 168], "litografiska": [107, 168], "anstalt": [107, 168], "forlag": [107, 168], "asm": [107, 168], "paper": [107, 168], "1951": [107, 168], "weibull_distribut": [107, 168], "weib": [107, 168], "zeta": [107, 152, 168, 209], "geq": [107, 168], "riemann": [107, 168], "american": [107, 168], "linguist": [107, 168], "georg": [107, 168], "kingslei": [107, 168], "languag": [107, 168], "cambridg": [107, 168], "ma": [107, 168], "univ": [107, 168], "1932": [107, 168], "bincount": [107, 168], "semilogi": [107, 168], "cheap": 109, "mock": 109, "discontinu": 109, "dimensionari": 109, "gemoetr": 109, "fa": [109, 110, 113, 114, 128, 187], "cutoff": [109, 118, 121, 122, 124, 182, 183, 185], "fb": [109, 110, 113, 114, 128, 141, 187, 199], "guassian": 109, "nbasi": 109, "tile": 109, "minima": [109, 121, 124, 182, 185], "amplitud": [109, 121, 124, 128, 133, 161, 182, 185, 187, 191, 218], "envelop": [109, 121, 182], "hilbert": 109, "narrow": 109, "band": [109, 110, 112, 114, 170], "watch": 109, "snippit": [109, 116, 133, 191], "surrond": 109, "typic": [109, 128, 145, 187, 203], "summari": [109, 115, 116, 121, 137, 140, 148, 182, 195, 198], "dimensionan": 109, "erro": 109, "handi": 109, "middl": [109, 126, 128, 186, 187], "mirrord": 109, "condtit": 109, "filter": [109, 110, 114, 118, 122, 133, 141, 150, 163, 183, 191, 199, 207, 220], "zerophas": 109, "bandstop": 109, "ring": 109, "fiter": 109, "unrealist": 109, "compens": [109, 133, 191], "underflow": [109, 146, 204], "freq": [109, 110, 113, 116], "lowpass": 109, "highpass": 109, "butterworth": 109, "IF": 109, "smoothat": 109, "padmod": 109, "filtr": 109, "trim": [109, 121, 127, 182], "slide": [109, 110, 128, 187], "pct": 109, "percentil": [109, 137, 195], "wraparound": [109, 133, 191], "ambigu": 109, "halfwai": 109, "instantan": 109, "od": 109, "decreas": 109, "wari": 109, "nois": [109, 112, 121, 128, 182, 187], "contract": 109, "pad_edg": 109, "treatch": 109, "treat": [109, 139, 197], "2xn": [109, 111], "period": [109, 133, 191], "outsiz": 109, "gap": 109, "streach": 109, "durat": [109, 135, 136, 163, 193, 194, 220], "advanc": 109, "portion": 109, "statfunct": 109, "sample_match": 109, "similarli": [109, 137, 195], "buit": 109, "ins": 109, "opposit": [109, 116], "nyquist": [109, 116], "address": [109, 156, 213], "bandwidth": [109, 110, 115], "artifact": 109, "240": 109, "correct": [109, 110, 140, 142, 160, 198, 200, 217], "singnal": 109, "timeseri": 109, "quadrat": 109, "particularli": 109, "higkinemat": 109, "trajectori": [109, 150, 207], "track": [109, 133, 159, 191, 216], "sharp": 109, "spectrum": [109, 110, 114, 115], "cc": [109, 137, 195], "replc": 109, "oth": 109, "stastist": 109, "ignore_nan": 109, "trend": 109, "preven": 109, "instabl": 109, "refular": 109, "subtract": [109, 137, 195], "analytic_sign": 109, "doplot": [109, 140, 198], "analyt": [109, 121, 124, 128, 182, 185, 187], "rectifi": 109, "heuriddddst": 109, "basd": 109, "abnorm": 109, "extremum": 109, "voltag": 109, "curvatur": 109, "demodul": 109, "lag": [109, 135, 141, 193, 199], "fft": [109, 110], "matter": 109, "whichev": 109, "acf": 109, "mirror": [109, 122, 183], "restor": 109, "partial_t": 109, "syst": 109, "nlag": 109, "lagspac": 109, "retrospect": 109, "causal": 109, "featur": [109, 136, 137, 138, 146, 163, 194, 195, 196, 204, 220], "interp1d": [109, 142, 200], "autocorrelogram": 109, "triggerd": 109, "revers": 109, "dspguru": 109, "dsp": 109, "howto": 109, "gloabal": 109, "smoothli": [109, 122, 183], "lfp": [110, 112, 114, 116, 141, 199], "nchannel": [110, 114, 121, 124, 128, 163, 182, 185, 187, 220], "essenti": [110, 114, 145, 203], "bandpass": [110, 114], "bank": [110, 114], "timescal": [110, 114], "kuromoto": [110, 114, 133, 191], "attain": [110, 114], "z_i": [110, 114], "z_j": [110, 114], "involv": 110, "ramirez": [110, 114], "OF": [110, 114], "THE": [110, 114], "FOR": [110, 114], "AND": [110, 114], "nch": [110, 113, 114], "ntaper": [110, 115, 116], "taper": [110, 115, 116], "ft": [110, 141, 199], "bw": [110, 115], "strang": 110, "preserv": 110, "jarvi": 110, "mitra": 110, "comp": 110, "p732": 110, "pesaran": 110, "2008": 110, "supp": 110, "p5": 110, "suggest": [110, 147, 205], "citep": 110, "jarvis2001sampl": 110, "pesaran2008fre": 110, "nt": 110, "nvariabl": 110, "ntrial": [110, 141, 153, 160, 162, 199, 210, 217, 219], "bootstrap": [110, 160, 217], "resampl": [110, 125], "bia": [110, 140, 150, 198, 207], "occassion": 110, "\u00b2": [110, 131, 189], "hxw": 111, "hxwxn": 111, "2hx2w": 111, "2hx2wxn": 111, "2h": 111, "2x2w": 111, "k2": 111, "record": 112, "1000hz": 112, "60hz": 112, "doesn": [112, 156, 165, 213, 222], "overton": 112, "post": [113, 136, 158, 194, 215], "magnitu": 113, "nfreq": [113, 114], "wavelt": 113, "half_bandwidth_paramet": 115, "dpss": 115, "advantag": 115, "expens": 115, "NOT": [115, 159, 216], "lowf": [115, 130, 188], "highf": [115, 130, 188], "use_parallel": 115, "npp": 116, "raw": 116, "sure": 116, "transpose_warn": 116, "nspike": 116, "nwindow": 116, "trace": 116, "heurist": [116, 133, 191], "surround": 116, "certain": [116, 121, 182], "expos": 116, "examin": [116, 128, 170, 187], "lfp_segment": 116, "nrand": 116, "algebra": 116, "dramaticalyl": 116, "explicit": 116, "clariti": 116, "nrandom": 116, "trian": 116, "actual": [116, 133, 191], "cycl": [117, 121, 128, 182, 187], "fc": 118, "polynomi": 118, "savitski": 118, "golai": 118, "2m": [118, 133, 191], "rxr": [120, 181], "nd": [121, 128, 147, 182, 187, 205], "kuramoto": [121, 128, 182, 187], "kuramotor": [121, 128, 182, 187], "syncroni": [121, 182], "diment": [121, 133, 182, 191], "exept": [121, 182], "arra": [121, 182], "electrode_spac": [121, 182], "mm": [121, 122, 130, 182, 183, 188], "4mm": [121, 182], "utah": [121, 182], "nclockwis": [121, 182], "clockwis": [121, 124, 182, 185], "nanticlockwis": [121, 182], "anticlockwis": [121, 124, 182, 185], "nsaddl": [121, 182], "saddl": [121, 124, 182, 185], "nmaxima": [121, 182], "nminima": [121, 182], "wavelength": [121, 133, 182, 191], "magnitur": [121, 182], "assess": [121, 182], "directionl": [121, 182], "contribut": [121, 133, 182, 191], "direction": [121, 182], "pgd": [121, 133, 182, 191], "planar": [121, 133, 182, 191], "denois": [121, 182], "conserv": [121, 182], "accuraci": [121, 146, 182, 204], "mitig": [121, 182], "impact": [121, 182], "rubinto": [121, 182], "2009": [121, 182], "pg": [121, 182], "timepoint": [121, 128, 182, 187], "easier": [121, 128, 182, 187], "discard": [121, 122, 182, 183], "nonlinearli": [121, 182], "empti": [121, 127, 182], "crop": [121, 182], "lxkxntime": [121, 182], "3d": [121, 133, 152, 182, 191, 209], "h_w": [122, 183], "aa": [122, 183], "anti": [122, 183], "antialias": [122, 183], "supsampl": [122, 183], "retrun": [122, 183], "supersed": [122, 183], "intead": [122, 183], "a_i": [122, 183], "b_k": [122, 183], "1j": [122, 127, 152, 183, 209], "guess": [122, 133, 146, 150, 156, 183, 191, 204, 207, 213], "brute": [122, 183], "dctcut": [122, 130, 183, 188], "compact": [122, 183], "downsampl": [122, 135, 183, 193], "made": [122, 183], "insert": [122, 183], "custom": [122, 183], "impliment": [122, 183], "frist": [122, 183], "aribtrari": [122, 183], "niter": [122, 183], "session": [123, 130, 184, 188], "ch1": [123, 184], "ch2": [123, 184], "phi": [123, 133, 184, 191], "cgid": [123, 184], "dz": [124, 185], "zorder": [124, 185], "wheel": [124, 185], "flow": [124, 185], "anf": [124, 185], "compass": [124, 185], "needl": [124, 185], "shown": [124, 185], "complex1": [124, 185], "s1": [124, 128, 185, 187], "s2": [124, 128, 185, 187], "merg": [124, 132, 167, 185, 190, 223], "nearbi": [124, 132, 159, 185, 190, 216], "pk": [124, 185], "neighbord": [124, 185], "docoalesc": [124, 185], "edgeavoid": [124, 185], "antclockwis": [124, 185], "ss": [124, 185], "plotsaddl": [124, 185], "unknown": [124, 170, 185], "defualt": [124, 140, 185, 198], "sadd": [124, 185], "curl": [124, 185], "wt": [124, 185], "smt": [124, 185], "smf": [124, 185], "px": [125, 150, 207], "py": 125, "noop": 125, "intersect": 125, "contour": [125, 140, 152, 198, 209], "coodin": 125, "centroid": [125, 132, 190], "accomplish": 125, "convex": 125, "irregular": 125, "convexhul": 125, "ntheta": 125, "hull": 125, "col": 125, "degress": 125, "li": 125, "credit": 125, "52405173": 125, "mesh": [126, 132, 186, 190], "absorb": [126, 186], "bounari": [126, 186], "continuum": [126, 186], "magic": [126, 186], "piecewis": [126, 186], "johncostella": [126, 186], "conceptu": [126, 186], "repeatli": [126, 186], "help": [126, 186], "maintain": [126, 186], "oppos": [126, 133, 186, 191], "distinct": 127, "extend": [127, 167, 223], "accordingli": 127, "nrow": 127, "irow": 127, "icol": 127, "nanvalu": 127, "anoth": [127, 137, 153, 195, 210], "fill_nan": 127, "pop": [128, 187], "unitless": [128, 187], "analag": [128, 187], "tr": [128, 187], "spk120918": [128, 187], "get_all_analytic_pop": [128, 187], "600": [128, 187], "han": [128, 187], "population_signal_coher": [128, 187], "textrm": [128, 152, 187, 209], "langl": [128, 187], "rangl": [128, 187], "notion": [128, 187], "medv": [128, 187], "intoform": 129, "poini": 129, "otherpoint": 129, "witin": 129, "npoint": [129, 131, 189], "imatch": 129, "xymatch": 129, "closestmatch": 129, "z1": 129, "z2": 129, "hxwx": [130, 188], "uv": [130, 188], "221": [130, 188], "dctcutaa": [130, 188], "222": [130, 188], "223": [130, 188], "getmaskaa": [130, 188], "224": [130, 188], "getmask": [130, 188], "xypoint": [131, 189], "ntriangl": [132, 190], "indec": [132, 190], "delaunai": [132, 190], "simplic": [132, 190], "nedg": [132, 190], "iz": [132, 190], "microd": [132, 190], "edgelist": [132, 190], "join": [132, 166, 190], "keword": [132, 190], "zano": [133, 191], "2015": [133, 191], "thy": [133, 191], "20m": [133, 191], "lsqcurvefit": [133, 191], "leastsq": [133, 191], "sin": [133, 191], "kx": [133, 191], "ky": [133, 191], "explicitli": [133, 146, 191, 204], "neuraldata": [133, 191], "suitabl": [133, 191], "nelectrod": [133, 191], "timew": [133, 191], "stand": [133, 135, 191, 193], "ampltiude2": [133, 191], "frequency2": [133, 191], "param": [133, 137, 150, 156, 160, 191, 195, 207, 213, 217], "presum": [133, 157, 165, 191, 214, 222], "residu": [133, 191], "spiral": [133, 191], "pinwheel": [133, 191], "t1": [135, 193], "t2": [135, 193], "maxlag": [135, 193], "sampleat": [135, 193], "adapt": [135, 193], "xc": [135, 141, 193, 199], "raster": [135, 193], "binsiz": [135, 193], "snip": [136, 194], "wf": [136, 194], "vallei": [136, 194], "trough": [136, 194], "extrema": [136, 194], "123": [136, 194], "thin": [136, 194], "amplituc": [136, 194], "300": [136, 160, 194, 217], "isol": [136, 194], "20160802_waveform_segment": [136, 194], "0349055393": [136, 194], "i_f": [136, 194], "did": [136, 194], "logpdf": [137, 139, 147, 195, 197, 205], "fwd": [137, 150, 195, 207], "bwd": [137, 150, 195, 207], "mvpoissonapproxim": [137, 150, 195, 207], "nfold": [137, 195], "crossvalid": [137, 146, 195, 204], "ntimepoint": [137, 195], "ndatapoint": [137, 195], "xh": [137, 195], "l1": [137, 161, 195, 218], "vali": [137, 195], "hx": [137, 195], "err": [137, 195], "errmethod": [137, 195], "fold": [137, 146, 195, 204], "lstsq": [137, 195], "penalti": [137, 146, 161, 163, 195, 204, 218, 220], "constand": [137, 195], "extra": [137, 156, 195, 213], "bhat": [137, 150, 195, 207], "traina": [137, 195], "trainb": [137, 195], "testa": [137, 195], "testb": [137, 195], "blocksiz": [137, 195], "blockshuffl": [137, 195], "integet": [137, 195], "ndarari": [137, 150, 195, 207], "halv": [137, 195], "kept": [137, 195], "n_keep": [137, 195], "rank_defici": [137, 195], "princip": [137, 195], "nyfeatur": [137, 195], "covariac": [137, 195], "abbrevi": [137, 195], "colum": [138, 196], "nob": [138, 196], "regressor": [138, 196], "intercept": [138, 196], "logp": [139, 150, 197, 207], "yet": [139, 197], "abstract": [139, 150, 153, 197, 207, 210], "minor": [140, 152, 198, 209], "dof": [140, 198], "squared_averag": [140, 198], "nreplica": [141, 199], "nneuron": [141, 199], "fftspike": [141, 199], "shrinkag": [141, 199], "prior_var": [141, 199], "x_grid": [142, 200], "input_unit": [142, 200], "intens": [142, 200], "divis": [142, 200], "ngrid": [142, 200], "histogram2d": [142, 200], "standar": [143, 201], "pobabl": [143, 150, 201, 207], "pick": [143, 150, 201, 207], "accord": [143, 150, 201, 207], "nat": [144, 202], "shannon": [144, 202], "minp": [144, 202], "mayb": [144, 202], "extrapol": [144, 202], "gridsiz": [145, 203], "400": [145, 203], "kde": [145, 158, 203, 215], "gaussian_kd": [145, 203], "1e7": [145, 203], "coord": [145, 203], "nx": [145, 203], "ny": [145, 203], "xmin": [145, 203], "xmax": [145, 203], "ymin": [145, 203], "ymax": [145, 203], "weigh": [145, 203], "w_i": [145, 203], "sampled_dens": [145, 203], "hessian": [146, 156, 163, 204, 213, 220], "jacobian": [146, 156, 163, 204, 213, 220], "overflow": [146, 150, 204, 207], "penal": [146, 163, 204, 220], "solver": [146, 156, 204, 213], "n_observ": [146, 204], "n_featur": [146, 204], "l2penalti": [146, 163, 204, 220], "mu0": [146, 150, 157, 204, 207, 214], "b0": [146, 204], "descent": [146, 163, 204, 220], "nxval": [146, 204], "roc": [146, 204], "mu_hat": [146, 163, 204, 220], "b_hat": [146, 163, 204, 220], "tfrac": [146, 204], "xin": [146, 204], "1920929e": [146, 204], "07": [146, 204], "jac": [146, 156, 204, 213], "nclass": [147, 205], "sklearn": [147, 205], "fit_sampl": [147, 205], "gmix": [147, 205], "gaussianmixtur": [147, 205], "em": [147, 150, 205, 207], "sloppier": [147, 205], "pr": [147, 150, 205, 207], "2pi": [147, 205], "det": [147, 205], "logpr": [147, 205], "2log": [147, 205], "monoton": [147, 205], "smallf": [147, 205], "argmin": [147, 205], "aresmal": [147, 205], "edgelen": [147, 205], "belon": [147, 205], "belong": [147, 152, 157, 205, 209, 214], "pargrid": 148, "hyperparamet": 148, "par": 148, "allresult": 148, "tstop": [149, 206], "consolid": [149, 206], "rescalin": [149, 206], "transit": [150, 159, 207, 216], "loga": [150, 207], "logb": [150, 207], "p1": [150, 159, 207, 216], "p01": [150, 207], "p10": [150, 207], "mu1": [150, 157, 207, 214], "markov": [150, 207], "maxim": [150, 207], "latent": [150, 207], "asymmetr": [150, 207], "viterbi_algorithm": [150, 207], "nstate": [150, 207], "emiss": [150, 207], "probabilti": [150, 207], "maxit": [150, 155, 207, 212], "overal": [150, 207], "baum": [150, 207], "welch": [150, 207], "algoirthm": [150, 207], "n_timepoint": [150, 207], "n_hidden_st": [150, 207], "n_observable_st": [150, 207], "posterior": [150, 159, 207, 216], "n_state": [150, 207], "x0": [150, 153, 162, 207, 210, 219], "n_hid": [150, 207], "converg": [150, 155, 156, 207, 212, 213], "0001": [150, 207], "minit": [150, 207], "x0hat": [150, 207], "llikelihood": [150, 207], "tranisit": [150, 207], "diffus": [150, 207], "quadratur": [150, 207], "\u03bb": [150, 207], "cox": [150, 207], "a\u00b2x\u00b2": [150, 207], "2abx": [150, 207], "b\u00b2": [150, 207], "tm": [150, 207], "evolv": [150, 207], "kl": [151, 159, 208, 216], "diverg": [151, 159, 208, 216], "dkl": [151, 208], "reproduc": [152, 209], "circa": [152, 209], "2012": [152, 209], "bingham": [152, 209], "kent": [152, 209], "ronald": [152, 209], "john": [152, 209], "sphere": [152, 209], "bbb": [152, 209], "unconstrain": [152, 209], "1982": [152, 209], "geologi": [152, 209], "bioinformat": [152, 209], "mathbf": [152, 209], "istribut": [152, 209], "kappaboldsymbol": [152, 209], "cdotmathbf": [152, 209], "boldsymbol": [152, 209], "2pisum_": [152, 209], "inftyfrac": [152, 209], "2j": [152, 209], "kapparight": [152, 209], "_v": [152, 209], "4pi": [152, 209], "4pikappa": [152, 209], "sinh": [152, 209], "0leq2beta": [152, 209], "ellipt": [152, 209], "gamma_": [152, 209], "reimann": [152, 209], "g123": [152, 209], "kbg": [152, 209], "reffer": [152, 209], "ou": [153, 210], "damp": [153, 161, 162, 210, 218, 219], "varg": [153, 210], "true_stat": [153, 210], "do_plot": [153, 210], "mont": [155, 212], "carlo": [155, 212], "simplicit": [155, 212], "slowli": [155, 212], "ex": [155, 212], "ask": [155, 165, 212, 222], "exx": [155, 212], "runtimeerror": [156, 213], "hess": [156, 213], "printerror": [156, 213], "failthrough": [156, 213], "simplex_onli": [156, 213], "dontus": [156, 213], "maxfev": [156, 213], "maxgev": [156, 213], "retri": [156, 213], "few": [156, 213], "unresolv": [156, 213], "upon": [156, 213], "robus": [156, 213], "ultim": [156, 213], "nelder": [156, 213], "mead": [156, 213], "simplex": [156, 213], "provided": [156, 213], "simple_onli": [156, 213], "dure": [156, 213], "written": [157, 214], "toi": [157, 167, 214, 223], "mistur": [157, 214], "pr0": [157, 214], "obsrev": [157, 214], "pr1": [157, 214], "burst": [158, 215], "refractori": [158, 215], "mainli": [158, 215], "isi": [158, 215], "st": [158, 215], "kxn": [159, 216], "OR": [159, 216], "pinv": [159, 216], "nxk": [159, 216], "p2": [159, 216], "handle_neg": [159, 216], "unitari": [159, 216], "m0": [159, 216], "p0": [159, 216], "mgv_dkl": [159, 216], "c0": [159, 216], "kalman": [159, 216], "inva": [159, 216], "aca": [159, 216], "inv": [159, 216], "wilson": [160, 217], "pid": [160, 217], "pn": [160, 217], "fdr": [160, 217], "discoveri": [160, 217], "nonparametr": [160, 217], "benjamini": [160, 217], "hochberg": [160, 217], "societi": [160, 217], "methodolog": [160, 217], "1995": [160, 217], "289": [160, 217], "_____________________________________________________________________________": [160, 217], "tom": [160, 217], "nichol": [160, 217], "02": [160, 217], "2007": [160, 217], "cvid": [160, 217], "cvn": [160, 217], "pvalue_dictionari": [160, 217], "test_popul": [160, 217], "null_popul": [160, 217], "resturn": [160, 217], "population_a": [160, 217], "population_b": [160, 217], "na": [160, 217], "nb": [160, 217], "constrain": [161, 218], "lamb": [161, 218], "dc": [161, 218], "mx": [161, 218], "orthonom": [163, 220], "sr": [163, 220], "sc": [163, 220], "ch_map": [163, 220], "stim": [163, 220], "hlen": [163, 220], "hn": [163, 220], "hmin": [163, 220], "ncomp": [163, 220], "stimuli": [163, 220], "minum": [163, 220], "tempor": [163, 220], "narrowest": [163, 220], "latenc": [163, 220], "nh": [163, 220], "decompress": [163, 220], "stimulu": [163, 220], "nspace": [163, 220], "nhist": [163, 220], "hframe": [163, 220], "bin_duration_m": [163, 220], "class_bal": [163, 220], "subsampl": [163, 220], "filepath": [165, 222], "436198": [165, 222], "ye": [165, 222], "raw_input": [165, 222], "3041986": [165, 222], "apt": [165, 222], "hit": [165, 222], "enter": [165, 167, 222, 223], "tabwidth": 166, "suffix": 166, "newlin": 166, "columnd": 166, "weird": 166, "varnam": [167, 223], "kw": [167, 223], "prompt": [167, 223], "matlabpath": [167, 223], "concept": [167, 223], "dector": [167, 223], "emit": [167, 223], "infix": [167, 223], "foo": [167, 223], "pip": [167, 223], "krg": [167, 223], "matfil": [167, 223], "matfilecach": [167, 223], "ext": [167, 223], "png": [167, 223], "dirnam": [167, 223], "944536": [167, 223], "member": [167, 223], "449560": [167, 223], "1175208": [167, 223], "eleg": [167, 223], "camelcas": [167, 223], "camel": [167, 223], "4303492": [167, 223], "underscor": [167, 223], "yymmdd": [167, 223], "d_": [167, 223], "doprint": [167, 223], "5849800": [167, 223], "elaps": [167, 223], "timestamp": [167, 223], "signalnum": 170, "handler": [170, 180], "action": [170, 180], "sig_dfl": [170, 180], "sig_ign": [170, 180], "getsign": [170, 180], "notic": [170, 180], "interrupt": [170, 180], "stack": [170, 180], "pthread_sigmask": 170, "fetch": 170, "sigpend": 170, "pend": 170, "deliveri": 170, "sigwait": 170, "sigset": 170, "suspend": 170, "valid_sign": 170, "intenum": 170, "itimererror": 170, "itimer_error": 170, "sigmask": 170, "sig_block": 170, "sig_unblock": 170, "sig_setmask": 170, "sighup": 170, "sigint": 170, "sigquit": 170, "sigil": 170, "sigtrap": 170, "sigabrt": 170, "sigiot": 170, "sigbu": 170, "sigfp": 170, "sigkil": 170, "sigusr1": 170, "sigsegv": 170, "sigusr2": 170, "sigpip": 170, "sigalrm": 170, "sigterm": 170, "sigchld": 170, "sigcld": 170, "sigcont": 170, "sigstop": 170, "sigtstp": 170, "sigttin": 170, "sigttou": 170, "sigurg": 170, "sigxcpu": 170, "sigxfsz": 170, "sigvtalrm": 170, "sigprof": 170, "sigwinch": 170, "sigio": 170, "sigpol": 170, "sigpwr": 170, "sigsi": 170, "sigrtmin": 170, "sigrtmax": 170, "struct_siginfo": 170, "sigwaitinfo": 170, "sigtimedwait": 170, "si_signo": 170, "si_cod": 170, "si_errno": 170, "si_pid": 170, "si_uid": 170, "si_statu": 170, "si_band": 170, "n_field": 170, "n_sequence_field": 170, "n_unnamed_field": 170, "errno": 170, "exit": 170}, "objects": {"": [[1, 0, 0, "-", "functions"], [2, 0, 0, "-", "getfftw"], [3, 0, 0, "-", "gpu"], [21, 0, 0, "-", "graphics"], [28, 0, 0, "-", "jobs"], [35, 0, 0, "-", "linalg"], [39, 0, 0, "-", "models"], [50, 0, 0, "-", "neurotools"], [168, 0, 0, "-", "nlab"], [170, 0, 0, "-", "signal"], [181, 0, 0, "-", "spatial"], [192, 0, 0, "-", "spikes"], [195, 0, 0, "-", "stats"], [222, 0, 0, "-", "system"], [223, 0, 0, "-", "tools"]], "functions": [[1, 1, 1, "", "dsigmoid"], [1, 1, 1, "", "f"], [1, 1, 1, "", "f1"], [1, 1, 1, "", "f2"], [1, 1, 1, "", "g"], [1, 1, 1, "", "inversesigmoid"], [1, 1, 1, "", "log_factorial"], [1, 1, 1, "", "npdf"], [1, 1, 1, "", "sexp"], [1, 1, 1, "", "sigmoid"], [1, 1, 1, "", "slog"]], "getfftw": [[2, 1, 1, "", "ftwthr"]], "gpu": [[4, 0, 0, "-", "cl"], [8, 0, 0, "-", "cpu"], [10, 0, 0, "-", "cu"]], "gpu.cl": [[5, 0, 0, "-", "device"], [6, 0, 0, "-", "function"], [4, 1, 1, "", "missing"]], "gpu.cl.device": [[5, 1, 1, "", "zeros_float"]], "gpu.cl.function": [[6, 1, 1, "", "elemental"], [6, 1, 1, "", "format"], [6, 1, 1, "", "gpumap"], [6, 1, 1, "", "guessGPUType"], [6, 1, 1, "", "insert_global"], [6, 1, 1, "", "kernel"], [6, 1, 1, "", "printKernel"], [6, 1, 1, "", "toGPUType"]], "gpu.cpu": [[9, 0, 0, "-", "util"]], "gpu.cpu.util": [[9, 1, 1, "", "cmap"], [9, 1, 1, "", "compose"], [9, 1, 1, "", "corr"], [9, 1, 1, "", "cov"], [9, 1, 1, "", "cut"], [9, 1, 1, "", "document"], [9, 1, 1, "", "dot"], [9, 1, 1, "", "elem"], [9, 1, 1, "", "fancy"], [9, 1, 1, "", "flat"], [9, 1, 1, "", "idivup"], [9, 1, 1, "", "ldif"], [9, 1, 1, "", "ldif2"], [9, 1, 1, "", "ldiv"], [9, 1, 1, "", "ldiv2"], [9, 1, 1, "", "length"], [9, 1, 1, "", "lmul"], [9, 1, 1, "", "lmul2"], [9, 1, 1, "", "lpow"], [9, 1, 1, "", "lpow2"], [9, 1, 1, "", "lsum"], [9, 1, 1, "", "lsum2"], [9, 1, 1, "", "mdif"], [9, 1, 1, "", "mdiv"], [9, 1, 1, "", "mean"], [9, 1, 1, "", "mmap"], [9, 1, 1, "", "mmean"], [9, 1, 1, "", "mmul"], [9, 1, 1, "", "mpow"], [9, 1, 1, "", "mstd"], [9, 1, 1, "", "msum"], [9, 1, 1, "", "mu"], [9, 1, 1, "", "mvar"], [9, 1, 1, "", "norm"], [9, 1, 1, "", "rnorm"], [9, 1, 1, "", "scale"], [9, 1, 1, "", "sem"], [9, 1, 1, "", "shift"], [9, 1, 1, "", "sigma"], [9, 1, 1, "", "sstd"], [9, 1, 1, "", "std"], [9, 1, 1, "", "svar"], [9, 1, 1, "", "var"]], "gpu.cu": [[11, 0, 0, "-", "convolution"], [12, 0, 0, "-", "device"], [13, 0, 0, "-", "function"], [14, 0, 0, "-", "gpufun"], [15, 0, 0, "-", "graph"], [16, 0, 0, "-", "logic"], [18, 0, 0, "-", "plot"], [19, 0, 0, "-", "sequence"], [20, 0, 0, "-", "statistics"]], "gpu.cu.convolution": [[11, 1, 1, "", "gpuboxconv"], [11, 1, 1, "", "gpuboxconv_core"]], "gpu.cu.device": [[12, 1, 1, "", "card_info"], [12, 1, 1, "", "estimateBlocks"], [12, 1, 1, "", "estimateLoop"], [12, 1, 1, "", "estimateThreadsPerBlock"], [12, 1, 1, "", "missing"]], "gpu.cu.function": [[13, 1, 1, "", "cpu"], [13, 1, 1, "", "expsub"], [13, 1, 1, "", "ezkern"], [13, 1, 1, "", "format"], [13, 1, 1, "", "gpubin"], [13, 1, 1, "", "gpubinaryeq"], [13, 1, 1, "", "gpufloat"], [13, 1, 1, "", "gpufloatmat"], [13, 1, 1, "", "gpufloatred"], [13, 1, 1, "", "gpuint"], [13, 1, 1, "", "gpuintmap"], [13, 1, 1, "", "gpuintmat"], [13, 1, 1, "", "gpuintred"], [13, 1, 1, "", "gpumap"], [13, 1, 1, "", "gpumapeq"], [13, 1, 1, "", "gpupointer"], [13, 1, 1, "", "gpuscalar"], [13, 1, 1, "", "guessGPUType"], [13, 1, 1, "", "kernel"], [13, 1, 1, "", "printKernel"], [13, 1, 1, "", "toGPUType"]], "gpu.cu.gpufun": [[14, 1, 1, "", "gpuhill"], [14, 1, 1, "", "gpulcomb"], [14, 1, 1, "", "gpulogpdf"], [14, 1, 1, "", "gpumean"], [14, 1, 1, "", "gpunpdf"], [14, 1, 1, "", "gpurandexp"], [14, 1, 1, "", "gpurandf"], [14, 1, 1, "", "gpuuniform"]], "gpu.cu.graph": [[15, 1, 1, "", "connect_gaussian"], [15, 1, 1, "", "random_point_sheet"], [15, 1, 1, "", "spherepoints"], [15, 1, 1, "", "uniform_point_sheet"]], "gpu.cu.logic": [[16, 1, 1, "", "gpuand"], [16, 1, 1, "", "gpueq"], [16, 1, 1, "", "gpugt"], [16, 1, 1, "", "gpugteq"], [16, 1, 1, "", "gpuhzero"], [16, 1, 1, "", "gpult"], [16, 1, 1, "", "gpulteq"], [16, 1, 1, "", "gpuneq"], [16, 1, 1, "", "gpunor"], [16, 1, 1, "", "gpunot"], [16, 1, 1, "", "gpurange"], [16, 1, 1, "", "gpuyes"]], "gpu.cu.plot": [[18, 1, 1, "", "ElementwiseKernel"], [18, 1, 1, "", "gpubarlinedata"], [18, 1, 1, "", "gpuhistogram"], [18, 1, 1, "", "missing"], [18, 1, 1, "", "sebarline"], [18, 1, 1, "", "sebarline2"]], "gpu.cu.sequence": [[19, 1, 1, "", "FrameEater"], [19, 1, 1, "", "GPUAutometric"], [19, 1, 1, "", "GPUDotmetric"], [19, 1, 1, "", "GPUMagmetric"], [19, 1, 1, "", "GPUPointAutoDistance"], [19, 1, 1, "", "GPUSequenceAutoDetect"], [19, 1, 1, "", "deltamag"], [19, 1, 1, "", "fitgaussbimodal"], [19, 1, 1, "", "fitgausstrimodal"], [19, 1, 1, "", "gpuderivative"], [19, 1, 1, "", "gpulognpdf"], [19, 1, 1, "", "gpunpdf"], [19, 1, 1, "", "gpusmooth"], [19, 1, 1, "", "gpusubsetgfit"], [19, 1, 1, "", "gpusubsetmean"], [19, 1, 1, "", "gputhing"], [19, 1, 1, "", "mulmag"], [19, 1, 1, "", "summag"]], "gpu.cu.statistics": [[20, 1, 1, "", "ElementwiseKernel"], [20, 1, 1, "", "gpu_histogram"], [20, 1, 1, "", "gpubarlinedata"], [20, 1, 1, "", "gpubin"], [20, 1, 1, "", "gpubin_core"], [20, 1, 1, "", "gpucenter"], [20, 1, 1, "", "gpucorr"], [20, 1, 1, "", "gpucov"], [20, 1, 1, "", "gpuhistogram"], [20, 1, 1, "", "gpumag"], [20, 1, 1, "", "gpumean"], [20, 1, 1, "", "gpuscorr"], [20, 1, 1, "", "gpuscov"], [20, 1, 1, "", "gpusdv"], [20, 1, 1, "", "gpusem"], [20, 1, 1, "", "gpusqdev"], [20, 1, 1, "", "gpusqmag"], [20, 1, 1, "", "gpusstd"], [20, 1, 1, "", "gpustd"], [20, 1, 1, "", "gpusvar"], [20, 1, 1, "", "gpuvar"], [20, 1, 1, "", "gpuzscore"], [20, 1, 1, "", "sdbarline"], [20, 1, 1, "", "sdbarline2"], [20, 1, 1, "", "sdgpubarlinedata"], [20, 1, 1, "", "sebarline"], [20, 1, 1, "", "sebarline2"], [20, 1, 1, "", "sprinkle"]], "graphics": [[22, 0, 0, "-", "color"], [23, 0, 0, "-", "image"], [24, 0, 0, "-", "matplotlib"], [25, 0, 0, "-", "plot"], [26, 0, 0, "-", "pygame"]], "graphics.color": [[22, 1, 1, "", "RGBtoHCL"], [22, 1, 1, "", "bit16_RGB_to_tuple"], [22, 1, 1, "", "bit16_print_color"], [22, 1, 1, "", "circularly_smooth_colormap"], [22, 1, 1, "", "code_to_16bit"], [22, 1, 1, "", "color_boxplot"], [22, 1, 1, "", "complexHLArr2RGB"], [22, 1, 1, "", "darkhues"], [22, 1, 1, "", "enumerate_fast_colors"], [22, 1, 1, "", "hcl2rgb"], [22, 1, 1, "", "hex2rgb"], [22, 1, 1, "", "hex_pack_BGR"], [22, 1, 1, "", "hsv2rgb"], [22, 1, 1, "", "hue_angle"], [22, 1, 1, "", "isoluminance1"], [22, 1, 1, "", "isoluminance2"], [22, 1, 1, "", "isoluminance3"], [22, 1, 1, "", "isoluminance4"], [22, 1, 1, "", "lighthues"], [22, 1, 1, "", "lightness"], [22, 1, 1, "", "luminance_matrix"], [22, 1, 1, "", "match_luminance"], [22, 1, 1, "", "medhues"], [22, 1, 1, "", "radl2rgb"], [22, 1, 1, "", "radl2rgbLUT"], [22, 1, 1, "", "rgb2hex"], [22, 1, 1, "", "rotate"], [22, 1, 1, "", "show_complete_fast_pallet"], [22, 1, 1, "", "show_complete_fastest_pallet"], [22, 1, 1, "", "show_fast_pallet"], [22, 1, 1, "", "show_hex_pallet"], [22, 1, 1, "", "tuple_to_bit16"], [22, 1, 1, "", "tuple_to_bit24"]], "graphics.image": [[23, 1, 1, "", "mean_center"], [23, 1, 1, "", "median_center"], [23, 1, 1, "", "unitize"], [23, 1, 1, "", "visualize_derivatives"]], "graphics.matplotlib": [[24, 1, 1, "", "draw_array"], [24, 1, 1, "", "hide_toolbar"], [24, 1, 1, "", "start"]], "graphics.plot": [[25, 1, 1, "", "Gaussian2D_covellipse"], [25, 2, 1, "", "HandlerSquare"], [25, 1, 1, "", "addspikes"], [25, 1, 1, "", "adjust_axis_height_pixels"], [25, 1, 1, "", "adjust_xlabel_space"], [25, 1, 1, "", "adjust_ylabel_space"], [25, 1, 1, "", "adjustmap"], [25, 1, 1, "", "animate_complex"], [25, 1, 1, "", "arrow_between"], [25, 1, 1, "", "barcompare"], [25, 1, 1, "", "base_legend"], [25, 1, 1, "", "border_width"], [25, 1, 1, "", "broken_step"], [25, 1, 1, "", "ceil_to_precision"], [25, 1, 1, "", "clean_y_range"], [25, 1, 1, "", "cleartop"], [25, 1, 1, "", "colored_boxplot"], [25, 1, 1, "", "complex_axis"], [25, 1, 1, "", "covariance_crosshairs"], [25, 1, 1, "", "domask"], [25, 1, 1, "", "draw_circle"], [25, 1, 1, "", "eformat"], [25, 1, 1, "", "expand_axis_x"], [25, 1, 1, "", "expand_axis_y"], [25, 1, 1, "", "expand_y_range"], [25, 1, 1, "", "figurebox"], [25, 1, 1, "", "flathist"], [25, 1, 1, "", "floor_to_precision"], [25, 1, 1, "", "force_aspect"], [25, 1, 1, "", "fsize"], [25, 1, 1, "", "fudgex"], [25, 1, 1, "", "fudgexy"], [25, 1, 1, "", "fudgey"], [25, 1, 1, "", "get_aspect"], [25, 1, 1, "", "get_ax_pixel"], [25, 1, 1, "", "get_ax_pixel_ratio"], [25, 1, 1, "", "get_ax_size"], [25, 1, 1, "", "get_bbox"], [25, 1, 1, "", "good_colorbar"], [25, 1, 1, "", "inhibition_arrow"], [25, 1, 1, "", "label"], [25, 1, 1, "", "left_legend"], [25, 1, 1, "", "match_image_aspect"], [25, 1, 1, "", "more_xticks"], [25, 1, 1, "", "more_yticks"], [25, 1, 1, "", "nice_legend"], [25, 1, 1, "", "nicebp"], [25, 1, 1, "", "nicetable"], [25, 1, 1, "", "nicex"], [25, 1, 1, "", "nicexy"], [25, 1, 1, "", "nicey"], [25, 1, 1, "", "noaxis"], [25, 1, 1, "", "noclip"], [25, 1, 1, "", "nolabels"], [25, 1, 1, "", "notick"], [25, 1, 1, "", "nox"], [25, 1, 1, "", "noxlabels"], [25, 1, 1, "", "noxyaxes"], [25, 1, 1, "", "noy"], [25, 1, 1, "", "noylabels"], [25, 1, 1, "", "nudge_axis_baseline"], [25, 1, 1, "", "nudge_axis_left"], [25, 1, 1, "", "nudge_axis_x"], [25, 1, 1, "", "nudge_axis_y"], [25, 1, 1, "", "nudge_axis_y_pixels"], [25, 1, 1, "", "percent"], [25, 1, 1, "", "pixels_to_xfigureunits"], [25, 1, 1, "", "pixels_to_xunits"], [25, 1, 1, "", "pixels_to_yfigureunits"], [25, 1, 1, "", "pixels_to_yunits"], [25, 1, 1, "", "plotCWT"], [25, 1, 1, "", "plotWTPhase"], [25, 1, 1, "", "plotWTPhaseFig"], [25, 1, 1, "", "plot_complex"], [25, 1, 1, "", "plotz"], [25, 1, 1, "", "positivex"], [25, 1, 1, "", "positivexy"], [25, 1, 1, "", "positivey"], [25, 1, 1, "", "px2x"], [25, 1, 1, "", "px2y"], [25, 1, 1, "", "rangeover"], [25, 1, 1, "", "rangeto"], [25, 1, 1, "", "right_legend"], [25, 1, 1, "", "rightaxis"], [25, 1, 1, "", "righty"], [25, 1, 1, "", "round_to_precision"], [25, 1, 1, "", "savefigure"], [25, 1, 1, "", "shade_edges"], [25, 1, 1, "", "shellmean"], [25, 1, 1, "", "shellplot"], [25, 1, 1, "", "shortscientific"], [25, 1, 1, "", "sigbar"], [25, 1, 1, "", "simple_arrow"], [25, 1, 1, "", "simpleaxis"], [25, 1, 1, "", "simpleraxis"], [25, 1, 1, "", "simplerright"], [25, 1, 1, "", "splitz"], [25, 1, 1, "", "stderrplot"], [25, 1, 1, "", "subfigurelabel"], [25, 1, 1, "", "trendline"], [25, 1, 1, "", "unit_crosshairs"], [25, 1, 1, "", "unitaxes"], [25, 1, 1, "", "unitx"], [25, 1, 1, "", "unity"], [25, 1, 1, "", "v2str"], [25, 1, 1, "", "v2str_long"], [25, 1, 1, "", "wtpshow"], [25, 1, 1, "", "xbartext"], [25, 1, 1, "", "xfigureunits_to_pixels"], [25, 1, 1, "", "xscalebar"], [25, 1, 1, "", "xunits_to_pixels"], [25, 1, 1, "", "xylim"], [25, 1, 1, "", "ybartext"], [25, 1, 1, "", "yfigureunits_to_pixels"], [25, 1, 1, "", "yscalebar"], [25, 1, 1, "", "yunits_to_pixels"], [25, 1, 1, "", "zoombox"]], "graphics.plot.HandlerSquare": [[25, 3, 1, "", "create_artists"]], "graphics.pygame": [[26, 1, 1, "", "draw_array"], [26, 1, 1, "", "enable_vsync"], [26, 1, 1, "", "start"]], "jobs": [[29, 0, 0, "-", "cache"], [30, 0, 0, "-", "closure"], [32, 0, 0, "-", "filenames"], [33, 0, 0, "-", "initialize_system_cache"], [34, 0, 0, "-", "parallel"]], "jobs.cache": [[29, 1, 1, "", "base64hash"], [29, 1, 1, "", "base64hash2byte"], [29, 1, 1, "", "disk_cacher"], [29, 1, 1, "", "file_string_to_signature"], [29, 1, 1, "", "function_hash_no_subroutines"], [29, 1, 1, "", "function_hash_with_subroutines"], [29, 1, 1, "", "function_signature"], [29, 1, 1, "", "get_cache_path"], [29, 1, 1, "", "get_source"], [29, 1, 1, "", "hierarchical_cacher"], [29, 1, 1, "", "human_decode"], [29, 1, 1, "", "human_encode"], [29, 1, 1, "", "locate_cached"], [29, 1, 1, "", "read_cache_entry"], [29, 1, 1, "", "signature_to_file_string"], [29, 1, 1, "", "validate_for_matfile"], [29, 1, 1, "", "validate_for_numpy"]], "jobs.closure": [[30, 1, 1, "", "csv"], [30, 1, 1, "", "get_subroutines"], [30, 1, 1, "", "inspect_function_closure"], [30, 1, 1, "", "is_immutable"], [30, 1, 1, "", "is_probably_safe"], [30, 1, 1, "", "verify_function_closure"]], "jobs.filenames": [[32, 1, 1, "", "check_filename"], [32, 1, 1, "", "is_dangerous_filename"], [32, 1, 1, "", "validate_argument_signature"]], "jobs.initialize_system_cache": [[33, 1, 1, "", "cache_test"], [33, 1, 1, "", "du"], [33, 1, 1, "", "initialize_caches"], [33, 1, 1, "", "launch_cache_synchronizers"], [33, 1, 1, "", "purge_ram_cache"], [33, 1, 1, "", "purge_ssd_cache"], [33, 1, 1, "", "reset_ramdisk"]], "jobs.parallel": [[34, 1, 1, "", "close_pool"], [34, 1, 1, "", "eval_from_cached"], [34, 1, 1, "", "function_fingerprint"], [34, 1, 1, "", "parallel_cached_wrapper"], [34, 1, 1, "", "parallel_error_handling"], [34, 1, 1, "", "parallel_indirect_wrapper"], [34, 1, 1, "", "pararraymap"], [34, 1, 1, "", "parimap"], [34, 1, 1, "", "parmap"], [34, 1, 1, "", "parmap_dict"], [34, 1, 1, "", "reset_pool"]], "linalg": [[36, 0, 0, "-", "arguments"], [37, 0, 0, "-", "matrix"], [38, 0, 0, "-", "operators"]], "linalg.arguments": [[36, 1, 1, "", "ascolumn"], [36, 1, 1, "", "asrow"], [36, 1, 1, "", "assertcolumn"], [36, 1, 1, "", "assertfinite"], [36, 1, 1, "", "assertfinitereal"], [36, 1, 1, "", "assertreal"], [36, 1, 1, "", "assertrow"], [36, 1, 1, "", "assertshape"], [36, 1, 1, "", "assertsquare"], [36, 1, 1, "", "assertvector"], [36, 1, 1, "", "assquare"], [36, 1, 1, "", "asvector"], [36, 1, 1, "", "iscolumn"], [36, 1, 1, "", "isrow"], [36, 1, 1, "", "issquare"], [36, 1, 1, "", "scalar"]], "linalg.matrix": [[37, 1, 1, "", "Ldistance"], [37, 1, 1, "", "Llasso"], [37, 1, 1, "", "abserr"], [37, 1, 1, "", "autopredict"], [37, 1, 1, "", "cartesian_product"], [37, 1, 1, "", "check_covmat"], [37, 1, 1, "", "check_covmat_fast"], [37, 1, 1, "", "check_finite_real"], [37, 1, 1, "", "cholupdate"], [37, 1, 1, "", "cholupdate_eye"], [37, 1, 1, "", "cinv"], [37, 1, 1, "", "column"], [37, 1, 1, "", "csolve"], [37, 1, 1, "", "errmx"], [37, 1, 1, "", "kronsum"], [37, 1, 1, "", "laplace_kernel"], [37, 1, 1, "", "ldiv"], [37, 1, 1, "", "logdet"], [37, 1, 1, "", "match_covariance"], [37, 1, 1, "", "maxeig"], [37, 1, 1, "", "nearPDHigham"], [37, 1, 1, "", "nearPSDRebonatoJackel"], [37, 1, 1, "", "normedcovariance"], [37, 1, 1, "", "psd_eig"], [37, 1, 1, "", "qf"], [37, 1, 1, "", "rcond"], [37, 1, 1, "", "rdiv"], [37, 1, 1, "", "real_eig"], [37, 1, 1, "", "reglstsq"], [37, 1, 1, "", "rmatrix"], [37, 1, 1, "", "row"], [37, 1, 1, "", "rsolt"], [37, 1, 1, "", "rsolve"], [37, 1, 1, "", "selector_matrix"], [37, 1, 1, "", "solt"], [37, 1, 1, "", "top_v"], [37, 1, 1, "", "tril_elements"], [37, 1, 1, "", "triu_elements"], [37, 1, 1, "", "wheremax"], [37, 1, 1, "", "wheremin"]], "linalg.operators": [[38, 1, 1, "", "adjacency1D"], [38, 1, 1, "", "adjacency2D"], [38, 1, 1, "", "adjacency2D_circular"], [38, 1, 1, "", "adjacency2d_rotational"], [38, 1, 1, "", "circular1DblurOperator"], [38, 1, 1, "", "cosine_kernel"], [38, 1, 1, "", "covfrom"], [38, 1, 1, "", "delta"], [38, 1, 1, "", "differentiator"], [38, 1, 1, "", "diffuseFT1D"], [38, 1, 1, "", "flatcov"], [38, 1, 1, "", "gaussian1DblurOperator"], [38, 1, 1, "", "gaussian2DblurOperator"], [38, 1, 1, "", "integrator"], [38, 1, 1, "", "laplacian1D"], [38, 1, 1, "", "laplacian1D_circular"], [38, 1, 1, "", "laplacian2D"], [38, 1, 1, "", "laplacianFT1D"], [38, 1, 1, "", "log_cosine_basis"], [38, 1, 1, "", "make_cosine_basis"], [38, 1, 1, "", "oucov"], [38, 1, 1, "", "separable_guassian_blur"], [38, 1, 1, "", "wienerFT1D"]], "models": [[40, 0, 0, "-", "izh"], [41, 0, 0, "-", "lif"], [42, 0, 0, "-", "rbm"]], "models.izh": [[40, 1, 1, "", "du_izh"], [40, 1, 1, "", "dv_izh"], [40, 1, 1, "", "sim_izh"], [40, 1, 1, "", "update_izh"]], "models.lif": [[41, 1, 1, "", "euler_integrate_LIF"], [41, 1, 1, "", "exponential_integrate_LIF"], [41, 1, 1, "", "exponential_moving_average"]], "models.rbm": [[43, 0, 0, "-", "rbm"], [44, 0, 0, "-", "rbm_helper"], [45, 0, 0, "-", "rbm_sample"], [46, 0, 0, "-", "rbm_utils"]], "models.rbm.rbm": [[43, 1, 1, "", "Acond"], [43, 1, 1, "", "Pcond"], [43, 1, 1, "", "a2q"], [43, 1, 1, "", "bar_f"], [43, 1, 1, "", "bernoulli_entropy"], [43, 1, 1, "", "bernoulli_entropy_activation"], [43, 1, 1, "", "bitent"], [43, 1, 1, "", "ground_state"], [43, 1, 1, "", "hashbits"], [43, 1, 1, "", "hashfloat128"], [43, 1, 1, "", "hashint64"], [43, 1, 1, "", "inv_f"], [43, 1, 1, "", "lnPr"], [43, 1, 1, "", "lnPr_activation"], [43, 1, 1, "", "natent"], [43, 1, 1, "", "p2a"], [43, 1, 1, "", "unhashbits"], [43, 1, 1, "", "unhashfloat128"], [43, 1, 1, "", "unhashint64"], [43, 1, 1, "", "unique_counts"]], "models.rbm.rbm_helper": [[44, 1, 1, "", "barcompare"], [44, 1, 1, "", "get_trials"], [44, 1, 1, "", "make_filename"], [44, 1, 1, "", "scattercompare"], [44, 1, 1, "", "zipfplot"]], "models.rbm.rbm_sample": [[45, 2, 1, "", "RBM_sample"], [45, 1, 1, "", "conditional_map"]], "models.rbm.rbm_sample.RBM_sample": [[45, 3, 1, "", "Ahv"], [45, 3, 1, "", "Avh"], [45, 4, 1, "", "EUh_factorial"], [45, 3, 1, "", "Eh_unnormalized"], [45, 4, 1, "", "Ehv"], [45, 4, 1, "", "Ehvvh"], [45, 4, 1, "", "Ehvvh_meanfield"], [45, 3, 1, "", "Ev_unnormalized"], [45, 4, 1, "", "Evh"], [45, 4, 1, "", "Evhhv"], [45, 4, 1, "", "Evhhv_meanfield"], [45, 4, 1, "", "Evvh"], [45, 4, 1, "", "Hhv"], [45, 4, 1, "", "Hvh"], [45, 3, 1, "", "Phv"], [45, 3, 1, "", "Pvh"], [45, 4, 1, "", "barHhv"], [45, 4, 1, "", "barHvh"], [45, 4, 1, "", "dEUh"], [45, 4, 1, "", "dEUv"], [45, 3, 1, "", "dEh"], [45, 4, 1, "", "dEhhv"], [45, 4, 1, "", "dEhhv_meanfield"], [45, 3, 1, "", "dEv"], [45, 4, 1, "", "dEvvh"], [45, 3, 1, "", "get_Eh"], [45, 3, 1, "", "get_Ehhv_factorial"], [45, 3, 1, "", "get_Ehhv_meanfield"], [45, 3, 1, "", "get_Ev"], [45, 3, 1, "", "get_Evh"], [45, 3, 1, "", "get_Hhhv"], [45, 3, 1, "", "get_Hvcondh"], [45, 3, 1, "", "get_dEh"], [45, 3, 1, "", "get_dEv"], [45, 3, 1, "", "long_report"], [45, 3, 1, "", "precompute"], [45, 3, 1, "", "short_report"]], "models.rbm.rbm_utils": [[47, 0, 0, "-", "rbm"], [48, 0, 0, "-", "stutils"]], "models.rbm.rbm_utils.rbm": [[47, 1, 1, "", "LoadRBM"], [47, 2, 1, "", "RBM"]], "models.rbm.rbm_utils.rbm.RBM": [[47, 3, 1, "", "free_energy"], [47, 3, 1, "", "get_cost_updates"], [47, 3, 1, "", "get_pseudo_likelihood_cost"], [47, 3, 1, "", "get_reconstruction_cost"], [47, 3, 1, "", "gibbs_hvh"], [47, 3, 1, "", "gibbs_vhv"], [47, 3, 1, "", "mean_h_given_v"], [47, 3, 1, "", "propdown"], [47, 3, 1, "", "propup"], [47, 3, 1, "", "sample"], [47, 3, 1, "", "sample_h_given_v"], [47, 3, 1, "", "sample_v_given_h"], [47, 3, 1, "", "savenp"], [47, 3, 1, "", "train"], [47, 3, 1, "", "vis_energy"]], "models.rbm.rbm_utils.stutils": [[48, 1, 1, "", "bin_timeseries"], [48, 1, 1, "", "data_model_kldiv"], [48, 1, 1, "", "data_pattern_logprob"], [48, 1, 1, "", "exact_logZ"], [48, 1, 1, "", "exact_logZ_serial"], [48, 1, 1, "", "fim_eig"], [48, 1, 1, "", "gen_cov"], [48, 1, 1, "", "plot_raster"], [48, 1, 1, "", "plot_zipf"], [48, 1, 1, "", "rbm_fim_lowmem"], [48, 1, 1, "", "rbm_fim_numpy"], [48, 1, 1, "", "rbm_pattern_logprob"], [48, 1, 1, "", "rbm_pattern_logprob_unnorm"], [48, 1, 1, "", "select_clusters"], [48, 1, 1, "", "select_times"], [48, 1, 1, "", "sum_over"], [48, 1, 1, "", "unique"], [48, 1, 1, "", "zipf"]], "neurotools": [[52, 0, 0, "-", "encoding"], [55, 0, 0, "-", "functions"], [56, 0, 0, "-", "getfftw"], [57, 0, 0, "-", "gpu"], [75, 0, 0, "-", "graphics"], [85, 0, 0, "-", "hdfmat"], [86, 0, 0, "-", "jobs"], [93, 0, 0, "-", "linalg"], [97, 0, 0, "-", "models"], [107, 0, 0, "-", "nlab"], [109, 0, 0, "-", "signal"], [120, 0, 0, "-", "spatial"], [134, 0, 0, "-", "spikes"], [137, 0, 0, "-", "stats"], [165, 0, 0, "-", "system"], [166, 0, 0, "-", "text"], [167, 0, 0, "-", "tools"]], "neurotools.encoding": [[53, 0, 0, "-", "Huffman"], [54, 0, 0, "-", "NaryHuffman"]], "neurotools.encoding.Huffman": [[53, 2, 1, "", "Huffman"]], "neurotools.encoding.Huffman.Huffman": [[53, 2, 1, "", "Leaf"], [53, 2, 1, "", "Node"], [53, 3, 1, "", "decode"], [53, 3, 1, "", "encode"], [53, 3, 1, "", "encode_packets"]], "neurotools.encoding.Huffman.Huffman.Node": [[53, 3, 1, "", "walk"]], "neurotools.encoding.NaryHuffman": [[54, 2, 1, "", "NaryHuffman"]], "neurotools.encoding.NaryHuffman.NaryHuffman": [[54, 2, 1, "", "Leaf"], [54, 2, 1, "", "Node"], [54, 3, 1, "", "decode"], [54, 3, 1, "", "encode"], [54, 3, 1, "", "encode_packets"]], "neurotools.encoding.NaryHuffman.NaryHuffman.Node": [[54, 3, 1, "", "walk"]], "neurotools.functions": [[55, 1, 1, "", "dsigmoid"], [55, 1, 1, "", "f"], [55, 1, 1, "", "f1"], [55, 1, 1, "", "f2"], [55, 1, 1, "", "g"], [55, 1, 1, "", "inversesigmoid"], [55, 1, 1, "", "log_factorial"], [55, 1, 1, "", "npdf"], [55, 1, 1, "", "sexp"], [55, 1, 1, "", "sigmoid"], [55, 1, 1, "", "slog"]], "neurotools.getfftw": [[56, 1, 1, "", "ftwthr"]], "neurotools.gpu": [[58, 0, 0, "-", "cl"], [62, 0, 0, "-", "cpu"], [64, 0, 0, "-", "cu"]], "neurotools.gpu.cl": [[59, 0, 0, "-", "device"], [60, 0, 0, "-", "function"], [58, 1, 1, "", "missing"]], "neurotools.gpu.cl.device": [[59, 1, 1, "", "zeros_float"]], "neurotools.gpu.cl.function": [[60, 1, 1, "", "elemental"], [60, 1, 1, "", "format"], [60, 1, 1, "", "gpumap"], [60, 1, 1, "", "guessGPUType"], [60, 1, 1, "", "insert_global"], [60, 1, 1, "", "kernel"], [60, 1, 1, "", "printKernel"], [60, 1, 1, "", "toGPUType"]], "neurotools.gpu.cpu": [[63, 0, 0, "-", "util"]], "neurotools.gpu.cpu.util": [[63, 1, 1, "", "cmap"], [63, 1, 1, "", "compose"], [63, 1, 1, "", "corr"], [63, 1, 1, "", "cov"], [63, 1, 1, "", "cut"], [63, 1, 1, "", "document"], [63, 1, 1, "", "dot"], [63, 1, 1, "", "elem"], [63, 1, 1, "", "fancy"], [63, 1, 1, "", "flat"], [63, 1, 1, "", "idivup"], [63, 1, 1, "", "ldif"], [63, 1, 1, "", "ldif2"], [63, 1, 1, "", "ldiv"], [63, 1, 1, "", "ldiv2"], [63, 1, 1, "", "length"], [63, 1, 1, "", "lmul"], [63, 1, 1, "", "lmul2"], [63, 1, 1, "", "lpow"], [63, 1, 1, "", "lpow2"], [63, 1, 1, "", "lsum"], [63, 1, 1, "", "lsum2"], [63, 1, 1, "", "mdif"], [63, 1, 1, "", "mdiv"], [63, 1, 1, "", "mean"], [63, 1, 1, "", "mmap"], [63, 1, 1, "", "mmean"], [63, 1, 1, "", "mmul"], [63, 1, 1, "", "mpow"], [63, 1, 1, "", "mstd"], [63, 1, 1, "", "msum"], [63, 1, 1, "", "mu"], [63, 1, 1, "", "mvar"], [63, 1, 1, "", "norm"], [63, 1, 1, "", "rnorm"], [63, 1, 1, "", "scale"], [63, 1, 1, "", "sem"], [63, 1, 1, "", "shift"], [63, 1, 1, "", "sigma"], [63, 1, 1, "", "sstd"], [63, 1, 1, "", "std"], [63, 1, 1, "", "svar"], [63, 1, 1, "", "var"]], "neurotools.gpu.cu": [[65, 0, 0, "-", "convolution"], [66, 0, 0, "-", "device"], [67, 0, 0, "-", "function"], [68, 0, 0, "-", "gpufun"], [69, 0, 0, "-", "graph"], [70, 0, 0, "-", "logic"], [72, 0, 0, "-", "plot"], [73, 0, 0, "-", "sequence"], [74, 0, 0, "-", "statistics"]], "neurotools.gpu.cu.convolution": [[65, 1, 1, "", "gpuboxconv"], [65, 1, 1, "", "gpuboxconv_core"]], "neurotools.gpu.cu.device": [[66, 1, 1, "", "card_info"], [66, 1, 1, "", "estimateBlocks"], [66, 1, 1, "", "estimateLoop"], [66, 1, 1, "", "estimateThreadsPerBlock"], [66, 1, 1, "", "missing"]], "neurotools.gpu.cu.function": [[67, 1, 1, "", "cpu"], [67, 1, 1, "", "expsub"], [67, 1, 1, "", "ezkern"], [67, 1, 1, "", "format"], [67, 1, 1, "", "gpubin"], [67, 1, 1, "", "gpubinaryeq"], [67, 1, 1, "", "gpufloat"], [67, 1, 1, "", "gpufloatmat"], [67, 1, 1, "", "gpufloatred"], [67, 1, 1, "", "gpuint"], [67, 1, 1, "", "gpuintmap"], [67, 1, 1, "", "gpuintmat"], [67, 1, 1, "", "gpuintred"], [67, 1, 1, "", "gpumap"], [67, 1, 1, "", "gpumapeq"], [67, 1, 1, "", "gpupointer"], [67, 1, 1, "", "gpuscalar"], [67, 1, 1, "", "guessGPUType"], [67, 1, 1, "", "kernel"], [67, 1, 1, "", "printKernel"], [67, 1, 1, "", "toGPUType"]], "neurotools.gpu.cu.gpufun": [[68, 1, 1, "", "gpuhill"], [68, 1, 1, "", "gpulcomb"], [68, 1, 1, "", "gpulogpdf"], [68, 1, 1, "", "gpumean"], [68, 1, 1, "", "gpunpdf"], [68, 1, 1, "", "gpurandexp"], [68, 1, 1, "", "gpurandf"], [68, 1, 1, "", "gpuuniform"]], "neurotools.gpu.cu.graph": [[69, 1, 1, "", "connect_gaussian"], [69, 1, 1, "", "random_point_sheet"], [69, 1, 1, "", "spherepoints"], [69, 1, 1, "", "uniform_point_sheet"]], "neurotools.gpu.cu.logic": [[70, 1, 1, "", "gpuand"], [70, 1, 1, "", "gpueq"], [70, 1, 1, "", "gpugt"], [70, 1, 1, "", "gpugteq"], [70, 1, 1, "", "gpuhzero"], [70, 1, 1, "", "gpult"], [70, 1, 1, "", "gpulteq"], [70, 1, 1, "", "gpuneq"], [70, 1, 1, "", "gpunor"], [70, 1, 1, "", "gpunot"], [70, 1, 1, "", "gpurange"], [70, 1, 1, "", "gpuyes"]], "neurotools.gpu.cu.plot": [[72, 1, 1, "", "ElementwiseKernel"], [72, 1, 1, "", "gpubarlinedata"], [72, 1, 1, "", "gpuhistogram"], [72, 1, 1, "", "missing"], [72, 1, 1, "", "sebarline"], [72, 1, 1, "", "sebarline2"]], "neurotools.gpu.cu.sequence": [[73, 1, 1, "", "FrameEater"], [73, 1, 1, "", "GPUAutometric"], [73, 1, 1, "", "GPUDotmetric"], [73, 1, 1, "", "GPUMagmetric"], [73, 1, 1, "", "GPUPointAutoDistance"], [73, 1, 1, "", "GPUSequenceAutoDetect"], [73, 1, 1, "", "deltamag"], [73, 1, 1, "", "fitgaussbimodal"], [73, 1, 1, "", "fitgausstrimodal"], [73, 1, 1, "", "gpuderivative"], [73, 1, 1, "", "gpulognpdf"], [73, 1, 1, "", "gpunpdf"], [73, 1, 1, "", "gpusmooth"], [73, 1, 1, "", "gpusubsetgfit"], [73, 1, 1, "", "gpusubsetmean"], [73, 1, 1, "", "gputhing"], [73, 1, 1, "", "mulmag"], [73, 1, 1, "", "summag"]], "neurotools.gpu.cu.statistics": [[74, 1, 1, "", "ElementwiseKernel"], [74, 1, 1, "", "gpu_histogram"], [74, 1, 1, "", "gpubarlinedata"], [74, 1, 1, "", "gpubin"], [74, 1, 1, "", "gpubin_core"], [74, 1, 1, "", "gpucenter"], [74, 1, 1, "", "gpucorr"], [74, 1, 1, "", "gpucov"], [74, 1, 1, "", "gpuhistogram"], [74, 1, 1, "", "gpumag"], [74, 1, 1, "", "gpumean"], [74, 1, 1, "", "gpuscorr"], [74, 1, 1, "", "gpuscov"], [74, 1, 1, "", "gpusdv"], [74, 1, 1, "", "gpusem"], [74, 1, 1, "", "gpusqdev"], [74, 1, 1, "", "gpusqmag"], [74, 1, 1, "", "gpusstd"], [74, 1, 1, "", "gpustd"], [74, 1, 1, "", "gpusvar"], [74, 1, 1, "", "gpuvar"], [74, 1, 1, "", "gpuzscore"], [74, 1, 1, "", "sdbarline"], [74, 1, 1, "", "sdbarline2"], [74, 1, 1, "", "sdgpubarlinedata"], [74, 1, 1, "", "sebarline"], [74, 1, 1, "", "sebarline2"], [74, 1, 1, "", "sprinkle"]], "neurotools.graphics": [[76, 0, 0, "-", "color"], [77, 0, 0, "-", "colormaps"], [78, 0, 0, "-", "dendron"], [79, 0, 0, "-", "fabio_maps"], [80, 0, 0, "-", "image"], [81, 0, 0, "-", "matplotlib"], [82, 0, 0, "-", "plot"], [83, 0, 0, "-", "pygame"]], "neurotools.graphics.color": [[76, 1, 1, "", "RGBtoHCL"], [76, 1, 1, "", "bit16_RGB_to_tuple"], [76, 1, 1, "", "bit16_print_color"], [76, 1, 1, "", "circularly_smooth_colormap"], [76, 1, 1, "", "code_to_16bit"], [76, 1, 1, "", "color_boxplot"], [76, 1, 1, "", "complexHLArr2RGB"], [76, 1, 1, "", "darkhues"], [76, 1, 1, "", "enumerate_fast_colors"], [76, 1, 1, "", "hcl2rgb"], [76, 1, 1, "", "hex2rgb"], [76, 1, 1, "", "hex_pack_BGR"], [76, 1, 1, "", "hsv2rgb"], [76, 1, 1, "", "hue_angle"], [76, 1, 1, "", "isoluminance1"], [76, 1, 1, "", "isoluminance2"], [76, 1, 1, "", "isoluminance3"], [76, 1, 1, "", "isoluminance4"], [76, 1, 1, "", "lighthues"], [76, 1, 1, "", "lightness"], [76, 1, 1, "", "luminance_matrix"], [76, 1, 1, "", "match_luminance"], [76, 1, 1, "", "medhues"], [76, 1, 1, "", "radl2rgb"], [76, 1, 1, "", "radl2rgbLUT"], [76, 1, 1, "", "rgb2hex"], [76, 1, 1, "", "rotate"], [76, 1, 1, "", "show_complete_fast_pallet"], [76, 1, 1, "", "show_complete_fastest_pallet"], [76, 1, 1, "", "show_fast_pallet"], [76, 1, 1, "", "show_hex_pallet"], [76, 1, 1, "", "tuple_to_bit16"], [76, 1, 1, "", "tuple_to_bit24"]], "neurotools.graphics.colormaps": [[77, 1, 1, "", "test_colormaps"]], "neurotools.graphics.dendron": [[78, 1, 1, "", "count_nodes"], [78, 1, 1, "", "get_depth"], [78, 1, 1, "", "inorder_traversal"], [78, 1, 1, "", "list_like"], [78, 1, 1, "", "plot_brackets"], [78, 1, 1, "", "plot_brackets_polar"]], "neurotools.graphics.image": [[80, 1, 1, "", "mean_center"], [80, 1, 1, "", "median_center"], [80, 1, 1, "", "unitize"], [80, 1, 1, "", "visualize_derivatives"]], "neurotools.graphics.matplotlib": [[81, 1, 1, "", "draw_array"], [81, 1, 1, "", "hide_toolbar"], [81, 1, 1, "", "start"]], "neurotools.graphics.plot": [[82, 1, 1, "", "Gaussian2D_covellipse"], [82, 2, 1, "", "HandlerSquare"], [82, 1, 1, "", "addspikes"], [82, 1, 1, "", "adjust_axis_height_pixels"], [82, 1, 1, "", "adjust_xlabel_space"], [82, 1, 1, "", "adjust_ylabel_space"], [82, 1, 1, "", "adjustmap"], [82, 1, 1, "", "animate_complex"], [82, 1, 1, "", "arrow_between"], [82, 1, 1, "", "barcompare"], [82, 1, 1, "", "base_legend"], [82, 1, 1, "", "border_width"], [82, 1, 1, "", "broken_step"], [82, 1, 1, "", "ceil_to_precision"], [82, 1, 1, "", "clean_y_range"], [82, 1, 1, "", "cleartop"], [82, 1, 1, "", "colored_boxplot"], [82, 1, 1, "", "complex_axis"], [82, 1, 1, "", "covariance_crosshairs"], [82, 1, 1, "", "domask"], [82, 1, 1, "", "draw_circle"], [82, 1, 1, "", "eformat"], [82, 1, 1, "", "expand_axis_x"], [82, 1, 1, "", "expand_axis_y"], [82, 1, 1, "", "expand_y_range"], [82, 1, 1, "", "figurebox"], [82, 1, 1, "", "flathist"], [82, 1, 1, "", "floor_to_precision"], [82, 1, 1, "", "force_aspect"], [82, 1, 1, "", "fsize"], [82, 1, 1, "", "fudgex"], [82, 1, 1, "", "fudgexy"], [82, 1, 1, "", "fudgey"], [82, 1, 1, "", "get_aspect"], [82, 1, 1, "", "get_ax_pixel"], [82, 1, 1, "", "get_ax_pixel_ratio"], [82, 1, 1, "", "get_ax_size"], [82, 1, 1, "", "get_bbox"], [82, 1, 1, "", "good_colorbar"], [82, 1, 1, "", "inhibition_arrow"], [82, 1, 1, "", "label"], [82, 1, 1, "", "left_legend"], [82, 1, 1, "", "match_image_aspect"], [82, 1, 1, "", "more_xticks"], [82, 1, 1, "", "more_yticks"], [82, 1, 1, "", "nice_legend"], [82, 1, 1, "", "nicebp"], [82, 1, 1, "", "nicetable"], [82, 1, 1, "", "nicex"], [82, 1, 1, "", "nicexy"], [82, 1, 1, "", "nicey"], [82, 1, 1, "", "noaxis"], [82, 1, 1, "", "noclip"], [82, 1, 1, "", "nolabels"], [82, 1, 1, "", "notick"], [82, 1, 1, "", "nox"], [82, 1, 1, "", "noxlabels"], [82, 1, 1, "", "noxyaxes"], [82, 1, 1, "", "noy"], [82, 1, 1, "", "noylabels"], [82, 1, 1, "", "nudge_axis_baseline"], [82, 1, 1, "", "nudge_axis_left"], [82, 1, 1, "", "nudge_axis_x"], [82, 1, 1, "", "nudge_axis_y"], [82, 1, 1, "", "nudge_axis_y_pixels"], [82, 1, 1, "", "percent"], [82, 1, 1, "", "pixels_to_xfigureunits"], [82, 1, 1, "", "pixels_to_xunits"], [82, 1, 1, "", "pixels_to_yfigureunits"], [82, 1, 1, "", "pixels_to_yunits"], [82, 1, 1, "", "plotCWT"], [82, 1, 1, "", "plotWTPhase"], [82, 1, 1, "", "plotWTPhaseFig"], [82, 1, 1, "", "plot_complex"], [82, 1, 1, "", "plotz"], [82, 1, 1, "", "positivex"], [82, 1, 1, "", "positivexy"], [82, 1, 1, "", "positivey"], [82, 1, 1, "", "px2x"], [82, 1, 1, "", "px2y"], [82, 1, 1, "", "rangeover"], [82, 1, 1, "", "rangeto"], [82, 1, 1, "", "right_legend"], [82, 1, 1, "", "rightaxis"], [82, 1, 1, "", "righty"], [82, 1, 1, "", "round_to_precision"], [82, 1, 1, "", "savefigure"], [82, 1, 1, "", "shade_edges"], [82, 1, 1, "", "shellmean"], [82, 1, 1, "", "shellplot"], [82, 1, 1, "", "shortscientific"], [82, 1, 1, "", "sigbar"], [82, 1, 1, "", "simple_arrow"], [82, 1, 1, "", "simpleaxis"], [82, 1, 1, "", "simpleraxis"], [82, 1, 1, "", "simplerright"], [82, 1, 1, "", "splitz"], [82, 1, 1, "", "stderrplot"], [82, 1, 1, "", "subfigurelabel"], [82, 1, 1, "", "trendline"], [82, 1, 1, "", "unit_crosshairs"], [82, 1, 1, "", "unitaxes"], [82, 1, 1, "", "unitx"], [82, 1, 1, "", "unity"], [82, 1, 1, "", "v2str"], [82, 1, 1, "", "v2str_long"], [82, 1, 1, "", "wtpshow"], [82, 1, 1, "", "xbartext"], [82, 1, 1, "", "xfigureunits_to_pixels"], [82, 1, 1, "", "xscalebar"], [82, 1, 1, "", "xunits_to_pixels"], [82, 1, 1, "", "xylim"], [82, 1, 1, "", "ybartext"], [82, 1, 1, "", "yfigureunits_to_pixels"], [82, 1, 1, "", "yscalebar"], [82, 1, 1, "", "yunits_to_pixels"], [82, 1, 1, "", "zoombox"]], "neurotools.graphics.plot.HandlerSquare": [[82, 3, 1, "", "create_artists"]], "neurotools.graphics.pygame": [[83, 1, 1, "", "draw_array"], [83, 1, 1, "", "enable_vsync"], [83, 1, 1, "", "start"]], "neurotools.hdfmat": [[85, 1, 1, "", "getHDF"], [85, 1, 1, "", "getHDFvalue"], [85, 1, 1, "", "hdf2dict"], [85, 1, 1, "", "printmatHDF5"], [85, 1, 1, "", "recursive_printmatHDF5"]], "neurotools.jobs": [[87, 0, 0, "-", "cache"], [88, 0, 0, "-", "closure"], [89, 0, 0, "-", "filenames"], [90, 0, 0, "-", "initialize_system_cache"], [91, 0, 0, "-", "ndecorator"], [92, 0, 0, "-", "parallel"]], "neurotools.jobs.cache": [[87, 1, 1, "", "base64hash"], [87, 1, 1, "", "base64hash2byte"], [87, 1, 1, "", "disk_cacher"], [87, 1, 1, "", "file_string_to_signature"], [87, 1, 1, "", "function_hash_no_subroutines"], [87, 1, 1, "", "function_hash_with_subroutines"], [87, 1, 1, "", "function_signature"], [87, 1, 1, "", "get_cache_path"], [87, 1, 1, "", "get_source"], [87, 1, 1, "", "hierarchical_cacher"], [87, 1, 1, "", "human_decode"], [87, 1, 1, "", "human_encode"], [87, 1, 1, "", "locate_cached"], [87, 1, 1, "", "read_cache_entry"], [87, 1, 1, "", "signature_to_file_string"], [87, 1, 1, "", "validate_for_matfile"], [87, 1, 1, "", "validate_for_numpy"]], "neurotools.jobs.closure": [[88, 1, 1, "", "csv"], [88, 1, 1, "", "get_subroutines"], [88, 1, 1, "", "inspect_function_closure"], [88, 1, 1, "", "is_immutable"], [88, 1, 1, "", "is_probably_safe"], [88, 1, 1, "", "verify_function_closure"]], "neurotools.jobs.filenames": [[89, 1, 1, "", "check_filename"], [89, 1, 1, "", "is_dangerous_filename"], [89, 1, 1, "", "validate_argument_signature"]], "neurotools.jobs.initialize_system_cache": [[90, 1, 1, "", "cache_test"], [90, 1, 1, "", "du"], [90, 1, 1, "", "initialize_caches"], [90, 1, 1, "", "launch_cache_synchronizers"], [90, 1, 1, "", "purge_ram_cache"], [90, 1, 1, "", "purge_ssd_cache"], [90, 1, 1, "", "reset_ramdisk"]], "neurotools.jobs.ndecorator": [[91, 1, 1, "", "argument_signature"], [91, 1, 1, "", "clear_memoized"], [91, 1, 1, "", "listit"], [91, 1, 1, "", "memoize"], [91, 1, 1, "", "print_signature"], [91, 1, 1, "", "sanitize"], [91, 1, 1, "", "summarize_function"], [91, 1, 1, "", "timed"], [91, 1, 1, "", "tupleit"], [91, 1, 1, "", "unwrap"]], "neurotools.jobs.parallel": [[92, 1, 1, "", "close_pool"], [92, 1, 1, "", "eval_from_cached"], [92, 1, 1, "", "function_fingerprint"], [92, 1, 1, "", "parallel_cached_wrapper"], [92, 1, 1, "", "parallel_error_handling"], [92, 1, 1, "", "parallel_indirect_wrapper"], [92, 1, 1, "", "pararraymap"], [92, 1, 1, "", "parimap"], [92, 1, 1, "", "parmap"], [92, 1, 1, "", "parmap_dict"], [92, 1, 1, "", "reset_pool"]], "neurotools.linalg": [[94, 0, 0, "-", "arguments"], [95, 0, 0, "-", "matrix"], [96, 0, 0, "-", "operators"]], "neurotools.linalg.arguments": [[94, 1, 1, "", "ascolumn"], [94, 1, 1, "", "asrow"], [94, 1, 1, "", "assertcolumn"], [94, 1, 1, "", "assertfinite"], [94, 1, 1, "", "assertfinitereal"], [94, 1, 1, "", "assertreal"], [94, 1, 1, "", "assertrow"], [94, 1, 1, "", "assertshape"], [94, 1, 1, "", "assertsquare"], [94, 1, 1, "", "assertvector"], [94, 1, 1, "", "assquare"], [94, 1, 1, "", "asvector"], [94, 1, 1, "", "iscolumn"], [94, 1, 1, "", "isrow"], [94, 1, 1, "", "issquare"], [94, 1, 1, "", "scalar"]], "neurotools.linalg.matrix": [[95, 1, 1, "", "Ldistance"], [95, 1, 1, "", "Llasso"], [95, 1, 1, "", "abserr"], [95, 1, 1, "", "autopredict"], [95, 1, 1, "", "cartesian_product"], [95, 1, 1, "", "check_covmat"], [95, 1, 1, "", "check_covmat_fast"], [95, 1, 1, "", "check_finite_real"], [95, 1, 1, "", "cholupdate"], [95, 1, 1, "", "cholupdate_eye"], [95, 1, 1, "", "cinv"], [95, 1, 1, "", "column"], [95, 1, 1, "", "csolve"], [95, 1, 1, "", "errmx"], [95, 1, 1, "", "kronsum"], [95, 1, 1, "", "laplace_kernel"], [95, 1, 1, "", "ldiv"], [95, 1, 1, "", "logdet"], [95, 1, 1, "", "match_covariance"], [95, 1, 1, "", "maxeig"], [95, 1, 1, "", "nearPDHigham"], [95, 1, 1, "", "nearPSDRebonatoJackel"], [95, 1, 1, "", "normedcovariance"], [95, 1, 1, "", "psd_eig"], [95, 1, 1, "", "qf"], [95, 1, 1, "", "rcond"], [95, 1, 1, "", "rdiv"], [95, 1, 1, "", "real_eig"], [95, 1, 1, "", "reglstsq"], [95, 1, 1, "", "rmatrix"], [95, 1, 1, "", "row"], [95, 1, 1, "", "rsolt"], [95, 1, 1, "", "rsolve"], [95, 1, 1, "", "selector_matrix"], [95, 1, 1, "", "solt"], [95, 1, 1, "", "top_v"], [95, 1, 1, "", "tril_elements"], [95, 1, 1, "", "triu_elements"], [95, 1, 1, "", "wheremax"], [95, 1, 1, "", "wheremin"]], "neurotools.linalg.operators": [[96, 1, 1, "", "adjacency1D"], [96, 1, 1, "", "adjacency2D"], [96, 1, 1, "", "adjacency2D_circular"], [96, 1, 1, "", "adjacency2d_rotational"], [96, 1, 1, "", "circular1DblurOperator"], [96, 1, 1, "", "cosine_kernel"], [96, 1, 1, "", "covfrom"], [96, 1, 1, "", "delta"], [96, 1, 1, "", "differentiator"], [96, 1, 1, "", "diffuseFT1D"], [96, 1, 1, "", "flatcov"], [96, 1, 1, "", "gaussian1DblurOperator"], [96, 1, 1, "", "gaussian2DblurOperator"], [96, 1, 1, "", "integrator"], [96, 1, 1, "", "laplacian1D"], [96, 1, 1, "", "laplacian1D_circular"], [96, 1, 1, "", "laplacian2D"], [96, 1, 1, "", "laplacianFT1D"], [96, 1, 1, "", "log_cosine_basis"], [96, 1, 1, "", "make_cosine_basis"], [96, 1, 1, "", "oucov"], [96, 1, 1, "", "separable_guassian_blur"], [96, 1, 1, "", "wienerFT1D"]], "neurotools.models": [[98, 0, 0, "-", "izh"], [99, 0, 0, "-", "lif"], [100, 0, 0, "-", "rbm"]], "neurotools.models.izh": [[98, 1, 1, "", "du_izh"], [98, 1, 1, "", "dv_izh"], [98, 1, 1, "", "sim_izh"], [98, 1, 1, "", "update_izh"]], "neurotools.models.lif": [[99, 1, 1, "", "euler_integrate_LIF"], [99, 1, 1, "", "exponential_integrate_LIF"], [99, 1, 1, "", "exponential_moving_average"]], "neurotools.models.rbm": [[101, 0, 0, "-", "rbm"], [102, 0, 0, "-", "rbm_helper"], [103, 0, 0, "-", "rbm_sample"], [104, 0, 0, "-", "rbm_utils"]], "neurotools.models.rbm.rbm": [[101, 1, 1, "", "Acond"], [101, 1, 1, "", "Pcond"], [101, 1, 1, "", "a2q"], [101, 1, 1, "", "bar_f"], [101, 1, 1, "", "bernoulli_entropy"], [101, 1, 1, "", "bernoulli_entropy_activation"], [101, 1, 1, "", "bitent"], [101, 1, 1, "", "ground_state"], [101, 1, 1, "", "hashbits"], [101, 1, 1, "", "hashfloat128"], [101, 1, 1, "", "hashint64"], [101, 1, 1, "", "inv_f"], [101, 1, 1, "", "lnPr"], [101, 1, 1, "", "lnPr_activation"], [101, 1, 1, "", "natent"], [101, 1, 1, "", "p2a"], [101, 1, 1, "", "unhashbits"], [101, 1, 1, "", "unhashfloat128"], [101, 1, 1, "", "unhashint64"], [101, 1, 1, "", "unique_counts"]], "neurotools.models.rbm.rbm_helper": [[102, 1, 1, "", "barcompare"], [102, 1, 1, "", "get_trials"], [102, 1, 1, "", "make_filename"], [102, 1, 1, "", "scattercompare"], [102, 1, 1, "", "zipfplot"]], "neurotools.models.rbm.rbm_sample": [[103, 2, 1, "", "RBM_sample"], [103, 1, 1, "", "conditional_map"]], "neurotools.models.rbm.rbm_sample.RBM_sample": [[103, 3, 1, "", "Ahv"], [103, 3, 1, "", "Avh"], [103, 4, 1, "", "EUh_factorial"], [103, 3, 1, "", "Eh_unnormalized"], [103, 4, 1, "", "Ehv"], [103, 4, 1, "", "Ehvvh"], [103, 4, 1, "", "Ehvvh_meanfield"], [103, 3, 1, "", "Ev_unnormalized"], [103, 4, 1, "", "Evh"], [103, 4, 1, "", "Evhhv"], [103, 4, 1, "", "Evhhv_meanfield"], [103, 4, 1, "", "Evvh"], [103, 4, 1, "", "Hhv"], [103, 4, 1, "", "Hvh"], [103, 3, 1, "", "Phv"], [103, 3, 1, "", "Pvh"], [103, 4, 1, "", "barHhv"], [103, 4, 1, "", "barHvh"], [103, 4, 1, "", "dEUh"], [103, 4, 1, "", "dEUv"], [103, 3, 1, "", "dEh"], [103, 4, 1, "", "dEhhv"], [103, 4, 1, "", "dEhhv_meanfield"], [103, 3, 1, "", "dEv"], [103, 4, 1, "", "dEvvh"], [103, 3, 1, "", "get_Eh"], [103, 3, 1, "", "get_Ehhv_factorial"], [103, 3, 1, "", "get_Ehhv_meanfield"], [103, 3, 1, "", "get_Ev"], [103, 3, 1, "", "get_Evh"], [103, 3, 1, "", "get_Hhhv"], [103, 3, 1, "", "get_Hvcondh"], [103, 3, 1, "", "get_dEh"], [103, 3, 1, "", "get_dEv"], [103, 3, 1, "", "long_report"], [103, 3, 1, "", "precompute"], [103, 3, 1, "", "short_report"]], "neurotools.models.rbm.rbm_utils": [[105, 0, 0, "-", "rbm"], [106, 0, 0, "-", "stutils"]], "neurotools.models.rbm.rbm_utils.rbm": [[105, 1, 1, "", "LoadRBM"], [105, 2, 1, "", "RBM"]], "neurotools.models.rbm.rbm_utils.rbm.RBM": [[105, 3, 1, "", "free_energy"], [105, 3, 1, "", "get_cost_updates"], [105, 3, 1, "", "get_pseudo_likelihood_cost"], [105, 3, 1, "", "get_reconstruction_cost"], [105, 3, 1, "", "gibbs_hvh"], [105, 3, 1, "", "gibbs_vhv"], [105, 3, 1, "", "mean_h_given_v"], [105, 3, 1, "", "propdown"], [105, 3, 1, "", "propup"], [105, 3, 1, "", "sample"], [105, 3, 1, "", "sample_h_given_v"], [105, 3, 1, "", "sample_v_given_h"], [105, 3, 1, "", "savenp"], [105, 3, 1, "", "train"], [105, 3, 1, "", "vis_energy"]], "neurotools.models.rbm.rbm_utils.stutils": [[106, 1, 1, "", "bin_timeseries"], [106, 1, 1, "", "data_model_kldiv"], [106, 1, 1, "", "data_pattern_logprob"], [106, 1, 1, "", "exact_logZ"], [106, 1, 1, "", "exact_logZ_serial"], [106, 1, 1, "", "fim_eig"], [106, 1, 1, "", "gen_cov"], [106, 1, 1, "", "plot_raster"], [106, 1, 1, "", "plot_zipf"], [106, 1, 1, "", "rbm_fim_lowmem"], [106, 1, 1, "", "rbm_fim_numpy"], [106, 1, 1, "", "rbm_pattern_logprob"], [106, 1, 1, "", "rbm_pattern_logprob_unnorm"], [106, 1, 1, "", "select_clusters"], [106, 1, 1, "", "select_times"], [106, 1, 1, "", "sum_over"], [106, 1, 1, "", "unique"], [106, 1, 1, "", "zipf"]], "neurotools.nlab": [[107, 1, 1, "", "beta"], [107, 1, 1, "", "binomial"], [107, 1, 1, "", "chisquare"], [107, 1, 1, "", "choice"], [107, 1, 1, "", "dirichlet"], [107, 1, 1, "", "exponential"], [107, 1, 1, "", "f"], [107, 1, 1, "", "gamma"], [107, 1, 1, "", "geometric"], [107, 1, 1, "", "get_state"], [107, 1, 1, "", "gumbel"], [107, 1, 1, "", "hypergeometric"], [107, 1, 1, "", "laplace"], [107, 1, 1, "", "logistic"], [107, 1, 1, "", "lognormal"], [107, 1, 1, "", "logseries"], [107, 1, 1, "", "multinomial"], [107, 1, 1, "", "multivariate_normal"], [107, 1, 1, "", "negative_binomial"], [107, 1, 1, "", "noncentral_chisquare"], [107, 1, 1, "", "noncentral_f"], [107, 1, 1, "", "normal"], [107, 1, 1, "", "pareto"], [107, 1, 1, "", "permutation"], [107, 1, 1, "", "poisson"], [107, 1, 1, "", "power"], [107, 1, 1, "", "rand"], [107, 1, 1, "", "randint"], [107, 1, 1, "", "randn"], [107, 1, 1, "", "random"], [107, 1, 1, "", "random_integers"], [107, 1, 1, "", "random_sample"], [107, 1, 1, "", "rayleigh"], [107, 1, 1, "", "seed"], [107, 1, 1, "", "set_state"], [107, 1, 1, "", "shuffle"], [107, 1, 1, "", "standard_cauchy"], [107, 1, 1, "", "standard_exponential"], [107, 1, 1, "", "standard_gamma"], [107, 1, 1, "", "standard_normal"], [107, 1, 1, "", "standard_t"], [107, 1, 1, "", "triangular"], [107, 1, 1, "", "uniform"], [107, 1, 1, "", "vonmises"], [107, 1, 1, "", "wald"], [107, 1, 1, "", "weibull"], [107, 1, 1, "", "zipf"]], "neurotools.signal": [[109, 1, 1, "", "amp"], [109, 1, 1, "", "ang"], [109, 1, 1, "", "arenear"], [109, 1, 1, "", "aresafe"], [109, 1, 1, "", "autocorrelation"], [109, 1, 1, "", "bandpass_filter"], [109, 1, 1, "", "box_filter"], [109, 1, 1, "", "circular_cosine_basis"], [109, 1, 1, "", "circular_gaussian_smooth"], [109, 1, 1, "", "circular_gaussian_smooth_2D"], [110, 0, 0, "-", "coherence"], [109, 1, 1, "", "complex_to_nan"], [111, 0, 0, "-", "conv"], [109, 1, 1, "", "deltaovermean"], [109, 1, 1, "", "estimate_padding"], [109, 1, 1, "", "fdiff"], [109, 1, 1, "", "fftacorr1d"], [109, 1, 1, "", "fftsta"], [109, 1, 1, "", "find"], [109, 1, 1, "", "fm_mod"], [109, 1, 1, "", "fudge_derivative"], [109, 1, 1, "", "gaussian_kernel"], [109, 1, 1, "", "gaussian_smooth"], [109, 1, 1, "", "gaussianize"], [109, 1, 1, "", "geometric_window"], [109, 1, 1, "", "get_edges"], [109, 1, 1, "", "get_snips"], [109, 1, 1, "", "get_triggered_stats"], [109, 1, 1, "", "highpass_filter"], [109, 1, 1, "", "ifreq"], [109, 1, 1, "", "interpmax1d"], [109, 1, 1, "", "interpolate_NaN"], [109, 1, 1, "", "interpolate_NaN_quadratic"], [109, 1, 1, "", "killSpikes"], [109, 1, 1, "", "linear_cosine_basis"], [112, 0, 0, "-", "linenoise"], [109, 1, 1, "", "linfilter"], [109, 1, 1, "", "local_maxima"], [109, 1, 1, "", "local_minima"], [109, 1, 1, "", "local_peak_within"], [109, 1, 1, "", "lowpass_filter"], [109, 1, 1, "", "make_lagged"], [109, 1, 1, "", "make_rebroadcast_slice"], [109, 1, 1, "", "mean_block"], [109, 1, 1, "", "median_block"], [109, 1, 1, "", "median_filter"], [113, 0, 0, "-", "morlet"], [114, 0, 0, "-", "morlet_coherence"], [115, 0, 0, "-", "multitaper"], [109, 1, 1, "", "ndargmax"], [109, 1, 1, "", "nice_interp"], [109, 1, 1, "", "nonnegative_bandpass_filter"], [109, 1, 1, "", "pad_signal"], [109, 1, 1, "", "padin"], [109, 1, 1, "", "padout"], [109, 1, 1, "", "pdiff"], [109, 1, 1, "", "peak_within"], [109, 1, 1, "", "percentile_filter"], [109, 1, 1, "", "pghilbert"], [109, 1, 1, "", "phase_randomize"], [109, 1, 1, "", "phase_randomize_from_amplitudes"], [109, 1, 1, "", "phase_rotate"], [109, 1, 1, "", "pieces"], [116, 0, 0, "-", "ppc"], [109, 1, 1, "", "randband"], [109, 1, 1, "", "remove_gaps"], [109, 1, 1, "", "remove_short"], [117, 0, 0, "-", "resonator"], [109, 1, 1, "", "rewrap"], [118, 0, 0, "-", "savitskygolay"], [109, 1, 1, "", "set_edges"], [109, 1, 1, "", "sign_preserving_amplitude_demodulate"], [109, 1, 1, "", "spaced_derivative"], [109, 1, 1, "", "span"], [109, 1, 1, "", "stats_block"], [109, 1, 1, "", "take_axis"], [109, 1, 1, "", "take_axis_slice"], [109, 1, 1, "", "topercentiles"], [109, 1, 1, "", "triggered_average"], [109, 1, 1, "", "unit_length"], [109, 1, 1, "", "unitscale"], [109, 1, 1, "", "unwrap"], [109, 1, 1, "", "upsample"], [109, 1, 1, "", "var_block"], [109, 1, 1, "", "variance_filter"], [109, 1, 1, "", "zeromean"], [109, 1, 1, "", "zgrid"], [109, 1, 1, "", "zscore"]], "neurotools.signal.coherence": [[110, 1, 1, "", "coherence_pvalue"], [110, 1, 1, "", "morlet_population_synchrony_spectrum"], [110, 1, 1, "", "multitaper_coherence"], [110, 1, 1, "", "multitaper_multitrial_coherence"], [110, 1, 1, "", "population_coherence_matrix"], [110, 1, 1, "", "population_eigencoherence"], [110, 1, 1, "", "sliding_multitaper_coherence"], [110, 1, 1, "", "sliding_multitaper_coherence_parallel"]], "neurotools.signal.conv": [[111, 1, 1, "", "convolve2dct"], [111, 1, 1, "", "gausskern1d"], [111, 1, 1, "", "gausskern2d"], [111, 1, 1, "", "mirror2d"], [111, 1, 1, "", "reflect2D"], [111, 1, 1, "", "reflect2D_1"], [111, 1, 1, "", "separable2d"]], "neurotools.signal.linenoise": [[112, 1, 1, "", "band_stop_line_noise_removal"], [112, 1, 1, "", "virtual_reference_line_noise_removal"]], "neurotools.signal.morlet": [[113, 1, 1, "", "fft_cwt"], [113, 1, 1, "", "fft_cwt_transposed"], [113, 1, 1, "", "fft_cwt_transposed_logspaced"], [113, 1, 1, "", "logfreqs"], [113, 1, 1, "", "normalized_morlet"], [113, 1, 1, "", "prepare_wavelet_fft_basis"], [113, 1, 1, "", "prepare_wavelet_fft_basis_logspace"]], "neurotools.signal.morlet_coherence": [[114, 1, 1, "", "fft_cwt"], [114, 1, 1, "", "mtm_cohere"], [114, 1, 1, "", "population_coherence_spectrum"], [114, 1, 1, "", "population_eigencoherence"], [114, 1, 1, "", "prepare_wavelet_fft_basis"]], "neurotools.signal.multitaper": [[115, 1, 1, "", "dpss_cached"], [115, 1, 1, "", "multitaper_population_eigencoherence"], [115, 1, 1, "", "multitaper_spectrum"], [115, 1, 1, "", "multitaper_squared_spectrum"], [115, 1, 1, "", "sliding_multitaper_spectrum"]], "neurotools.signal.ppc": [[116, 1, 1, "", "discard_spikes_closer_than_delta"], [116, 1, 1, "", "estimate_bias_in_uncorrected_ppc"], [116, 1, 1, "", "fftppc"], [116, 1, 1, "", "fftppc_biased"], [116, 1, 1, "", "fftppc_biased_multitaper"], [116, 1, 1, "", "fftppc_multitaper"], [116, 1, 1, "", "nodc"], [116, 1, 1, "", "pairwise_phase_consistancy"], [116, 1, 1, "", "phase_randomize"], [116, 1, 1, "", "phase_randomize_complex"], [116, 1, 1, "", "phase_randomized_bias_correction"], [116, 1, 1, "", "ppc_chance_level"], [116, 1, 1, "", "ppc_phase_randomize_chance_level_sample"], [116, 1, 1, "", "temp_code_for_exploring_chance_level_delete_later"]], "neurotools.signal.resonator": [[117, 1, 1, "", "resonantDrive"], [117, 1, 1, "", "resonantFilter"], [117, 1, 1, "", "resonantFiltfilt"]], "neurotools.signal.savitskygolay": [[118, 1, 1, "", "SGKern"], [118, 1, 1, "", "SGKernA"], [118, 1, 1, "", "SGKernJ"], [118, 1, 1, "", "SGKernV"], [118, 1, 1, "", "SGOrd"], [118, 1, 1, "", "SGaccelerate"], [118, 1, 1, "", "SGdifferentiate"], [118, 1, 1, "", "SGfilt"], [118, 1, 1, "", "SGfiltA"], [118, 1, 1, "", "SGfiltJ"], [118, 1, 1, "", "SGfiltV"], [118, 1, 1, "", "SGjerk"], [118, 1, 1, "", "SGsmooth"]], "neurotools.spatial": [[121, 0, 0, "-", "array"], [120, 1, 1, "", "brute_force_local_2d_maxima"], [122, 0, 0, "-", "dct"], [123, 0, 0, "-", "distance"], [124, 0, 0, "-", "fftzeros"], [125, 0, 0, "-", "geometry"], [126, 0, 0, "-", "kernels"], [127, 0, 0, "-", "masking"], [128, 0, 0, "-", "phase"], [129, 0, 0, "-", "points"], [130, 0, 0, "-", "spatialPSD"], [131, 0, 0, "-", "spiking"], [132, 0, 0, "-", "triangulation"], [133, 0, 0, "-", "wave_parametric_models"]], "neurotools.spatial.array": [[121, 1, 1, "", "array_average_amplitude"], [121, 1, 1, "", "array_count_centers"], [121, 1, 1, "", "array_count_critical"], [121, 1, 1, "", "array_kuramoto"], [121, 1, 1, "", "array_kuramoto_pgd"], [121, 1, 1, "", "array_kuramoto_pgd_standard_deviation"], [121, 1, 1, "", "array_kuramoto_standard_deviation"], [121, 1, 1, "", "array_phase_gradient"], [121, 1, 1, "", "array_phasegradient_local"], [121, 1, 1, "", "array_phasegradient_magnitude_cv"], [121, 1, 1, "", "array_phasegradient_magnitude_sigma"], [121, 1, 1, "", "array_phasegradient_pgd_threshold"], [121, 1, 1, "", "array_phasegradient_planar"], [121, 1, 1, "", "array_speed_local"], [121, 1, 1, "", "array_speed_pgd_threshold"], [121, 1, 1, "", "array_synchrony"], [121, 1, 1, "", "array_synchrony_pgd"], [121, 1, 1, "", "array_synchrony_pgd_standard_deviation"], [121, 1, 1, "", "array_synchrony_standard_deviation"], [121, 1, 1, "", "array_wavelength_local"], [121, 1, 1, "", "array_wavelength_local_pgd_threshold"], [121, 1, 1, "", "array_wavelength_pgd_threshold"], [121, 1, 1, "", "array_wavelength_planar"], [121, 1, 1, "", "pack_array_data"], [121, 1, 1, "", "trim_array"], [121, 1, 1, "", "trim_array_as_if"]], "neurotools.spatial.dct": [[122, 1, 1, "", "dct_cut"], [122, 1, 1, "", "dct_cut_antialias"], [122, 1, 1, "", "dct_cut_downsampled"], [122, 1, 1, "", "dct_upsample"], [122, 1, 1, "", "dct_upsample_notrim"], [122, 1, 1, "", "get_mask"], [122, 1, 1, "", "get_mask_antialiased"], [122, 1, 1, "", "iterated_upsample"], [122, 1, 1, "", "outer_complex"]], "neurotools.spatial.distance": [[123, 1, 1, "", "distance_angular_deviation"], [123, 1, 1, "", "get_average_synchrony_length_constant_parallel"], [123, 1, 1, "", "get_averaged_angular_distance"], [123, 1, 1, "", "get_electrode_locations"], [123, 1, 1, "", "get_length_constant_trial"], [123, 1, 1, "", "get_pair_distance"], [123, 1, 1, "", "synchrony_length_constant_areas_summary"]], "neurotools.spatial.fftzeros": [[124, 1, 1, "", "coalesce"], [124, 1, 1, "", "coalesce_points"], [124, 1, 1, "", "cut_array_data"], [124, 1, 1, "", "dPhidx"], [124, 1, 1, "", "dPhidy"], [124, 1, 1, "", "find_critical_points"], [124, 1, 1, "", "find_critical_potential_points"], [124, 1, 1, "", "get_critical_spectra"], [124, 1, 1, "", "get_phase_gradient_as_complex"], [124, 1, 1, "", "getp"], [124, 1, 1, "", "getpeaks2d"], [124, 1, 1, "", "grad"], [124, 1, 1, "", "mirror2D"], [124, 1, 1, "", "plot_critical_points"], [124, 1, 1, "", "plot_critical_spectra"], [124, 1, 1, "", "plot_phase_direction"], [124, 1, 1, "", "plot_phase_gradient"], [124, 1, 1, "", "quickgrad"]], "neurotools.spatial.geometry": [[125, 1, 1, "", "convex_hull"], [125, 1, 1, "", "convex_hull_from_mask"], [125, 1, 1, "", "in_hull"], [125, 1, 1, "", "p2z"], [125, 1, 1, "", "polar_smooth_contour"], [125, 1, 1, "", "resample_convex_hull"]], "neurotools.spatial.kernels": [[126, 1, 1, "", "absorbing_gaussian"], [126, 1, 1, "", "absorbing_laplacian"], [126, 1, 1, "", "continuum_kernel"], [126, 1, 1, "", "cosine_kernel"], [126, 1, 1, "", "diffusion_basis"], [126, 1, 1, "", "exponential_basis"], [126, 1, 1, "", "gaussian_2D_kernel"], [126, 1, 1, "", "iterative_orthogonalize_basis"], [126, 1, 1, "", "laplace_kernel"], [126, 1, 1, "", "laplacian"], [126, 1, 1, "", "log_cosine_basis"], [126, 1, 1, "", "log_spline_basis"], [126, 1, 1, "", "magickernel"], [126, 1, 1, "", "magicsharp"], [126, 1, 1, "", "make_cosine_basis"]], "neurotools.spatial.masking": [[127, 1, 1, "", "as_mask"], [127, 1, 1, "", "extend_mask"], [127, 1, 1, "", "mask_crop"], [127, 1, 1, "", "mask_to_points"], [127, 1, 1, "", "maskout"], [127, 1, 1, "", "nan_mask"], [127, 1, 1, "", "pgrid"], [127, 1, 1, "", "to_image"], [127, 1, 1, "", "trim_mask"]], "neurotools.spatial.phase": [[128, 1, 1, "", "analytic_signal_coherence"], [128, 1, 1, "", "population_average_amplitude"], [128, 1, 1, "", "population_kuramoto"], [128, 1, 1, "", "population_median_frequency"], [128, 1, 1, "", "population_median_phase_velocity"], [128, 1, 1, "", "population_normalized_sliding_signal_coherence"], [128, 1, 1, "", "population_phase_coherence"], [128, 1, 1, "", "population_phase_relative_sliding_kuramoto"], [128, 1, 1, "", "population_polar_std"], [128, 1, 1, "", "population_signal_amplitude_dispersion"], [128, 1, 1, "", "population_signal_amplitude_precision"], [128, 1, 1, "", "population_signal_amplitude_std"], [128, 1, 1, "", "population_signal_concentration"], [128, 1, 1, "", "population_signal_description"], [128, 1, 1, "", "population_signal_dispersion"], [128, 1, 1, "", "population_signal_phase_dispersion"], [128, 1, 1, "", "population_signal_phase_precision"], [128, 1, 1, "", "population_signal_phase_std"], [128, 1, 1, "", "population_signal_precision"], [128, 1, 1, "", "population_sliding_signal_coherence"], [128, 1, 1, "", "population_synchrony"], [128, 1, 1, "", "population_synchrony_linear"], [128, 1, 1, "", "sliding_population_signal_coherence"]], "neurotools.spatial.points": [[129, 1, 1, "", "c2p"], [129, 1, 1, "", "closest"], [129, 1, 1, "", "p2c"], [129, 1, 1, "", "pair_neighbors"], [129, 1, 1, "", "paired_distances"], [129, 1, 1, "", "to_xypoint"]], "neurotools.spatial.spatialPSD": [[130, 1, 1, "", "all_spatial_PSD_parallel"], [130, 1, 1, "", "psd2d"], [130, 1, 1, "", "spatialPSD_length_scale_spectrum"], [130, 1, 1, "", "spatialPSD_parallel_wrapper"]], "neurotools.spatial.spiking": [[131, 1, 1, "", "interp_bin"]], "neurotools.spatial.triangulation": [[132, 1, 1, "", "coalesce"], [132, 1, 1, "", "edgesNearby"], [132, 1, 1, "", "mergeNearby"], [132, 1, 1, "", "plot_edges"], [132, 1, 1, "", "plot_triangles"], [132, 1, 1, "", "trianglesToEdges"], [132, 1, 1, "", "uniquerow"], [132, 1, 1, "", "z2xy"]], "neurotools.spatial.wave_parametric_models": [[133, 1, 1, "", "averaged_directionality_index"], [133, 1, 1, "", "directionality_index"], [133, 1, 1, "", "frame_synchrony"], [133, 1, 1, "", "heuristic_B_double_planar"], [133, 1, 1, "", "heuristic_B_planar"], [133, 1, 1, "", "heuristic_B_polar"], [133, 1, 1, "", "heuristic_B_standing"], [133, 1, 1, "", "heuristic_B_synchronous"], [133, 1, 1, "", "heuristic_solver_double_planar"], [133, 1, 1, "", "heuristic_solver_planar"], [133, 1, 1, "", "heuristic_solver_polar"], [133, 1, 1, "", "heuristic_solver_standing"], [133, 1, 1, "", "heuristic_solver_synchronous"], [133, 1, 1, "", "makeLSQminimizerDoublePlane"], [133, 1, 1, "", "makeLSQminimizerPlane"], [133, 1, 1, "", "makeLSQminimizerPolar"], [133, 1, 1, "", "makeLSQminimizerStanding"], [133, 1, 1, "", "makeLSQminimizerSynchronous"], [133, 1, 1, "", "pairwise_phase_difference"], [133, 1, 1, "", "phase_gradient"], [133, 1, 1, "", "phase_unwrap"], [133, 1, 1, "", "plotdata"], [133, 1, 1, "", "predict"], [133, 1, 1, "", "spatial_phase_gradient"], [133, 1, 1, "", "synchrony"], [133, 1, 1, "", "zscore"]], "neurotools.spikes": [[135, 0, 0, "-", "spikes"], [136, 0, 0, "-", "waveform"]], "neurotools.spikes.spikes": [[135, 1, 1, "", "bin_spike_times"], [135, 1, 1, "", "bin_spikes_raster"], [135, 1, 1, "", "cut_spikes"], [135, 1, 1, "", "pack_cross_correlation_matrix"], [135, 1, 1, "", "pp_xcorr"], [135, 1, 1, "", "times_to_raster"], [135, 1, 1, "", "txcorr"]], "neurotools.spikes.waveform": [[136, 1, 1, "", "getFWHM"], [136, 1, 1, "", "getPHP"], [136, 1, 1, "", "getPT"], [136, 1, 1, "", "getPTHW"], [136, 1, 1, "", "getPVT"], [136, 1, 1, "", "getWAHP"], [136, 1, 1, "", "is_thin"], [136, 1, 1, "", "is_thin_pvt"], [136, 1, 1, "", "minmax"], [136, 1, 1, "", "normalized_waveform"], [136, 1, 1, "", "process"], [136, 1, 1, "", "realign"], [136, 1, 1, "", "realign_special"]], "neurotools.stats": [[138, 0, 0, "-", "GLMFit"], [139, 0, 0, "-", "Gaussian"], [137, 1, 1, "", "add_constant"], [137, 1, 1, "", "block_shuffle"], [140, 0, 0, "-", "circular"], [141, 0, 0, "-", "convolutional"], [137, 1, 1, "", "covariance"], [137, 1, 1, "", "crossvalidated_least_squares"], [142, 0, 0, "-", "density"], [137, 2, 1, "", "description"], [143, 0, 0, "-", "distributions"], [144, 0, 0, "-", "entropy"], [145, 0, 0, "-", "fast_kde"], [137, 1, 1, "", "find"], [146, 0, 0, "-", "glm"], [147, 0, 0, "-", "gmm"], [148, 0, 0, "-", "grid_search"], [149, 0, 0, "-", "history_basis"], [150, 0, 0, "-", "hmm"], [151, 0, 0, "-", "information"], [152, 0, 0, "-", "kent_reimann"], [153, 0, 0, "-", "lessons"], [155, 0, 0, "-", "mcint"], [156, 0, 0, "-", "minimize"], [157, 0, 0, "-", "mixtures"], [158, 0, 0, "-", "modefind"], [159, 0, 0, "-", "mvg"], [137, 1, 1, "", "nrmse"], [137, 1, 1, "", "outliers"], [137, 1, 1, "", "partition_data"], [137, 1, 1, "", "partition_data_for_crossvalidation"], [137, 1, 1, "", "partition_trials_for_crossvalidation"], [137, 1, 1, "", "pca"], [137, 1, 1, "", "polar_error"], [137, 1, 1, "", "print_stats"], [160, 0, 0, "-", "pvalues"], [161, 0, 0, "-", "regressions"], [137, 1, 1, "", "reject_outliers"], [162, 0, 0, "-", "sde"], [163, 0, 0, "-", "spatiotemporal_glm_utils"], [137, 1, 1, "", "trial_crossvalidated_least_squares"], [137, 1, 1, "", "weighted_avg_and_std"]], "neurotools.stats.GLMFit": [[138, 1, 1, "", "glmfit"]], "neurotools.stats.Gaussian": [[139, 2, 1, "", "Gaussian"], [139, 1, 1, "", "gaussian_quadrature"], [139, 1, 1, "", "gaussian_quadrature_logarithmic"]], "neurotools.stats.Gaussian.Gaussian": [[139, 3, 1, "", "logpdf"]], "neurotools.stats.circular": [[140, 1, 1, "", "abspolar_stats"], [140, 1, 1, "", "complex_gaussian"], [140, 1, 1, "", "fit_vonmises"], [140, 1, 1, "", "logpolar_gaussian"], [140, 1, 1, "", "logpolar_stats"], [140, 1, 1, "", "squared_first_circular_moment"]], "neurotools.stats.convolutional": [[141, 1, 1, "", "autocorrelation_bayes"], [141, 1, 1, "", "blockccm"], [141, 1, 1, "", "blocksta"], [141, 1, 1, "", "ccm"], [141, 1, 1, "", "ccor"], [141, 1, 1, "", "construct_lowpass_operator"], [141, 1, 1, "", "create_spectral_model"], [141, 1, 1, "", "cspect"], [141, 1, 1, "", "cspectm"], [141, 1, 1, "", "reconstruct"], [141, 1, 1, "", "spectreconstruct"], [141, 1, 1, "", "spike_lfp_filters"], [141, 1, 1, "", "sta"]], "neurotools.stats.density": [[142, 1, 1, "", "adaptive_density_grid"], [142, 1, 1, "", "gridhist"], [142, 1, 1, "", "kdepeak"], [142, 1, 1, "", "knn_1d_density"]], "neurotools.stats.description": [[137, 3, 1, "", "short"]], "neurotools.stats.distributions": [[143, 1, 1, "", "explogpdf"], [143, 1, 1, "", "gaussian_logpdf"], [143, 1, 1, "", "gaussian_pdf"], [143, 1, 1, "", "poisson_logpdf"], [143, 1, 1, "", "poisson_pdf"], [143, 1, 1, "", "sample_categorical"]], "neurotools.stats.entropy": [[144, 1, 1, "", "discrete_entropy_distribution"], [144, 1, 1, "", "discrete_entropy_samples"], [144, 1, 1, "", "poisson_entropy_nats"], [144, 1, 1, "", "regularized_discrete_entropy"]], "neurotools.stats.fast_kde": [[145, 1, 1, "", "fast_kde"], [145, 1, 1, "", "image_cov"]], "neurotools.stats.glm": [[146, 1, 1, "", "GLMPenaltyBernoulli"], [146, 1, 1, "", "GLMPenaltyL2"], [146, 1, 1, "", "GLMPenaltyPoisson"], [146, 1, 1, "", "cosine_kernel"], [146, 1, 1, "", "crossvalidatedAUC"], [146, 1, 1, "", "fitGLM"], [146, 1, 1, "", "gradientglmfit"], [146, 1, 1, "", "log_cosine_basis"], [146, 1, 1, "", "make_cosine_basis"], [146, 1, 1, "", "numeric_grad"], [146, 1, 1, "", "numeric_hess"], [146, 1, 1, "", "ppglmfit"], [146, 1, 1, "", "sexp"], [146, 1, 1, "", "sigmoid"]], "neurotools.stats.gmm": [[147, 1, 1, "", "GMM"], [147, 1, 1, "", "GMM1D"]], "neurotools.stats.grid_search": [[148, 1, 1, "", "grid_search"]], "neurotools.stats.history_basis": [[149, 1, 1, "", "history_basis"]], "neurotools.stats.hmm": [[150, 2, 1, "", "BernoulliObservationApproximator"], [150, 2, 1, "", "BernoulliObservationModel"], [150, 2, 1, "", "ChisquareCoxApproximator"], [150, 2, 1, "", "ChisquareCoxModel"], [150, 2, 1, "", "DiffusionGaussian"], [150, 2, 1, "", "GaussianCoxApproximator"], [150, 2, 1, "", "GaussianCoxModel"], [150, 2, 1, "", "LogGaussianCoxApproximator"], [150, 2, 1, "", "LogGaussianCoxModel"], [150, 2, 1, "", "MVGOUUpdate"], [150, 2, 1, "", "MVGUpdate"], [150, 2, 1, "", "MVGaussian"], [150, 2, 1, "", "MVLogGaussianCox"], [150, 2, 1, "", "OUGaussian"], [150, 2, 1, "", "PoissonObservationApproximator"], [150, 2, 1, "", "PoissonObservationModel"], [150, 2, 1, "", "TruncatedLogGaussianCoxApproximator"], [150, 2, 1, "", "TruncatedLogGaussianCoxModel"], [150, 2, 1, "", "TruncatedPoissonObservationApproximator"], [150, 2, 1, "", "TruncatedPoissonObservationModel"], [150, 1, 1, "", "backward_abstract"], [150, 1, 1, "", "baum_welch"], [150, 1, 1, "", "forward_abstract"], [150, 1, 1, "", "forward_backward"], [150, 1, 1, "", "forward_backward_abstract"], [150, 1, 1, "", "hasNaN"], [150, 1, 1, "", "jump"], [150, 1, 1, "", "lgcp_observation_minimizer"], [150, 1, 1, "", "log_likelihood"], [150, 1, 1, "", "poisson_baum_welch"], [150, 1, 1, "", "poisson_parameter_guess"], [150, 1, 1, "", "poisson_viterbi_state_infer"], [150, 1, 1, "", "sample"], [150, 1, 1, "", "viterbi"], [150, 1, 1, "", "viterbi_log"]], "neurotools.stats.hmm.DiffusionGaussian": [[150, 3, 1, "", "bwd"], [150, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVGOUUpdate": [[150, 3, 1, "", "bwd"], [150, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVGUpdate": [[150, 3, 1, "", "bwd"], [150, 3, 1, "", "fwd"]], "neurotools.stats.hmm.MVLogGaussianCox": [[150, 2, 1, "", "MVPoissonApproximator"]], "neurotools.stats.hmm.OUGaussian": [[150, 3, 1, "", "bwd"], [150, 3, 1, "", "fwd"]], "neurotools.stats.information": [[151, 1, 1, "", "DKL_discrete"]], "neurotools.stats.kent_reimann": [[152, 1, 1, "", "complex2riemann"], [152, 1, 1, "", "kentPDF"], [152, 1, 1, "", "kentPDFRiemann"], [152, 1, 1, "", "riemann2complex"], [152, 1, 1, "", "rotatex"], [152, 1, 1, "", "rotatey"], [152, 1, 1, "", "rotatez"]], "neurotools.stats.lessons": [[153, 2, 1, "", "PGOM"], [153, 1, 1, "", "add_spikes"], [153, 1, 1, "", "infer_states_Gaussian_ADF"], [153, 1, 1, "", "precision1D"], [153, 1, 1, "", "sample_ou_process"], [153, 1, 1, "", "sample_wiener_process"], [153, 1, 1, "", "showim"]], "neurotools.stats.lessons.PGOM": [[153, 2, 1, "", "Approximate"]], "neurotools.stats.mcint": [[155, 1, 1, "", "monte_carlo_expectation"], [155, 1, 1, "", "monte_carlo_moments"]], "neurotools.stats.minimize": [[156, 5, 1, "", "FailureError"], [156, 1, 1, "", "current_milli_time"], [156, 1, 1, "", "minimize_retry"], [156, 1, 1, "", "v2str_long"]], "neurotools.stats.mixtures": [[157, 1, 1, "", "two_class_poisson_mixture_model"]], "neurotools.stats.modefind": [[158, 1, 1, "", "logmode"], [158, 1, 1, "", "logmodeplot"], [158, 1, 1, "", "modefind"], [158, 1, 1, "", "peakfinder5"]], "neurotools.stats.mvg": [[159, 1, 1, "", "MVG_DKL"], [159, 1, 1, "", "MVG_DKL_CP"], [159, 1, 1, "", "MVG_PDF"], [159, 1, 1, "", "MVG_check"], [159, 1, 1, "", "MVG_conditional"], [159, 1, 1, "", "MVG_divide"], [159, 1, 1, "", "MVG_entropy"], [159, 1, 1, "", "MVG_kalman"], [159, 1, 1, "", "MVG_kalman_P_inverseA"], [159, 1, 1, "", "MVG_kalman_joint"], [159, 1, 1, "", "MVG_kalman_joint_P"], [159, 1, 1, "", "MVG_logPDF"], [159, 1, 1, "", "MVG_multiply"], [159, 1, 1, "", "MVG_multiply_C"], [159, 1, 1, "", "MVG_projection"], [159, 1, 1, "", "MVG_sample"], [159, 1, 1, "", "randn"]], "neurotools.stats.pvalues": [[160, 1, 1, "", "benjamini_hochberg_positive_correlations"], [160, 1, 1, "", "bootstrap_compare_mean"], [160, 1, 1, "", "bootstrap_compare_median"], [160, 1, 1, "", "bootstrap_compare_statistic_two_sided"], [160, 1, 1, "", "bootstrap_compare_statistic_two_sided_parallel"], [160, 1, 1, "", "bootstrap_mean"], [160, 1, 1, "", "bootstrap_median"], [160, 1, 1, "", "bootstrap_statistic_two_sided"], [160, 1, 1, "", "correct_pvalues"], [160, 1, 1, "", "correct_pvalues_positive_dependent"], [160, 1, 1, "", "sample_parallel_helper"]], "neurotools.stats.regressions": [[161, 1, 1, "", "damped_cosine"], [161, 1, 1, "", "exponential_decay"], [161, 1, 1, "", "gaussian_function"], [161, 1, 1, "", "half_gaussian_function"], [161, 1, 1, "", "power_law"], [161, 1, 1, "", "robust_line"], [161, 1, 1, "", "weighted_least_squares"]], "neurotools.stats.sde": [[162, 1, 1, "", "sample_ou_process"]], "neurotools.stats.spatiotemporal_glm_utils": [[163, 1, 1, "", "GLMPenaltyL2_subsampled"], [163, 1, 1, "", "gradientglmfit_subsampled"], [163, 1, 1, "", "isInt"], [163, 1, 1, "", "local_ch_map"], [163, 1, 1, "", "orthogonalize"], [163, 1, 1, "", "plot_histfilter"], [163, 1, 1, "", "plot_spatiotemporal"], [163, 1, 1, "", "spatiotemporal_history"], [163, 1, 1, "", "spatiotemporal_history_projection"]], "neurotools.system": [[165, 1, 1, "", "execfile"], [165, 1, 1, "", "query_yes_no"]], "neurotools.text": [[166, 1, 1, "", "hcat"], [166, 1, 1, "", "incolumns"], [166, 1, 1, "", "wordwrap"]], "neurotools.tools": [[167, 1, 1, "", "amap"], [167, 1, 1, "", "arraymap"], [167, 1, 1, "", "asiterable"], [167, 1, 1, "", "c2p"], [167, 1, 1, "", "camel2underscore"], [167, 1, 1, "", "clear"], [167, 1, 1, "", "current_milli_time"], [167, 1, 1, "", "debug"], [167, 1, 1, "", "dowarn"], [167, 2, 1, "", "emitter"], [167, 1, 1, "", "ensure_dir"], [167, 1, 1, "", "exists"], [167, 1, 1, "", "ezip"], [167, 1, 1, "", "find"], [167, 1, 1, "", "find_all_extension"], [167, 1, 1, "", "getVariable"], [167, 1, 1, "", "getdict"], [167, 1, 1, "", "getsize"], [167, 1, 1, "", "globalize"], [167, 1, 1, "", "history"], [167, 1, 1, "", "invert_permutation"], [167, 1, 1, "", "lmap"], [167, 1, 1, "", "mapdict"], [167, 1, 1, "", "matlab"], [167, 1, 1, "", "metaloadmat"], [167, 1, 1, "", "now"], [167, 1, 1, "", "nowarn"], [167, 1, 1, "", "okwarn"], [167, 1, 1, "", "oneslike"], [167, 1, 1, "", "p2c"], [167, 2, 1, "", "piper"], [167, 1, 1, "", "restoreContext"], [167, 1, 1, "", "saveContext"], [167, 1, 1, "", "setinrange"], [167, 2, 1, "", "stuff"], [167, 1, 1, "", "tic"], [167, 1, 1, "", "toc"], [167, 1, 1, "", "today"], [167, 1, 1, "", "underscore2camel"], [167, 1, 1, "", "varexists"], [167, 1, 1, "", "wait"], [167, 1, 1, "", "waitfor"], [167, 1, 1, "", "warn"], [167, 1, 1, "", "zeroslike"]], "neurotools.tools.stuff": [[167, 3, 1, "", "add"]], "nlab": [[168, 1, 1, "", "beta"], [168, 1, 1, "", "binomial"], [168, 1, 1, "", "chisquare"], [168, 1, 1, "", "choice"], [168, 1, 1, "", "dirichlet"], [168, 1, 1, "", "exponential"], [168, 1, 1, "", "f"], [168, 1, 1, "", "gamma"], [168, 1, 1, "", "geometric"], [168, 1, 1, "", "get_state"], [168, 1, 1, "", "gumbel"], [168, 1, 1, "", "hypergeometric"], [168, 1, 1, "", "laplace"], [168, 1, 1, "", "logistic"], [168, 1, 1, "", "lognormal"], [168, 1, 1, "", "logseries"], [168, 1, 1, "", "multinomial"], [168, 1, 1, "", "multivariate_normal"], [168, 1, 1, "", "negative_binomial"], [168, 1, 1, "", "noncentral_chisquare"], [168, 1, 1, "", "noncentral_f"], [168, 1, 1, "", "normal"], [168, 1, 1, "", "pareto"], [168, 1, 1, "", "permutation"], [168, 1, 1, "", "poisson"], [168, 1, 1, "", "power"], [168, 1, 1, "", "rand"], [168, 1, 1, "", "randint"], [168, 1, 1, "", "randn"], [168, 1, 1, "", "random"], [168, 1, 1, "", "random_integers"], [168, 1, 1, "", "random_sample"], [168, 1, 1, "", "rayleigh"], [168, 1, 1, "", "seed"], [168, 1, 1, "", "set_state"], [168, 1, 1, "", "shuffle"], [168, 1, 1, "", "standard_cauchy"], [168, 1, 1, "", "standard_exponential"], [168, 1, 1, "", "standard_gamma"], [168, 1, 1, "", "standard_normal"], [168, 1, 1, "", "standard_t"], [168, 1, 1, "", "triangular"], [168, 1, 1, "", "uniform"], [168, 1, 1, "", "vonmises"], [168, 1, 1, "", "wald"], [168, 1, 1, "", "weibull"], [168, 1, 1, "", "zipf"]], "signal": [[170, 2, 1, "", "Handlers"], [170, 6, 1, "", "ItimerError"], [170, 2, 1, "", "Sigmasks"], [170, 2, 1, "", "Signals"], [170, 1, 1, "", "getsignal"], [170, 1, 1, "", "pthread_sigmask"], [180, 0, 0, "-", "signal"], [170, 1, 1, "", "sigpending"], [170, 1, 1, "", "sigwait"], [170, 2, 1, "", "struct_siginfo"], [170, 1, 1, "", "valid_signals"]], "signal.Handlers": [[170, 6, 1, "", "SIG_DFL"], [170, 6, 1, "", "SIG_IGN"]], "signal.Sigmasks": [[170, 6, 1, "", "SIG_BLOCK"], [170, 6, 1, "", "SIG_SETMASK"], [170, 6, 1, "", "SIG_UNBLOCK"]], "signal.Signals": [[170, 6, 1, "", "SIGABRT"], [170, 6, 1, "", "SIGALRM"], [170, 6, 1, "", "SIGBUS"], [170, 6, 1, "", "SIGCHLD"], [170, 6, 1, "", "SIGCLD"], [170, 6, 1, "", "SIGCONT"], [170, 6, 1, "", "SIGFPE"], [170, 6, 1, "", "SIGHUP"], [170, 6, 1, "", "SIGILL"], [170, 6, 1, "", "SIGINT"], [170, 6, 1, "", "SIGIO"], [170, 6, 1, "", "SIGIOT"], [170, 6, 1, "", "SIGKILL"], [170, 6, 1, "", "SIGPIPE"], [170, 6, 1, "", "SIGPOLL"], [170, 6, 1, "", "SIGPROF"], [170, 6, 1, "", "SIGPWR"], [170, 6, 1, "", "SIGQUIT"], [170, 6, 1, "", "SIGRTMAX"], [170, 6, 1, "", "SIGRTMIN"], [170, 6, 1, "", "SIGSEGV"], [170, 6, 1, "", "SIGSTOP"], [170, 6, 1, "", "SIGSYS"], [170, 6, 1, "", "SIGTERM"], [170, 6, 1, "", "SIGTRAP"], [170, 6, 1, "", "SIGTSTP"], [170, 6, 1, "", "SIGTTIN"], [170, 6, 1, "", "SIGTTOU"], [170, 6, 1, "", "SIGURG"], [170, 6, 1, "", "SIGUSR1"], [170, 6, 1, "", "SIGUSR2"], [170, 6, 1, "", "SIGVTALRM"], [170, 6, 1, "", "SIGWINCH"], [170, 6, 1, "", "SIGXCPU"], [170, 6, 1, "", "SIGXFSZ"]], "signal.struct_siginfo": [[170, 6, 1, "", "n_fields"], [170, 6, 1, "", "n_sequence_fields"], [170, 6, 1, "", "n_unnamed_fields"], [170, 6, 1, "", "si_band"], [170, 6, 1, "", "si_code"], [170, 6, 1, "", "si_errno"], [170, 6, 1, "", "si_pid"], [170, 6, 1, "", "si_signo"], [170, 6, 1, "", "si_status"], [170, 6, 1, "", "si_uid"]], "spatial": [[182, 0, 0, "-", "array"], [181, 1, 1, "", "brute_force_local_2d_maxima"], [183, 0, 0, "-", "dct"], [184, 0, 0, "-", "distance"], [185, 0, 0, "-", "fftzeros"], [186, 0, 0, "-", "kernels"], [187, 0, 0, "-", "phase"], [188, 0, 0, "-", "spatialPSD"], [189, 0, 0, "-", "spiking"], [190, 0, 0, "-", "triangulation"], [191, 0, 0, "-", "wave_parametric_models"]], "spatial.array": [[182, 1, 1, "", "array_average_amplitude"], [182, 1, 1, "", "array_count_centers"], [182, 1, 1, "", "array_count_critical"], [182, 1, 1, "", "array_kuramoto"], [182, 1, 1, "", "array_kuramoto_pgd"], [182, 1, 1, "", "array_kuramoto_pgd_standard_deviation"], [182, 1, 1, "", "array_kuramoto_standard_deviation"], [182, 1, 1, "", "array_phase_gradient"], [182, 1, 1, "", "array_phasegradient_local"], [182, 1, 1, "", "array_phasegradient_magnitude_cv"], [182, 1, 1, "", "array_phasegradient_magnitude_sigma"], [182, 1, 1, "", "array_phasegradient_pgd_threshold"], [182, 1, 1, "", "array_phasegradient_planar"], [182, 1, 1, "", "array_speed_local"], [182, 1, 1, "", "array_speed_pgd_threshold"], [182, 1, 1, "", "array_synchrony"], [182, 1, 1, "", "array_synchrony_pgd"], [182, 1, 1, "", "array_synchrony_pgd_standard_deviation"], [182, 1, 1, "", "array_synchrony_standard_deviation"], [182, 1, 1, "", "array_wavelength_local"], [182, 1, 1, "", "array_wavelength_local_pgd_threshold"], [182, 1, 1, "", "array_wavelength_pgd_threshold"], [182, 1, 1, "", "array_wavelength_planar"], [182, 1, 1, "", "pack_array_data"], [182, 1, 1, "", "trim_array"], [182, 1, 1, "", "trim_array_as_if"]], "spatial.dct": [[183, 1, 1, "", "dct_cut"], [183, 1, 1, "", "dct_cut_antialias"], [183, 1, 1, "", "dct_cut_downsampled"], [183, 1, 1, "", "dct_upsample"], [183, 1, 1, "", "dct_upsample_notrim"], [183, 1, 1, "", "get_mask"], [183, 1, 1, "", "get_mask_antialiased"], [183, 1, 1, "", "iterated_upsample"], [183, 1, 1, "", "outer_complex"]], "spatial.distance": [[184, 1, 1, "", "distance_angular_deviation"], [184, 1, 1, "", "get_average_synchrony_length_constant_parallel"], [184, 1, 1, "", "get_averaged_angular_distance"], [184, 1, 1, "", "get_electrode_locations"], [184, 1, 1, "", "get_length_constant_trial"], [184, 1, 1, "", "get_pair_distance"], [184, 1, 1, "", "synchrony_length_constant_areas_summary"]], "spatial.fftzeros": [[185, 1, 1, "", "coalesce"], [185, 1, 1, "", "coalesce_points"], [185, 1, 1, "", "cut_array_data"], [185, 1, 1, "", "dPhidx"], [185, 1, 1, "", "dPhidy"], [185, 1, 1, "", "find_critical_points"], [185, 1, 1, "", "find_critical_potential_points"], [185, 1, 1, "", "get_critical_spectra"], [185, 1, 1, "", "get_phase_gradient_as_complex"], [185, 1, 1, "", "getp"], [185, 1, 1, "", "getpeaks2d"], [185, 1, 1, "", "grad"], [185, 1, 1, "", "mirror2D"], [185, 1, 1, "", "plot_critical_points"], [185, 1, 1, "", "plot_critical_spectra"], [185, 1, 1, "", "plot_phase_direction"], [185, 1, 1, "", "plot_phase_gradient"], [185, 1, 1, "", "quickgrad"]], "spatial.kernels": [[186, 1, 1, "", "absorbing_gaussian"], [186, 1, 1, "", "absorbing_laplacian"], [186, 1, 1, "", "continuum_kernel"], [186, 1, 1, "", "cosine_kernel"], [186, 1, 1, "", "diffusion_basis"], [186, 1, 1, "", "exponential_basis"], [186, 1, 1, "", "gaussian_2D_kernel"], [186, 1, 1, "", "iterative_orthogonalize_basis"], [186, 1, 1, "", "laplace_kernel"], [186, 1, 1, "", "laplacian"], [186, 1, 1, "", "log_cosine_basis"], [186, 1, 1, "", "log_spline_basis"], [186, 1, 1, "", "magickernel"], [186, 1, 1, "", "magicsharp"], [186, 1, 1, "", "make_cosine_basis"]], "spatial.phase": [[187, 1, 1, "", "analytic_signal_coherence"], [187, 1, 1, "", "population_average_amplitude"], [187, 1, 1, "", "population_kuramoto"], [187, 1, 1, "", "population_median_frequency"], [187, 1, 1, "", "population_median_phase_velocity"], [187, 1, 1, "", "population_normalized_sliding_signal_coherence"], [187, 1, 1, "", "population_phase_coherence"], [187, 1, 1, "", "population_phase_relative_sliding_kuramoto"], [187, 1, 1, "", "population_polar_std"], [187, 1, 1, "", "population_signal_amplitude_dispersion"], [187, 1, 1, "", "population_signal_amplitude_precision"], [187, 1, 1, "", "population_signal_amplitude_std"], [187, 1, 1, "", "population_signal_concentration"], [187, 1, 1, "", "population_signal_description"], [187, 1, 1, "", "population_signal_dispersion"], [187, 1, 1, "", "population_signal_phase_dispersion"], [187, 1, 1, "", "population_signal_phase_precision"], [187, 1, 1, "", "population_signal_phase_std"], [187, 1, 1, "", "population_signal_precision"], [187, 1, 1, "", "population_sliding_signal_coherence"], [187, 1, 1, "", "population_synchrony"], [187, 1, 1, "", "population_synchrony_linear"], [187, 1, 1, "", "sliding_population_signal_coherence"]], "spatial.spatialPSD": [[188, 1, 1, "", "all_spatial_PSD_parallel"], [188, 1, 1, "", "psd2d"], [188, 1, 1, "", "spatialPSD_length_scale_spectrum"], [188, 1, 1, "", "spatialPSD_parallel_wrapper"]], "spatial.spiking": [[189, 1, 1, "", "interp_bin"]], "spatial.triangulation": [[190, 1, 1, "", "coalesce"], [190, 1, 1, "", "edgesNearby"], [190, 1, 1, "", "mergeNearby"], [190, 1, 1, "", "plot_edges"], [190, 1, 1, "", "plot_triangles"], [190, 1, 1, "", "trianglesToEdges"], [190, 1, 1, "", "uniquerow"], [190, 1, 1, "", "z2xy"]], "spatial.wave_parametric_models": [[191, 1, 1, "", "averaged_directionality_index"], [191, 1, 1, "", "directionality_index"], [191, 1, 1, "", "frame_synchrony"], [191, 1, 1, "", "heuristic_B_double_planar"], [191, 1, 1, "", "heuristic_B_planar"], [191, 1, 1, "", "heuristic_B_polar"], [191, 1, 1, "", "heuristic_B_standing"], [191, 1, 1, "", "heuristic_B_synchronous"], [191, 1, 1, "", "heuristic_solver_double_planar"], [191, 1, 1, "", "heuristic_solver_planar"], [191, 1, 1, "", "heuristic_solver_polar"], [191, 1, 1, "", "heuristic_solver_standing"], [191, 1, 1, "", "heuristic_solver_synchronous"], [191, 1, 1, "", "makeLSQminimizerDoublePlane"], [191, 1, 1, "", "makeLSQminimizerPlane"], [191, 1, 1, "", "makeLSQminimizerPolar"], [191, 1, 1, "", "makeLSQminimizerStanding"], [191, 1, 1, "", "makeLSQminimizerSynchronous"], [191, 1, 1, "", "pairwise_phase_difference"], [191, 1, 1, "", "phase_gradient"], [191, 1, 1, "", "phase_unwrap"], [191, 1, 1, "", "plotdata"], [191, 1, 1, "", "predict"], [191, 1, 1, "", "spatial_phase_gradient"], [191, 1, 1, "", "synchrony"], [191, 1, 1, "", "zscore"]], "spikes": [[193, 0, 0, "-", "spikes"], [194, 0, 0, "-", "waveform"]], "spikes.spikes": [[193, 1, 1, "", "bin_spike_times"], [193, 1, 1, "", "bin_spikes_raster"], [193, 1, 1, "", "cut_spikes"], [193, 1, 1, "", "pack_cross_correlation_matrix"], [193, 1, 1, "", "pp_xcorr"], [193, 1, 1, "", "times_to_raster"], [193, 1, 1, "", "txcorr"]], "spikes.waveform": [[194, 1, 1, "", "getFWHM"], [194, 1, 1, "", "getPHP"], [194, 1, 1, "", "getPT"], [194, 1, 1, "", "getPTHW"], [194, 1, 1, "", "getPVT"], [194, 1, 1, "", "getWAHP"], [194, 1, 1, "", "is_thin"], [194, 1, 1, "", "is_thin_pvt"], [194, 1, 1, "", "minmax"], [194, 1, 1, "", "normalized_waveform"], [194, 1, 1, "", "process"], [194, 1, 1, "", "realign"], [194, 1, 1, "", "realign_special"]], "stats": [[196, 0, 0, "-", "GLMFit"], [197, 0, 0, "-", "Gaussian"], [195, 1, 1, "", "add_constant"], [195, 1, 1, "", "block_shuffle"], [198, 0, 0, "-", "circular"], [199, 0, 0, "-", "convolutional"], [195, 1, 1, "", "covariance"], [195, 1, 1, "", "crossvalidated_least_squares"], [200, 0, 0, "-", "density"], [195, 2, 1, "", "description"], [201, 0, 0, "-", "distributions"], [202, 0, 0, "-", "entropy"], [203, 0, 0, "-", "fast_kde"], [195, 1, 1, "", "find"], [204, 0, 0, "-", "glm"], [205, 0, 0, "-", "gmm"], [206, 0, 0, "-", "history_basis"], [207, 0, 0, "-", "hmm"], [208, 0, 0, "-", "information"], [209, 0, 0, "-", "kent_reimann"], [210, 0, 0, "-", "lessons"], [212, 0, 0, "-", "mcint"], [213, 0, 0, "-", "minimize"], [214, 0, 0, "-", "mixtures"], [215, 0, 0, "-", "modefind"], [216, 0, 0, "-", "mvg"], [195, 1, 1, "", "nrmse"], [195, 1, 1, "", "outliers"], [195, 1, 1, "", "partition_data"], [195, 1, 1, "", "partition_data_for_crossvalidation"], [195, 1, 1, "", "partition_trials_for_crossvalidation"], [195, 1, 1, "", "pca"], [195, 1, 1, "", "polar_error"], [195, 1, 1, "", "print_stats"], [217, 0, 0, "-", "pvalues"], [218, 0, 0, "-", "regressions"], [195, 1, 1, "", "reject_outliers"], [219, 0, 0, "-", "sde"], [220, 0, 0, "-", "spatiotemporal_glm_utils"], [195, 1, 1, "", "trial_crossvalidated_least_squares"], [195, 1, 1, "", "weighted_avg_and_std"]], "stats.GLMFit": [[196, 1, 1, "", "glmfit"]], "stats.Gaussian": [[197, 2, 1, "", "Gaussian"], [197, 1, 1, "", "gaussian_quadrature"], [197, 1, 1, "", "gaussian_quadrature_logarithmic"]], "stats.Gaussian.Gaussian": [[197, 3, 1, "", "logpdf"]], "stats.circular": [[198, 1, 1, "", "abspolar_stats"], [198, 1, 1, "", "complex_gaussian"], [198, 1, 1, "", "fit_vonmises"], [198, 1, 1, "", "logpolar_gaussian"], [198, 1, 1, "", "logpolar_stats"], [198, 1, 1, "", "squared_first_circular_moment"]], "stats.convolutional": [[199, 1, 1, "", "autocorrelation_bayes"], [199, 1, 1, "", "blockccm"], [199, 1, 1, "", "blocksta"], [199, 1, 1, "", "ccm"], [199, 1, 1, "", "ccor"], [199, 1, 1, "", "construct_lowpass_operator"], [199, 1, 1, "", "create_spectral_model"], [199, 1, 1, "", "cspect"], [199, 1, 1, "", "cspectm"], [199, 1, 1, "", "reconstruct"], [199, 1, 1, "", "spectreconstruct"], [199, 1, 1, "", "spike_lfp_filters"], [199, 1, 1, "", "sta"]], "stats.density": [[200, 1, 1, "", "adaptive_density_grid"], [200, 1, 1, "", "gridhist"], [200, 1, 1, "", "kdepeak"], [200, 1, 1, "", "knn_1d_density"]], "stats.description": [[195, 3, 1, "", "short"]], "stats.distributions": [[201, 1, 1, "", "explogpdf"], [201, 1, 1, "", "gaussian_logpdf"], [201, 1, 1, "", "gaussian_pdf"], [201, 1, 1, "", "poisson_logpdf"], [201, 1, 1, "", "poisson_pdf"], [201, 1, 1, "", "sample_categorical"]], "stats.entropy": [[202, 1, 1, "", "discrete_entropy_distribution"], [202, 1, 1, "", "discrete_entropy_samples"], [202, 1, 1, "", "poisson_entropy_nats"], [202, 1, 1, "", "regularized_discrete_entropy"]], "stats.fast_kde": [[203, 1, 1, "", "fast_kde"], [203, 1, 1, "", "image_cov"]], "stats.glm": [[204, 1, 1, "", "GLMPenaltyBernoulli"], [204, 1, 1, "", "GLMPenaltyL2"], [204, 1, 1, "", "GLMPenaltyPoisson"], [204, 1, 1, "", "cosine_kernel"], [204, 1, 1, "", "crossvalidatedAUC"], [204, 1, 1, "", "fitGLM"], [204, 1, 1, "", "gradientglmfit"], [204, 1, 1, "", "log_cosine_basis"], [204, 1, 1, "", "make_cosine_basis"], [204, 1, 1, "", "numeric_grad"], [204, 1, 1, "", "numeric_hess"], [204, 1, 1, "", "ppglmfit"], [204, 1, 1, "", "sexp"], [204, 1, 1, "", "sigmoid"]], "stats.gmm": [[205, 1, 1, "", "GMM"], [205, 1, 1, "", "GMM1D"]], "stats.history_basis": [[206, 1, 1, "", "history_basis"]], "stats.hmm": [[207, 2, 1, "", "BernoulliObservationApproximator"], [207, 2, 1, "", "BernoulliObservationModel"], [207, 2, 1, "", "ChisquareCoxApproximator"], [207, 2, 1, "", "ChisquareCoxModel"], [207, 2, 1, "", "DiffusionGaussian"], [207, 2, 1, "", "GaussianCoxApproximator"], [207, 2, 1, "", "GaussianCoxModel"], [207, 2, 1, "", "LogGaussianCoxApproximator"], [207, 2, 1, "", "LogGaussianCoxModel"], [207, 2, 1, "", "MVGOUUpdate"], [207, 2, 1, "", "MVGUpdate"], [207, 2, 1, "", "MVGaussian"], [207, 2, 1, "", "MVLogGaussianCox"], [207, 2, 1, "", "OUGaussian"], [207, 2, 1, "", "PoissonObservationApproximator"], [207, 2, 1, "", "PoissonObservationModel"], [207, 2, 1, "", "TruncatedLogGaussianCoxApproximator"], [207, 2, 1, "", "TruncatedLogGaussianCoxModel"], [207, 2, 1, "", "TruncatedPoissonObservationApproximator"], [207, 2, 1, "", "TruncatedPoissonObservationModel"], [207, 1, 1, "", "backward_abstract"], [207, 1, 1, "", "baum_welch"], [207, 1, 1, "", "forward_abstract"], [207, 1, 1, "", "forward_backward"], [207, 1, 1, "", "forward_backward_abstract"], [207, 1, 1, "", "hasNaN"], [207, 1, 1, "", "jump"], [207, 1, 1, "", "lgcp_observation_minimizer"], [207, 1, 1, "", "log_likelihood"], [207, 1, 1, "", "poisson_baum_welch"], [207, 1, 1, "", "poisson_parameter_guess"], [207, 1, 1, "", "poisson_viterbi_state_infer"], [207, 1, 1, "", "sample"], [207, 1, 1, "", "viterbi"], [207, 1, 1, "", "viterbi_log"]], "stats.hmm.DiffusionGaussian": [[207, 3, 1, "", "bwd"], [207, 3, 1, "", "fwd"]], "stats.hmm.MVGOUUpdate": [[207, 3, 1, "", "bwd"], [207, 3, 1, "", "fwd"]], "stats.hmm.MVGUpdate": [[207, 3, 1, "", "bwd"], [207, 3, 1, "", "fwd"]], "stats.hmm.MVLogGaussianCox": [[207, 2, 1, "", "MVPoissonApproximator"]], "stats.hmm.OUGaussian": [[207, 3, 1, "", "bwd"], [207, 3, 1, "", "fwd"]], "stats.information": [[208, 1, 1, "", "DKL_discrete"]], "stats.kent_reimann": [[209, 1, 1, "", "complex2riemann"], [209, 1, 1, "", "kentPDF"], [209, 1, 1, "", "kentPDFRiemann"], [209, 1, 1, "", "riemann2complex"], [209, 1, 1, "", "rotatex"], [209, 1, 1, "", "rotatey"], [209, 1, 1, "", "rotatez"]], "stats.lessons": [[210, 2, 1, "", "PGOM"], [210, 1, 1, "", "add_spikes"], [210, 1, 1, "", "infer_states_Gaussian_ADF"], [210, 1, 1, "", "precision1D"], [210, 1, 1, "", "sample_ou_process"], [210, 1, 1, "", "sample_wiener_process"], [210, 1, 1, "", "showim"]], "stats.lessons.PGOM": [[210, 2, 1, "", "Approximate"]], "stats.mcint": [[212, 1, 1, "", "monte_carlo_expectation"], [212, 1, 1, "", "monte_carlo_moments"]], "stats.minimize": [[213, 5, 1, "", "FailureError"], [213, 1, 1, "", "current_milli_time"], [213, 1, 1, "", "minimize_retry"], [213, 1, 1, "", "v2str_long"]], "stats.mixtures": [[214, 1, 1, "", "two_class_poisson_mixture_model"]], "stats.modefind": [[215, 1, 1, "", "logmode"], [215, 1, 1, "", "logmodeplot"], [215, 1, 1, "", "modefind"], [215, 1, 1, "", "peakfinder5"]], "stats.mvg": [[216, 1, 1, "", "MVG_DKL"], [216, 1, 1, "", "MVG_DKL_CP"], [216, 1, 1, "", "MVG_PDF"], [216, 1, 1, "", "MVG_check"], [216, 1, 1, "", "MVG_conditional"], [216, 1, 1, "", "MVG_divide"], [216, 1, 1, "", "MVG_entropy"], [216, 1, 1, "", "MVG_kalman"], [216, 1, 1, "", "MVG_kalman_P_inverseA"], [216, 1, 1, "", "MVG_kalman_joint"], [216, 1, 1, "", "MVG_kalman_joint_P"], [216, 1, 1, "", "MVG_logPDF"], [216, 1, 1, "", "MVG_multiply"], [216, 1, 1, "", "MVG_multiply_C"], [216, 1, 1, "", "MVG_projection"], [216, 1, 1, "", "MVG_sample"], [216, 1, 1, "", "randn"]], "stats.pvalues": [[217, 1, 1, "", "benjamini_hochberg_positive_correlations"], [217, 1, 1, "", "bootstrap_compare_mean"], [217, 1, 1, "", "bootstrap_compare_median"], [217, 1, 1, "", "bootstrap_compare_statistic_two_sided"], [217, 1, 1, "", "bootstrap_compare_statistic_two_sided_parallel"], [217, 1, 1, "", "bootstrap_mean"], [217, 1, 1, "", "bootstrap_median"], [217, 1, 1, "", "bootstrap_statistic_two_sided"], [217, 1, 1, "", "correct_pvalues"], [217, 1, 1, "", "correct_pvalues_positive_dependent"], [217, 1, 1, "", "sample_parallel_helper"]], "stats.regressions": [[218, 1, 1, "", "damped_cosine"], [218, 1, 1, "", "exponential_decay"], [218, 1, 1, "", "gaussian_function"], [218, 1, 1, "", "half_gaussian_function"], [218, 1, 1, "", "power_law"], [218, 1, 1, "", "robust_line"], [218, 1, 1, "", "weighted_least_squares"]], "stats.sde": [[219, 1, 1, "", "sample_ou_process"]], "stats.spatiotemporal_glm_utils": [[220, 1, 1, "", "GLMPenaltyL2_subsampled"], [220, 1, 1, "", "gradientglmfit_subsampled"], [220, 1, 1, "", "isInt"], [220, 1, 1, "", "local_ch_map"], [220, 1, 1, "", "orthogonalize"], [220, 1, 1, "", "plot_histfilter"], [220, 1, 1, "", "plot_spatiotemporal"], [220, 1, 1, "", "spatiotemporal_history"], [220, 1, 1, "", "spatiotemporal_history_projection"]], "system": [[222, 1, 1, "", "execfile"], [222, 1, 1, "", "query_yes_no"]], "tools": [[223, 1, 1, "", "amap"], [223, 1, 1, "", "arraymap"], [223, 1, 1, "", "asiterable"], [223, 1, 1, "", "c2p"], [223, 1, 1, "", "camel2underscore"], [223, 1, 1, "", "clear"], [223, 1, 1, "", "current_milli_time"], [223, 1, 1, "", "debug"], [223, 1, 1, "", "dowarn"], [223, 2, 1, "", "emitter"], [223, 1, 1, "", "ensure_dir"], [223, 1, 1, "", "exists"], [223, 1, 1, "", "ezip"], [223, 1, 1, "", "find"], [223, 1, 1, "", "find_all_extension"], [223, 1, 1, "", "getVariable"], [223, 1, 1, "", "getdict"], [223, 1, 1, "", "getsize"], [223, 1, 1, "", "globalize"], [223, 1, 1, "", "history"], [223, 1, 1, "", "invert_permutation"], [223, 1, 1, "", "lmap"], [223, 1, 1, "", "mapdict"], [223, 1, 1, "", "matlab"], [223, 1, 1, "", "metaloadmat"], [223, 1, 1, "", "now"], [223, 1, 1, "", "nowarn"], [223, 1, 1, "", "okwarn"], [223, 1, 1, "", "oneslike"], [223, 1, 1, "", "p2c"], [223, 2, 1, "", "piper"], [223, 1, 1, "", "restoreContext"], [223, 1, 1, "", "saveContext"], [223, 1, 1, "", "setinrange"], [223, 2, 1, "", "stuff"], [223, 1, 1, "", "tic"], [223, 1, 1, "", "toc"], [223, 1, 1, "", "today"], [223, 1, 1, "", "underscore2camel"], [223, 1, 1, "", "varexists"], [223, 1, 1, "", "wait"], [223, 1, 1, "", "waitfor"], [223, 1, 1, "", "warn"], [223, 1, 1, "", "zeroslike"]], "tools.stuff": [[223, 3, 1, "", "add"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "attribute", "Python attribute"]}, "titleterms": {"depend": [0, 51], "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "function": [1, 6, 13, 55, 60, 67], "getfftw": [2, 56], "gpu": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "packag": [3, 4, 8, 10, 21, 28, 35, 39, 42, 46, 50, 52, 57, 58, 62, 64, 75, 86, 93, 97, 100, 104, 109, 120, 134, 137, 170, 181, 192, 195], "subpackag": [3, 39, 42, 50, 57, 97, 100], "content": [3, 4, 8, 10, 21, 27, 28, 35, 39, 42, 46, 50, 52, 57, 58, 62, 64, 75, 86, 93, 97, 100, 104, 109, 120, 134, 137, 170, 181, 192, 195], "cl": [4, 5, 6, 7, 58, 59, 60, 61], "submodul": [4, 8, 10, 21, 28, 35, 39, 42, 46, 50, 52, 58, 62, 64, 75, 86, 93, 97, 100, 104, 109, 120, 134, 137, 170, 181, 192, 195], "devic": [5, 12, 59, 66], "matrix": [7, 17, 37, 61, 71, 95], "cpu": [8, 9, 62, 63], "util": [9, 63], "cu": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74], "convolut": [11, 65, 141, 199], "gpufun": [14, 68], "graph": [15, 69], "logic": [16, 70], "plot": [18, 25, 72, 82], "sequenc": [19, 73], "statist": [20, 74], "graphic": [21, 22, 23, 24, 25, 26, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "color": [22, 76], "imag": [23, 80], "matplotlib": [24, 81], "pygam": [26, 83], "welcom": 27, "neurotool": [27, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "": 27, "document": 27, "indic": 27, "tabl": 27, "job": [28, 29, 30, 31, 32, 33, 34, 86, 87, 88, 89, 90, 91, 92], "cach": [29, 87], "closur": [30, 88], "decor": 31, "filenam": [32, 89], "initialize_system_cach": [33, 90], "parallel": [34, 92], "linalg": [35, 36, 37, 38, 93, 94, 95, 96], "argument": [36, 94], "oper": [38, 96], "model": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106], "izh": [40, 98], "lif": [41, 99], "rbm": [42, 43, 44, 45, 46, 47, 48, 100, 101, 102, 103, 104, 105, 106], "rbm_helper": [44, 102], "rbm_sampl": [45, 103], "rbm_util": [46, 47, 48, 104, 105, 106], "stutil": [48, 106], "encod": [52, 53, 54], "huffman": 53, "naryhuffman": 54, "colormap": 77, "dendron": 78, "fabio_map": 79, "ztransform_plot_help": 84, "hdfmat": 85, "ndecor": 91, "nlab": [107, 168], "opto": [108, 169], "signal": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "coher": [110, 171], "conv": [111, 172], "linenois": [112, 173], "morlet": [113, 174], "morlet_coher": [114, 175], "multitap": [115, 176], "ppc": [116, 177], "reson": [117, 178], "savitskygolai": [118, 179], "spatial": [120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "arrai": [121, 182], "dct": [122, 183], "distanc": [123, 184], "fftzero": [124, 185], "geometri": 125, "kernel": [126, 186], "mask": 127, "phase": [128, 187], "point": 129, "spatialpsd": [130, 188], "spike": [131, 134, 135, 136, 189, 192, 193, 194], "triangul": [132, 190], "wave_parametric_model": [133, 191], "waveform": [136, 194], "stat": [137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "glmfit": [138, 196], "gaussian": [139, 197], "circular": [140, 198], "densiti": [142, 200], "distribut": [143, 201], "entropi": [144, 202], "fast_kd": [145, 203], "glm": [146, 204], "gmm": [147, 205], "grid_search": 148, "history_basi": [149, 206], "hmm": [150, 207], "inform": [151, 208], "kent_reimann": [152, 209], "lesson": [153, 210], "matzner_bar": [154, 211], "gad_plos_2015": [154, 211], "mcint": [155, 212], "minim": [156, 213], "mixtur": [157, 214], "modefind": [158, 215], "mvg": [159, 216], "pvalu": [160, 217], "regress": [161, 218], "sde": [162, 219], "spatiotemporal_glm_util": [163, 220], "system": [165, 222], "text": 166, "tool": [167, 223]}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"dependencies module": [[0, "dependencies-module"]], "functions module": [[1, "module-functions"]], "getfftw module": [[2, "module-getfftw"]], "gpu package": [[3, "gpu-package"]], "Subpackages": [[3, "subpackages"], [39, "subpackages"], [42, "subpackages"], [50, "subpackages"], [57, "subpackages"], [97, "subpackages"], [100, "subpackages"]], "Module contents": [[3, "module-gpu"], [4, "module-gpu.cl"], [8, "module-gpu.cpu"], [10, "module-gpu.cu"], [21, "module-graphics"], [28, "module-jobs"], [35, "module-linalg"], [39, "module-models"], [42, "module-models.rbm"], [46, "module-models.rbm.rbm_utils"], [50, "module-neurotools"], [52, "module-neurotools.encoding"], [57, "module-neurotools.gpu"], [58, "module-neurotools.gpu.cl"], [62, "module-neurotools.gpu.cpu"], [64, "module-neurotools.gpu.cu"], [75, "module-neurotools.graphics"], [86, "module-neurotools.jobs"], [93, "module-neurotools.linalg"], [97, "module-neurotools.models"], [100, "module-neurotools.models.rbm"], [104, "module-neurotools.models.rbm.rbm_utils"], [109, "module-neurotools.signal"], [120, "module-neurotools.spatial"], [134, "module-neurotools.spikes"], [137, "module-neurotools.stats"], [170, "module-signal"], [181, "module-spatial"], [192, "module-spikes"], [195, "module-stats"]], "gpu.cl package": [[4, "gpu-cl-package"]], "Submodules": [[4, "submodules"], [8, "submodules"], [10, "submodules"], [21, "submodules"], [28, "submodules"], [35, "submodules"], [39, "submodules"], [42, "submodules"], [46, "submodules"], [50, "submodules"], [52, "submodules"], [58, "submodules"], [62, "submodules"], [64, "submodules"], [75, "submodules"], [86, "submodules"], [93, "submodules"], [97, "submodules"], [100, "submodules"], [104, "submodules"], [109, "submodules"], [120, "submodules"], [134, "submodules"], [137, "submodules"], [170, "submodules"], [181, "submodules"], [192, "submodules"], [195, "submodules"]], "gpu.cl.device module": [[5, "module-gpu.cl.device"]], "gpu.cl.function module": [[6, "module-gpu.cl.function"]], "gpu.cl.matrix module": [[7, "gpu-cl-matrix-module"]], "gpu.cpu package": [[8, "gpu-cpu-package"]], "gpu.cpu.util module": [[9, "module-gpu.cpu.util"]], "gpu.cu package": [[10, "gpu-cu-package"]], "gpu.cu.convolution module": [[11, "module-gpu.cu.convolution"]], "gpu.cu.device module": [[12, "module-gpu.cu.device"]], "gpu.cu.function module": [[13, "module-gpu.cu.function"]], "gpu.cu.gpufun module": [[14, "module-gpu.cu.gpufun"]], "gpu.cu.graph module": [[15, "module-gpu.cu.graph"]], "gpu.cu.logic module": [[16, "module-gpu.cu.logic"]], "gpu.cu.matrix module": [[17, "gpu-cu-matrix-module"]], "gpu.cu.plot module": [[18, "module-gpu.cu.plot"]], "gpu.cu.sequence module": [[19, "module-gpu.cu.sequence"]], "gpu.cu.statistics module": [[20, "module-gpu.cu.statistics"]], "graphics package": [[21, "graphics-package"]], "graphics.color module": [[22, "module-graphics.color"]], "graphics.image module": [[23, "module-graphics.image"]], "graphics.matplotlib module": [[24, "module-graphics.matplotlib"]], "graphics.plot module": [[25, "module-graphics.plot"]], "graphics.pygame module": [[26, "module-graphics.pygame"]], "Welcome to Neurotools\u2019s documentation!": [[27, "welcome-to-neurotools-s-documentation"]], "Indices and tables": [[27, "indices-and-tables"]], "Contents:": [[27, null]], "jobs package": [[28, "jobs-package"]], "jobs.cache module": [[29, "module-jobs.cache"]], "jobs.closure module": [[30, "module-jobs.closure"]], "jobs.decorator module": [[31, "jobs-decorator-module"]], "jobs.filenames module": [[32, "module-jobs.filenames"]], "jobs.initialize_system_cache module": [[33, "module-jobs.initialize_system_cache"]], "jobs.parallel module": [[34, "module-jobs.parallel"]], "linalg package": [[35, "linalg-package"]], "linalg.arguments module": [[36, "module-linalg.arguments"]], "linalg.matrix module": [[37, "module-linalg.matrix"]], "linalg.operators module": [[38, "module-linalg.operators"]], "models package": [[39, "models-package"]], "models.izh module": [[40, "module-models.izh"]], "models.lif module": [[41, "module-models.lif"]], "models.rbm package": [[42, "models-rbm-package"]], "models.rbm.rbm module": [[43, "module-models.rbm.rbm"]], "models.rbm.rbm_helper module": [[44, "module-models.rbm.rbm_helper"]], "models.rbm.rbm_sample module": [[45, "module-models.rbm.rbm_sample"]], "models.rbm.rbm_utils package": [[46, "models-rbm-rbm-utils-package"]], "models.rbm.rbm_utils.rbm module": [[47, "module-models.rbm.rbm_utils.rbm"]], "models.rbm.rbm_utils.stutils module": [[48, "module-models.rbm.rbm_utils.stutils"]], "neurotools": [[49, "neurotools"]], "neurotools package": [[50, "neurotools-package"]], "neurotools.dependencies module": [[51, "neurotools-dependencies-module"]], "neurotools.encoding package": [[52, "neurotools-encoding-package"]], "neurotools.encoding.Huffman module": [[53, "module-neurotools.encoding.Huffman"]], "neurotools.encoding.NaryHuffman module": [[54, "module-neurotools.encoding.NaryHuffman"]], "neurotools.functions module": [[55, "module-neurotools.functions"]], "neurotools.getfftw module": [[56, "module-neurotools.getfftw"]], "neurotools.gpu package": [[57, "neurotools-gpu-package"]], "neurotools.gpu.cl package": [[58, "neurotools-gpu-cl-package"]], "neurotools.gpu.cl.device module": [[59, "module-neurotools.gpu.cl.device"]], "neurotools.gpu.cl.function module": [[60, "module-neurotools.gpu.cl.function"]], "neurotools.gpu.cl.matrix module": [[61, "neurotools-gpu-cl-matrix-module"]], "neurotools.gpu.cpu package": [[62, "neurotools-gpu-cpu-package"]], "neurotools.gpu.cpu.util module": [[63, "module-neurotools.gpu.cpu.util"]], "neurotools.gpu.cu package": [[64, "neurotools-gpu-cu-package"]], "neurotools.gpu.cu.convolution module": [[65, "module-neurotools.gpu.cu.convolution"]], "neurotools.gpu.cu.device module": [[66, "module-neurotools.gpu.cu.device"]], "neurotools.gpu.cu.function module": [[67, "module-neurotools.gpu.cu.function"]], "neurotools.gpu.cu.gpufun module": [[68, "module-neurotools.gpu.cu.gpufun"]], "neurotools.gpu.cu.graph module": [[69, "module-neurotools.gpu.cu.graph"]], "neurotools.gpu.cu.logic module": [[70, "module-neurotools.gpu.cu.logic"]], "neurotools.gpu.cu.matrix module": [[71, "neurotools-gpu-cu-matrix-module"]], "neurotools.gpu.cu.plot module": [[72, "module-neurotools.gpu.cu.plot"]], "neurotools.gpu.cu.sequence module": [[73, "module-neurotools.gpu.cu.sequence"]], "neurotools.gpu.cu.statistics module": [[74, "module-neurotools.gpu.cu.statistics"]], "neurotools.graphics package": [[75, "neurotools-graphics-package"]], "neurotools.graphics.color module": [[76, "module-neurotools.graphics.color"]], "neurotools.graphics.colormaps module": [[77, "module-neurotools.graphics.colormaps"]], "neurotools.graphics.dendron module": [[78, "module-neurotools.graphics.dendron"]], "neurotools.graphics.fabio_maps module": [[79, "module-neurotools.graphics.fabio_maps"]], "neurotools.graphics.image module": [[80, "module-neurotools.graphics.image"]], "neurotools.graphics.matplotlib module": [[81, "module-neurotools.graphics.matplotlib"]], "neurotools.graphics.plot module": [[82, "module-neurotools.graphics.plot"]], "neurotools.graphics.pygame module": [[83, "module-neurotools.graphics.pygame"]], "neurotools.graphics.ztransform_plot_helpers module": [[84, "neurotools-graphics-ztransform-plot-helpers-module"]], "neurotools.hdfmat module": [[85, "module-neurotools.hdfmat"]], "neurotools.jobs package": [[86, "neurotools-jobs-package"]], "neurotools.jobs.cache module": [[87, "module-neurotools.jobs.cache"]], "neurotools.jobs.closure module": [[88, "module-neurotools.jobs.closure"]], "neurotools.jobs.filenames module": [[89, "module-neurotools.jobs.filenames"]], "neurotools.jobs.initialize_system_cache module": [[90, "module-neurotools.jobs.initialize_system_cache"]], "neurotools.jobs.ndecorator module": [[91, "module-neurotools.jobs.ndecorator"]], "neurotools.jobs.parallel module": [[92, "module-neurotools.jobs.parallel"]], "neurotools.linalg package": [[93, "neurotools-linalg-package"]], "neurotools.linalg.arguments module": [[94, "module-neurotools.linalg.arguments"]], "neurotools.linalg.matrix module": [[95, "module-neurotools.linalg.matrix"]], "neurotools.linalg.operators module": [[96, "module-neurotools.linalg.operators"]], "neurotools.models package": [[97, "neurotools-models-package"]], "neurotools.models.izh module": [[98, "module-neurotools.models.izh"]], "neurotools.models.lif module": [[99, "module-neurotools.models.lif"]], "neurotools.models.rbm package": [[100, "neurotools-models-rbm-package"]], "neurotools.models.rbm.rbm module": [[101, "module-neurotools.models.rbm.rbm"]], "neurotools.models.rbm.rbm_helper module": [[102, "module-neurotools.models.rbm.rbm_helper"]], "neurotools.models.rbm.rbm_sample module": [[103, "module-neurotools.models.rbm.rbm_sample"]], "neurotools.models.rbm.rbm_utils package": [[104, "neurotools-models-rbm-rbm-utils-package"]], "neurotools.models.rbm.rbm_utils.rbm module": [[105, "module-neurotools.models.rbm.rbm_utils.rbm"]], "neurotools.models.rbm.rbm_utils.stutils module": [[106, "module-neurotools.models.rbm.rbm_utils.stutils"]], "neurotools.nlab module": [[107, "module-neurotools.nlab"]], "neurotools.opto module": [[108, "neurotools-opto-module"]], "neurotools.signal package": [[109, "neurotools-signal-package"]], "neurotools.signal.coherence module": [[110, "module-neurotools.signal.coherence"]], "neurotools.signal.conv module": [[111, "module-neurotools.signal.conv"]], "neurotools.signal.linenoise module": [[112, "module-neurotools.signal.linenoise"]], "neurotools.signal.morlet module": [[113, "module-neurotools.signal.morlet"]], "neurotools.signal.morlet_coherence module": [[114, "module-neurotools.signal.morlet_coherence"]], "neurotools.signal.multitaper module": [[115, "module-neurotools.signal.multitaper"]], "neurotools.signal.ppc module": [[116, "module-neurotools.signal.ppc"]], "neurotools.signal.resonator module": [[117, "module-neurotools.signal.resonator"]], "neurotools.signal.savitskygolay module": [[118, "module-neurotools.signal.savitskygolay"]], "neurotools.signal.signal module": [[119, "neurotools-signal-signal-module"]], "neurotools.spatial package": [[120, "neurotools-spatial-package"]], "neurotools.spatial.array module": [[121, "module-neurotools.spatial.array"]], "neurotools.spatial.dct module": [[122, "module-neurotools.spatial.dct"]], "neurotools.spatial.distance module": [[123, "module-neurotools.spatial.distance"]], "neurotools.spatial.fftzeros module": [[124, "module-neurotools.spatial.fftzeros"]], "neurotools.spatial.geometry module": [[125, "module-neurotools.spatial.geometry"]], "neurotools.spatial.kernels module": [[126, "module-neurotools.spatial.kernels"]], "neurotools.spatial.masking module": [[127, "module-neurotools.spatial.masking"]], "neurotools.spatial.phase module": [[128, "module-neurotools.spatial.phase"]], "neurotools.spatial.points module": [[129, "module-neurotools.spatial.points"]], "neurotools.spatial.spatialPSD module": [[130, "module-neurotools.spatial.spatialPSD"]], "neurotools.spatial.spiking module": [[131, "module-neurotools.spatial.spiking"]], "neurotools.spatial.triangulation module": [[132, "module-neurotools.spatial.triangulation"]], "neurotools.spatial.wave_parametric_models module": [[133, "module-neurotools.spatial.wave_parametric_models"]], "neurotools.spikes package": [[134, "neurotools-spikes-package"]], "neurotools.spikes.spikes module": [[135, "module-neurotools.spikes.spikes"]], "neurotools.spikes.waveform module": [[136, "module-neurotools.spikes.waveform"]], "neurotools.stats package": [[137, "neurotools-stats-package"]], "neurotools.stats.GLMFit module": [[138, "module-neurotools.stats.GLMFit"]], "neurotools.stats.Gaussian module": [[139, "module-neurotools.stats.Gaussian"]], "neurotools.stats.circular module": [[140, "module-neurotools.stats.circular"]], "neurotools.stats.convolutional module": [[141, "module-neurotools.stats.convolutional"]], "neurotools.stats.density module": [[142, "module-neurotools.stats.density"]], "neurotools.stats.distributions module": [[143, "module-neurotools.stats.distributions"]], "neurotools.stats.entropy module": [[144, "module-neurotools.stats.entropy"]], "neurotools.stats.fast_kde module": [[145, "module-neurotools.stats.fast_kde"]], "neurotools.stats.glm module": [[146, "module-neurotools.stats.glm"]], "neurotools.stats.gmm module": [[147, "module-neurotools.stats.gmm"]], "neurotools.stats.grid_search module": [[148, "module-neurotools.stats.grid_search"]], "neurotools.stats.history_basis module": [[149, "module-neurotools.stats.history_basis"]], "neurotools.stats.hmm module": [[150, "module-neurotools.stats.hmm"]], "neurotools.stats.information module": [[151, "module-neurotools.stats.information"]], "neurotools.stats.kent_reimann module": [[152, "module-neurotools.stats.kent_reimann"]], "neurotools.stats.lessons module": [[153, "module-neurotools.stats.lessons"]], "neurotools.stats.matzner_bar-gad_PLoS_2015 module": [[154, "neurotools-stats-matzner-bar-gad-plos-2015-module"]], "neurotools.stats.mcint module": [[155, "module-neurotools.stats.mcint"]], "neurotools.stats.minimize module": [[156, "module-neurotools.stats.minimize"]], "neurotools.stats.mixtures module": [[157, "module-neurotools.stats.mixtures"]], "neurotools.stats.modefind module": [[158, "module-neurotools.stats.modefind"]], "neurotools.stats.mvg module": [[159, "module-neurotools.stats.mvg"]], "neurotools.stats.pvalues module": [[160, "module-neurotools.stats.pvalues"]], "neurotools.stats.regressions module": [[161, "module-neurotools.stats.regressions"]], "neurotools.stats.sde module": [[162, "module-neurotools.stats.sde"]], "neurotools.stats.spatiotemporal_glm_utils module": [[163, "module-neurotools.stats.spatiotemporal_glm_utils"]], "neurotools.stats.stats module": [[164, "neurotools-stats-stats-module"]], "neurotools.system module": [[165, "module-neurotools.system"]], "neurotools.text module": [[166, "module-neurotools.text"]], "neurotools.tools module": [[167, "module-neurotools.tools"]], "nlab module": [[168, "module-nlab"]], "opto module": [[169, "opto-module"]], "signal package": [[170, "signal-package"]], "signal.coherence module": [[171, "signal-coherence-module"]], "signal.conv module": [[172, "signal-conv-module"]], "signal.linenoise module": [[173, "signal-linenoise-module"]], "signal.morlet module": [[174, "signal-morlet-module"]], "signal.morlet_coherence module": [[175, "signal-morlet-coherence-module"]], "signal.multitaper module": [[176, "signal-multitaper-module"]], "signal.ppc module": [[177, "signal-ppc-module"]], "signal.resonator module": [[178, "signal-resonator-module"]], "signal.savitskygolay module": [[179, "signal-savitskygolay-module"]], "signal.signal module": [[180, "module-signal.signal"]], "spatial package": [[181, "spatial-package"]], "spatial.array module": [[182, "module-spatial.array"]], "spatial.dct module": [[183, "module-spatial.dct"]], "spatial.distance module": [[184, "module-spatial.distance"]], "spatial.fftzeros module": [[185, "module-spatial.fftzeros"]], "spatial.kernels module": [[186, "module-spatial.kernels"]], "spatial.phase module": [[187, "module-spatial.phase"]], "spatial.spatialPSD module": [[188, "module-spatial.spatialPSD"]], "spatial.spiking module": [[189, "module-spatial.spiking"]], "spatial.triangulation module": [[190, "module-spatial.triangulation"]], "spatial.wave_parametric_models module": [[191, "module-spatial.wave_parametric_models"]], "spikes package": [[192, "spikes-package"]], "spikes.spikes module": [[193, "module-spikes.spikes"]], "spikes.waveform module": [[194, "module-spikes.waveform"]], "stats package": [[195, "stats-package"]], "stats.GLMFit module": [[196, "module-stats.GLMFit"]], "stats.Gaussian module": [[197, "module-stats.Gaussian"]], "stats.circular module": [[198, "module-stats.circular"]], "stats.convolutional module": [[199, "module-stats.convolutional"]], "stats.density module": [[200, "module-stats.density"]], "stats.distributions module": [[201, "module-stats.distributions"]], "stats.entropy module": [[202, "module-stats.entropy"]], "stats.fast_kde module": [[203, "module-stats.fast_kde"]], "stats.glm module": [[204, "module-stats.glm"]], "stats.gmm module": [[205, "module-stats.gmm"]], "stats.history_basis module": [[206, "module-stats.history_basis"]], "stats.hmm module": [[207, "module-stats.hmm"]], "stats.information module": [[208, "module-stats.information"]], "stats.kent_reimann module": [[209, "module-stats.kent_reimann"]], "stats.lessons module": [[210, "module-stats.lessons"]], "stats.matzner_bar-gad_PLoS_2015 module": [[211, "stats-matzner-bar-gad-plos-2015-module"]], "stats.mcint module": [[212, "module-stats.mcint"]], "stats.minimize module": [[213, "module-stats.minimize"]], "stats.mixtures module": [[214, "module-stats.mixtures"]], "stats.modefind module": [[215, "module-stats.modefind"]], "stats.mvg module": [[216, "module-stats.mvg"]], "stats.pvalues module": [[217, "module-stats.pvalues"]], "stats.regressions module": [[218, "module-stats.regressions"]], "stats.sde module": [[219, "module-stats.sde"]], "stats.spatiotemporal_glm_utils module": [[220, "module-stats.spatiotemporal_glm_utils"]], "stats.stats module": [[221, "stats-stats-module"]], "system module": [[222, "module-system"]], "tools module": [[223, "module-tools"]]}, "indexentries": {"dsigmoid() (in module functions)": [[1, "functions.dsigmoid"]], "f() (in module functions)": [[1, "functions.f"]], "f1() (in module functions)": [[1, "functions.f1"]], "f2() (in module functions)": [[1, "functions.f2"]], "functions": [[1, "module-functions"]], "g() (in module functions)": [[1, "functions.g"]], "inversesigmoid() (in module functions)": [[1, "functions.inversesigmoid"]], "log_factorial() (in module functions)": [[1, "functions.log_factorial"]], "module": [[1, "module-functions"], [2, "module-getfftw"], [3, "module-gpu"], [4, "module-gpu.cl"], [5, "module-gpu.cl.device"], [6, "module-gpu.cl.function"], [8, "module-gpu.cpu"], [9, "module-gpu.cpu.util"], [10, "module-gpu.cu"], [11, "module-gpu.cu.convolution"], [12, "module-gpu.cu.device"], [13, "module-gpu.cu.function"], [14, "module-gpu.cu.gpufun"], [15, "module-gpu.cu.graph"], [16, "module-gpu.cu.logic"], [18, "module-gpu.cu.plot"], [19, "module-gpu.cu.sequence"], [20, "module-gpu.cu.statistics"], [21, "module-graphics"], [22, "module-graphics.color"], [23, "module-graphics.image"], [24, "module-graphics.matplotlib"], [25, "module-graphics.plot"], [26, "module-graphics.pygame"], [28, "module-jobs"], [29, "module-jobs.cache"], [30, "module-jobs.closure"], [32, "module-jobs.filenames"], [33, "module-jobs.initialize_system_cache"], [34, "module-jobs.parallel"], [35, "module-linalg"], [36, "module-linalg.arguments"], [37, "module-linalg.matrix"], [38, "module-linalg.operators"], [39, "module-models"], [40, "module-models.izh"], [41, "module-models.lif"], [42, "module-models.rbm"], [43, "module-models.rbm.rbm"], [44, "module-models.rbm.rbm_helper"], [45, "module-models.rbm.rbm_sample"], [46, "module-models.rbm.rbm_utils"], [47, "module-models.rbm.rbm_utils.rbm"], [48, "module-models.rbm.rbm_utils.stutils"], [50, "module-neurotools"], [52, "module-neurotools.encoding"], [53, "module-neurotools.encoding.Huffman"], [54, "module-neurotools.encoding.NaryHuffman"], [55, "module-neurotools.functions"], [56, "module-neurotools.getfftw"], [57, "module-neurotools.gpu"], [58, "module-neurotools.gpu.cl"], [59, "module-neurotools.gpu.cl.device"], [60, "module-neurotools.gpu.cl.function"], [62, "module-neurotools.gpu.cpu"], [63, "module-neurotools.gpu.cpu.util"], [64, "module-neurotools.gpu.cu"], [65, "module-neurotools.gpu.cu.convolution"], [66, "module-neurotools.gpu.cu.device"], [67, "module-neurotools.gpu.cu.function"], [68, "module-neurotools.gpu.cu.gpufun"], [69, "module-neurotools.gpu.cu.graph"], [70, "module-neurotools.gpu.cu.logic"], [72, "module-neurotools.gpu.cu.plot"], [73, "module-neurotools.gpu.cu.sequence"], [74, "module-neurotools.gpu.cu.statistics"], [75, "module-neurotools.graphics"], [76, "module-neurotools.graphics.color"], [77, "module-neurotools.graphics.colormaps"], [78, "module-neurotools.graphics.dendron"], [79, "module-neurotools.graphics.fabio_maps"], [80, "module-neurotools.graphics.image"], [81, "module-neurotools.graphics.matplotlib"], [82, "module-neurotools.graphics.plot"], [83, "module-neurotools.graphics.pygame"], [85, "module-neurotools.hdfmat"], [86, "module-neurotools.jobs"], [87, "module-neurotools.jobs.cache"], [88, "module-neurotools.jobs.closure"], [89, "module-neurotools.jobs.filenames"], [90, "module-neurotools.jobs.initialize_system_cache"], [91, "module-neurotools.jobs.ndecorator"], [92, "module-neurotools.jobs.parallel"], [93, "module-neurotools.linalg"], [94, "module-neurotools.linalg.arguments"], [95, "module-neurotools.linalg.matrix"], [96, "module-neurotools.linalg.operators"], [97, "module-neurotools.models"], [98, "module-neurotools.models.izh"], [99, "module-neurotools.models.lif"], [100, "module-neurotools.models.rbm"], [101, "module-neurotools.models.rbm.rbm"], [102, "module-neurotools.models.rbm.rbm_helper"], [103, "module-neurotools.models.rbm.rbm_sample"], [104, "module-neurotools.models.rbm.rbm_utils"], [105, "module-neurotools.models.rbm.rbm_utils.rbm"], [106, "module-neurotools.models.rbm.rbm_utils.stutils"], [107, "module-neurotools.nlab"], [109, "module-neurotools.signal"], [110, "module-neurotools.signal.coherence"], [111, "module-neurotools.signal.conv"], [112, "module-neurotools.signal.linenoise"], [113, "module-neurotools.signal.morlet"], [114, "module-neurotools.signal.morlet_coherence"], [115, "module-neurotools.signal.multitaper"], [116, "module-neurotools.signal.ppc"], [117, "module-neurotools.signal.resonator"], [118, "module-neurotools.signal.savitskygolay"], [120, "module-neurotools.spatial"], [121, "module-neurotools.spatial.array"], [122, "module-neurotools.spatial.dct"], [123, "module-neurotools.spatial.distance"], [124, "module-neurotools.spatial.fftzeros"], [125, "module-neurotools.spatial.geometry"], [126, "module-neurotools.spatial.kernels"], [127, "module-neurotools.spatial.masking"], [128, "module-neurotools.spatial.phase"], [129, "module-neurotools.spatial.points"], [130, "module-neurotools.spatial.spatialPSD"], [131, "module-neurotools.spatial.spiking"], [132, "module-neurotools.spatial.triangulation"], [133, "module-neurotools.spatial.wave_parametric_models"], [134, "module-neurotools.spikes"], [135, "module-neurotools.spikes.spikes"], [136, "module-neurotools.spikes.waveform"], [137, "module-neurotools.stats"], [138, "module-neurotools.stats.GLMFit"], [139, "module-neurotools.stats.Gaussian"], [140, "module-neurotools.stats.circular"], [141, "module-neurotools.stats.convolutional"], [142, "module-neurotools.stats.density"], [143, "module-neurotools.stats.distributions"], [144, "module-neurotools.stats.entropy"], [145, "module-neurotools.stats.fast_kde"], [146, "module-neurotools.stats.glm"], [147, "module-neurotools.stats.gmm"], [148, "module-neurotools.stats.grid_search"], [149, "module-neurotools.stats.history_basis"], [150, "module-neurotools.stats.hmm"], [151, "module-neurotools.stats.information"], [152, "module-neurotools.stats.kent_reimann"], [153, "module-neurotools.stats.lessons"], [155, "module-neurotools.stats.mcint"], [156, "module-neurotools.stats.minimize"], [157, "module-neurotools.stats.mixtures"], [158, "module-neurotools.stats.modefind"], [159, "module-neurotools.stats.mvg"], [160, "module-neurotools.stats.pvalues"], [161, "module-neurotools.stats.regressions"], [162, "module-neurotools.stats.sde"], [163, "module-neurotools.stats.spatiotemporal_glm_utils"], [165, "module-neurotools.system"], [166, "module-neurotools.text"], [167, "module-neurotools.tools"], [168, "module-nlab"], [170, "module-signal"], [180, "module-signal.signal"], [181, "module-spatial"], [182, "module-spatial.array"], [183, "module-spatial.dct"], [184, "module-spatial.distance"], [185, "module-spatial.fftzeros"], [186, "module-spatial.kernels"], [187, "module-spatial.phase"], [188, "module-spatial.spatialPSD"], [189, "module-spatial.spiking"], [190, "module-spatial.triangulation"], [191, "module-spatial.wave_parametric_models"], [192, "module-spikes"], [193, "module-spikes.spikes"], [194, "module-spikes.waveform"], [195, "module-stats"], [196, "module-stats.GLMFit"], [197, "module-stats.Gaussian"], [198, "module-stats.circular"], [199, "module-stats.convolutional"], [200, "module-stats.density"], [201, "module-stats.distributions"], [202, "module-stats.entropy"], [203, "module-stats.fast_kde"], [204, "module-stats.glm"], [205, "module-stats.gmm"], [206, "module-stats.history_basis"], [207, "module-stats.hmm"], [208, "module-stats.information"], [209, "module-stats.kent_reimann"], [210, "module-stats.lessons"], [212, "module-stats.mcint"], [213, "module-stats.minimize"], [214, "module-stats.mixtures"], [215, "module-stats.modefind"], [216, "module-stats.mvg"], [217, "module-stats.pvalues"], [218, "module-stats.regressions"], [219, "module-stats.sde"], [220, "module-stats.spatiotemporal_glm_utils"], [222, "module-system"], [223, "module-tools"]], "npdf() (in module functions)": [[1, "functions.npdf"]], "sexp() (in module functions)": [[1, "functions.sexp"]], "sigmoid() (in module functions)": [[1, "functions.sigmoid"]], "slog() (in module functions)": [[1, "functions.slog"]], "ftwthr() (in module getfftw)": [[2, "getfftw.ftwthr"]], "getfftw": [[2, "module-getfftw"]], "gpu": [[3, "module-gpu"]], "gpu.cl": [[4, "module-gpu.cl"]], "missing() (in module gpu.cl)": [[4, "gpu.cl.missing"]], "gpu.cl.device": [[5, "module-gpu.cl.device"]], "zeros_float() (in module gpu.cl.device)": [[5, "gpu.cl.device.zeros_float"]], "elemental() (in module gpu.cl.function)": [[6, "gpu.cl.function.elemental"]], "format() (in module gpu.cl.function)": [[6, "gpu.cl.function.format"]], "gpu.cl.function": [[6, "module-gpu.cl.function"]], "gpumap() (in module gpu.cl.function)": [[6, "gpu.cl.function.gpumap"]], "guessgputype() (in module gpu.cl.function)": [[6, "gpu.cl.function.guessGPUType"]], "insert_global() (in module gpu.cl.function)": [[6, "gpu.cl.function.insert_global"]], "kernel() (in module gpu.cl.function)": [[6, "gpu.cl.function.kernel"]], "printkernel() (in module gpu.cl.function)": [[6, "gpu.cl.function.printKernel"]], "togputype() (in module gpu.cl.function)": [[6, "gpu.cl.function.toGPUType"]], "gpu.cpu": [[8, "module-gpu.cpu"]], "cmap() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.cmap"]], "compose() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.compose"]], "corr() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.corr"]], "cov() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.cov"]], "cut() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.cut"]], "document() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.document"]], "dot() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.dot"]], "elem() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.elem"]], "fancy() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.fancy"]], "flat() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.flat"]], "gpu.cpu.util": [[9, "module-gpu.cpu.util"]], "idivup() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.idivup"]], "ldif() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.ldif"]], "ldif2() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.ldif2"]], "ldiv() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.ldiv"]], "ldiv2() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.ldiv2"]], "length() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.length"]], "lmul() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lmul"]], "lmul2() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lmul2"]], "lpow() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lpow"]], "lpow2() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lpow2"]], "lsum() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lsum"]], "lsum2() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.lsum2"]], "mdif() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mdif"]], "mdiv() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mdiv"]], "mean() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mean"]], "mmap() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mmap"]], "mmean() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mmean"]], "mmul() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mmul"]], "mpow() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mpow"]], "mstd() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mstd"]], "msum() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.msum"]], "mu() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mu"]], "mvar() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.mvar"]], "norm() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.norm"]], "rnorm() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.rnorm"]], "scale() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.scale"]], "sem() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.sem"]], "shift() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.shift"]], "sigma() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.sigma"]], "sstd() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.sstd"]], "std() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.std"]], "svar() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.svar"]], "var() (in module gpu.cpu.util)": [[9, "gpu.cpu.util.var"]], "gpu.cu": [[10, "module-gpu.cu"]], "gpu.cu.convolution": [[11, "module-gpu.cu.convolution"]], "gpuboxconv() (in module gpu.cu.convolution)": [[11, "gpu.cu.convolution.gpuboxconv"]], "gpuboxconv_core() (in module gpu.cu.convolution)": [[11, "gpu.cu.convolution.gpuboxconv_core"]], "card_info() (in module gpu.cu.device)": [[12, "gpu.cu.device.card_info"]], "estimateblocks() (in module gpu.cu.device)": [[12, "gpu.cu.device.estimateBlocks"]], "estimateloop() (in module gpu.cu.device)": [[12, "gpu.cu.device.estimateLoop"]], "estimatethreadsperblock() (in module gpu.cu.device)": [[12, "gpu.cu.device.estimateThreadsPerBlock"]], "gpu.cu.device": [[12, "module-gpu.cu.device"]], "missing() (in module gpu.cu.device)": [[12, "gpu.cu.device.missing"]], "cpu() (in module gpu.cu.function)": [[13, "gpu.cu.function.cpu"]], "expsub() (in module gpu.cu.function)": [[13, "gpu.cu.function.expsub"]], "ezkern() (in module gpu.cu.function)": [[13, "gpu.cu.function.ezkern"]], "format() (in module gpu.cu.function)": [[13, "gpu.cu.function.format"]], "gpu.cu.function": [[13, "module-gpu.cu.function"]], "gpubin() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpubin"]], "gpubinaryeq() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpubinaryeq"]], "gpufloat() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpufloat"]], "gpufloatmat() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpufloatmat"]], "gpufloatred() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpufloatred"]], "gpuint() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpuint"]], "gpuintmap() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpuintmap"]], "gpuintmat() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpuintmat"]], "gpuintred() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpuintred"]], "gpumap() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpumap"]], "gpumapeq() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpumapeq"]], "gpupointer() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpupointer"]], "gpuscalar() (in module gpu.cu.function)": [[13, "gpu.cu.function.gpuscalar"]], "guessgputype() (in module gpu.cu.function)": [[13, "gpu.cu.function.guessGPUType"]], "kernel() (in module gpu.cu.function)": [[13, "gpu.cu.function.kernel"]], "printkernel() (in module gpu.cu.function)": [[13, "gpu.cu.function.printKernel"]], "togputype() (in module gpu.cu.function)": [[13, "gpu.cu.function.toGPUType"]], "gpu.cu.gpufun": [[14, "module-gpu.cu.gpufun"]], "gpuhill() (in module gpu.cu.gpufun)": [[14, "gpu.cu.gpufun.gpuhill"]], "gpulcomb() (in module gpu.cu.gpufun)": [[14, "gpu.cu.gpufun.gpulcomb"]], "gpulogpdf() (in module gpu.cu.gpufun)": [[14, "gpu.cu.gpufun.gpulogpdf"]], "gpumean() (in module gpu.cu.gpufun)": [[14, "gpu.cu.gpufun.gpumean"]], "gpunpdf() (in module gpu.cu.gpufun)": [[14, "gpu.cu.gpufun.gpunpdf"]], "gpurandexp() (in module gpu.cu.gpufun)": [[14, "gpu.cu.gpufun.gpurandexp"]], "gpurandf() (in module gpu.cu.gpufun)": [[14, "gpu.cu.gpufun.gpurandf"]], "gpuuniform() (in module gpu.cu.gpufun)": [[14, "gpu.cu.gpufun.gpuuniform"]], "connect_gaussian() (in module gpu.cu.graph)": [[15, "gpu.cu.graph.connect_gaussian"]], "gpu.cu.graph": [[15, "module-gpu.cu.graph"]], "random_point_sheet() (in module gpu.cu.graph)": [[15, "gpu.cu.graph.random_point_sheet"]], "spherepoints() (in module gpu.cu.graph)": [[15, "gpu.cu.graph.spherepoints"]], "uniform_point_sheet() (in module gpu.cu.graph)": [[15, "gpu.cu.graph.uniform_point_sheet"]], "gpu.cu.logic": [[16, "module-gpu.cu.logic"]], "gpuand() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpuand"]], "gpueq() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpueq"]], "gpugt() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpugt"]], "gpugteq() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpugteq"]], "gpuhzero() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpuhzero"]], "gpult() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpult"]], "gpulteq() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpulteq"]], "gpuneq() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpuneq"]], "gpunor() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpunor"]], "gpunot() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpunot"]], "gpurange() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpurange"]], "gpuyes() (in module gpu.cu.logic)": [[16, "gpu.cu.logic.gpuyes"]], "elementwisekernel() (in module gpu.cu.plot)": [[18, "gpu.cu.plot.ElementwiseKernel"]], "gpu.cu.plot": [[18, "module-gpu.cu.plot"]], "gpubarlinedata() (in module gpu.cu.plot)": [[18, "gpu.cu.plot.gpubarlinedata"]], "gpuhistogram() (in module gpu.cu.plot)": [[18, "gpu.cu.plot.gpuhistogram"]], "missing() (in module gpu.cu.plot)": [[18, "gpu.cu.plot.missing"]], "sebarline() (in module gpu.cu.plot)": [[18, "gpu.cu.plot.sebarline"]], "sebarline2() (in module gpu.cu.plot)": [[18, "gpu.cu.plot.sebarline2"]], "frameeater() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.FrameEater"]], "gpuautometric() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.GPUAutometric"]], "gpudotmetric() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.GPUDotmetric"]], "gpumagmetric() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.GPUMagmetric"]], "gpupointautodistance() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.GPUPointAutoDistance"]], "gpusequenceautodetect() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.GPUSequenceAutoDetect"]], "deltamag() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.deltamag"]], "fitgaussbimodal() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.fitgaussbimodal"]], "fitgausstrimodal() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.fitgausstrimodal"]], "gpu.cu.sequence": [[19, "module-gpu.cu.sequence"]], "gpuderivative() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.gpuderivative"]], "gpulognpdf() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.gpulognpdf"]], "gpunpdf() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.gpunpdf"]], "gpusmooth() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.gpusmooth"]], "gpusubsetgfit() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.gpusubsetgfit"]], "gpusubsetmean() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.gpusubsetmean"]], "gputhing() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.gputhing"]], "mulmag() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.mulmag"]], "summag() (in module gpu.cu.sequence)": [[19, "gpu.cu.sequence.summag"]], "elementwisekernel() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.ElementwiseKernel"]], "gpu.cu.statistics": [[20, "module-gpu.cu.statistics"]], "gpu_histogram() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpu_histogram"]], "gpubarlinedata() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpubarlinedata"]], "gpubin() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpubin"]], "gpubin_core() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpubin_core"]], "gpucenter() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpucenter"]], "gpucorr() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpucorr"]], "gpucov() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpucov"]], "gpuhistogram() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpuhistogram"]], "gpumag() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpumag"]], "gpumean() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpumean"]], "gpuscorr() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpuscorr"]], "gpuscov() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpuscov"]], "gpusdv() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpusdv"]], "gpusem() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpusem"]], "gpusqdev() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpusqdev"]], "gpusqmag() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpusqmag"]], "gpusstd() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpusstd"]], "gpustd() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpustd"]], "gpusvar() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpusvar"]], "gpuvar() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpuvar"]], "gpuzscore() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.gpuzscore"]], "sdbarline() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.sdbarline"]], "sdbarline2() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.sdbarline2"]], "sdgpubarlinedata() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.sdgpubarlinedata"]], "sebarline() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.sebarline"]], "sebarline2() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.sebarline2"]], "sprinkle() (in module gpu.cu.statistics)": [[20, "gpu.cu.statistics.sprinkle"]], "graphics": [[21, "module-graphics"]], "rgbtohcl() (in module graphics.color)": [[22, "graphics.color.RGBtoHCL"]], "bit16_rgb_to_tuple() (in module graphics.color)": [[22, "graphics.color.bit16_RGB_to_tuple"]], "bit16_print_color() (in module graphics.color)": [[22, "graphics.color.bit16_print_color"]], "circularly_smooth_colormap() (in module graphics.color)": [[22, "graphics.color.circularly_smooth_colormap"]], "code_to_16bit() (in module graphics.color)": [[22, "graphics.color.code_to_16bit"]], "color_boxplot() (in module graphics.color)": [[22, "graphics.color.color_boxplot"]], "complexhlarr2rgb() (in module graphics.color)": [[22, "graphics.color.complexHLArr2RGB"]], "darkhues() (in module graphics.color)": [[22, "graphics.color.darkhues"]], "enumerate_fast_colors() (in module graphics.color)": [[22, "graphics.color.enumerate_fast_colors"]], "graphics.color": [[22, "module-graphics.color"]], "hcl2rgb() (in module graphics.color)": [[22, "graphics.color.hcl2rgb"]], "hex2rgb() (in module graphics.color)": [[22, "graphics.color.hex2rgb"]], "hex_pack_bgr() (in module graphics.color)": [[22, "graphics.color.hex_pack_BGR"]], "hsv2rgb() (in module graphics.color)": [[22, "graphics.color.hsv2rgb"]], "hue_angle() (in module graphics.color)": [[22, "graphics.color.hue_angle"]], "isoluminance1() (in module graphics.color)": [[22, "graphics.color.isoluminance1"]], "isoluminance2() (in module graphics.color)": [[22, "graphics.color.isoluminance2"]], "isoluminance3() (in module graphics.color)": [[22, "graphics.color.isoluminance3"]], "isoluminance4() (in module graphics.color)": [[22, "graphics.color.isoluminance4"]], "lighthues() (in module graphics.color)": [[22, "graphics.color.lighthues"]], "lightness() (in module graphics.color)": [[22, "graphics.color.lightness"]], "luminance_matrix() (in module graphics.color)": [[22, "graphics.color.luminance_matrix"]], "match_luminance() (in module graphics.color)": [[22, "graphics.color.match_luminance"]], "medhues() (in module graphics.color)": [[22, "graphics.color.medhues"]], "radl2rgb() (in module graphics.color)": [[22, "graphics.color.radl2rgb"]], "radl2rgblut() (in module graphics.color)": [[22, "graphics.color.radl2rgbLUT"]], "rgb2hex() (in module graphics.color)": [[22, "graphics.color.rgb2hex"]], "rotate() (in module graphics.color)": [[22, "graphics.color.rotate"]], "show_complete_fast_pallet() (in module graphics.color)": [[22, "graphics.color.show_complete_fast_pallet"]], "show_complete_fastest_pallet() (in module graphics.color)": [[22, "graphics.color.show_complete_fastest_pallet"]], "show_fast_pallet() (in module graphics.color)": [[22, "graphics.color.show_fast_pallet"]], "show_hex_pallet() (in module graphics.color)": [[22, "graphics.color.show_hex_pallet"]], "tuple_to_bit16() (in module graphics.color)": [[22, "graphics.color.tuple_to_bit16"]], "tuple_to_bit24() (in module graphics.color)": [[22, "graphics.color.tuple_to_bit24"]], "graphics.image": [[23, "module-graphics.image"]], "mean_center() (in module graphics.image)": [[23, "graphics.image.mean_center"]], "median_center() (in module graphics.image)": [[23, "graphics.image.median_center"]], "unitize() (in module graphics.image)": [[23, "graphics.image.unitize"]], "visualize_derivatives() (in module graphics.image)": [[23, "graphics.image.visualize_derivatives"]], "draw_array() (in module graphics.matplotlib)": [[24, "graphics.matplotlib.draw_array"]], "graphics.matplotlib": [[24, "module-graphics.matplotlib"]], "hide_toolbar() (in module graphics.matplotlib)": [[24, "graphics.matplotlib.hide_toolbar"]], "start() (in module graphics.matplotlib)": [[24, "graphics.matplotlib.start"]], "gaussian2d_covellipse() (in module graphics.plot)": [[25, "graphics.plot.Gaussian2D_covellipse"]], "handlersquare (class in graphics.plot)": [[25, "graphics.plot.HandlerSquare"]], "addspikes() (in module graphics.plot)": [[25, "graphics.plot.addspikes"]], "adjust_axis_height_pixels() (in module graphics.plot)": [[25, "graphics.plot.adjust_axis_height_pixels"]], "adjust_xlabel_space() (in module graphics.plot)": [[25, "graphics.plot.adjust_xlabel_space"]], "adjust_ylabel_space() (in module graphics.plot)": [[25, "graphics.plot.adjust_ylabel_space"]], "adjustmap() (in module graphics.plot)": [[25, "graphics.plot.adjustmap"]], "animate_complex() (in module graphics.plot)": [[25, "graphics.plot.animate_complex"]], "arrow_between() (in module graphics.plot)": [[25, "graphics.plot.arrow_between"]], "barcompare() (in module graphics.plot)": [[25, "graphics.plot.barcompare"]], "base_legend() (in module graphics.plot)": [[25, "graphics.plot.base_legend"]], "border_width() (in module graphics.plot)": [[25, "graphics.plot.border_width"]], "broken_step() (in module graphics.plot)": [[25, "graphics.plot.broken_step"]], "ceil_to_precision() (in module graphics.plot)": [[25, "graphics.plot.ceil_to_precision"]], "clean_y_range() (in module graphics.plot)": [[25, "graphics.plot.clean_y_range"]], "cleartop() (in module graphics.plot)": [[25, "graphics.plot.cleartop"]], "colored_boxplot() (in module graphics.plot)": [[25, "graphics.plot.colored_boxplot"]], "complex_axis() (in module graphics.plot)": [[25, "graphics.plot.complex_axis"]], "covariance_crosshairs() (in module graphics.plot)": [[25, "graphics.plot.covariance_crosshairs"]], "create_artists() (graphics.plot.handlersquare method)": [[25, "graphics.plot.HandlerSquare.create_artists"]], "domask() (in module graphics.plot)": [[25, "graphics.plot.domask"]], "draw_circle() (in module graphics.plot)": [[25, "graphics.plot.draw_circle"]], "eformat() (in module graphics.plot)": [[25, "graphics.plot.eformat"]], "expand_axis_x() (in module graphics.plot)": [[25, "graphics.plot.expand_axis_x"]], "expand_axis_y() (in module graphics.plot)": [[25, "graphics.plot.expand_axis_y"]], "expand_y_range() (in module graphics.plot)": [[25, "graphics.plot.expand_y_range"]], "figurebox() (in module graphics.plot)": [[25, "graphics.plot.figurebox"]], "flathist() (in module graphics.plot)": [[25, "graphics.plot.flathist"]], "floor_to_precision() (in module graphics.plot)": [[25, "graphics.plot.floor_to_precision"]], "force_aspect() (in module graphics.plot)": [[25, "graphics.plot.force_aspect"]], "fsize() (in module graphics.plot)": [[25, "graphics.plot.fsize"]], "fudgex() (in module graphics.plot)": [[25, "graphics.plot.fudgex"]], "fudgexy() (in module graphics.plot)": [[25, "graphics.plot.fudgexy"]], "fudgey() (in module graphics.plot)": [[25, "graphics.plot.fudgey"]], "get_aspect() (in module graphics.plot)": [[25, "graphics.plot.get_aspect"]], "get_ax_pixel() (in module graphics.plot)": [[25, "graphics.plot.get_ax_pixel"]], "get_ax_pixel_ratio() (in module graphics.plot)": [[25, "graphics.plot.get_ax_pixel_ratio"]], "get_ax_size() (in module graphics.plot)": [[25, "graphics.plot.get_ax_size"]], "get_bbox() (in module graphics.plot)": [[25, "graphics.plot.get_bbox"]], "good_colorbar() (in module graphics.plot)": [[25, "graphics.plot.good_colorbar"]], "graphics.plot": [[25, "module-graphics.plot"]], "inhibition_arrow() (in module graphics.plot)": [[25, "graphics.plot.inhibition_arrow"]], "label() (in module graphics.plot)": [[25, "graphics.plot.label"]], "left_legend() (in module graphics.plot)": [[25, "graphics.plot.left_legend"]], "match_image_aspect() (in module graphics.plot)": [[25, "graphics.plot.match_image_aspect"]], "more_xticks() (in module graphics.plot)": [[25, "graphics.plot.more_xticks"]], "more_yticks() (in module graphics.plot)": [[25, "graphics.plot.more_yticks"]], "nice_legend() (in module graphics.plot)": [[25, "graphics.plot.nice_legend"]], "nicebp() (in module graphics.plot)": [[25, "graphics.plot.nicebp"]], "nicetable() (in module graphics.plot)": [[25, "graphics.plot.nicetable"]], "nicex() (in module graphics.plot)": [[25, "graphics.plot.nicex"]], "nicexy() (in module graphics.plot)": [[25, "graphics.plot.nicexy"]], "nicey() (in module graphics.plot)": [[25, "graphics.plot.nicey"]], "noaxis() (in module graphics.plot)": [[25, "graphics.plot.noaxis"]], "noclip() (in module graphics.plot)": [[25, "graphics.plot.noclip"]], "nolabels() (in module graphics.plot)": [[25, "graphics.plot.nolabels"]], "notick() (in module graphics.plot)": [[25, "graphics.plot.notick"]], "nox() (in module graphics.plot)": [[25, "graphics.plot.nox"]], "noxlabels() (in module graphics.plot)": [[25, "graphics.plot.noxlabels"]], "noxyaxes() (in module graphics.plot)": [[25, "graphics.plot.noxyaxes"]], "noy() (in module graphics.plot)": [[25, "graphics.plot.noy"]], "noylabels() (in module graphics.plot)": [[25, "graphics.plot.noylabels"]], "nudge_axis_baseline() (in module graphics.plot)": [[25, "graphics.plot.nudge_axis_baseline"]], "nudge_axis_left() (in module graphics.plot)": [[25, "graphics.plot.nudge_axis_left"]], "nudge_axis_x() (in module graphics.plot)": [[25, "graphics.plot.nudge_axis_x"]], "nudge_axis_y() (in module graphics.plot)": [[25, "graphics.plot.nudge_axis_y"]], "nudge_axis_y_pixels() (in module graphics.plot)": [[25, "graphics.plot.nudge_axis_y_pixels"]], "percent() (in module graphics.plot)": [[25, "graphics.plot.percent"]], "pixels_to_xfigureunits() (in module graphics.plot)": [[25, "graphics.plot.pixels_to_xfigureunits"]], "pixels_to_xunits() (in module graphics.plot)": [[25, "graphics.plot.pixels_to_xunits"]], "pixels_to_yfigureunits() (in module graphics.plot)": [[25, "graphics.plot.pixels_to_yfigureunits"]], "pixels_to_yunits() (in module graphics.plot)": [[25, "graphics.plot.pixels_to_yunits"]], "plotcwt() (in module graphics.plot)": [[25, "graphics.plot.plotCWT"]], "plotwtphase() (in module graphics.plot)": [[25, "graphics.plot.plotWTPhase"]], "plotwtphasefig() (in module graphics.plot)": [[25, "graphics.plot.plotWTPhaseFig"]], "plot_complex() (in module graphics.plot)": [[25, "graphics.plot.plot_complex"]], "plotz() (in module graphics.plot)": [[25, "graphics.plot.plotz"]], "positivex() (in module graphics.plot)": [[25, "graphics.plot.positivex"]], "positivexy() (in module graphics.plot)": [[25, "graphics.plot.positivexy"]], "positivey() (in module graphics.plot)": [[25, "graphics.plot.positivey"]], "px2x() (in module graphics.plot)": [[25, "graphics.plot.px2x"]], "px2y() (in module graphics.plot)": [[25, "graphics.plot.px2y"]], "rangeover() (in module graphics.plot)": [[25, "graphics.plot.rangeover"]], "rangeto() (in module graphics.plot)": [[25, "graphics.plot.rangeto"]], "right_legend() (in module graphics.plot)": [[25, "graphics.plot.right_legend"]], "rightaxis() (in module graphics.plot)": [[25, "graphics.plot.rightaxis"]], "righty() (in module graphics.plot)": [[25, "graphics.plot.righty"]], "round_to_precision() (in module graphics.plot)": [[25, "graphics.plot.round_to_precision"]], "savefigure() (in module graphics.plot)": [[25, "graphics.plot.savefigure"]], "shade_edges() (in module graphics.plot)": [[25, "graphics.plot.shade_edges"]], "shellmean() (in module graphics.plot)": [[25, "graphics.plot.shellmean"]], "shellplot() (in module graphics.plot)": [[25, "graphics.plot.shellplot"]], "shortscientific() (in module graphics.plot)": [[25, "graphics.plot.shortscientific"]], "sigbar() (in module graphics.plot)": [[25, "graphics.plot.sigbar"]], "simple_arrow() (in module graphics.plot)": [[25, "graphics.plot.simple_arrow"]], "simpleaxis() (in module graphics.plot)": [[25, "graphics.plot.simpleaxis"]], "simpleraxis() (in module graphics.plot)": [[25, "graphics.plot.simpleraxis"]], "simplerright() (in module graphics.plot)": [[25, "graphics.plot.simplerright"]], "splitz() (in module graphics.plot)": [[25, "graphics.plot.splitz"]], "stderrplot() (in module graphics.plot)": [[25, "graphics.plot.stderrplot"]], "subfigurelabel() (in module graphics.plot)": [[25, "graphics.plot.subfigurelabel"]], "trendline() (in module graphics.plot)": [[25, "graphics.plot.trendline"]], "unit_crosshairs() (in module graphics.plot)": [[25, "graphics.plot.unit_crosshairs"]], "unitaxes() (in module graphics.plot)": [[25, "graphics.plot.unitaxes"]], "unitx() (in module graphics.plot)": [[25, "graphics.plot.unitx"]], "unity() (in module graphics.plot)": [[25, "graphics.plot.unity"]], "v2str() (in module graphics.plot)": [[25, "graphics.plot.v2str"]], "v2str_long() (in module graphics.plot)": [[25, "graphics.plot.v2str_long"]], "wtpshow() (in module graphics.plot)": [[25, "graphics.plot.wtpshow"]], "xbartext() (in module graphics.plot)": [[25, "graphics.plot.xbartext"]], "xfigureunits_to_pixels() (in module graphics.plot)": [[25, "graphics.plot.xfigureunits_to_pixels"]], "xscalebar() (in module graphics.plot)": [[25, "graphics.plot.xscalebar"]], "xunits_to_pixels() (in module graphics.plot)": [[25, "graphics.plot.xunits_to_pixels"]], "xylim() (in module graphics.plot)": [[25, "graphics.plot.xylim"]], "ybartext() (in module graphics.plot)": [[25, "graphics.plot.ybartext"]], "yfigureunits_to_pixels() (in module graphics.plot)": [[25, "graphics.plot.yfigureunits_to_pixels"]], "yscalebar() (in module graphics.plot)": [[25, "graphics.plot.yscalebar"]], "yunits_to_pixels() (in module graphics.plot)": [[25, "graphics.plot.yunits_to_pixels"]], "zoombox() (in module graphics.plot)": [[25, "graphics.plot.zoombox"]], "draw_array() (in module graphics.pygame)": [[26, "graphics.pygame.draw_array"]], "enable_vsync() (in module graphics.pygame)": [[26, "graphics.pygame.enable_vsync"]], "graphics.pygame": [[26, "module-graphics.pygame"]], "start() (in module graphics.pygame)": [[26, "graphics.pygame.start"]], "jobs": [[28, "module-jobs"]], "base64hash() (in module jobs.cache)": [[29, "jobs.cache.base64hash"]], "base64hash2byte() (in module jobs.cache)": [[29, "jobs.cache.base64hash2byte"]], "disk_cacher() (in module jobs.cache)": [[29, "jobs.cache.disk_cacher"]], "file_string_to_signature() (in module jobs.cache)": [[29, "jobs.cache.file_string_to_signature"]], "function_hash_no_subroutines() (in module jobs.cache)": [[29, "jobs.cache.function_hash_no_subroutines"]], "function_hash_with_subroutines() (in module jobs.cache)": [[29, "jobs.cache.function_hash_with_subroutines"]], "function_signature() (in module jobs.cache)": [[29, "jobs.cache.function_signature"]], "get_cache_path() (in module jobs.cache)": [[29, "jobs.cache.get_cache_path"]], "get_source() (in module jobs.cache)": [[29, "jobs.cache.get_source"]], "hierarchical_cacher() (in module jobs.cache)": [[29, "jobs.cache.hierarchical_cacher"]], "human_decode() (in module jobs.cache)": [[29, "jobs.cache.human_decode"]], "human_encode() (in module jobs.cache)": [[29, "jobs.cache.human_encode"]], "jobs.cache": [[29, "module-jobs.cache"]], "locate_cached() (in module jobs.cache)": [[29, "jobs.cache.locate_cached"]], "read_cache_entry() (in module jobs.cache)": [[29, "jobs.cache.read_cache_entry"]], "signature_to_file_string() (in module jobs.cache)": [[29, "jobs.cache.signature_to_file_string"]], "validate_for_matfile() (in module jobs.cache)": [[29, "jobs.cache.validate_for_matfile"]], "validate_for_numpy() (in module jobs.cache)": [[29, "jobs.cache.validate_for_numpy"]], "csv() (in module jobs.closure)": [[30, "jobs.closure.csv"]], "get_subroutines() (in module jobs.closure)": [[30, "jobs.closure.get_subroutines"]], "inspect_function_closure() (in module jobs.closure)": [[30, "jobs.closure.inspect_function_closure"]], "is_immutable() (in module jobs.closure)": [[30, "jobs.closure.is_immutable"]], "is_probably_safe() (in module jobs.closure)": [[30, "jobs.closure.is_probably_safe"]], "jobs.closure": [[30, "module-jobs.closure"]], "verify_function_closure() (in module jobs.closure)": [[30, "jobs.closure.verify_function_closure"]], "check_filename() (in module jobs.filenames)": [[32, "jobs.filenames.check_filename"]], "is_dangerous_filename() (in module jobs.filenames)": [[32, "jobs.filenames.is_dangerous_filename"]], "jobs.filenames": [[32, "module-jobs.filenames"]], "validate_argument_signature() (in module jobs.filenames)": [[32, "jobs.filenames.validate_argument_signature"]], "cache_test() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.cache_test"]], "du() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.du"]], "initialize_caches() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.initialize_caches"]], "jobs.initialize_system_cache": [[33, "module-jobs.initialize_system_cache"]], "launch_cache_synchronizers() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.launch_cache_synchronizers"]], "purge_ram_cache() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.purge_ram_cache"]], "purge_ssd_cache() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.purge_ssd_cache"]], "reset_ramdisk() (in module jobs.initialize_system_cache)": [[33, "jobs.initialize_system_cache.reset_ramdisk"]], "close_pool() (in module jobs.parallel)": [[34, "jobs.parallel.close_pool"]], "eval_from_cached() (in module jobs.parallel)": [[34, "jobs.parallel.eval_from_cached"]], "function_fingerprint() (in module jobs.parallel)": [[34, "jobs.parallel.function_fingerprint"]], "jobs.parallel": [[34, "module-jobs.parallel"]], "parallel_cached_wrapper() (in module jobs.parallel)": [[34, "jobs.parallel.parallel_cached_wrapper"]], "parallel_error_handling() (in module jobs.parallel)": [[34, "jobs.parallel.parallel_error_handling"]], "parallel_indirect_wrapper() (in module jobs.parallel)": [[34, "jobs.parallel.parallel_indirect_wrapper"]], "pararraymap() (in module jobs.parallel)": [[34, "jobs.parallel.pararraymap"]], "parimap() (in module jobs.parallel)": [[34, "jobs.parallel.parimap"]], "parmap() (in module jobs.parallel)": [[34, "jobs.parallel.parmap"]], "parmap_dict() (in module jobs.parallel)": [[34, "jobs.parallel.parmap_dict"]], "reset_pool() (in module jobs.parallel)": [[34, "jobs.parallel.reset_pool"]], "linalg": [[35, "module-linalg"]], "ascolumn() (in module linalg.arguments)": [[36, "linalg.arguments.ascolumn"]], "asrow() (in module linalg.arguments)": [[36, "linalg.arguments.asrow"]], "assertcolumn() (in module linalg.arguments)": [[36, "linalg.arguments.assertcolumn"]], "assertfinite() (in module linalg.arguments)": [[36, "linalg.arguments.assertfinite"]], "assertfinitereal() (in module linalg.arguments)": [[36, "linalg.arguments.assertfinitereal"]], "assertreal() (in module linalg.arguments)": [[36, "linalg.arguments.assertreal"]], "assertrow() (in module linalg.arguments)": [[36, "linalg.arguments.assertrow"]], "assertshape() (in module linalg.arguments)": [[36, "linalg.arguments.assertshape"]], "assertsquare() (in module linalg.arguments)": [[36, "linalg.arguments.assertsquare"]], "assertvector() (in module linalg.arguments)": [[36, "linalg.arguments.assertvector"]], "assquare() (in module linalg.arguments)": [[36, "linalg.arguments.assquare"]], "asvector() (in module linalg.arguments)": [[36, "linalg.arguments.asvector"]], "iscolumn() (in module linalg.arguments)": [[36, "linalg.arguments.iscolumn"]], "isrow() (in module linalg.arguments)": [[36, "linalg.arguments.isrow"]], "issquare() (in module linalg.arguments)": [[36, "linalg.arguments.issquare"]], "linalg.arguments": [[36, "module-linalg.arguments"]], "scalar() (in module linalg.arguments)": [[36, "linalg.arguments.scalar"]], "ldistance() (in module linalg.matrix)": [[37, "linalg.matrix.Ldistance"]], "llasso() (in module linalg.matrix)": [[37, "linalg.matrix.Llasso"]], "abserr() (in module linalg.matrix)": [[37, "linalg.matrix.abserr"]], "autopredict() (in module linalg.matrix)": [[37, "linalg.matrix.autopredict"]], "cartesian_product() (in module linalg.matrix)": [[37, "linalg.matrix.cartesian_product"]], "check_covmat() (in module linalg.matrix)": [[37, "linalg.matrix.check_covmat"]], "check_covmat_fast() (in module linalg.matrix)": [[37, "linalg.matrix.check_covmat_fast"]], "check_finite_real() (in module linalg.matrix)": [[37, "linalg.matrix.check_finite_real"]], "cholupdate() (in module linalg.matrix)": [[37, "linalg.matrix.cholupdate"]], "cholupdate_eye() (in module linalg.matrix)": [[37, "linalg.matrix.cholupdate_eye"]], "cinv() (in module linalg.matrix)": [[37, "linalg.matrix.cinv"]], "column() (in module linalg.matrix)": [[37, "linalg.matrix.column"]], "csolve() (in module linalg.matrix)": [[37, "linalg.matrix.csolve"]], "errmx() (in module linalg.matrix)": [[37, "linalg.matrix.errmx"]], "kronsum() (in module linalg.matrix)": [[37, "linalg.matrix.kronsum"]], "laplace_kernel() (in module linalg.matrix)": [[37, "linalg.matrix.laplace_kernel"]], "ldiv() (in module linalg.matrix)": [[37, "linalg.matrix.ldiv"]], "linalg.matrix": [[37, "module-linalg.matrix"]], "logdet() (in module linalg.matrix)": [[37, "linalg.matrix.logdet"]], "match_covariance() (in module linalg.matrix)": [[37, "linalg.matrix.match_covariance"]], "maxeig() (in module linalg.matrix)": [[37, "linalg.matrix.maxeig"]], "nearpdhigham() (in module linalg.matrix)": [[37, "linalg.matrix.nearPDHigham"]], "nearpsdrebonatojackel() (in module linalg.matrix)": [[37, "linalg.matrix.nearPSDRebonatoJackel"]], "normedcovariance() (in module linalg.matrix)": [[37, "linalg.matrix.normedcovariance"]], "psd_eig() (in module linalg.matrix)": [[37, "linalg.matrix.psd_eig"]], "qf() (in module linalg.matrix)": [[37, "linalg.matrix.qf"]], "rcond() (in module linalg.matrix)": [[37, "linalg.matrix.rcond"]], "rdiv() (in module linalg.matrix)": [[37, "linalg.matrix.rdiv"]], "real_eig() (in module linalg.matrix)": [[37, "linalg.matrix.real_eig"]], "reglstsq() (in module linalg.matrix)": [[37, "linalg.matrix.reglstsq"]], "rmatrix() (in module linalg.matrix)": [[37, "linalg.matrix.rmatrix"]], "row() (in module linalg.matrix)": [[37, "linalg.matrix.row"]], "rsolt() (in module linalg.matrix)": [[37, "linalg.matrix.rsolt"]], "rsolve() (in module linalg.matrix)": [[37, "linalg.matrix.rsolve"]], "selector_matrix() (in module linalg.matrix)": [[37, "linalg.matrix.selector_matrix"]], "solt() (in module linalg.matrix)": [[37, "linalg.matrix.solt"]], "top_v() (in module linalg.matrix)": [[37, "linalg.matrix.top_v"]], "tril_elements() (in module linalg.matrix)": [[37, "linalg.matrix.tril_elements"]], "triu_elements() (in module linalg.matrix)": [[37, "linalg.matrix.triu_elements"]], "wheremax() (in module linalg.matrix)": [[37, "linalg.matrix.wheremax"]], "wheremin() (in module linalg.matrix)": [[37, "linalg.matrix.wheremin"]], "adjacency1d() (in module linalg.operators)": [[38, "linalg.operators.adjacency1D"]], "adjacency2d() (in module linalg.operators)": [[38, "linalg.operators.adjacency2D"]], "adjacency2d_circular() (in module linalg.operators)": [[38, "linalg.operators.adjacency2D_circular"]], "adjacency2d_rotational() (in module linalg.operators)": [[38, "linalg.operators.adjacency2d_rotational"]], "circular1dbluroperator() (in module linalg.operators)": [[38, "linalg.operators.circular1DblurOperator"]], "cosine_kernel() (in module linalg.operators)": [[38, "linalg.operators.cosine_kernel"]], "covfrom() (in module linalg.operators)": [[38, "linalg.operators.covfrom"]], "delta() (in module linalg.operators)": [[38, "linalg.operators.delta"]], "differentiator() (in module linalg.operators)": [[38, "linalg.operators.differentiator"]], "diffuseft1d() (in module linalg.operators)": [[38, "linalg.operators.diffuseFT1D"]], "flatcov() (in module linalg.operators)": [[38, "linalg.operators.flatcov"]], "gaussian1dbluroperator() (in module linalg.operators)": [[38, "linalg.operators.gaussian1DblurOperator"]], "gaussian2dbluroperator() (in module linalg.operators)": [[38, "linalg.operators.gaussian2DblurOperator"]], "integrator() (in module linalg.operators)": [[38, "linalg.operators.integrator"]], "laplacian1d() (in module linalg.operators)": [[38, "linalg.operators.laplacian1D"]], "laplacian1d_circular() (in module linalg.operators)": [[38, "linalg.operators.laplacian1D_circular"]], "laplacian2d() (in module linalg.operators)": [[38, "linalg.operators.laplacian2D"]], "laplacianft1d() (in module linalg.operators)": [[38, "linalg.operators.laplacianFT1D"]], "linalg.operators": [[38, "module-linalg.operators"]], "log_cosine_basis() (in module linalg.operators)": [[38, "linalg.operators.log_cosine_basis"]], "make_cosine_basis() (in module linalg.operators)": [[38, "linalg.operators.make_cosine_basis"]], "oucov() (in module linalg.operators)": [[38, "linalg.operators.oucov"]], "separable_guassian_blur() (in module linalg.operators)": [[38, "linalg.operators.separable_guassian_blur"]], "wienerft1d() (in module linalg.operators)": [[38, "linalg.operators.wienerFT1D"]], "models": [[39, "module-models"]], "du_izh() (in module models.izh)": [[40, "models.izh.du_izh"]], "dv_izh() (in module models.izh)": [[40, "models.izh.dv_izh"]], "models.izh": [[40, "module-models.izh"]], "sim_izh() (in module models.izh)": [[40, "models.izh.sim_izh"]], "update_izh() (in module models.izh)": [[40, "models.izh.update_izh"]], "euler_integrate_lif() (in module models.lif)": [[41, "models.lif.euler_integrate_LIF"]], "exponential_integrate_lif() (in module models.lif)": [[41, "models.lif.exponential_integrate_LIF"]], "exponential_moving_average() (in module models.lif)": [[41, "models.lif.exponential_moving_average"]], "models.lif": [[41, "module-models.lif"]], "models.rbm": [[42, "module-models.rbm"]], "acond() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.Acond"]], "pcond() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.Pcond"]], "a2q() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.a2q"]], "bar_f() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.bar_f"]], "bernoulli_entropy() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.bernoulli_entropy"]], "bernoulli_entropy_activation() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.bernoulli_entropy_activation"]], "bitent() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.bitent"]], "ground_state() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.ground_state"]], "hashbits() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.hashbits"]], "hashfloat128() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.hashfloat128"]], "hashint64() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.hashint64"]], "inv_f() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.inv_f"]], "lnpr() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.lnPr"]], "lnpr_activation() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.lnPr_activation"]], "models.rbm.rbm": [[43, "module-models.rbm.rbm"]], "natent() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.natent"]], "p2a() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.p2a"]], "unhashbits() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.unhashbits"]], "unhashfloat128() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.unhashfloat128"]], "unhashint64() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.unhashint64"]], "unique_counts() (in module models.rbm.rbm)": [[43, "models.rbm.rbm.unique_counts"]], "barcompare() (in module models.rbm.rbm_helper)": [[44, "models.rbm.rbm_helper.barcompare"]], "get_trials() (in module models.rbm.rbm_helper)": [[44, "models.rbm.rbm_helper.get_trials"]], "make_filename() (in module models.rbm.rbm_helper)": [[44, "models.rbm.rbm_helper.make_filename"]], "models.rbm.rbm_helper": [[44, "module-models.rbm.rbm_helper"]], "scattercompare() (in module models.rbm.rbm_helper)": [[44, "models.rbm.rbm_helper.scattercompare"]], "zipfplot() (in module models.rbm.rbm_helper)": [[44, "models.rbm.rbm_helper.zipfplot"]], "ahv() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.Ahv"]], "avh() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.Avh"]], "euh_factorial (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.EUh_factorial"]], "eh_unnormalized() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.Eh_unnormalized"]], "ehv (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.Ehv"]], "ehvvh (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.Ehvvh"]], "ehvvh_meanfield (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.Ehvvh_meanfield"]], "ev_unnormalized() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.Ev_unnormalized"]], "evh (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.Evh"]], "evhhv (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.Evhhv"]], "evhhv_meanfield (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.Evhhv_meanfield"]], "evvh (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.Evvh"]], "hhv (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.Hhv"]], "hvh (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.Hvh"]], "phv() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.Phv"]], "pvh() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.Pvh"]], "rbm_sample (class in models.rbm.rbm_sample)": [[45, "models.rbm.rbm_sample.RBM_sample"]], "barhhv (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.barHhv"]], "barhvh (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.barHvh"]], "conditional_map() (in module models.rbm.rbm_sample)": [[45, "models.rbm.rbm_sample.conditional_map"]], "deuh (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.dEUh"]], "deuv (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.dEUv"]], "deh() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.dEh"]], "dehhv (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.dEhhv"]], "dehhv_meanfield (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.dEhhv_meanfield"]], "dev() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.dEv"]], "devvh (models.rbm.rbm_sample.rbm_sample property)": [[45, "models.rbm.rbm_sample.RBM_sample.dEvvh"]], "get_eh() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.get_Eh"]], "get_ehhv_factorial() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.get_Ehhv_factorial"]], "get_ehhv_meanfield() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.get_Ehhv_meanfield"]], "get_ev() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.get_Ev"]], "get_evh() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.get_Evh"]], "get_hhhv() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.get_Hhhv"]], "get_hvcondh() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.get_Hvcondh"]], "get_deh() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.get_dEh"]], "get_dev() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.get_dEv"]], "long_report() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.long_report"]], "models.rbm.rbm_sample": [[45, "module-models.rbm.rbm_sample"]], "precompute() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.precompute"]], "short_report() (models.rbm.rbm_sample.rbm_sample method)": [[45, "models.rbm.rbm_sample.RBM_sample.short_report"]], "models.rbm.rbm_utils": [[46, "module-models.rbm.rbm_utils"]], "loadrbm() (in module models.rbm.rbm_utils.rbm)": [[47, "models.rbm.rbm_utils.rbm.LoadRBM"]], "rbm (class in models.rbm.rbm_utils.rbm)": [[47, "models.rbm.rbm_utils.rbm.RBM"]], "free_energy() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.free_energy"]], "get_cost_updates() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.get_cost_updates"]], "get_pseudo_likelihood_cost() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.get_pseudo_likelihood_cost"]], "get_reconstruction_cost() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.get_reconstruction_cost"]], "gibbs_hvh() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.gibbs_hvh"]], "gibbs_vhv() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.gibbs_vhv"]], "mean_h_given_v() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.mean_h_given_v"]], "models.rbm.rbm_utils.rbm": [[47, "module-models.rbm.rbm_utils.rbm"]], "propdown() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.propdown"]], "propup() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.propup"]], "sample() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.sample"]], "sample_h_given_v() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.sample_h_given_v"]], "sample_v_given_h() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.sample_v_given_h"]], "savenp() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.savenp"]], "train() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.train"]], "vis_energy() (models.rbm.rbm_utils.rbm.rbm method)": [[47, "models.rbm.rbm_utils.rbm.RBM.vis_energy"]], "bin_timeseries() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.bin_timeseries"]], "data_model_kldiv() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.data_model_kldiv"]], "data_pattern_logprob() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.data_pattern_logprob"]], "exact_logz() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.exact_logZ"]], "exact_logz_serial() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.exact_logZ_serial"]], "fim_eig() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.fim_eig"]], "gen_cov() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.gen_cov"]], "models.rbm.rbm_utils.stutils": [[48, "module-models.rbm.rbm_utils.stutils"]], "plot_raster() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.plot_raster"]], "plot_zipf() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.plot_zipf"]], "rbm_fim_lowmem() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.rbm_fim_lowmem"]], "rbm_fim_numpy() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.rbm_fim_numpy"]], "rbm_pattern_logprob() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.rbm_pattern_logprob"]], "rbm_pattern_logprob_unnorm() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.rbm_pattern_logprob_unnorm"]], "select_clusters() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.select_clusters"]], "select_times() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.select_times"]], "sum_over() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.sum_over"]], "unique() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.unique"]], "zipf() (in module models.rbm.rbm_utils.stutils)": [[48, "models.rbm.rbm_utils.stutils.zipf"]], "neurotools": [[50, "module-neurotools"]], "neurotools.encoding": [[52, "module-neurotools.encoding"]], "huffman (class in neurotools.encoding.huffman)": [[53, "neurotools.encoding.Huffman.Huffman"]], "huffman.leaf (class in neurotools.encoding.huffman)": [[53, "neurotools.encoding.Huffman.Huffman.Leaf"]], "huffman.node (class in neurotools.encoding.huffman)": [[53, "neurotools.encoding.Huffman.Huffman.Node"]], "decode() (neurotools.encoding.huffman.huffman method)": [[53, "neurotools.encoding.Huffman.Huffman.decode"]], "encode() (neurotools.encoding.huffman.huffman method)": [[53, "neurotools.encoding.Huffman.Huffman.encode"]], "encode_packets() (neurotools.encoding.huffman.huffman method)": [[53, "neurotools.encoding.Huffman.Huffman.encode_packets"]], "neurotools.encoding.huffman": [[53, "module-neurotools.encoding.Huffman"]], "walk() (neurotools.encoding.huffman.huffman.node method)": [[53, "neurotools.encoding.Huffman.Huffman.Node.walk"]], "naryhuffman (class in neurotools.encoding.naryhuffman)": [[54, "neurotools.encoding.NaryHuffman.NaryHuffman"]], "naryhuffman.leaf (class in neurotools.encoding.naryhuffman)": [[54, "neurotools.encoding.NaryHuffman.NaryHuffman.Leaf"]], "naryhuffman.node (class in neurotools.encoding.naryhuffman)": [[54, "neurotools.encoding.NaryHuffman.NaryHuffman.Node"]], "decode() (neurotools.encoding.naryhuffman.naryhuffman method)": [[54, "neurotools.encoding.NaryHuffman.NaryHuffman.decode"]], "encode() (neurotools.encoding.naryhuffman.naryhuffman method)": [[54, "neurotools.encoding.NaryHuffman.NaryHuffman.encode"]], "encode_packets() (neurotools.encoding.naryhuffman.naryhuffman method)": [[54, "neurotools.encoding.NaryHuffman.NaryHuffman.encode_packets"]], "neurotools.encoding.naryhuffman": [[54, "module-neurotools.encoding.NaryHuffman"]], "walk() (neurotools.encoding.naryhuffman.naryhuffman.node method)": [[54, "neurotools.encoding.NaryHuffman.NaryHuffman.Node.walk"]], "dsigmoid() (in module neurotools.functions)": [[55, "neurotools.functions.dsigmoid"]], "f() (in module neurotools.functions)": [[55, "neurotools.functions.f"]], "f1() (in module neurotools.functions)": [[55, "neurotools.functions.f1"]], "f2() (in module neurotools.functions)": [[55, "neurotools.functions.f2"]], "g() (in module neurotools.functions)": [[55, "neurotools.functions.g"]], "inversesigmoid() (in module neurotools.functions)": [[55, "neurotools.functions.inversesigmoid"]], "log_factorial() (in module neurotools.functions)": [[55, "neurotools.functions.log_factorial"]], "neurotools.functions": [[55, "module-neurotools.functions"]], "npdf() (in module neurotools.functions)": [[55, "neurotools.functions.npdf"]], "sexp() (in module neurotools.functions)": [[55, "neurotools.functions.sexp"]], "sigmoid() (in module neurotools.functions)": [[55, "neurotools.functions.sigmoid"]], "slog() (in module neurotools.functions)": [[55, "neurotools.functions.slog"]], "ftwthr() (in module neurotools.getfftw)": [[56, "neurotools.getfftw.ftwthr"]], "neurotools.getfftw": [[56, "module-neurotools.getfftw"]], "neurotools.gpu": [[57, "module-neurotools.gpu"]], "missing() (in module neurotools.gpu.cl)": [[58, "neurotools.gpu.cl.missing"]], "neurotools.gpu.cl": [[58, "module-neurotools.gpu.cl"]], "neurotools.gpu.cl.device": [[59, "module-neurotools.gpu.cl.device"]], "zeros_float() (in module neurotools.gpu.cl.device)": [[59, "neurotools.gpu.cl.device.zeros_float"]], "elemental() (in module neurotools.gpu.cl.function)": [[60, "neurotools.gpu.cl.function.elemental"]], "format() (in module neurotools.gpu.cl.function)": [[60, "neurotools.gpu.cl.function.format"]], "gpumap() (in module neurotools.gpu.cl.function)": [[60, "neurotools.gpu.cl.function.gpumap"]], "guessgputype() (in module neurotools.gpu.cl.function)": [[60, "neurotools.gpu.cl.function.guessGPUType"]], "insert_global() (in module neurotools.gpu.cl.function)": [[60, "neurotools.gpu.cl.function.insert_global"]], "kernel() (in module neurotools.gpu.cl.function)": [[60, "neurotools.gpu.cl.function.kernel"]], "neurotools.gpu.cl.function": [[60, "module-neurotools.gpu.cl.function"]], "printkernel() (in module neurotools.gpu.cl.function)": [[60, "neurotools.gpu.cl.function.printKernel"]], "togputype() (in module neurotools.gpu.cl.function)": [[60, "neurotools.gpu.cl.function.toGPUType"]], "neurotools.gpu.cpu": [[62, "module-neurotools.gpu.cpu"]], "cmap() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.cmap"]], "compose() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.compose"]], "corr() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.corr"]], "cov() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.cov"]], "cut() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.cut"]], "document() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.document"]], "dot() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.dot"]], "elem() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.elem"]], "fancy() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.fancy"]], "flat() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.flat"]], "idivup() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.idivup"]], "ldif() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.ldif"]], "ldif2() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.ldif2"]], "ldiv() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.ldiv"]], "ldiv2() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.ldiv2"]], "length() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.length"]], "lmul() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.lmul"]], "lmul2() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.lmul2"]], "lpow() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.lpow"]], "lpow2() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.lpow2"]], "lsum() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.lsum"]], "lsum2() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.lsum2"]], "mdif() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.mdif"]], "mdiv() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.mdiv"]], "mean() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.mean"]], "mmap() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.mmap"]], "mmean() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.mmean"]], "mmul() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.mmul"]], "mpow() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.mpow"]], "mstd() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.mstd"]], "msum() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.msum"]], "mu() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.mu"]], "mvar() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.mvar"]], "neurotools.gpu.cpu.util": [[63, "module-neurotools.gpu.cpu.util"]], "norm() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.norm"]], "rnorm() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.rnorm"]], "scale() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.scale"]], "sem() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.sem"]], "shift() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.shift"]], "sigma() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.sigma"]], "sstd() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.sstd"]], "std() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.std"]], "svar() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.svar"]], "var() (in module neurotools.gpu.cpu.util)": [[63, "neurotools.gpu.cpu.util.var"]], "neurotools.gpu.cu": [[64, "module-neurotools.gpu.cu"]], "gpuboxconv() (in module neurotools.gpu.cu.convolution)": [[65, "neurotools.gpu.cu.convolution.gpuboxconv"]], "gpuboxconv_core() (in module neurotools.gpu.cu.convolution)": [[65, "neurotools.gpu.cu.convolution.gpuboxconv_core"]], "neurotools.gpu.cu.convolution": [[65, "module-neurotools.gpu.cu.convolution"]], "card_info() (in module neurotools.gpu.cu.device)": [[66, "neurotools.gpu.cu.device.card_info"]], "estimateblocks() (in module neurotools.gpu.cu.device)": [[66, "neurotools.gpu.cu.device.estimateBlocks"]], "estimateloop() (in module neurotools.gpu.cu.device)": [[66, "neurotools.gpu.cu.device.estimateLoop"]], "estimatethreadsperblock() (in module neurotools.gpu.cu.device)": [[66, "neurotools.gpu.cu.device.estimateThreadsPerBlock"]], "missing() (in module neurotools.gpu.cu.device)": [[66, "neurotools.gpu.cu.device.missing"]], "neurotools.gpu.cu.device": [[66, "module-neurotools.gpu.cu.device"]], "cpu() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.cpu"]], "expsub() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.expsub"]], "ezkern() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.ezkern"]], "format() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.format"]], "gpubin() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpubin"]], "gpubinaryeq() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpubinaryeq"]], "gpufloat() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpufloat"]], "gpufloatmat() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpufloatmat"]], "gpufloatred() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpufloatred"]], "gpuint() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpuint"]], "gpuintmap() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpuintmap"]], "gpuintmat() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpuintmat"]], "gpuintred() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpuintred"]], "gpumap() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpumap"]], "gpumapeq() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpumapeq"]], "gpupointer() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpupointer"]], "gpuscalar() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.gpuscalar"]], "guessgputype() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.guessGPUType"]], "kernel() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.kernel"]], "neurotools.gpu.cu.function": [[67, "module-neurotools.gpu.cu.function"]], "printkernel() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.printKernel"]], "togputype() (in module neurotools.gpu.cu.function)": [[67, "neurotools.gpu.cu.function.toGPUType"]], "gpuhill() (in module neurotools.gpu.cu.gpufun)": [[68, "neurotools.gpu.cu.gpufun.gpuhill"]], "gpulcomb() (in module neurotools.gpu.cu.gpufun)": [[68, "neurotools.gpu.cu.gpufun.gpulcomb"]], "gpulogpdf() (in module neurotools.gpu.cu.gpufun)": [[68, "neurotools.gpu.cu.gpufun.gpulogpdf"]], "gpumean() (in module neurotools.gpu.cu.gpufun)": [[68, "neurotools.gpu.cu.gpufun.gpumean"]], "gpunpdf() (in module neurotools.gpu.cu.gpufun)": [[68, "neurotools.gpu.cu.gpufun.gpunpdf"]], "gpurandexp() (in module neurotools.gpu.cu.gpufun)": [[68, "neurotools.gpu.cu.gpufun.gpurandexp"]], "gpurandf() (in module neurotools.gpu.cu.gpufun)": [[68, "neurotools.gpu.cu.gpufun.gpurandf"]], "gpuuniform() (in module neurotools.gpu.cu.gpufun)": [[68, "neurotools.gpu.cu.gpufun.gpuuniform"]], "neurotools.gpu.cu.gpufun": [[68, "module-neurotools.gpu.cu.gpufun"]], "connect_gaussian() (in module neurotools.gpu.cu.graph)": [[69, "neurotools.gpu.cu.graph.connect_gaussian"]], "neurotools.gpu.cu.graph": [[69, "module-neurotools.gpu.cu.graph"]], "random_point_sheet() (in module neurotools.gpu.cu.graph)": [[69, "neurotools.gpu.cu.graph.random_point_sheet"]], "spherepoints() (in module neurotools.gpu.cu.graph)": [[69, "neurotools.gpu.cu.graph.spherepoints"]], "uniform_point_sheet() (in module neurotools.gpu.cu.graph)": [[69, "neurotools.gpu.cu.graph.uniform_point_sheet"]], "gpuand() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpuand"]], "gpueq() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpueq"]], "gpugt() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpugt"]], "gpugteq() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpugteq"]], "gpuhzero() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpuhzero"]], "gpult() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpult"]], "gpulteq() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpulteq"]], "gpuneq() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpuneq"]], "gpunor() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpunor"]], "gpunot() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpunot"]], "gpurange() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpurange"]], "gpuyes() (in module neurotools.gpu.cu.logic)": [[70, "neurotools.gpu.cu.logic.gpuyes"]], "neurotools.gpu.cu.logic": [[70, "module-neurotools.gpu.cu.logic"]], "elementwisekernel() (in module neurotools.gpu.cu.plot)": [[72, "neurotools.gpu.cu.plot.ElementwiseKernel"]], "gpubarlinedata() (in module neurotools.gpu.cu.plot)": [[72, "neurotools.gpu.cu.plot.gpubarlinedata"]], "gpuhistogram() (in module neurotools.gpu.cu.plot)": [[72, "neurotools.gpu.cu.plot.gpuhistogram"]], "missing() (in module neurotools.gpu.cu.plot)": [[72, "neurotools.gpu.cu.plot.missing"]], "neurotools.gpu.cu.plot": [[72, "module-neurotools.gpu.cu.plot"]], "sebarline() (in module neurotools.gpu.cu.plot)": [[72, "neurotools.gpu.cu.plot.sebarline"]], "sebarline2() (in module neurotools.gpu.cu.plot)": [[72, "neurotools.gpu.cu.plot.sebarline2"]], "frameeater() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.FrameEater"]], "gpuautometric() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.GPUAutometric"]], "gpudotmetric() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.GPUDotmetric"]], "gpumagmetric() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.GPUMagmetric"]], "gpupointautodistance() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.GPUPointAutoDistance"]], "gpusequenceautodetect() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.GPUSequenceAutoDetect"]], "deltamag() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.deltamag"]], "fitgaussbimodal() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.fitgaussbimodal"]], "fitgausstrimodal() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.fitgausstrimodal"]], "gpuderivative() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.gpuderivative"]], "gpulognpdf() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.gpulognpdf"]], "gpunpdf() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.gpunpdf"]], "gpusmooth() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.gpusmooth"]], "gpusubsetgfit() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.gpusubsetgfit"]], "gpusubsetmean() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.gpusubsetmean"]], "gputhing() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.gputhing"]], "mulmag() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.mulmag"]], "neurotools.gpu.cu.sequence": [[73, "module-neurotools.gpu.cu.sequence"]], "summag() (in module neurotools.gpu.cu.sequence)": [[73, "neurotools.gpu.cu.sequence.summag"]], "elementwisekernel() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.ElementwiseKernel"]], "gpu_histogram() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpu_histogram"]], "gpubarlinedata() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpubarlinedata"]], "gpubin() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpubin"]], "gpubin_core() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpubin_core"]], "gpucenter() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpucenter"]], "gpucorr() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpucorr"]], "gpucov() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpucov"]], "gpuhistogram() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpuhistogram"]], "gpumag() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpumag"]], "gpumean() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpumean"]], "gpuscorr() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpuscorr"]], "gpuscov() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpuscov"]], "gpusdv() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpusdv"]], "gpusem() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpusem"]], "gpusqdev() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpusqdev"]], "gpusqmag() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpusqmag"]], "gpusstd() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpusstd"]], "gpustd() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpustd"]], "gpusvar() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpusvar"]], "gpuvar() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpuvar"]], "gpuzscore() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.gpuzscore"]], "neurotools.gpu.cu.statistics": [[74, "module-neurotools.gpu.cu.statistics"]], "sdbarline() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.sdbarline"]], "sdbarline2() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.sdbarline2"]], "sdgpubarlinedata() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.sdgpubarlinedata"]], "sebarline() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.sebarline"]], "sebarline2() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.sebarline2"]], "sprinkle() (in module neurotools.gpu.cu.statistics)": [[74, "neurotools.gpu.cu.statistics.sprinkle"]], "neurotools.graphics": [[75, "module-neurotools.graphics"]], "rgbtohcl() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.RGBtoHCL"]], "bit16_rgb_to_tuple() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.bit16_RGB_to_tuple"]], "bit16_print_color() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.bit16_print_color"]], "circularly_smooth_colormap() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.circularly_smooth_colormap"]], "code_to_16bit() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.code_to_16bit"]], "color_boxplot() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.color_boxplot"]], "complexhlarr2rgb() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.complexHLArr2RGB"]], "darkhues() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.darkhues"]], "enumerate_fast_colors() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.enumerate_fast_colors"]], "hcl2rgb() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.hcl2rgb"]], "hex2rgb() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.hex2rgb"]], "hex_pack_bgr() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.hex_pack_BGR"]], "hsv2rgb() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.hsv2rgb"]], "hue_angle() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.hue_angle"]], "isoluminance1() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.isoluminance1"]], "isoluminance2() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.isoluminance2"]], "isoluminance3() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.isoluminance3"]], "isoluminance4() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.isoluminance4"]], "lighthues() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.lighthues"]], "lightness() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.lightness"]], "luminance_matrix() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.luminance_matrix"]], "match_luminance() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.match_luminance"]], "medhues() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.medhues"]], "neurotools.graphics.color": [[76, "module-neurotools.graphics.color"]], "radl2rgb() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.radl2rgb"]], "radl2rgblut() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.radl2rgbLUT"]], "rgb2hex() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.rgb2hex"]], "rotate() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.rotate"]], "show_complete_fast_pallet() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.show_complete_fast_pallet"]], "show_complete_fastest_pallet() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.show_complete_fastest_pallet"]], "show_fast_pallet() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.show_fast_pallet"]], "show_hex_pallet() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.show_hex_pallet"]], "tuple_to_bit16() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.tuple_to_bit16"]], "tuple_to_bit24() (in module neurotools.graphics.color)": [[76, "neurotools.graphics.color.tuple_to_bit24"]], "neurotools.graphics.colormaps": [[77, "module-neurotools.graphics.colormaps"]], "test_colormaps() (in module neurotools.graphics.colormaps)": [[77, "neurotools.graphics.colormaps.test_colormaps"]], "count_nodes() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.count_nodes"]], "get_depth() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.get_depth"]], "inorder_traversal() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.inorder_traversal"]], "list_like() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.list_like"]], "neurotools.graphics.dendron": [[78, "module-neurotools.graphics.dendron"]], "plot_brackets() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.plot_brackets"]], "plot_brackets_polar() (in module neurotools.graphics.dendron)": [[78, "neurotools.graphics.dendron.plot_brackets_polar"]], "neurotools.graphics.fabio_maps": [[79, "module-neurotools.graphics.fabio_maps"]], "mean_center() (in module neurotools.graphics.image)": [[80, "neurotools.graphics.image.mean_center"]], "median_center() (in module neurotools.graphics.image)": [[80, "neurotools.graphics.image.median_center"]], "neurotools.graphics.image": [[80, "module-neurotools.graphics.image"]], "unitize() (in module neurotools.graphics.image)": [[80, "neurotools.graphics.image.unitize"]], "visualize_derivatives() (in module neurotools.graphics.image)": [[80, "neurotools.graphics.image.visualize_derivatives"]], "draw_array() (in module neurotools.graphics.matplotlib)": [[81, "neurotools.graphics.matplotlib.draw_array"]], "hide_toolbar() (in module neurotools.graphics.matplotlib)": [[81, "neurotools.graphics.matplotlib.hide_toolbar"]], "neurotools.graphics.matplotlib": [[81, "module-neurotools.graphics.matplotlib"]], "start() (in module neurotools.graphics.matplotlib)": [[81, "neurotools.graphics.matplotlib.start"]], "gaussian2d_covellipse() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.Gaussian2D_covellipse"]], "handlersquare (class in neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.HandlerSquare"]], "addspikes() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.addspikes"]], "adjust_axis_height_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.adjust_axis_height_pixels"]], "adjust_xlabel_space() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.adjust_xlabel_space"]], "adjust_ylabel_space() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.adjust_ylabel_space"]], "adjustmap() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.adjustmap"]], "animate_complex() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.animate_complex"]], "arrow_between() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.arrow_between"]], "barcompare() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.barcompare"]], "base_legend() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.base_legend"]], "border_width() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.border_width"]], "broken_step() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.broken_step"]], "ceil_to_precision() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.ceil_to_precision"]], "clean_y_range() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.clean_y_range"]], "cleartop() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.cleartop"]], "colored_boxplot() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.colored_boxplot"]], "complex_axis() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.complex_axis"]], "covariance_crosshairs() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.covariance_crosshairs"]], "create_artists() (neurotools.graphics.plot.handlersquare method)": [[82, "neurotools.graphics.plot.HandlerSquare.create_artists"]], "domask() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.domask"]], "draw_circle() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.draw_circle"]], "eformat() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.eformat"]], "expand_axis_x() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.expand_axis_x"]], "expand_axis_y() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.expand_axis_y"]], "expand_y_range() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.expand_y_range"]], "figurebox() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.figurebox"]], "flathist() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.flathist"]], "floor_to_precision() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.floor_to_precision"]], "force_aspect() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.force_aspect"]], "fsize() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.fsize"]], "fudgex() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.fudgex"]], "fudgexy() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.fudgexy"]], "fudgey() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.fudgey"]], "get_aspect() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.get_aspect"]], "get_ax_pixel() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.get_ax_pixel"]], "get_ax_pixel_ratio() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.get_ax_pixel_ratio"]], "get_ax_size() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.get_ax_size"]], "get_bbox() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.get_bbox"]], "good_colorbar() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.good_colorbar"]], "inhibition_arrow() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.inhibition_arrow"]], "label() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.label"]], "left_legend() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.left_legend"]], "match_image_aspect() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.match_image_aspect"]], "more_xticks() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.more_xticks"]], "more_yticks() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.more_yticks"]], "neurotools.graphics.plot": [[82, "module-neurotools.graphics.plot"]], "nice_legend() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nice_legend"]], "nicebp() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nicebp"]], "nicetable() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nicetable"]], "nicex() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nicex"]], "nicexy() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nicexy"]], "nicey() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nicey"]], "noaxis() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noaxis"]], "noclip() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noclip"]], "nolabels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nolabels"]], "notick() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.notick"]], "nox() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nox"]], "noxlabels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noxlabels"]], "noxyaxes() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noxyaxes"]], "noy() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noy"]], "noylabels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.noylabels"]], "nudge_axis_baseline() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nudge_axis_baseline"]], "nudge_axis_left() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nudge_axis_left"]], "nudge_axis_x() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nudge_axis_x"]], "nudge_axis_y() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nudge_axis_y"]], "nudge_axis_y_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.nudge_axis_y_pixels"]], "percent() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.percent"]], "pixels_to_xfigureunits() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.pixels_to_xfigureunits"]], "pixels_to_xunits() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.pixels_to_xunits"]], "pixels_to_yfigureunits() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.pixels_to_yfigureunits"]], "pixels_to_yunits() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.pixels_to_yunits"]], "plotcwt() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.plotCWT"]], "plotwtphase() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.plotWTPhase"]], "plotwtphasefig() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.plotWTPhaseFig"]], "plot_complex() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.plot_complex"]], "plotz() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.plotz"]], "positivex() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.positivex"]], "positivexy() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.positivexy"]], "positivey() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.positivey"]], "px2x() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.px2x"]], "px2y() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.px2y"]], "rangeover() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.rangeover"]], "rangeto() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.rangeto"]], "right_legend() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.right_legend"]], "rightaxis() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.rightaxis"]], "righty() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.righty"]], "round_to_precision() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.round_to_precision"]], "savefigure() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.savefigure"]], "shade_edges() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.shade_edges"]], "shellmean() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.shellmean"]], "shellplot() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.shellplot"]], "shortscientific() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.shortscientific"]], "sigbar() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.sigbar"]], "simple_arrow() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.simple_arrow"]], "simpleaxis() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.simpleaxis"]], "simpleraxis() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.simpleraxis"]], "simplerright() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.simplerright"]], "splitz() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.splitz"]], "stderrplot() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.stderrplot"]], "subfigurelabel() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.subfigurelabel"]], "trendline() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.trendline"]], "unit_crosshairs() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.unit_crosshairs"]], "unitaxes() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.unitaxes"]], "unitx() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.unitx"]], "unity() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.unity"]], "v2str() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.v2str"]], "v2str_long() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.v2str_long"]], "wtpshow() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.wtpshow"]], "xbartext() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xbartext"]], "xfigureunits_to_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xfigureunits_to_pixels"]], "xscalebar() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xscalebar"]], "xunits_to_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xunits_to_pixels"]], "xylim() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.xylim"]], "ybartext() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.ybartext"]], "yfigureunits_to_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.yfigureunits_to_pixels"]], "yscalebar() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.yscalebar"]], "yunits_to_pixels() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.yunits_to_pixels"]], "zoombox() (in module neurotools.graphics.plot)": [[82, "neurotools.graphics.plot.zoombox"]], "draw_array() (in module neurotools.graphics.pygame)": [[83, "neurotools.graphics.pygame.draw_array"]], "enable_vsync() (in module neurotools.graphics.pygame)": [[83, "neurotools.graphics.pygame.enable_vsync"]], "neurotools.graphics.pygame": [[83, "module-neurotools.graphics.pygame"]], "start() (in module neurotools.graphics.pygame)": [[83, "neurotools.graphics.pygame.start"]], "gethdf() (in module neurotools.hdfmat)": [[85, "neurotools.hdfmat.getHDF"]], "gethdfvalue() (in module neurotools.hdfmat)": [[85, "neurotools.hdfmat.getHDFvalue"]], "hdf2dict() (in module neurotools.hdfmat)": [[85, "neurotools.hdfmat.hdf2dict"]], "neurotools.hdfmat": [[85, "module-neurotools.hdfmat"]], "printmathdf5() (in module neurotools.hdfmat)": [[85, "neurotools.hdfmat.printmatHDF5"]], "recursive_printmathdf5() (in module neurotools.hdfmat)": [[85, "neurotools.hdfmat.recursive_printmatHDF5"]], "neurotools.jobs": [[86, "module-neurotools.jobs"]], "base64hash() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.base64hash"]], "base64hash2byte() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.base64hash2byte"]], "disk_cacher() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.disk_cacher"]], "file_string_to_signature() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.file_string_to_signature"]], "function_hash_no_subroutines() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.function_hash_no_subroutines"]], "function_hash_with_subroutines() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.function_hash_with_subroutines"]], "function_signature() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.function_signature"]], "get_cache_path() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.get_cache_path"]], "get_source() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.get_source"]], "hierarchical_cacher() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.hierarchical_cacher"]], "human_decode() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.human_decode"]], "human_encode() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.human_encode"]], "locate_cached() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.locate_cached"]], "neurotools.jobs.cache": [[87, "module-neurotools.jobs.cache"]], "read_cache_entry() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.read_cache_entry"]], "signature_to_file_string() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.signature_to_file_string"]], "validate_for_matfile() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.validate_for_matfile"]], "validate_for_numpy() (in module neurotools.jobs.cache)": [[87, "neurotools.jobs.cache.validate_for_numpy"]], "csv() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.csv"]], "get_subroutines() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.get_subroutines"]], "inspect_function_closure() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.inspect_function_closure"]], "is_immutable() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.is_immutable"]], "is_probably_safe() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.is_probably_safe"]], "neurotools.jobs.closure": [[88, "module-neurotools.jobs.closure"]], "verify_function_closure() (in module neurotools.jobs.closure)": [[88, "neurotools.jobs.closure.verify_function_closure"]], "check_filename() (in module neurotools.jobs.filenames)": [[89, "neurotools.jobs.filenames.check_filename"]], "is_dangerous_filename() (in module neurotools.jobs.filenames)": [[89, "neurotools.jobs.filenames.is_dangerous_filename"]], "neurotools.jobs.filenames": [[89, "module-neurotools.jobs.filenames"]], "validate_argument_signature() (in module neurotools.jobs.filenames)": [[89, "neurotools.jobs.filenames.validate_argument_signature"]], "cache_test() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.cache_test"]], "du() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.du"]], "initialize_caches() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.initialize_caches"]], "launch_cache_synchronizers() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.launch_cache_synchronizers"]], "neurotools.jobs.initialize_system_cache": [[90, "module-neurotools.jobs.initialize_system_cache"]], "purge_ram_cache() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.purge_ram_cache"]], "purge_ssd_cache() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.purge_ssd_cache"]], "reset_ramdisk() (in module neurotools.jobs.initialize_system_cache)": [[90, "neurotools.jobs.initialize_system_cache.reset_ramdisk"]], "argument_signature() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.argument_signature"]], "clear_memoized() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.clear_memoized"]], "listit() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.listit"]], "memoize() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.memoize"]], "neurotools.jobs.ndecorator": [[91, "module-neurotools.jobs.ndecorator"]], "print_signature() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.print_signature"]], "sanitize() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.sanitize"]], "summarize_function() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.summarize_function"]], "timed() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.timed"]], "tupleit() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.tupleit"]], "unwrap() (in module neurotools.jobs.ndecorator)": [[91, "neurotools.jobs.ndecorator.unwrap"]], "close_pool() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.close_pool"]], "eval_from_cached() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.eval_from_cached"]], "function_fingerprint() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.function_fingerprint"]], "neurotools.jobs.parallel": [[92, "module-neurotools.jobs.parallel"]], "parallel_cached_wrapper() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parallel_cached_wrapper"]], "parallel_error_handling() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parallel_error_handling"]], "parallel_indirect_wrapper() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parallel_indirect_wrapper"]], "pararraymap() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.pararraymap"]], "parimap() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parimap"]], "parmap() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parmap"]], "parmap_dict() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.parmap_dict"]], "reset_pool() (in module neurotools.jobs.parallel)": [[92, "neurotools.jobs.parallel.reset_pool"]], "neurotools.linalg": [[93, "module-neurotools.linalg"]], "ascolumn() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.ascolumn"]], "asrow() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.asrow"]], "assertcolumn() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertcolumn"]], "assertfinite() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertfinite"]], "assertfinitereal() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertfinitereal"]], "assertreal() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertreal"]], "assertrow() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertrow"]], "assertshape() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertshape"]], "assertsquare() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertsquare"]], "assertvector() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assertvector"]], "assquare() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.assquare"]], "asvector() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.asvector"]], "iscolumn() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.iscolumn"]], "isrow() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.isrow"]], "issquare() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.issquare"]], "neurotools.linalg.arguments": [[94, "module-neurotools.linalg.arguments"]], "scalar() (in module neurotools.linalg.arguments)": [[94, "neurotools.linalg.arguments.scalar"]], "ldistance() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.Ldistance"]], "llasso() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.Llasso"]], "abserr() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.abserr"]], "autopredict() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.autopredict"]], "cartesian_product() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.cartesian_product"]], "check_covmat() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.check_covmat"]], "check_covmat_fast() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.check_covmat_fast"]], "check_finite_real() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.check_finite_real"]], "cholupdate() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.cholupdate"]], "cholupdate_eye() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.cholupdate_eye"]], "cinv() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.cinv"]], "column() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.column"]], "csolve() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.csolve"]], "errmx() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.errmx"]], "kronsum() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.kronsum"]], "laplace_kernel() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.laplace_kernel"]], "ldiv() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.ldiv"]], "logdet() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.logdet"]], "match_covariance() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.match_covariance"]], "maxeig() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.maxeig"]], "nearpdhigham() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.nearPDHigham"]], "nearpsdrebonatojackel() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.nearPSDRebonatoJackel"]], "neurotools.linalg.matrix": [[95, "module-neurotools.linalg.matrix"]], "normedcovariance() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.normedcovariance"]], "psd_eig() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.psd_eig"]], "qf() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.qf"]], "rcond() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.rcond"]], "rdiv() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.rdiv"]], "real_eig() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.real_eig"]], "reglstsq() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.reglstsq"]], "rmatrix() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.rmatrix"]], "row() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.row"]], "rsolt() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.rsolt"]], "rsolve() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.rsolve"]], "selector_matrix() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.selector_matrix"]], "solt() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.solt"]], "top_v() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.top_v"]], "tril_elements() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.tril_elements"]], "triu_elements() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.triu_elements"]], "wheremax() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.wheremax"]], "wheremin() (in module neurotools.linalg.matrix)": [[95, "neurotools.linalg.matrix.wheremin"]], "adjacency1d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.adjacency1D"]], "adjacency2d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.adjacency2D"]], "adjacency2d_circular() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.adjacency2D_circular"]], "adjacency2d_rotational() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.adjacency2d_rotational"]], "circular1dbluroperator() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.circular1DblurOperator"]], "cosine_kernel() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.cosine_kernel"]], "covfrom() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.covfrom"]], "delta() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.delta"]], "differentiator() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.differentiator"]], "diffuseft1d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.diffuseFT1D"]], "flatcov() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.flatcov"]], "gaussian1dbluroperator() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.gaussian1DblurOperator"]], "gaussian2dbluroperator() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.gaussian2DblurOperator"]], "integrator() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.integrator"]], "laplacian1d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.laplacian1D"]], "laplacian1d_circular() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.laplacian1D_circular"]], "laplacian2d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.laplacian2D"]], "laplacianft1d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.laplacianFT1D"]], "log_cosine_basis() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.log_cosine_basis"]], "make_cosine_basis() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.make_cosine_basis"]], "neurotools.linalg.operators": [[96, "module-neurotools.linalg.operators"]], "oucov() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.oucov"]], "separable_guassian_blur() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.separable_guassian_blur"]], "wienerft1d() (in module neurotools.linalg.operators)": [[96, "neurotools.linalg.operators.wienerFT1D"]], "neurotools.models": [[97, "module-neurotools.models"]], "du_izh() (in module neurotools.models.izh)": [[98, "neurotools.models.izh.du_izh"]], "dv_izh() (in module neurotools.models.izh)": [[98, "neurotools.models.izh.dv_izh"]], "neurotools.models.izh": [[98, "module-neurotools.models.izh"]], "sim_izh() (in module neurotools.models.izh)": [[98, "neurotools.models.izh.sim_izh"]], "update_izh() (in module neurotools.models.izh)": [[98, "neurotools.models.izh.update_izh"]], "euler_integrate_lif() (in module neurotools.models.lif)": [[99, "neurotools.models.lif.euler_integrate_LIF"]], "exponential_integrate_lif() (in module neurotools.models.lif)": [[99, "neurotools.models.lif.exponential_integrate_LIF"]], "exponential_moving_average() (in module neurotools.models.lif)": [[99, "neurotools.models.lif.exponential_moving_average"]], "neurotools.models.lif": [[99, "module-neurotools.models.lif"]], "neurotools.models.rbm": [[100, "module-neurotools.models.rbm"]], "acond() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.Acond"]], "pcond() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.Pcond"]], "a2q() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.a2q"]], "bar_f() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.bar_f"]], "bernoulli_entropy() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.bernoulli_entropy"]], "bernoulli_entropy_activation() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.bernoulli_entropy_activation"]], "bitent() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.bitent"]], "ground_state() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.ground_state"]], "hashbits() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.hashbits"]], "hashfloat128() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.hashfloat128"]], "hashint64() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.hashint64"]], "inv_f() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.inv_f"]], "lnpr() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.lnPr"]], "lnpr_activation() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.lnPr_activation"]], "natent() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.natent"]], "neurotools.models.rbm.rbm": [[101, "module-neurotools.models.rbm.rbm"]], "p2a() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.p2a"]], "unhashbits() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.unhashbits"]], "unhashfloat128() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.unhashfloat128"]], "unhashint64() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.unhashint64"]], "unique_counts() (in module neurotools.models.rbm.rbm)": [[101, "neurotools.models.rbm.rbm.unique_counts"]], "barcompare() (in module neurotools.models.rbm.rbm_helper)": [[102, "neurotools.models.rbm.rbm_helper.barcompare"]], "get_trials() (in module neurotools.models.rbm.rbm_helper)": [[102, "neurotools.models.rbm.rbm_helper.get_trials"]], "make_filename() (in module neurotools.models.rbm.rbm_helper)": [[102, "neurotools.models.rbm.rbm_helper.make_filename"]], "neurotools.models.rbm.rbm_helper": [[102, "module-neurotools.models.rbm.rbm_helper"]], "scattercompare() (in module neurotools.models.rbm.rbm_helper)": [[102, "neurotools.models.rbm.rbm_helper.scattercompare"]], "zipfplot() (in module neurotools.models.rbm.rbm_helper)": [[102, "neurotools.models.rbm.rbm_helper.zipfplot"]], "ahv() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Ahv"]], "avh() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Avh"]], "euh_factorial (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.EUh_factorial"]], "eh_unnormalized() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Eh_unnormalized"]], "ehv (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Ehv"]], "ehvvh (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Ehvvh"]], "ehvvh_meanfield (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Ehvvh_meanfield"]], "ev_unnormalized() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Ev_unnormalized"]], "evh (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Evh"]], "evhhv (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Evhhv"]], "evhhv_meanfield (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Evhhv_meanfield"]], "evvh (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Evvh"]], "hhv (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Hhv"]], "hvh (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Hvh"]], "phv() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Phv"]], "pvh() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.Pvh"]], "rbm_sample (class in neurotools.models.rbm.rbm_sample)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample"]], "barhhv (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.barHhv"]], "barhvh (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.barHvh"]], "conditional_map() (in module neurotools.models.rbm.rbm_sample)": [[103, "neurotools.models.rbm.rbm_sample.conditional_map"]], "deuh (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.dEUh"]], "deuv (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.dEUv"]], "deh() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.dEh"]], "dehhv (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.dEhhv"]], "dehhv_meanfield (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.dEhhv_meanfield"]], "dev() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.dEv"]], "devvh (neurotools.models.rbm.rbm_sample.rbm_sample property)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.dEvvh"]], "get_eh() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.get_Eh"]], "get_ehhv_factorial() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.get_Ehhv_factorial"]], "get_ehhv_meanfield() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.get_Ehhv_meanfield"]], "get_ev() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.get_Ev"]], "get_evh() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.get_Evh"]], "get_hhhv() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.get_Hhhv"]], "get_hvcondh() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.get_Hvcondh"]], "get_deh() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.get_dEh"]], "get_dev() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.get_dEv"]], "long_report() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.long_report"]], "neurotools.models.rbm.rbm_sample": [[103, "module-neurotools.models.rbm.rbm_sample"]], "precompute() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.precompute"]], "short_report() (neurotools.models.rbm.rbm_sample.rbm_sample method)": [[103, "neurotools.models.rbm.rbm_sample.RBM_sample.short_report"]], "neurotools.models.rbm.rbm_utils": [[104, "module-neurotools.models.rbm.rbm_utils"]], "loadrbm() (in module neurotools.models.rbm.rbm_utils.rbm)": [[105, "neurotools.models.rbm.rbm_utils.rbm.LoadRBM"]], "rbm (class in neurotools.models.rbm.rbm_utils.rbm)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM"]], "free_energy() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.free_energy"]], "get_cost_updates() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.get_cost_updates"]], "get_pseudo_likelihood_cost() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.get_pseudo_likelihood_cost"]], "get_reconstruction_cost() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.get_reconstruction_cost"]], "gibbs_hvh() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.gibbs_hvh"]], "gibbs_vhv() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.gibbs_vhv"]], "mean_h_given_v() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.mean_h_given_v"]], "neurotools.models.rbm.rbm_utils.rbm": [[105, "module-neurotools.models.rbm.rbm_utils.rbm"]], "propdown() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.propdown"]], "propup() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.propup"]], "sample() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.sample"]], "sample_h_given_v() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.sample_h_given_v"]], "sample_v_given_h() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.sample_v_given_h"]], "savenp() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.savenp"]], "train() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.train"]], "vis_energy() (neurotools.models.rbm.rbm_utils.rbm.rbm method)": [[105, "neurotools.models.rbm.rbm_utils.rbm.RBM.vis_energy"]], "bin_timeseries() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.bin_timeseries"]], "data_model_kldiv() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.data_model_kldiv"]], "data_pattern_logprob() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.data_pattern_logprob"]], "exact_logz() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.exact_logZ"]], "exact_logz_serial() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.exact_logZ_serial"]], "fim_eig() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.fim_eig"]], "gen_cov() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.gen_cov"]], "neurotools.models.rbm.rbm_utils.stutils": [[106, "module-neurotools.models.rbm.rbm_utils.stutils"]], "plot_raster() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.plot_raster"]], "plot_zipf() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.plot_zipf"]], "rbm_fim_lowmem() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.rbm_fim_lowmem"]], "rbm_fim_numpy() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.rbm_fim_numpy"]], "rbm_pattern_logprob() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.rbm_pattern_logprob"]], "rbm_pattern_logprob_unnorm() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.rbm_pattern_logprob_unnorm"]], "select_clusters() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.select_clusters"]], "select_times() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.select_times"]], "sum_over() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.sum_over"]], "unique() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.unique"]], "zipf() (in module neurotools.models.rbm.rbm_utils.stutils)": [[106, "neurotools.models.rbm.rbm_utils.stutils.zipf"]], "beta() (in module neurotools.nlab)": [[107, "neurotools.nlab.beta"]], "binomial() (in module neurotools.nlab)": [[107, "neurotools.nlab.binomial"]], "chisquare() (in module neurotools.nlab)": [[107, "neurotools.nlab.chisquare"]], "choice() (in module neurotools.nlab)": [[107, "neurotools.nlab.choice"]], "dirichlet() (in module neurotools.nlab)": [[107, "neurotools.nlab.dirichlet"]], "exponential() (in module neurotools.nlab)": [[107, "neurotools.nlab.exponential"]], "f() (in module neurotools.nlab)": [[107, "neurotools.nlab.f"]], "gamma() (in module neurotools.nlab)": [[107, "neurotools.nlab.gamma"]], "geometric() (in module neurotools.nlab)": [[107, "neurotools.nlab.geometric"]], "get_state() (in module neurotools.nlab)": [[107, "neurotools.nlab.get_state"]], "gumbel() (in module neurotools.nlab)": [[107, "neurotools.nlab.gumbel"]], "hypergeometric() (in module neurotools.nlab)": [[107, "neurotools.nlab.hypergeometric"]], "laplace() (in module neurotools.nlab)": [[107, "neurotools.nlab.laplace"]], "logistic() (in module neurotools.nlab)": [[107, "neurotools.nlab.logistic"]], "lognormal() (in module neurotools.nlab)": [[107, "neurotools.nlab.lognormal"]], "logseries() (in module neurotools.nlab)": [[107, "neurotools.nlab.logseries"]], "multinomial() (in module neurotools.nlab)": [[107, "neurotools.nlab.multinomial"]], "multivariate_normal() (in module neurotools.nlab)": [[107, "neurotools.nlab.multivariate_normal"]], "negative_binomial() (in module neurotools.nlab)": [[107, "neurotools.nlab.negative_binomial"]], "neurotools.nlab": [[107, "module-neurotools.nlab"]], "noncentral_chisquare() (in module neurotools.nlab)": [[107, "neurotools.nlab.noncentral_chisquare"]], "noncentral_f() (in module neurotools.nlab)": [[107, "neurotools.nlab.noncentral_f"]], "normal() (in module neurotools.nlab)": [[107, "neurotools.nlab.normal"]], "pareto() (in module neurotools.nlab)": [[107, "neurotools.nlab.pareto"]], "permutation() (in module neurotools.nlab)": [[107, "neurotools.nlab.permutation"]], "poisson() (in module neurotools.nlab)": [[107, "neurotools.nlab.poisson"]], "power() (in module neurotools.nlab)": [[107, "neurotools.nlab.power"]], "rand() (in module neurotools.nlab)": [[107, "neurotools.nlab.rand"]], "randint() (in module neurotools.nlab)": [[107, "neurotools.nlab.randint"]], "randn() (in module neurotools.nlab)": [[107, "neurotools.nlab.randn"]], "random() (in module neurotools.nlab)": [[107, "neurotools.nlab.random"]], "random_integers() (in module neurotools.nlab)": [[107, "neurotools.nlab.random_integers"]], "random_sample() (in module neurotools.nlab)": [[107, "neurotools.nlab.random_sample"]], "rayleigh() (in module neurotools.nlab)": [[107, "neurotools.nlab.rayleigh"]], "seed() (in module neurotools.nlab)": [[107, "neurotools.nlab.seed"]], "set_state() (in module neurotools.nlab)": [[107, "neurotools.nlab.set_state"]], "shuffle() (in module neurotools.nlab)": [[107, "neurotools.nlab.shuffle"]], "standard_cauchy() (in module neurotools.nlab)": [[107, "neurotools.nlab.standard_cauchy"]], "standard_exponential() (in module neurotools.nlab)": [[107, "neurotools.nlab.standard_exponential"]], "standard_gamma() (in module neurotools.nlab)": [[107, "neurotools.nlab.standard_gamma"]], "standard_normal() (in module neurotools.nlab)": [[107, "neurotools.nlab.standard_normal"]], "standard_t() (in module neurotools.nlab)": [[107, "neurotools.nlab.standard_t"]], "triangular() (in module neurotools.nlab)": [[107, "neurotools.nlab.triangular"]], "uniform() (in module neurotools.nlab)": [[107, "neurotools.nlab.uniform"]], "vonmises() (in module neurotools.nlab)": [[107, "neurotools.nlab.vonmises"]], "wald() (in module neurotools.nlab)": [[107, "neurotools.nlab.wald"]], "weibull() (in module neurotools.nlab)": [[107, "neurotools.nlab.weibull"]], "zipf() (in module neurotools.nlab)": [[107, "neurotools.nlab.zipf"]], "amp() (in module neurotools.signal)": [[109, "neurotools.signal.amp"]], "ang() (in module neurotools.signal)": [[109, "neurotools.signal.ang"]], "arenear() (in module neurotools.signal)": [[109, "neurotools.signal.arenear"]], "aresafe() (in module neurotools.signal)": [[109, "neurotools.signal.aresafe"]], "autocorrelation() (in module neurotools.signal)": [[109, "neurotools.signal.autocorrelation"]], "bandpass_filter() (in module neurotools.signal)": [[109, "neurotools.signal.bandpass_filter"]], "box_filter() (in module neurotools.signal)": [[109, "neurotools.signal.box_filter"]], "circular_cosine_basis() (in module neurotools.signal)": [[109, "neurotools.signal.circular_cosine_basis"]], "circular_gaussian_smooth() (in module neurotools.signal)": [[109, "neurotools.signal.circular_gaussian_smooth"]], "circular_gaussian_smooth_2d() (in module neurotools.signal)": [[109, "neurotools.signal.circular_gaussian_smooth_2D"]], "complex_to_nan() (in module neurotools.signal)": [[109, "neurotools.signal.complex_to_nan"]], "deltaovermean() (in module neurotools.signal)": [[109, "neurotools.signal.deltaovermean"]], "estimate_padding() (in module neurotools.signal)": [[109, "neurotools.signal.estimate_padding"]], "fdiff() (in module neurotools.signal)": [[109, "neurotools.signal.fdiff"]], "fftacorr1d() (in module neurotools.signal)": [[109, "neurotools.signal.fftacorr1d"]], "fftsta() (in module neurotools.signal)": [[109, "neurotools.signal.fftsta"]], "find() (in module neurotools.signal)": [[109, "neurotools.signal.find"]], "fm_mod() (in module neurotools.signal)": [[109, "neurotools.signal.fm_mod"]], "fudge_derivative() (in module neurotools.signal)": [[109, "neurotools.signal.fudge_derivative"]], "gaussian_kernel() (in module neurotools.signal)": [[109, "neurotools.signal.gaussian_kernel"]], "gaussian_smooth() (in module neurotools.signal)": [[109, "neurotools.signal.gaussian_smooth"]], "gaussianize() (in module neurotools.signal)": [[109, "neurotools.signal.gaussianize"]], "geometric_window() (in module neurotools.signal)": [[109, "neurotools.signal.geometric_window"]], "get_edges() (in module neurotools.signal)": [[109, "neurotools.signal.get_edges"]], "get_snips() (in module neurotools.signal)": [[109, "neurotools.signal.get_snips"]], "get_triggered_stats() (in module neurotools.signal)": [[109, "neurotools.signal.get_triggered_stats"]], "highpass_filter() (in module neurotools.signal)": [[109, "neurotools.signal.highpass_filter"]], "ifreq() (in module neurotools.signal)": [[109, "neurotools.signal.ifreq"]], "interpmax1d() (in module neurotools.signal)": [[109, "neurotools.signal.interpmax1d"]], "interpolate_nan() (in module neurotools.signal)": [[109, "neurotools.signal.interpolate_NaN"]], "interpolate_nan_quadratic() (in module neurotools.signal)": [[109, "neurotools.signal.interpolate_NaN_quadratic"]], "killspikes() (in module neurotools.signal)": [[109, "neurotools.signal.killSpikes"]], "linear_cosine_basis() (in module neurotools.signal)": [[109, "neurotools.signal.linear_cosine_basis"]], "linfilter() (in module neurotools.signal)": [[109, "neurotools.signal.linfilter"]], "local_maxima() (in module neurotools.signal)": [[109, "neurotools.signal.local_maxima"]], "local_minima() (in module neurotools.signal)": [[109, "neurotools.signal.local_minima"]], "local_peak_within() (in module neurotools.signal)": [[109, "neurotools.signal.local_peak_within"]], "lowpass_filter() (in module neurotools.signal)": [[109, "neurotools.signal.lowpass_filter"]], "make_lagged() (in module neurotools.signal)": [[109, "neurotools.signal.make_lagged"]], "make_rebroadcast_slice() (in module neurotools.signal)": [[109, "neurotools.signal.make_rebroadcast_slice"]], "mean_block() (in module neurotools.signal)": [[109, "neurotools.signal.mean_block"]], "median_block() (in module neurotools.signal)": [[109, "neurotools.signal.median_block"]], "median_filter() (in module neurotools.signal)": [[109, "neurotools.signal.median_filter"]], "ndargmax() (in module neurotools.signal)": [[109, "neurotools.signal.ndargmax"]], "neurotools.signal": [[109, "module-neurotools.signal"]], "nice_interp() (in module neurotools.signal)": [[109, "neurotools.signal.nice_interp"]], "nonnegative_bandpass_filter() (in module neurotools.signal)": [[109, "neurotools.signal.nonnegative_bandpass_filter"]], "pad_signal() (in module neurotools.signal)": [[109, "neurotools.signal.pad_signal"]], "padin() (in module neurotools.signal)": [[109, "neurotools.signal.padin"]], "padout() (in module neurotools.signal)": [[109, "neurotools.signal.padout"]], "pdiff() (in module neurotools.signal)": [[109, "neurotools.signal.pdiff"]], "peak_within() (in module neurotools.signal)": [[109, "neurotools.signal.peak_within"]], "percentile_filter() (in module neurotools.signal)": [[109, "neurotools.signal.percentile_filter"]], "pghilbert() (in module neurotools.signal)": [[109, "neurotools.signal.pghilbert"]], "phase_randomize() (in module neurotools.signal)": [[109, "neurotools.signal.phase_randomize"]], "phase_randomize_from_amplitudes() (in module neurotools.signal)": [[109, "neurotools.signal.phase_randomize_from_amplitudes"]], "phase_rotate() (in module neurotools.signal)": [[109, "neurotools.signal.phase_rotate"]], "pieces() (in module neurotools.signal)": [[109, "neurotools.signal.pieces"]], "randband() (in module neurotools.signal)": [[109, "neurotools.signal.randband"]], "remove_gaps() (in module neurotools.signal)": [[109, "neurotools.signal.remove_gaps"]], "remove_short() (in module neurotools.signal)": [[109, "neurotools.signal.remove_short"]], "rewrap() (in module neurotools.signal)": [[109, "neurotools.signal.rewrap"]], "set_edges() (in module neurotools.signal)": [[109, "neurotools.signal.set_edges"]], "sign_preserving_amplitude_demodulate() (in module neurotools.signal)": [[109, "neurotools.signal.sign_preserving_amplitude_demodulate"]], "spaced_derivative() (in module neurotools.signal)": [[109, "neurotools.signal.spaced_derivative"]], "span() (in module neurotools.signal)": [[109, "neurotools.signal.span"]], "stats_block() (in module neurotools.signal)": [[109, "neurotools.signal.stats_block"]], "take_axis() (in module neurotools.signal)": [[109, "neurotools.signal.take_axis"]], "take_axis_slice() (in module neurotools.signal)": [[109, "neurotools.signal.take_axis_slice"]], "topercentiles() (in module neurotools.signal)": [[109, "neurotools.signal.topercentiles"]], "triggered_average() (in module neurotools.signal)": [[109, "neurotools.signal.triggered_average"]], "unit_length() (in module neurotools.signal)": [[109, "neurotools.signal.unit_length"]], "unitscale() (in module neurotools.signal)": [[109, "neurotools.signal.unitscale"]], "unwrap() (in module neurotools.signal)": [[109, "neurotools.signal.unwrap"]], "upsample() (in module neurotools.signal)": [[109, "neurotools.signal.upsample"]], "var_block() (in module neurotools.signal)": [[109, "neurotools.signal.var_block"]], "variance_filter() (in module neurotools.signal)": [[109, "neurotools.signal.variance_filter"]], "zeromean() (in module neurotools.signal)": [[109, "neurotools.signal.zeromean"]], "zgrid() (in module neurotools.signal)": [[109, "neurotools.signal.zgrid"]], "zscore() (in module neurotools.signal)": [[109, "neurotools.signal.zscore"]], "coherence_pvalue() (in module neurotools.signal.coherence)": [[110, "neurotools.signal.coherence.coherence_pvalue"]], "morlet_population_synchrony_spectrum() (in module neurotools.signal.coherence)": [[110, "neurotools.signal.coherence.morlet_population_synchrony_spectrum"]], "multitaper_coherence() (in module neurotools.signal.coherence)": [[110, "neurotools.signal.coherence.multitaper_coherence"]], "multitaper_multitrial_coherence() (in module neurotools.signal.coherence)": [[110, "neurotools.signal.coherence.multitaper_multitrial_coherence"]], "neurotools.signal.coherence": [[110, "module-neurotools.signal.coherence"]], "population_coherence_matrix() (in module neurotools.signal.coherence)": [[110, "neurotools.signal.coherence.population_coherence_matrix"]], "population_eigencoherence() (in module neurotools.signal.coherence)": [[110, "neurotools.signal.coherence.population_eigencoherence"]], "sliding_multitaper_coherence() (in module neurotools.signal.coherence)": [[110, "neurotools.signal.coherence.sliding_multitaper_coherence"]], "sliding_multitaper_coherence_parallel() (in module neurotools.signal.coherence)": [[110, "neurotools.signal.coherence.sliding_multitaper_coherence_parallel"]], "convolve2dct() (in module neurotools.signal.conv)": [[111, "neurotools.signal.conv.convolve2dct"]], "gausskern1d() (in module neurotools.signal.conv)": [[111, "neurotools.signal.conv.gausskern1d"]], "gausskern2d() (in module neurotools.signal.conv)": [[111, "neurotools.signal.conv.gausskern2d"]], "mirror2d() (in module neurotools.signal.conv)": [[111, "neurotools.signal.conv.mirror2d"]], "neurotools.signal.conv": [[111, "module-neurotools.signal.conv"]], "reflect2d() (in module neurotools.signal.conv)": [[111, "neurotools.signal.conv.reflect2D"]], "reflect2d_1() (in module neurotools.signal.conv)": [[111, "neurotools.signal.conv.reflect2D_1"]], "separable2d() (in module neurotools.signal.conv)": [[111, "neurotools.signal.conv.separable2d"]], "band_stop_line_noise_removal() (in module neurotools.signal.linenoise)": [[112, "neurotools.signal.linenoise.band_stop_line_noise_removal"]], "neurotools.signal.linenoise": [[112, "module-neurotools.signal.linenoise"]], "virtual_reference_line_noise_removal() (in module neurotools.signal.linenoise)": [[112, "neurotools.signal.linenoise.virtual_reference_line_noise_removal"]], "fft_cwt() (in module neurotools.signal.morlet)": [[113, "neurotools.signal.morlet.fft_cwt"]], "fft_cwt_transposed() (in module neurotools.signal.morlet)": [[113, "neurotools.signal.morlet.fft_cwt_transposed"]], "fft_cwt_transposed_logspaced() (in module neurotools.signal.morlet)": [[113, "neurotools.signal.morlet.fft_cwt_transposed_logspaced"]], "logfreqs() (in module neurotools.signal.morlet)": [[113, "neurotools.signal.morlet.logfreqs"]], "neurotools.signal.morlet": [[113, "module-neurotools.signal.morlet"]], "normalized_morlet() (in module neurotools.signal.morlet)": [[113, "neurotools.signal.morlet.normalized_morlet"]], "prepare_wavelet_fft_basis() (in module neurotools.signal.morlet)": [[113, "neurotools.signal.morlet.prepare_wavelet_fft_basis"]], "prepare_wavelet_fft_basis_logspace() (in module neurotools.signal.morlet)": [[113, "neurotools.signal.morlet.prepare_wavelet_fft_basis_logspace"]], "fft_cwt() (in module neurotools.signal.morlet_coherence)": [[114, "neurotools.signal.morlet_coherence.fft_cwt"]], "mtm_cohere() (in module neurotools.signal.morlet_coherence)": [[114, "neurotools.signal.morlet_coherence.mtm_cohere"]], "neurotools.signal.morlet_coherence": [[114, "module-neurotools.signal.morlet_coherence"]], "population_coherence_spectrum() (in module neurotools.signal.morlet_coherence)": [[114, "neurotools.signal.morlet_coherence.population_coherence_spectrum"]], "population_eigencoherence() (in module neurotools.signal.morlet_coherence)": [[114, "neurotools.signal.morlet_coherence.population_eigencoherence"]], "prepare_wavelet_fft_basis() (in module neurotools.signal.morlet_coherence)": [[114, "neurotools.signal.morlet_coherence.prepare_wavelet_fft_basis"]], "dpss_cached() (in module neurotools.signal.multitaper)": [[115, "neurotools.signal.multitaper.dpss_cached"]], "multitaper_population_eigencoherence() (in module neurotools.signal.multitaper)": [[115, "neurotools.signal.multitaper.multitaper_population_eigencoherence"]], "multitaper_spectrum() (in module neurotools.signal.multitaper)": [[115, "neurotools.signal.multitaper.multitaper_spectrum"]], "multitaper_squared_spectrum() (in module neurotools.signal.multitaper)": [[115, "neurotools.signal.multitaper.multitaper_squared_spectrum"]], "neurotools.signal.multitaper": [[115, "module-neurotools.signal.multitaper"]], "sliding_multitaper_spectrum() (in module neurotools.signal.multitaper)": [[115, "neurotools.signal.multitaper.sliding_multitaper_spectrum"]], "discard_spikes_closer_than_delta() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.discard_spikes_closer_than_delta"]], "estimate_bias_in_uncorrected_ppc() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.estimate_bias_in_uncorrected_ppc"]], "fftppc() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.fftppc"]], "fftppc_biased() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.fftppc_biased"]], "fftppc_biased_multitaper() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.fftppc_biased_multitaper"]], "fftppc_multitaper() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.fftppc_multitaper"]], "neurotools.signal.ppc": [[116, "module-neurotools.signal.ppc"]], "nodc() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.nodc"]], "pairwise_phase_consistancy() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.pairwise_phase_consistancy"]], "phase_randomize() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.phase_randomize"]], "phase_randomize_complex() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.phase_randomize_complex"]], "phase_randomized_bias_correction() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.phase_randomized_bias_correction"]], "ppc_chance_level() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.ppc_chance_level"]], "ppc_phase_randomize_chance_level_sample() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.ppc_phase_randomize_chance_level_sample"]], "temp_code_for_exploring_chance_level_delete_later() (in module neurotools.signal.ppc)": [[116, "neurotools.signal.ppc.temp_code_for_exploring_chance_level_delete_later"]], "neurotools.signal.resonator": [[117, "module-neurotools.signal.resonator"]], "resonantdrive() (in module neurotools.signal.resonator)": [[117, "neurotools.signal.resonator.resonantDrive"]], "resonantfilter() (in module neurotools.signal.resonator)": [[117, "neurotools.signal.resonator.resonantFilter"]], "resonantfiltfilt() (in module neurotools.signal.resonator)": [[117, "neurotools.signal.resonator.resonantFiltfilt"]], "sgkern() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGKern"]], "sgkerna() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGKernA"]], "sgkernj() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGKernJ"]], "sgkernv() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGKernV"]], "sgord() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGOrd"]], "sgaccelerate() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGaccelerate"]], "sgdifferentiate() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGdifferentiate"]], "sgfilt() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGfilt"]], "sgfilta() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGfiltA"]], "sgfiltj() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGfiltJ"]], "sgfiltv() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGfiltV"]], "sgjerk() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGjerk"]], "sgsmooth() (in module neurotools.signal.savitskygolay)": [[118, "neurotools.signal.savitskygolay.SGsmooth"]], "neurotools.signal.savitskygolay": [[118, "module-neurotools.signal.savitskygolay"]], "brute_force_local_2d_maxima() (in module neurotools.spatial)": [[120, "neurotools.spatial.brute_force_local_2d_maxima"]], "neurotools.spatial": [[120, "module-neurotools.spatial"]], "array_average_amplitude() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_average_amplitude"]], "array_count_centers() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_count_centers"]], "array_count_critical() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_count_critical"]], "array_kuramoto() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_kuramoto"]], "array_kuramoto_pgd() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_kuramoto_pgd"]], "array_kuramoto_pgd_standard_deviation() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_kuramoto_pgd_standard_deviation"]], "array_kuramoto_standard_deviation() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_kuramoto_standard_deviation"]], "array_phase_gradient() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_phase_gradient"]], "array_phasegradient_local() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_phasegradient_local"]], "array_phasegradient_magnitude_cv() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_phasegradient_magnitude_cv"]], "array_phasegradient_magnitude_sigma() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_phasegradient_magnitude_sigma"]], "array_phasegradient_pgd_threshold() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_phasegradient_pgd_threshold"]], "array_phasegradient_planar() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_phasegradient_planar"]], "array_speed_local() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_speed_local"]], "array_speed_pgd_threshold() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_speed_pgd_threshold"]], "array_synchrony() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_synchrony"]], "array_synchrony_pgd() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_synchrony_pgd"]], "array_synchrony_pgd_standard_deviation() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_synchrony_pgd_standard_deviation"]], "array_synchrony_standard_deviation() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_synchrony_standard_deviation"]], "array_wavelength_local() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_wavelength_local"]], "array_wavelength_local_pgd_threshold() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_wavelength_local_pgd_threshold"]], "array_wavelength_pgd_threshold() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_wavelength_pgd_threshold"]], "array_wavelength_planar() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.array_wavelength_planar"]], "neurotools.spatial.array": [[121, "module-neurotools.spatial.array"]], "pack_array_data() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.pack_array_data"]], "trim_array() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.trim_array"]], "trim_array_as_if() (in module neurotools.spatial.array)": [[121, "neurotools.spatial.array.trim_array_as_if"]], "dct_cut() (in module neurotools.spatial.dct)": [[122, "neurotools.spatial.dct.dct_cut"]], "dct_cut_antialias() (in module neurotools.spatial.dct)": [[122, "neurotools.spatial.dct.dct_cut_antialias"]], "dct_cut_downsampled() (in module neurotools.spatial.dct)": [[122, "neurotools.spatial.dct.dct_cut_downsampled"]], "dct_upsample() (in module neurotools.spatial.dct)": [[122, "neurotools.spatial.dct.dct_upsample"]], "dct_upsample_notrim() (in module neurotools.spatial.dct)": [[122, "neurotools.spatial.dct.dct_upsample_notrim"]], "get_mask() (in module neurotools.spatial.dct)": [[122, "neurotools.spatial.dct.get_mask"]], "get_mask_antialiased() (in module neurotools.spatial.dct)": [[122, "neurotools.spatial.dct.get_mask_antialiased"]], "iterated_upsample() (in module neurotools.spatial.dct)": [[122, "neurotools.spatial.dct.iterated_upsample"]], "neurotools.spatial.dct": [[122, "module-neurotools.spatial.dct"]], "outer_complex() (in module neurotools.spatial.dct)": [[122, "neurotools.spatial.dct.outer_complex"]], "distance_angular_deviation() (in module neurotools.spatial.distance)": [[123, "neurotools.spatial.distance.distance_angular_deviation"]], "get_average_synchrony_length_constant_parallel() (in module neurotools.spatial.distance)": [[123, "neurotools.spatial.distance.get_average_synchrony_length_constant_parallel"]], "get_averaged_angular_distance() (in module neurotools.spatial.distance)": [[123, "neurotools.spatial.distance.get_averaged_angular_distance"]], "get_electrode_locations() (in module neurotools.spatial.distance)": [[123, "neurotools.spatial.distance.get_electrode_locations"]], "get_length_constant_trial() (in module neurotools.spatial.distance)": [[123, "neurotools.spatial.distance.get_length_constant_trial"]], "get_pair_distance() (in module neurotools.spatial.distance)": [[123, "neurotools.spatial.distance.get_pair_distance"]], "neurotools.spatial.distance": [[123, "module-neurotools.spatial.distance"]], "synchrony_length_constant_areas_summary() (in module neurotools.spatial.distance)": [[123, "neurotools.spatial.distance.synchrony_length_constant_areas_summary"]], "coalesce() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.coalesce"]], "coalesce_points() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.coalesce_points"]], "cut_array_data() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.cut_array_data"]], "dphidx() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.dPhidx"]], "dphidy() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.dPhidy"]], "find_critical_points() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.find_critical_points"]], "find_critical_potential_points() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.find_critical_potential_points"]], "get_critical_spectra() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.get_critical_spectra"]], "get_phase_gradient_as_complex() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.get_phase_gradient_as_complex"]], "getp() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.getp"]], "getpeaks2d() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.getpeaks2d"]], "grad() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.grad"]], "mirror2d() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.mirror2D"]], "neurotools.spatial.fftzeros": [[124, "module-neurotools.spatial.fftzeros"]], "plot_critical_points() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.plot_critical_points"]], "plot_critical_spectra() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.plot_critical_spectra"]], "plot_phase_direction() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.plot_phase_direction"]], "plot_phase_gradient() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.plot_phase_gradient"]], "quickgrad() (in module neurotools.spatial.fftzeros)": [[124, "neurotools.spatial.fftzeros.quickgrad"]], "convex_hull() (in module neurotools.spatial.geometry)": [[125, "neurotools.spatial.geometry.convex_hull"]], "convex_hull_from_mask() (in module neurotools.spatial.geometry)": [[125, "neurotools.spatial.geometry.convex_hull_from_mask"]], "in_hull() (in module neurotools.spatial.geometry)": [[125, "neurotools.spatial.geometry.in_hull"]], "neurotools.spatial.geometry": [[125, "module-neurotools.spatial.geometry"]], "p2z() (in module neurotools.spatial.geometry)": [[125, "neurotools.spatial.geometry.p2z"]], "polar_smooth_contour() (in module neurotools.spatial.geometry)": [[125, "neurotools.spatial.geometry.polar_smooth_contour"]], "resample_convex_hull() (in module neurotools.spatial.geometry)": [[125, "neurotools.spatial.geometry.resample_convex_hull"]], "absorbing_gaussian() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.absorbing_gaussian"]], "absorbing_laplacian() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.absorbing_laplacian"]], "continuum_kernel() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.continuum_kernel"]], "cosine_kernel() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.cosine_kernel"]], "diffusion_basis() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.diffusion_basis"]], "exponential_basis() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.exponential_basis"]], "gaussian_2d_kernel() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.gaussian_2D_kernel"]], "iterative_orthogonalize_basis() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.iterative_orthogonalize_basis"]], "laplace_kernel() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.laplace_kernel"]], "laplacian() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.laplacian"]], "log_cosine_basis() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.log_cosine_basis"]], "log_spline_basis() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.log_spline_basis"]], "magickernel() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.magickernel"]], "magicsharp() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.magicsharp"]], "make_cosine_basis() (in module neurotools.spatial.kernels)": [[126, "neurotools.spatial.kernels.make_cosine_basis"]], "neurotools.spatial.kernels": [[126, "module-neurotools.spatial.kernels"]], "as_mask() (in module neurotools.spatial.masking)": [[127, "neurotools.spatial.masking.as_mask"]], "extend_mask() (in module neurotools.spatial.masking)": [[127, "neurotools.spatial.masking.extend_mask"]], "mask_crop() (in module neurotools.spatial.masking)": [[127, "neurotools.spatial.masking.mask_crop"]], "mask_to_points() (in module neurotools.spatial.masking)": [[127, "neurotools.spatial.masking.mask_to_points"]], "maskout() (in module neurotools.spatial.masking)": [[127, "neurotools.spatial.masking.maskout"]], "nan_mask() (in module neurotools.spatial.masking)": [[127, "neurotools.spatial.masking.nan_mask"]], "neurotools.spatial.masking": [[127, "module-neurotools.spatial.masking"]], "pgrid() (in module neurotools.spatial.masking)": [[127, "neurotools.spatial.masking.pgrid"]], "to_image() (in module neurotools.spatial.masking)": [[127, "neurotools.spatial.masking.to_image"]], "trim_mask() (in module neurotools.spatial.masking)": [[127, "neurotools.spatial.masking.trim_mask"]], "analytic_signal_coherence() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.analytic_signal_coherence"]], "neurotools.spatial.phase": [[128, "module-neurotools.spatial.phase"]], "population_average_amplitude() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_average_amplitude"]], "population_kuramoto() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_kuramoto"]], "population_median_frequency() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_median_frequency"]], "population_median_phase_velocity() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_median_phase_velocity"]], "population_normalized_sliding_signal_coherence() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_normalized_sliding_signal_coherence"]], "population_phase_coherence() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_phase_coherence"]], "population_phase_relative_sliding_kuramoto() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_phase_relative_sliding_kuramoto"]], "population_polar_std() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_polar_std"]], "population_signal_amplitude_dispersion() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_signal_amplitude_dispersion"]], "population_signal_amplitude_precision() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_signal_amplitude_precision"]], "population_signal_amplitude_std() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_signal_amplitude_std"]], "population_signal_concentration() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_signal_concentration"]], "population_signal_description() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_signal_description"]], "population_signal_dispersion() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_signal_dispersion"]], "population_signal_phase_dispersion() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_signal_phase_dispersion"]], "population_signal_phase_precision() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_signal_phase_precision"]], "population_signal_phase_std() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_signal_phase_std"]], "population_signal_precision() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_signal_precision"]], "population_sliding_signal_coherence() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_sliding_signal_coherence"]], "population_synchrony() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_synchrony"]], "population_synchrony_linear() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.population_synchrony_linear"]], "sliding_population_signal_coherence() (in module neurotools.spatial.phase)": [[128, "neurotools.spatial.phase.sliding_population_signal_coherence"]], "c2p() (in module neurotools.spatial.points)": [[129, "neurotools.spatial.points.c2p"]], "closest() (in module neurotools.spatial.points)": [[129, "neurotools.spatial.points.closest"]], "neurotools.spatial.points": [[129, "module-neurotools.spatial.points"]], "p2c() (in module neurotools.spatial.points)": [[129, "neurotools.spatial.points.p2c"]], "pair_neighbors() (in module neurotools.spatial.points)": [[129, "neurotools.spatial.points.pair_neighbors"]], "paired_distances() (in module neurotools.spatial.points)": [[129, "neurotools.spatial.points.paired_distances"]], "to_xypoint() (in module neurotools.spatial.points)": [[129, "neurotools.spatial.points.to_xypoint"]], "all_spatial_psd_parallel() (in module neurotools.spatial.spatialpsd)": [[130, "neurotools.spatial.spatialPSD.all_spatial_PSD_parallel"]], "neurotools.spatial.spatialpsd": [[130, "module-neurotools.spatial.spatialPSD"]], "psd2d() (in module neurotools.spatial.spatialpsd)": [[130, "neurotools.spatial.spatialPSD.psd2d"]], "spatialpsd_length_scale_spectrum() (in module neurotools.spatial.spatialpsd)": [[130, "neurotools.spatial.spatialPSD.spatialPSD_length_scale_spectrum"]], "spatialpsd_parallel_wrapper() (in module neurotools.spatial.spatialpsd)": [[130, "neurotools.spatial.spatialPSD.spatialPSD_parallel_wrapper"]], "interp_bin() (in module neurotools.spatial.spiking)": [[131, "neurotools.spatial.spiking.interp_bin"]], "neurotools.spatial.spiking": [[131, "module-neurotools.spatial.spiking"]], "coalesce() (in module neurotools.spatial.triangulation)": [[132, "neurotools.spatial.triangulation.coalesce"]], "edgesnearby() (in module neurotools.spatial.triangulation)": [[132, "neurotools.spatial.triangulation.edgesNearby"]], "mergenearby() (in module neurotools.spatial.triangulation)": [[132, "neurotools.spatial.triangulation.mergeNearby"]], "neurotools.spatial.triangulation": [[132, "module-neurotools.spatial.triangulation"]], "plot_edges() (in module neurotools.spatial.triangulation)": [[132, "neurotools.spatial.triangulation.plot_edges"]], "plot_triangles() (in module neurotools.spatial.triangulation)": [[132, "neurotools.spatial.triangulation.plot_triangles"]], "trianglestoedges() (in module neurotools.spatial.triangulation)": [[132, "neurotools.spatial.triangulation.trianglesToEdges"]], "uniquerow() (in module neurotools.spatial.triangulation)": [[132, "neurotools.spatial.triangulation.uniquerow"]], "z2xy() (in module neurotools.spatial.triangulation)": [[132, "neurotools.spatial.triangulation.z2xy"]], "averaged_directionality_index() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.averaged_directionality_index"]], "directionality_index() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.directionality_index"]], "frame_synchrony() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.frame_synchrony"]], "heuristic_b_double_planar() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.heuristic_B_double_planar"]], "heuristic_b_planar() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.heuristic_B_planar"]], "heuristic_b_polar() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.heuristic_B_polar"]], "heuristic_b_standing() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.heuristic_B_standing"]], "heuristic_b_synchronous() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.heuristic_B_synchronous"]], "heuristic_solver_double_planar() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.heuristic_solver_double_planar"]], "heuristic_solver_planar() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.heuristic_solver_planar"]], "heuristic_solver_polar() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.heuristic_solver_polar"]], "heuristic_solver_standing() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.heuristic_solver_standing"]], "heuristic_solver_synchronous() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.heuristic_solver_synchronous"]], "makelsqminimizerdoubleplane() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.makeLSQminimizerDoublePlane"]], "makelsqminimizerplane() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.makeLSQminimizerPlane"]], "makelsqminimizerpolar() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.makeLSQminimizerPolar"]], "makelsqminimizerstanding() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.makeLSQminimizerStanding"]], "makelsqminimizersynchronous() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.makeLSQminimizerSynchronous"]], "neurotools.spatial.wave_parametric_models": [[133, "module-neurotools.spatial.wave_parametric_models"]], "pairwise_phase_difference() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.pairwise_phase_difference"]], "phase_gradient() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.phase_gradient"]], "phase_unwrap() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.phase_unwrap"]], "plotdata() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.plotdata"]], "predict() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.predict"]], "spatial_phase_gradient() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.spatial_phase_gradient"]], "synchrony() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.synchrony"]], "zscore() (in module neurotools.spatial.wave_parametric_models)": [[133, "neurotools.spatial.wave_parametric_models.zscore"]], "neurotools.spikes": [[134, "module-neurotools.spikes"]], "bin_spike_times() (in module neurotools.spikes.spikes)": [[135, "neurotools.spikes.spikes.bin_spike_times"]], "bin_spikes_raster() (in module neurotools.spikes.spikes)": [[135, "neurotools.spikes.spikes.bin_spikes_raster"]], "cut_spikes() (in module neurotools.spikes.spikes)": [[135, "neurotools.spikes.spikes.cut_spikes"]], "neurotools.spikes.spikes": [[135, "module-neurotools.spikes.spikes"]], "pack_cross_correlation_matrix() (in module neurotools.spikes.spikes)": [[135, "neurotools.spikes.spikes.pack_cross_correlation_matrix"]], "pp_xcorr() (in module neurotools.spikes.spikes)": [[135, "neurotools.spikes.spikes.pp_xcorr"]], "times_to_raster() (in module neurotools.spikes.spikes)": [[135, "neurotools.spikes.spikes.times_to_raster"]], "txcorr() (in module neurotools.spikes.spikes)": [[135, "neurotools.spikes.spikes.txcorr"]], "getfwhm() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.getFWHM"]], "getphp() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.getPHP"]], "getpt() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.getPT"]], "getpthw() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.getPTHW"]], "getpvt() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.getPVT"]], "getwahp() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.getWAHP"]], "is_thin() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.is_thin"]], "is_thin_pvt() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.is_thin_pvt"]], "minmax() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.minmax"]], "neurotools.spikes.waveform": [[136, "module-neurotools.spikes.waveform"]], "normalized_waveform() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.normalized_waveform"]], "process() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.process"]], "realign() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.realign"]], "realign_special() (in module neurotools.spikes.waveform)": [[136, "neurotools.spikes.waveform.realign_special"]], "add_constant() (in module neurotools.stats)": [[137, "neurotools.stats.add_constant"]], "block_shuffle() (in module neurotools.stats)": [[137, "neurotools.stats.block_shuffle"]], "covariance() (in module neurotools.stats)": [[137, "neurotools.stats.covariance"]], "crossvalidated_least_squares() (in module neurotools.stats)": [[137, "neurotools.stats.crossvalidated_least_squares"]], "description (class in neurotools.stats)": [[137, "neurotools.stats.description"]], "find() (in module neurotools.stats)": [[137, "neurotools.stats.find"]], "neurotools.stats": [[137, "module-neurotools.stats"]], "nrmse() (in module neurotools.stats)": [[137, "neurotools.stats.nrmse"]], "outliers() (in module neurotools.stats)": [[137, "neurotools.stats.outliers"]], "partition_data() (in module neurotools.stats)": [[137, "neurotools.stats.partition_data"]], "partition_data_for_crossvalidation() (in module neurotools.stats)": [[137, "neurotools.stats.partition_data_for_crossvalidation"]], "partition_trials_for_crossvalidation() (in module neurotools.stats)": [[137, "neurotools.stats.partition_trials_for_crossvalidation"]], "pca() (in module neurotools.stats)": [[137, "neurotools.stats.pca"]], "polar_error() (in module neurotools.stats)": [[137, "neurotools.stats.polar_error"]], "print_stats() (in module neurotools.stats)": [[137, "neurotools.stats.print_stats"]], "reject_outliers() (in module neurotools.stats)": [[137, "neurotools.stats.reject_outliers"]], "short() (neurotools.stats.description method)": [[137, "neurotools.stats.description.short"]], "trial_crossvalidated_least_squares() (in module neurotools.stats)": [[137, "neurotools.stats.trial_crossvalidated_least_squares"]], "weighted_avg_and_std() (in module neurotools.stats)": [[137, "neurotools.stats.weighted_avg_and_std"]], "glmfit() (in module neurotools.stats.glmfit)": [[138, "neurotools.stats.GLMFit.glmfit"]], "neurotools.stats.glmfit": [[138, "module-neurotools.stats.GLMFit"]], "gaussian (class in neurotools.stats.gaussian)": [[139, "neurotools.stats.Gaussian.Gaussian"]], "gaussian_quadrature() (in module neurotools.stats.gaussian)": [[139, "neurotools.stats.Gaussian.gaussian_quadrature"]], "gaussian_quadrature_logarithmic() (in module neurotools.stats.gaussian)": [[139, "neurotools.stats.Gaussian.gaussian_quadrature_logarithmic"]], "logpdf() (neurotools.stats.gaussian.gaussian method)": [[139, "neurotools.stats.Gaussian.Gaussian.logpdf"]], "neurotools.stats.gaussian": [[139, "module-neurotools.stats.Gaussian"]], "abspolar_stats() (in module neurotools.stats.circular)": [[140, "neurotools.stats.circular.abspolar_stats"]], "complex_gaussian() (in module neurotools.stats.circular)": [[140, "neurotools.stats.circular.complex_gaussian"]], "fit_vonmises() (in module neurotools.stats.circular)": [[140, "neurotools.stats.circular.fit_vonmises"]], "logpolar_gaussian() (in module neurotools.stats.circular)": [[140, "neurotools.stats.circular.logpolar_gaussian"]], "logpolar_stats() (in module neurotools.stats.circular)": [[140, "neurotools.stats.circular.logpolar_stats"]], "neurotools.stats.circular": [[140, "module-neurotools.stats.circular"]], "squared_first_circular_moment() (in module neurotools.stats.circular)": [[140, "neurotools.stats.circular.squared_first_circular_moment"]], "autocorrelation_bayes() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.autocorrelation_bayes"]], "blockccm() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.blockccm"]], "blocksta() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.blocksta"]], "ccm() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.ccm"]], "ccor() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.ccor"]], "construct_lowpass_operator() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.construct_lowpass_operator"]], "create_spectral_model() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.create_spectral_model"]], "cspect() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.cspect"]], "cspectm() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.cspectm"]], "neurotools.stats.convolutional": [[141, "module-neurotools.stats.convolutional"]], "reconstruct() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.reconstruct"]], "spectreconstruct() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.spectreconstruct"]], "spike_lfp_filters() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.spike_lfp_filters"]], "sta() (in module neurotools.stats.convolutional)": [[141, "neurotools.stats.convolutional.sta"]], "adaptive_density_grid() (in module neurotools.stats.density)": [[142, "neurotools.stats.density.adaptive_density_grid"]], "gridhist() (in module neurotools.stats.density)": [[142, "neurotools.stats.density.gridhist"]], "kdepeak() (in module neurotools.stats.density)": [[142, "neurotools.stats.density.kdepeak"]], "knn_1d_density() (in module neurotools.stats.density)": [[142, "neurotools.stats.density.knn_1d_density"]], "neurotools.stats.density": [[142, "module-neurotools.stats.density"]], "explogpdf() (in module neurotools.stats.distributions)": [[143, "neurotools.stats.distributions.explogpdf"]], "gaussian_logpdf() (in module neurotools.stats.distributions)": [[143, "neurotools.stats.distributions.gaussian_logpdf"]], "gaussian_pdf() (in module neurotools.stats.distributions)": [[143, "neurotools.stats.distributions.gaussian_pdf"]], "neurotools.stats.distributions": [[143, "module-neurotools.stats.distributions"]], "poisson_logpdf() (in module neurotools.stats.distributions)": [[143, "neurotools.stats.distributions.poisson_logpdf"]], "poisson_pdf() (in module neurotools.stats.distributions)": [[143, "neurotools.stats.distributions.poisson_pdf"]], "sample_categorical() (in module neurotools.stats.distributions)": [[143, "neurotools.stats.distributions.sample_categorical"]], "discrete_entropy_distribution() (in module neurotools.stats.entropy)": [[144, "neurotools.stats.entropy.discrete_entropy_distribution"]], "discrete_entropy_samples() (in module neurotools.stats.entropy)": [[144, "neurotools.stats.entropy.discrete_entropy_samples"]], "neurotools.stats.entropy": [[144, "module-neurotools.stats.entropy"]], "poisson_entropy_nats() (in module neurotools.stats.entropy)": [[144, "neurotools.stats.entropy.poisson_entropy_nats"]], "regularized_discrete_entropy() (in module neurotools.stats.entropy)": [[144, "neurotools.stats.entropy.regularized_discrete_entropy"]], "fast_kde() (in module neurotools.stats.fast_kde)": [[145, "neurotools.stats.fast_kde.fast_kde"]], "image_cov() (in module neurotools.stats.fast_kde)": [[145, "neurotools.stats.fast_kde.image_cov"]], "neurotools.stats.fast_kde": [[145, "module-neurotools.stats.fast_kde"]], "glmpenaltybernoulli() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.GLMPenaltyBernoulli"]], "glmpenaltyl2() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.GLMPenaltyL2"]], "glmpenaltypoisson() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.GLMPenaltyPoisson"]], "cosine_kernel() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.cosine_kernel"]], "crossvalidatedauc() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.crossvalidatedAUC"]], "fitglm() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.fitGLM"]], "gradientglmfit() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.gradientglmfit"]], "log_cosine_basis() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.log_cosine_basis"]], "make_cosine_basis() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.make_cosine_basis"]], "neurotools.stats.glm": [[146, "module-neurotools.stats.glm"]], "numeric_grad() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.numeric_grad"]], "numeric_hess() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.numeric_hess"]], "ppglmfit() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.ppglmfit"]], "sexp() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.sexp"]], "sigmoid() (in module neurotools.stats.glm)": [[146, "neurotools.stats.glm.sigmoid"]], "gmm() (in module neurotools.stats.gmm)": [[147, "neurotools.stats.gmm.GMM"]], "gmm1d() (in module neurotools.stats.gmm)": [[147, "neurotools.stats.gmm.GMM1D"]], "neurotools.stats.gmm": [[147, "module-neurotools.stats.gmm"]], "grid_search() (in module neurotools.stats.grid_search)": [[148, "neurotools.stats.grid_search.grid_search"]], "neurotools.stats.grid_search": [[148, "module-neurotools.stats.grid_search"]], "history_basis() (in module neurotools.stats.history_basis)": [[149, "neurotools.stats.history_basis.history_basis"]], "neurotools.stats.history_basis": [[149, "module-neurotools.stats.history_basis"]], "bernoulliobservationapproximator (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.BernoulliObservationApproximator"]], "bernoulliobservationmodel (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.BernoulliObservationModel"]], "chisquarecoxapproximator (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.ChisquareCoxApproximator"]], "chisquarecoxmodel (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.ChisquareCoxModel"]], "diffusiongaussian (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.DiffusionGaussian"]], "gaussiancoxapproximator (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.GaussianCoxApproximator"]], "gaussiancoxmodel (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.GaussianCoxModel"]], "loggaussiancoxapproximator (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.LogGaussianCoxApproximator"]], "loggaussiancoxmodel (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.LogGaussianCoxModel"]], "mvgouupdate (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.MVGOUUpdate"]], "mvgupdate (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.MVGUpdate"]], "mvgaussian (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.MVGaussian"]], "mvloggaussiancox (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.MVLogGaussianCox"]], "mvloggaussiancox.mvpoissonapproximator (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.MVLogGaussianCox.MVPoissonApproximator"]], "ougaussian (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.OUGaussian"]], "poissonobservationapproximator (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.PoissonObservationApproximator"]], "poissonobservationmodel (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.PoissonObservationModel"]], "truncatedloggaussiancoxapproximator (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.TruncatedLogGaussianCoxApproximator"]], "truncatedloggaussiancoxmodel (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.TruncatedLogGaussianCoxModel"]], "truncatedpoissonobservationapproximator (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.TruncatedPoissonObservationApproximator"]], "truncatedpoissonobservationmodel (class in neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.TruncatedPoissonObservationModel"]], "backward_abstract() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.backward_abstract"]], "baum_welch() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.baum_welch"]], "bwd() (neurotools.stats.hmm.diffusiongaussian method)": [[150, "neurotools.stats.hmm.DiffusionGaussian.bwd"]], "bwd() (neurotools.stats.hmm.mvgouupdate method)": [[150, "neurotools.stats.hmm.MVGOUUpdate.bwd"]], "bwd() (neurotools.stats.hmm.mvgupdate method)": [[150, "neurotools.stats.hmm.MVGUpdate.bwd"]], "bwd() (neurotools.stats.hmm.ougaussian method)": [[150, "neurotools.stats.hmm.OUGaussian.bwd"]], "forward_abstract() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.forward_abstract"]], "forward_backward() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.forward_backward"]], "forward_backward_abstract() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.forward_backward_abstract"]], "fwd() (neurotools.stats.hmm.diffusiongaussian method)": [[150, "neurotools.stats.hmm.DiffusionGaussian.fwd"]], "fwd() (neurotools.stats.hmm.mvgouupdate method)": [[150, "neurotools.stats.hmm.MVGOUUpdate.fwd"]], "fwd() (neurotools.stats.hmm.mvgupdate method)": [[150, "neurotools.stats.hmm.MVGUpdate.fwd"]], "fwd() (neurotools.stats.hmm.ougaussian method)": [[150, "neurotools.stats.hmm.OUGaussian.fwd"]], "hasnan() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.hasNaN"]], "jump() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.jump"]], "lgcp_observation_minimizer() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.lgcp_observation_minimizer"]], "log_likelihood() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.log_likelihood"]], "neurotools.stats.hmm": [[150, "module-neurotools.stats.hmm"]], "poisson_baum_welch() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.poisson_baum_welch"]], "poisson_parameter_guess() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.poisson_parameter_guess"]], "poisson_viterbi_state_infer() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.poisson_viterbi_state_infer"]], "sample() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.sample"]], "viterbi() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.viterbi"]], "viterbi_log() (in module neurotools.stats.hmm)": [[150, "neurotools.stats.hmm.viterbi_log"]], "dkl_discrete() (in module neurotools.stats.information)": [[151, "neurotools.stats.information.DKL_discrete"]], "neurotools.stats.information": [[151, "module-neurotools.stats.information"]], "complex2riemann() (in module neurotools.stats.kent_reimann)": [[152, "neurotools.stats.kent_reimann.complex2riemann"]], "kentpdf() (in module neurotools.stats.kent_reimann)": [[152, "neurotools.stats.kent_reimann.kentPDF"]], "kentpdfriemann() (in module neurotools.stats.kent_reimann)": [[152, "neurotools.stats.kent_reimann.kentPDFRiemann"]], "neurotools.stats.kent_reimann": [[152, "module-neurotools.stats.kent_reimann"]], "riemann2complex() (in module neurotools.stats.kent_reimann)": [[152, "neurotools.stats.kent_reimann.riemann2complex"]], "rotatex() (in module neurotools.stats.kent_reimann)": [[152, "neurotools.stats.kent_reimann.rotatex"]], "rotatey() (in module neurotools.stats.kent_reimann)": [[152, "neurotools.stats.kent_reimann.rotatey"]], "rotatez() (in module neurotools.stats.kent_reimann)": [[152, "neurotools.stats.kent_reimann.rotatez"]], "pgom (class in neurotools.stats.lessons)": [[153, "neurotools.stats.lessons.PGOM"]], "pgom.approximate (class in neurotools.stats.lessons)": [[153, "neurotools.stats.lessons.PGOM.Approximate"]], "add_spikes() (in module neurotools.stats.lessons)": [[153, "neurotools.stats.lessons.add_spikes"]], "infer_states_gaussian_adf() (in module neurotools.stats.lessons)": [[153, "neurotools.stats.lessons.infer_states_Gaussian_ADF"]], "neurotools.stats.lessons": [[153, "module-neurotools.stats.lessons"]], "precision1d() (in module neurotools.stats.lessons)": [[153, "neurotools.stats.lessons.precision1D"]], "sample_ou_process() (in module neurotools.stats.lessons)": [[153, "neurotools.stats.lessons.sample_ou_process"]], "sample_wiener_process() (in module neurotools.stats.lessons)": [[153, "neurotools.stats.lessons.sample_wiener_process"]], "showim() (in module neurotools.stats.lessons)": [[153, "neurotools.stats.lessons.showim"]], "monte_carlo_expectation() (in module neurotools.stats.mcint)": [[155, "neurotools.stats.mcint.monte_carlo_expectation"]], "monte_carlo_moments() (in module neurotools.stats.mcint)": [[155, "neurotools.stats.mcint.monte_carlo_moments"]], "neurotools.stats.mcint": [[155, "module-neurotools.stats.mcint"]], "failureerror": [[156, "neurotools.stats.minimize.FailureError"], [213, "stats.minimize.FailureError"]], "current_milli_time() (in module neurotools.stats.minimize)": [[156, "neurotools.stats.minimize.current_milli_time"]], "minimize_retry() (in module neurotools.stats.minimize)": [[156, "neurotools.stats.minimize.minimize_retry"]], "neurotools.stats.minimize": [[156, "module-neurotools.stats.minimize"]], "v2str_long() (in module neurotools.stats.minimize)": [[156, "neurotools.stats.minimize.v2str_long"]], "neurotools.stats.mixtures": [[157, "module-neurotools.stats.mixtures"]], "two_class_poisson_mixture_model() (in module neurotools.stats.mixtures)": [[157, "neurotools.stats.mixtures.two_class_poisson_mixture_model"]], "logmode() (in module neurotools.stats.modefind)": [[158, "neurotools.stats.modefind.logmode"]], "logmodeplot() (in module neurotools.stats.modefind)": [[158, "neurotools.stats.modefind.logmodeplot"]], "modefind() (in module neurotools.stats.modefind)": [[158, "neurotools.stats.modefind.modefind"]], "neurotools.stats.modefind": [[158, "module-neurotools.stats.modefind"]], "peakfinder5() (in module neurotools.stats.modefind)": [[158, "neurotools.stats.modefind.peakfinder5"]], "mvg_dkl() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_DKL"]], "mvg_dkl_cp() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_DKL_CP"]], "mvg_pdf() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_PDF"]], "mvg_check() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_check"]], "mvg_conditional() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_conditional"]], "mvg_divide() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_divide"]], "mvg_entropy() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_entropy"]], "mvg_kalman() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_kalman"]], "mvg_kalman_p_inversea() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_kalman_P_inverseA"]], "mvg_kalman_joint() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_kalman_joint"]], "mvg_kalman_joint_p() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_kalman_joint_P"]], "mvg_logpdf() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_logPDF"]], "mvg_multiply() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_multiply"]], "mvg_multiply_c() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_multiply_C"]], "mvg_projection() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_projection"]], "mvg_sample() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.MVG_sample"]], "neurotools.stats.mvg": [[159, "module-neurotools.stats.mvg"]], "randn() (in module neurotools.stats.mvg)": [[159, "neurotools.stats.mvg.randn"]], "benjamini_hochberg_positive_correlations() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.benjamini_hochberg_positive_correlations"]], "bootstrap_compare_mean() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.bootstrap_compare_mean"]], "bootstrap_compare_median() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.bootstrap_compare_median"]], "bootstrap_compare_statistic_two_sided() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided"]], "bootstrap_compare_statistic_two_sided_parallel() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.bootstrap_compare_statistic_two_sided_parallel"]], "bootstrap_mean() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.bootstrap_mean"]], "bootstrap_median() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.bootstrap_median"]], "bootstrap_statistic_two_sided() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.bootstrap_statistic_two_sided"]], "correct_pvalues() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.correct_pvalues"]], "correct_pvalues_positive_dependent() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.correct_pvalues_positive_dependent"]], "neurotools.stats.pvalues": [[160, "module-neurotools.stats.pvalues"]], "sample_parallel_helper() (in module neurotools.stats.pvalues)": [[160, "neurotools.stats.pvalues.sample_parallel_helper"]], "damped_cosine() (in module neurotools.stats.regressions)": [[161, "neurotools.stats.regressions.damped_cosine"]], "exponential_decay() (in module neurotools.stats.regressions)": [[161, "neurotools.stats.regressions.exponential_decay"]], "gaussian_function() (in module neurotools.stats.regressions)": [[161, "neurotools.stats.regressions.gaussian_function"]], "half_gaussian_function() (in module neurotools.stats.regressions)": [[161, "neurotools.stats.regressions.half_gaussian_function"]], "neurotools.stats.regressions": [[161, "module-neurotools.stats.regressions"]], "power_law() (in module neurotools.stats.regressions)": [[161, "neurotools.stats.regressions.power_law"]], "robust_line() (in module neurotools.stats.regressions)": [[161, "neurotools.stats.regressions.robust_line"]], "weighted_least_squares() (in module neurotools.stats.regressions)": [[161, "neurotools.stats.regressions.weighted_least_squares"]], "neurotools.stats.sde": [[162, "module-neurotools.stats.sde"]], "sample_ou_process() (in module neurotools.stats.sde)": [[162, "neurotools.stats.sde.sample_ou_process"]], "glmpenaltyl2_subsampled() (in module neurotools.stats.spatiotemporal_glm_utils)": [[163, "neurotools.stats.spatiotemporal_glm_utils.GLMPenaltyL2_subsampled"]], "gradientglmfit_subsampled() (in module neurotools.stats.spatiotemporal_glm_utils)": [[163, "neurotools.stats.spatiotemporal_glm_utils.gradientglmfit_subsampled"]], "isint() (in module neurotools.stats.spatiotemporal_glm_utils)": [[163, "neurotools.stats.spatiotemporal_glm_utils.isInt"]], "local_ch_map() (in module neurotools.stats.spatiotemporal_glm_utils)": [[163, "neurotools.stats.spatiotemporal_glm_utils.local_ch_map"]], "neurotools.stats.spatiotemporal_glm_utils": [[163, "module-neurotools.stats.spatiotemporal_glm_utils"]], "orthogonalize() (in module neurotools.stats.spatiotemporal_glm_utils)": [[163, "neurotools.stats.spatiotemporal_glm_utils.orthogonalize"]], "plot_histfilter() (in module neurotools.stats.spatiotemporal_glm_utils)": [[163, "neurotools.stats.spatiotemporal_glm_utils.plot_histfilter"]], "plot_spatiotemporal() (in module neurotools.stats.spatiotemporal_glm_utils)": [[163, "neurotools.stats.spatiotemporal_glm_utils.plot_spatiotemporal"]], "spatiotemporal_history() (in module neurotools.stats.spatiotemporal_glm_utils)": [[163, "neurotools.stats.spatiotemporal_glm_utils.spatiotemporal_history"]], "spatiotemporal_history_projection() (in module neurotools.stats.spatiotemporal_glm_utils)": [[163, "neurotools.stats.spatiotemporal_glm_utils.spatiotemporal_history_projection"]], "execfile() (in module neurotools.system)": [[165, "neurotools.system.execfile"]], "neurotools.system": [[165, "module-neurotools.system"]], "query_yes_no() (in module neurotools.system)": [[165, "neurotools.system.query_yes_no"]], "hcat() (in module neurotools.text)": [[166, "neurotools.text.hcat"]], "incolumns() (in module neurotools.text)": [[166, "neurotools.text.incolumns"]], "neurotools.text": [[166, "module-neurotools.text"]], "wordwrap() (in module neurotools.text)": [[166, "neurotools.text.wordwrap"]], "add() (neurotools.tools.stuff method)": [[167, "neurotools.tools.stuff.add"]], "amap() (in module neurotools.tools)": [[167, "neurotools.tools.amap"]], "arraymap() (in module neurotools.tools)": [[167, "neurotools.tools.arraymap"]], "asiterable() (in module neurotools.tools)": [[167, "neurotools.tools.asiterable"]], "c2p() (in module neurotools.tools)": [[167, "neurotools.tools.c2p"]], "camel2underscore() (in module neurotools.tools)": [[167, "neurotools.tools.camel2underscore"]], "clear() (in module neurotools.tools)": [[167, "neurotools.tools.clear"]], "current_milli_time() (in module neurotools.tools)": [[167, "neurotools.tools.current_milli_time"]], "debug() (in module neurotools.tools)": [[167, "neurotools.tools.debug"]], "dowarn() (in module neurotools.tools)": [[167, "neurotools.tools.dowarn"]], "emitter (class in neurotools.tools)": [[167, "neurotools.tools.emitter"]], "ensure_dir() (in module neurotools.tools)": [[167, "neurotools.tools.ensure_dir"]], "exists() (in module neurotools.tools)": [[167, "neurotools.tools.exists"]], "ezip() (in module neurotools.tools)": [[167, "neurotools.tools.ezip"]], "find() (in module neurotools.tools)": [[167, "neurotools.tools.find"]], "find_all_extension() (in module neurotools.tools)": [[167, "neurotools.tools.find_all_extension"]], "getvariable() (in module neurotools.tools)": [[167, "neurotools.tools.getVariable"]], "getdict() (in module neurotools.tools)": [[167, "neurotools.tools.getdict"]], "getsize() (in module neurotools.tools)": [[167, "neurotools.tools.getsize"]], "globalize() (in module neurotools.tools)": [[167, "neurotools.tools.globalize"]], "history() (in module neurotools.tools)": [[167, "neurotools.tools.history"]], "invert_permutation() (in module neurotools.tools)": [[167, "neurotools.tools.invert_permutation"]], "lmap() (in module neurotools.tools)": [[167, "neurotools.tools.lmap"]], "mapdict() (in module neurotools.tools)": [[167, "neurotools.tools.mapdict"]], "matlab() (in module neurotools.tools)": [[167, "neurotools.tools.matlab"]], "metaloadmat() (in module neurotools.tools)": [[167, "neurotools.tools.metaloadmat"]], "neurotools.tools": [[167, "module-neurotools.tools"]], "now() (in module neurotools.tools)": [[167, "neurotools.tools.now"]], "nowarn() (in module neurotools.tools)": [[167, "neurotools.tools.nowarn"]], "okwarn() (in module neurotools.tools)": [[167, "neurotools.tools.okwarn"]], "oneslike() (in module neurotools.tools)": [[167, "neurotools.tools.oneslike"]], "p2c() (in module neurotools.tools)": [[167, "neurotools.tools.p2c"]], "piper (class in neurotools.tools)": [[167, "neurotools.tools.piper"]], "restorecontext() (in module neurotools.tools)": [[167, "neurotools.tools.restoreContext"]], "savecontext() (in module neurotools.tools)": [[167, "neurotools.tools.saveContext"]], "setinrange() (in module neurotools.tools)": [[167, "neurotools.tools.setinrange"]], "stuff (class in neurotools.tools)": [[167, "neurotools.tools.stuff"]], "tic() (in module neurotools.tools)": [[167, "neurotools.tools.tic"]], "toc() (in module neurotools.tools)": [[167, "neurotools.tools.toc"]], "today() (in module neurotools.tools)": [[167, "neurotools.tools.today"]], "underscore2camel() (in module neurotools.tools)": [[167, "neurotools.tools.underscore2camel"]], "varexists() (in module neurotools.tools)": [[167, "neurotools.tools.varexists"]], "wait() (in module neurotools.tools)": [[167, "neurotools.tools.wait"]], "waitfor() (in module neurotools.tools)": [[167, "neurotools.tools.waitfor"]], "warn() (in module neurotools.tools)": [[167, "neurotools.tools.warn"]], "zeroslike() (in module neurotools.tools)": [[167, "neurotools.tools.zeroslike"]], "beta() (in module nlab)": [[168, "nlab.beta"]], "binomial() (in module nlab)": [[168, "nlab.binomial"]], "chisquare() (in module nlab)": [[168, "nlab.chisquare"]], "choice() (in module nlab)": [[168, "nlab.choice"]], "dirichlet() (in module nlab)": [[168, "nlab.dirichlet"]], "exponential() (in module nlab)": [[168, "nlab.exponential"]], "f() (in module nlab)": [[168, "nlab.f"]], "gamma() (in module nlab)": [[168, "nlab.gamma"]], "geometric() (in module nlab)": [[168, "nlab.geometric"]], "get_state() (in module nlab)": [[168, "nlab.get_state"]], "gumbel() (in module nlab)": [[168, "nlab.gumbel"]], "hypergeometric() (in module nlab)": [[168, "nlab.hypergeometric"]], "laplace() (in module nlab)": [[168, "nlab.laplace"]], "logistic() (in module nlab)": [[168, "nlab.logistic"]], "lognormal() (in module nlab)": [[168, "nlab.lognormal"]], "logseries() (in module nlab)": [[168, "nlab.logseries"]], "multinomial() (in module nlab)": [[168, "nlab.multinomial"]], "multivariate_normal() (in module nlab)": [[168, "nlab.multivariate_normal"]], "negative_binomial() (in module nlab)": [[168, "nlab.negative_binomial"]], "nlab": [[168, "module-nlab"]], "noncentral_chisquare() (in module nlab)": [[168, "nlab.noncentral_chisquare"]], "noncentral_f() (in module nlab)": [[168, "nlab.noncentral_f"]], "normal() (in module nlab)": [[168, "nlab.normal"]], "pareto() (in module nlab)": [[168, "nlab.pareto"]], "permutation() (in module nlab)": [[168, "nlab.permutation"]], "poisson() (in module nlab)": [[168, "nlab.poisson"]], "power() (in module nlab)": [[168, "nlab.power"]], "rand() (in module nlab)": [[168, "nlab.rand"]], "randint() (in module nlab)": [[168, "nlab.randint"]], "randn() (in module nlab)": [[168, "nlab.randn"]], "random() (in module nlab)": [[168, "nlab.random"]], "random_integers() (in module nlab)": [[168, "nlab.random_integers"]], "random_sample() (in module nlab)": [[168, "nlab.random_sample"]], "rayleigh() (in module nlab)": [[168, "nlab.rayleigh"]], "seed() (in module nlab)": [[168, "nlab.seed"]], "set_state() (in module nlab)": [[168, "nlab.set_state"]], "shuffle() (in module nlab)": [[168, "nlab.shuffle"]], "standard_cauchy() (in module nlab)": [[168, "nlab.standard_cauchy"]], "standard_exponential() (in module nlab)": [[168, "nlab.standard_exponential"]], "standard_gamma() (in module nlab)": [[168, "nlab.standard_gamma"]], "standard_normal() (in module nlab)": [[168, "nlab.standard_normal"]], "standard_t() (in module nlab)": [[168, "nlab.standard_t"]], "triangular() (in module nlab)": [[168, "nlab.triangular"]], "uniform() (in module nlab)": [[168, "nlab.uniform"]], "vonmises() (in module nlab)": [[168, "nlab.vonmises"]], "wald() (in module nlab)": [[168, "nlab.wald"]], "weibull() (in module nlab)": [[168, "nlab.weibull"]], "zipf() (in module nlab)": [[168, "nlab.zipf"]], "handlers (class in signal)": [[170, "signal.Handlers"]], "itimererror (in module signal)": [[170, "signal.ItimerError"]], "sigabrt (signal.signals attribute)": [[170, "signal.Signals.SIGABRT"]], "sigalrm (signal.signals attribute)": [[170, "signal.Signals.SIGALRM"]], "sigbus (signal.signals attribute)": [[170, "signal.Signals.SIGBUS"]], "sigchld (signal.signals attribute)": [[170, "signal.Signals.SIGCHLD"]], "sigcld (signal.signals attribute)": [[170, "signal.Signals.SIGCLD"]], "sigcont (signal.signals attribute)": [[170, "signal.Signals.SIGCONT"]], "sigfpe (signal.signals attribute)": [[170, "signal.Signals.SIGFPE"]], "sighup (signal.signals attribute)": [[170, "signal.Signals.SIGHUP"]], "sigill (signal.signals attribute)": [[170, "signal.Signals.SIGILL"]], "sigint (signal.signals attribute)": [[170, "signal.Signals.SIGINT"]], "sigio (signal.signals attribute)": [[170, "signal.Signals.SIGIO"]], "sigiot (signal.signals attribute)": [[170, "signal.Signals.SIGIOT"]], "sigkill (signal.signals attribute)": [[170, "signal.Signals.SIGKILL"]], "sigpipe (signal.signals attribute)": [[170, "signal.Signals.SIGPIPE"]], "sigpoll (signal.signals attribute)": [[170, "signal.Signals.SIGPOLL"]], "sigprof (signal.signals attribute)": [[170, "signal.Signals.SIGPROF"]], "sigpwr (signal.signals attribute)": [[170, "signal.Signals.SIGPWR"]], "sigquit (signal.signals attribute)": [[170, "signal.Signals.SIGQUIT"]], "sigrtmax (signal.signals attribute)": [[170, "signal.Signals.SIGRTMAX"]], "sigrtmin (signal.signals attribute)": [[170, "signal.Signals.SIGRTMIN"]], "sigsegv (signal.signals attribute)": [[170, "signal.Signals.SIGSEGV"]], "sigstop (signal.signals attribute)": [[170, "signal.Signals.SIGSTOP"]], "sigsys (signal.signals attribute)": [[170, "signal.Signals.SIGSYS"]], "sigterm (signal.signals attribute)": [[170, "signal.Signals.SIGTERM"]], "sigtrap (signal.signals attribute)": [[170, "signal.Signals.SIGTRAP"]], "sigtstp (signal.signals attribute)": [[170, "signal.Signals.SIGTSTP"]], "sigttin (signal.signals attribute)": [[170, "signal.Signals.SIGTTIN"]], "sigttou (signal.signals attribute)": [[170, "signal.Signals.SIGTTOU"]], "sigurg (signal.signals attribute)": [[170, "signal.Signals.SIGURG"]], "sigusr1 (signal.signals attribute)": [[170, "signal.Signals.SIGUSR1"]], "sigusr2 (signal.signals attribute)": [[170, "signal.Signals.SIGUSR2"]], "sigvtalrm (signal.signals attribute)": [[170, "signal.Signals.SIGVTALRM"]], "sigwinch (signal.signals attribute)": [[170, "signal.Signals.SIGWINCH"]], "sigxcpu (signal.signals attribute)": [[170, "signal.Signals.SIGXCPU"]], "sigxfsz (signal.signals attribute)": [[170, "signal.Signals.SIGXFSZ"]], "sig_block (signal.sigmasks attribute)": [[170, "signal.Sigmasks.SIG_BLOCK"]], "sig_dfl (signal.handlers attribute)": [[170, "signal.Handlers.SIG_DFL"]], "sig_ign (signal.handlers attribute)": [[170, "signal.Handlers.SIG_IGN"]], "sig_setmask (signal.sigmasks attribute)": [[170, "signal.Sigmasks.SIG_SETMASK"]], "sig_unblock (signal.sigmasks attribute)": [[170, "signal.Sigmasks.SIG_UNBLOCK"]], "sigmasks (class in signal)": [[170, "signal.Sigmasks"]], "signals (class in signal)": [[170, "signal.Signals"]], "getsignal() (in module signal)": [[170, "signal.getsignal"]], "n_fields (signal.struct_siginfo attribute)": [[170, "signal.struct_siginfo.n_fields"]], "n_sequence_fields (signal.struct_siginfo attribute)": [[170, "signal.struct_siginfo.n_sequence_fields"]], "n_unnamed_fields (signal.struct_siginfo attribute)": [[170, "signal.struct_siginfo.n_unnamed_fields"]], "pthread_sigmask() (in module signal)": [[170, "signal.pthread_sigmask"]], "si_band (signal.struct_siginfo attribute)": [[170, "signal.struct_siginfo.si_band"]], "si_code (signal.struct_siginfo attribute)": [[170, "signal.struct_siginfo.si_code"]], "si_errno (signal.struct_siginfo attribute)": [[170, "signal.struct_siginfo.si_errno"]], "si_pid (signal.struct_siginfo attribute)": [[170, "signal.struct_siginfo.si_pid"]], "si_signo (signal.struct_siginfo attribute)": [[170, "signal.struct_siginfo.si_signo"]], "si_status (signal.struct_siginfo attribute)": [[170, "signal.struct_siginfo.si_status"]], "si_uid (signal.struct_siginfo attribute)": [[170, "signal.struct_siginfo.si_uid"]], "signal": [[170, "module-signal"]], "signal() (in module signal)": [[170, "signal.signal"]], "sigpending() (in module signal)": [[170, "signal.sigpending"]], "sigwait() (in module signal)": [[170, "signal.sigwait"]], "struct_siginfo (class in signal)": [[170, "signal.struct_siginfo"]], "valid_signals() (in module signal)": [[170, "signal.valid_signals"]], "signal.signal": [[180, "module-signal.signal"]], "brute_force_local_2d_maxima() (in module spatial)": [[181, "spatial.brute_force_local_2d_maxima"]], "spatial": [[181, "module-spatial"]], "array_average_amplitude() (in module spatial.array)": [[182, "spatial.array.array_average_amplitude"]], "array_count_centers() (in module spatial.array)": [[182, "spatial.array.array_count_centers"]], "array_count_critical() (in module spatial.array)": [[182, "spatial.array.array_count_critical"]], "array_kuramoto() (in module spatial.array)": [[182, "spatial.array.array_kuramoto"]], "array_kuramoto_pgd() (in module spatial.array)": [[182, "spatial.array.array_kuramoto_pgd"]], "array_kuramoto_pgd_standard_deviation() (in module spatial.array)": [[182, "spatial.array.array_kuramoto_pgd_standard_deviation"]], "array_kuramoto_standard_deviation() (in module spatial.array)": [[182, "spatial.array.array_kuramoto_standard_deviation"]], "array_phase_gradient() (in module spatial.array)": [[182, "spatial.array.array_phase_gradient"]], "array_phasegradient_local() (in module spatial.array)": [[182, "spatial.array.array_phasegradient_local"]], "array_phasegradient_magnitude_cv() (in module spatial.array)": [[182, "spatial.array.array_phasegradient_magnitude_cv"]], "array_phasegradient_magnitude_sigma() (in module spatial.array)": [[182, "spatial.array.array_phasegradient_magnitude_sigma"]], "array_phasegradient_pgd_threshold() (in module spatial.array)": [[182, "spatial.array.array_phasegradient_pgd_threshold"]], "array_phasegradient_planar() (in module spatial.array)": [[182, "spatial.array.array_phasegradient_planar"]], "array_speed_local() (in module spatial.array)": [[182, "spatial.array.array_speed_local"]], "array_speed_pgd_threshold() (in module spatial.array)": [[182, "spatial.array.array_speed_pgd_threshold"]], "array_synchrony() (in module spatial.array)": [[182, "spatial.array.array_synchrony"]], "array_synchrony_pgd() (in module spatial.array)": [[182, "spatial.array.array_synchrony_pgd"]], "array_synchrony_pgd_standard_deviation() (in module spatial.array)": [[182, "spatial.array.array_synchrony_pgd_standard_deviation"]], "array_synchrony_standard_deviation() (in module spatial.array)": [[182, "spatial.array.array_synchrony_standard_deviation"]], "array_wavelength_local() (in module spatial.array)": [[182, "spatial.array.array_wavelength_local"]], "array_wavelength_local_pgd_threshold() (in module spatial.array)": [[182, "spatial.array.array_wavelength_local_pgd_threshold"]], "array_wavelength_pgd_threshold() (in module spatial.array)": [[182, "spatial.array.array_wavelength_pgd_threshold"]], "array_wavelength_planar() (in module spatial.array)": [[182, "spatial.array.array_wavelength_planar"]], "pack_array_data() (in module spatial.array)": [[182, "spatial.array.pack_array_data"]], "spatial.array": [[182, "module-spatial.array"]], "trim_array() (in module spatial.array)": [[182, "spatial.array.trim_array"]], "trim_array_as_if() (in module spatial.array)": [[182, "spatial.array.trim_array_as_if"]], "dct_cut() (in module spatial.dct)": [[183, "spatial.dct.dct_cut"]], "dct_cut_antialias() (in module spatial.dct)": [[183, "spatial.dct.dct_cut_antialias"]], "dct_cut_downsampled() (in module spatial.dct)": [[183, "spatial.dct.dct_cut_downsampled"]], "dct_upsample() (in module spatial.dct)": [[183, "spatial.dct.dct_upsample"]], "dct_upsample_notrim() (in module spatial.dct)": [[183, "spatial.dct.dct_upsample_notrim"]], "get_mask() (in module spatial.dct)": [[183, "spatial.dct.get_mask"]], "get_mask_antialiased() (in module spatial.dct)": [[183, "spatial.dct.get_mask_antialiased"]], "iterated_upsample() (in module spatial.dct)": [[183, "spatial.dct.iterated_upsample"]], "outer_complex() (in module spatial.dct)": [[183, "spatial.dct.outer_complex"]], "spatial.dct": [[183, "module-spatial.dct"]], "distance_angular_deviation() (in module spatial.distance)": [[184, "spatial.distance.distance_angular_deviation"]], "get_average_synchrony_length_constant_parallel() (in module spatial.distance)": [[184, "spatial.distance.get_average_synchrony_length_constant_parallel"]], "get_averaged_angular_distance() (in module spatial.distance)": [[184, "spatial.distance.get_averaged_angular_distance"]], "get_electrode_locations() (in module spatial.distance)": [[184, "spatial.distance.get_electrode_locations"]], "get_length_constant_trial() (in module spatial.distance)": [[184, "spatial.distance.get_length_constant_trial"]], "get_pair_distance() (in module spatial.distance)": [[184, "spatial.distance.get_pair_distance"]], "spatial.distance": [[184, "module-spatial.distance"]], "synchrony_length_constant_areas_summary() (in module spatial.distance)": [[184, "spatial.distance.synchrony_length_constant_areas_summary"]], "coalesce() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.coalesce"]], "coalesce_points() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.coalesce_points"]], "cut_array_data() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.cut_array_data"]], "dphidx() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.dPhidx"]], "dphidy() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.dPhidy"]], "find_critical_points() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.find_critical_points"]], "find_critical_potential_points() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.find_critical_potential_points"]], "get_critical_spectra() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.get_critical_spectra"]], "get_phase_gradient_as_complex() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.get_phase_gradient_as_complex"]], "getp() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.getp"]], "getpeaks2d() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.getpeaks2d"]], "grad() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.grad"]], "mirror2d() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.mirror2D"]], "plot_critical_points() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.plot_critical_points"]], "plot_critical_spectra() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.plot_critical_spectra"]], "plot_phase_direction() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.plot_phase_direction"]], "plot_phase_gradient() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.plot_phase_gradient"]], "quickgrad() (in module spatial.fftzeros)": [[185, "spatial.fftzeros.quickgrad"]], "spatial.fftzeros": [[185, "module-spatial.fftzeros"]], "absorbing_gaussian() (in module spatial.kernels)": [[186, "spatial.kernels.absorbing_gaussian"]], "absorbing_laplacian() (in module spatial.kernels)": [[186, "spatial.kernels.absorbing_laplacian"]], "continuum_kernel() (in module spatial.kernels)": [[186, "spatial.kernels.continuum_kernel"]], "cosine_kernel() (in module spatial.kernels)": [[186, "spatial.kernels.cosine_kernel"]], "diffusion_basis() (in module spatial.kernels)": [[186, "spatial.kernels.diffusion_basis"]], "exponential_basis() (in module spatial.kernels)": [[186, "spatial.kernels.exponential_basis"]], "gaussian_2d_kernel() (in module spatial.kernels)": [[186, "spatial.kernels.gaussian_2D_kernel"]], "iterative_orthogonalize_basis() (in module spatial.kernels)": [[186, "spatial.kernels.iterative_orthogonalize_basis"]], "laplace_kernel() (in module spatial.kernels)": [[186, "spatial.kernels.laplace_kernel"]], "laplacian() (in module spatial.kernels)": [[186, "spatial.kernels.laplacian"]], "log_cosine_basis() (in module spatial.kernels)": [[186, "spatial.kernels.log_cosine_basis"]], "log_spline_basis() (in module spatial.kernels)": [[186, "spatial.kernels.log_spline_basis"]], "magickernel() (in module spatial.kernels)": [[186, "spatial.kernels.magickernel"]], "magicsharp() (in module spatial.kernels)": [[186, "spatial.kernels.magicsharp"]], "make_cosine_basis() (in module spatial.kernels)": [[186, "spatial.kernels.make_cosine_basis"]], "spatial.kernels": [[186, "module-spatial.kernels"]], "analytic_signal_coherence() (in module spatial.phase)": [[187, "spatial.phase.analytic_signal_coherence"]], "population_average_amplitude() (in module spatial.phase)": [[187, "spatial.phase.population_average_amplitude"]], "population_kuramoto() (in module spatial.phase)": [[187, "spatial.phase.population_kuramoto"]], "population_median_frequency() (in module spatial.phase)": [[187, "spatial.phase.population_median_frequency"]], "population_median_phase_velocity() (in module spatial.phase)": [[187, "spatial.phase.population_median_phase_velocity"]], "population_normalized_sliding_signal_coherence() (in module spatial.phase)": [[187, "spatial.phase.population_normalized_sliding_signal_coherence"]], "population_phase_coherence() (in module spatial.phase)": [[187, "spatial.phase.population_phase_coherence"]], "population_phase_relative_sliding_kuramoto() (in module spatial.phase)": [[187, "spatial.phase.population_phase_relative_sliding_kuramoto"]], "population_polar_std() (in module spatial.phase)": [[187, "spatial.phase.population_polar_std"]], "population_signal_amplitude_dispersion() (in module spatial.phase)": [[187, "spatial.phase.population_signal_amplitude_dispersion"]], "population_signal_amplitude_precision() (in module spatial.phase)": [[187, "spatial.phase.population_signal_amplitude_precision"]], "population_signal_amplitude_std() (in module spatial.phase)": [[187, "spatial.phase.population_signal_amplitude_std"]], "population_signal_concentration() (in module spatial.phase)": [[187, "spatial.phase.population_signal_concentration"]], "population_signal_description() (in module spatial.phase)": [[187, "spatial.phase.population_signal_description"]], "population_signal_dispersion() (in module spatial.phase)": [[187, "spatial.phase.population_signal_dispersion"]], "population_signal_phase_dispersion() (in module spatial.phase)": [[187, "spatial.phase.population_signal_phase_dispersion"]], "population_signal_phase_precision() (in module spatial.phase)": [[187, "spatial.phase.population_signal_phase_precision"]], "population_signal_phase_std() (in module spatial.phase)": [[187, "spatial.phase.population_signal_phase_std"]], "population_signal_precision() (in module spatial.phase)": [[187, "spatial.phase.population_signal_precision"]], "population_sliding_signal_coherence() (in module spatial.phase)": [[187, "spatial.phase.population_sliding_signal_coherence"]], "population_synchrony() (in module spatial.phase)": [[187, "spatial.phase.population_synchrony"]], "population_synchrony_linear() (in module spatial.phase)": [[187, "spatial.phase.population_synchrony_linear"]], "sliding_population_signal_coherence() (in module spatial.phase)": [[187, "spatial.phase.sliding_population_signal_coherence"]], "spatial.phase": [[187, "module-spatial.phase"]], "all_spatial_psd_parallel() (in module spatial.spatialpsd)": [[188, "spatial.spatialPSD.all_spatial_PSD_parallel"]], "psd2d() (in module spatial.spatialpsd)": [[188, "spatial.spatialPSD.psd2d"]], "spatial.spatialpsd": [[188, "module-spatial.spatialPSD"]], "spatialpsd_length_scale_spectrum() (in module spatial.spatialpsd)": [[188, "spatial.spatialPSD.spatialPSD_length_scale_spectrum"]], "spatialpsd_parallel_wrapper() (in module spatial.spatialpsd)": [[188, "spatial.spatialPSD.spatialPSD_parallel_wrapper"]], "interp_bin() (in module spatial.spiking)": [[189, "spatial.spiking.interp_bin"]], "spatial.spiking": [[189, "module-spatial.spiking"]], "coalesce() (in module spatial.triangulation)": [[190, "spatial.triangulation.coalesce"]], "edgesnearby() (in module spatial.triangulation)": [[190, "spatial.triangulation.edgesNearby"]], "mergenearby() (in module spatial.triangulation)": [[190, "spatial.triangulation.mergeNearby"]], "plot_edges() (in module spatial.triangulation)": [[190, "spatial.triangulation.plot_edges"]], "plot_triangles() (in module spatial.triangulation)": [[190, "spatial.triangulation.plot_triangles"]], "spatial.triangulation": [[190, "module-spatial.triangulation"]], "trianglestoedges() (in module spatial.triangulation)": [[190, "spatial.triangulation.trianglesToEdges"]], "uniquerow() (in module spatial.triangulation)": [[190, "spatial.triangulation.uniquerow"]], "z2xy() (in module spatial.triangulation)": [[190, "spatial.triangulation.z2xy"]], "averaged_directionality_index() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.averaged_directionality_index"]], "directionality_index() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.directionality_index"]], "frame_synchrony() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.frame_synchrony"]], "heuristic_b_double_planar() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.heuristic_B_double_planar"]], "heuristic_b_planar() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.heuristic_B_planar"]], "heuristic_b_polar() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.heuristic_B_polar"]], "heuristic_b_standing() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.heuristic_B_standing"]], "heuristic_b_synchronous() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.heuristic_B_synchronous"]], "heuristic_solver_double_planar() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.heuristic_solver_double_planar"]], "heuristic_solver_planar() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.heuristic_solver_planar"]], "heuristic_solver_polar() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.heuristic_solver_polar"]], "heuristic_solver_standing() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.heuristic_solver_standing"]], "heuristic_solver_synchronous() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.heuristic_solver_synchronous"]], "makelsqminimizerdoubleplane() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.makeLSQminimizerDoublePlane"]], "makelsqminimizerplane() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.makeLSQminimizerPlane"]], "makelsqminimizerpolar() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.makeLSQminimizerPolar"]], "makelsqminimizerstanding() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.makeLSQminimizerStanding"]], "makelsqminimizersynchronous() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.makeLSQminimizerSynchronous"]], "pairwise_phase_difference() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.pairwise_phase_difference"]], "phase_gradient() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.phase_gradient"]], "phase_unwrap() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.phase_unwrap"]], "plotdata() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.plotdata"]], "predict() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.predict"]], "spatial.wave_parametric_models": [[191, "module-spatial.wave_parametric_models"]], "spatial_phase_gradient() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.spatial_phase_gradient"]], "synchrony() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.synchrony"]], "zscore() (in module spatial.wave_parametric_models)": [[191, "spatial.wave_parametric_models.zscore"]], "spikes": [[192, "module-spikes"]], "bin_spike_times() (in module spikes.spikes)": [[193, "spikes.spikes.bin_spike_times"]], "bin_spikes_raster() (in module spikes.spikes)": [[193, "spikes.spikes.bin_spikes_raster"]], "cut_spikes() (in module spikes.spikes)": [[193, "spikes.spikes.cut_spikes"]], "pack_cross_correlation_matrix() (in module spikes.spikes)": [[193, "spikes.spikes.pack_cross_correlation_matrix"]], "pp_xcorr() (in module spikes.spikes)": [[193, "spikes.spikes.pp_xcorr"]], "spikes.spikes": [[193, "module-spikes.spikes"]], "times_to_raster() (in module spikes.spikes)": [[193, "spikes.spikes.times_to_raster"]], "txcorr() (in module spikes.spikes)": [[193, "spikes.spikes.txcorr"]], "getfwhm() (in module spikes.waveform)": [[194, "spikes.waveform.getFWHM"]], "getphp() (in module spikes.waveform)": [[194, "spikes.waveform.getPHP"]], "getpt() (in module spikes.waveform)": [[194, "spikes.waveform.getPT"]], "getpthw() (in module spikes.waveform)": [[194, "spikes.waveform.getPTHW"]], "getpvt() (in module spikes.waveform)": [[194, "spikes.waveform.getPVT"]], "getwahp() (in module spikes.waveform)": [[194, "spikes.waveform.getWAHP"]], "is_thin() (in module spikes.waveform)": [[194, "spikes.waveform.is_thin"]], "is_thin_pvt() (in module spikes.waveform)": [[194, "spikes.waveform.is_thin_pvt"]], "minmax() (in module spikes.waveform)": [[194, "spikes.waveform.minmax"]], "normalized_waveform() (in module spikes.waveform)": [[194, "spikes.waveform.normalized_waveform"]], "process() (in module spikes.waveform)": [[194, "spikes.waveform.process"]], "realign() (in module spikes.waveform)": [[194, "spikes.waveform.realign"]], "realign_special() (in module spikes.waveform)": [[194, "spikes.waveform.realign_special"]], "spikes.waveform": [[194, "module-spikes.waveform"]], "add_constant() (in module stats)": [[195, "stats.add_constant"]], "block_shuffle() (in module stats)": [[195, "stats.block_shuffle"]], "covariance() (in module stats)": [[195, "stats.covariance"]], "crossvalidated_least_squares() (in module stats)": [[195, "stats.crossvalidated_least_squares"]], "description (class in stats)": [[195, "stats.description"]], "find() (in module stats)": [[195, "stats.find"]], "nrmse() (in module stats)": [[195, "stats.nrmse"]], "outliers() (in module stats)": [[195, "stats.outliers"]], "partition_data() (in module stats)": [[195, "stats.partition_data"]], "partition_data_for_crossvalidation() (in module stats)": [[195, "stats.partition_data_for_crossvalidation"]], "partition_trials_for_crossvalidation() (in module stats)": [[195, "stats.partition_trials_for_crossvalidation"]], "pca() (in module stats)": [[195, "stats.pca"]], "polar_error() (in module stats)": [[195, "stats.polar_error"]], "print_stats() (in module stats)": [[195, "stats.print_stats"]], "reject_outliers() (in module stats)": [[195, "stats.reject_outliers"]], "short() (stats.description method)": [[195, "stats.description.short"]], "stats": [[195, "module-stats"]], "trial_crossvalidated_least_squares() (in module stats)": [[195, "stats.trial_crossvalidated_least_squares"]], "weighted_avg_and_std() (in module stats)": [[195, "stats.weighted_avg_and_std"]], "glmfit() (in module stats.glmfit)": [[196, "stats.GLMFit.glmfit"]], "stats.glmfit": [[196, "module-stats.GLMFit"]], "gaussian (class in stats.gaussian)": [[197, "stats.Gaussian.Gaussian"]], "gaussian_quadrature() (in module stats.gaussian)": [[197, "stats.Gaussian.gaussian_quadrature"]], "gaussian_quadrature_logarithmic() (in module stats.gaussian)": [[197, "stats.Gaussian.gaussian_quadrature_logarithmic"]], "logpdf() (stats.gaussian.gaussian method)": [[197, "stats.Gaussian.Gaussian.logpdf"]], "stats.gaussian": [[197, "module-stats.Gaussian"]], "abspolar_stats() (in module stats.circular)": [[198, "stats.circular.abspolar_stats"]], "complex_gaussian() (in module stats.circular)": [[198, "stats.circular.complex_gaussian"]], "fit_vonmises() (in module stats.circular)": [[198, "stats.circular.fit_vonmises"]], "logpolar_gaussian() (in module stats.circular)": [[198, "stats.circular.logpolar_gaussian"]], "logpolar_stats() (in module stats.circular)": [[198, "stats.circular.logpolar_stats"]], "squared_first_circular_moment() (in module stats.circular)": [[198, "stats.circular.squared_first_circular_moment"]], "stats.circular": [[198, "module-stats.circular"]], "autocorrelation_bayes() (in module stats.convolutional)": [[199, "stats.convolutional.autocorrelation_bayes"]], "blockccm() (in module stats.convolutional)": [[199, "stats.convolutional.blockccm"]], "blocksta() (in module stats.convolutional)": [[199, "stats.convolutional.blocksta"]], "ccm() (in module stats.convolutional)": [[199, "stats.convolutional.ccm"]], "ccor() (in module stats.convolutional)": [[199, "stats.convolutional.ccor"]], "construct_lowpass_operator() (in module stats.convolutional)": [[199, "stats.convolutional.construct_lowpass_operator"]], "create_spectral_model() (in module stats.convolutional)": [[199, "stats.convolutional.create_spectral_model"]], "cspect() (in module stats.convolutional)": [[199, "stats.convolutional.cspect"]], "cspectm() (in module stats.convolutional)": [[199, "stats.convolutional.cspectm"]], "reconstruct() (in module stats.convolutional)": [[199, "stats.convolutional.reconstruct"]], "spectreconstruct() (in module stats.convolutional)": [[199, "stats.convolutional.spectreconstruct"]], "spike_lfp_filters() (in module stats.convolutional)": [[199, "stats.convolutional.spike_lfp_filters"]], "sta() (in module stats.convolutional)": [[199, "stats.convolutional.sta"]], "stats.convolutional": [[199, "module-stats.convolutional"]], "adaptive_density_grid() (in module stats.density)": [[200, "stats.density.adaptive_density_grid"]], "gridhist() (in module stats.density)": [[200, "stats.density.gridhist"]], "kdepeak() (in module stats.density)": [[200, "stats.density.kdepeak"]], "knn_1d_density() (in module stats.density)": [[200, "stats.density.knn_1d_density"]], "stats.density": [[200, "module-stats.density"]], "explogpdf() (in module stats.distributions)": [[201, "stats.distributions.explogpdf"]], "gaussian_logpdf() (in module stats.distributions)": [[201, "stats.distributions.gaussian_logpdf"]], "gaussian_pdf() (in module stats.distributions)": [[201, "stats.distributions.gaussian_pdf"]], "poisson_logpdf() (in module stats.distributions)": [[201, "stats.distributions.poisson_logpdf"]], "poisson_pdf() (in module stats.distributions)": [[201, "stats.distributions.poisson_pdf"]], "sample_categorical() (in module stats.distributions)": [[201, "stats.distributions.sample_categorical"]], "stats.distributions": [[201, "module-stats.distributions"]], "discrete_entropy_distribution() (in module stats.entropy)": [[202, "stats.entropy.discrete_entropy_distribution"]], "discrete_entropy_samples() (in module stats.entropy)": [[202, "stats.entropy.discrete_entropy_samples"]], "poisson_entropy_nats() (in module stats.entropy)": [[202, "stats.entropy.poisson_entropy_nats"]], "regularized_discrete_entropy() (in module stats.entropy)": [[202, "stats.entropy.regularized_discrete_entropy"]], "stats.entropy": [[202, "module-stats.entropy"]], "fast_kde() (in module stats.fast_kde)": [[203, "stats.fast_kde.fast_kde"]], "image_cov() (in module stats.fast_kde)": [[203, "stats.fast_kde.image_cov"]], "stats.fast_kde": [[203, "module-stats.fast_kde"]], "glmpenaltybernoulli() (in module stats.glm)": [[204, "stats.glm.GLMPenaltyBernoulli"]], "glmpenaltyl2() (in module stats.glm)": [[204, "stats.glm.GLMPenaltyL2"]], "glmpenaltypoisson() (in module stats.glm)": [[204, "stats.glm.GLMPenaltyPoisson"]], "cosine_kernel() (in module stats.glm)": [[204, "stats.glm.cosine_kernel"]], "crossvalidatedauc() (in module stats.glm)": [[204, "stats.glm.crossvalidatedAUC"]], "fitglm() (in module stats.glm)": [[204, "stats.glm.fitGLM"]], "gradientglmfit() (in module stats.glm)": [[204, "stats.glm.gradientglmfit"]], "log_cosine_basis() (in module stats.glm)": [[204, "stats.glm.log_cosine_basis"]], "make_cosine_basis() (in module stats.glm)": [[204, "stats.glm.make_cosine_basis"]], "numeric_grad() (in module stats.glm)": [[204, "stats.glm.numeric_grad"]], "numeric_hess() (in module stats.glm)": [[204, "stats.glm.numeric_hess"]], "ppglmfit() (in module stats.glm)": [[204, "stats.glm.ppglmfit"]], "sexp() (in module stats.glm)": [[204, "stats.glm.sexp"]], "sigmoid() (in module stats.glm)": [[204, "stats.glm.sigmoid"]], "stats.glm": [[204, "module-stats.glm"]], "gmm() (in module stats.gmm)": [[205, "stats.gmm.GMM"]], "gmm1d() (in module stats.gmm)": [[205, "stats.gmm.GMM1D"]], "stats.gmm": [[205, "module-stats.gmm"]], "history_basis() (in module stats.history_basis)": [[206, "stats.history_basis.history_basis"]], "stats.history_basis": [[206, "module-stats.history_basis"]], "bernoulliobservationapproximator (class in stats.hmm)": [[207, "stats.hmm.BernoulliObservationApproximator"]], "bernoulliobservationmodel (class in stats.hmm)": [[207, "stats.hmm.BernoulliObservationModel"]], "chisquarecoxapproximator (class in stats.hmm)": [[207, "stats.hmm.ChisquareCoxApproximator"]], "chisquarecoxmodel (class in stats.hmm)": [[207, "stats.hmm.ChisquareCoxModel"]], "diffusiongaussian (class in stats.hmm)": [[207, "stats.hmm.DiffusionGaussian"]], "gaussiancoxapproximator (class in stats.hmm)": [[207, "stats.hmm.GaussianCoxApproximator"]], "gaussiancoxmodel (class in stats.hmm)": [[207, "stats.hmm.GaussianCoxModel"]], "loggaussiancoxapproximator (class in stats.hmm)": [[207, "stats.hmm.LogGaussianCoxApproximator"]], "loggaussiancoxmodel (class in stats.hmm)": [[207, "stats.hmm.LogGaussianCoxModel"]], "mvgouupdate (class in stats.hmm)": [[207, "stats.hmm.MVGOUUpdate"]], "mvgupdate (class in stats.hmm)": [[207, "stats.hmm.MVGUpdate"]], "mvgaussian (class in stats.hmm)": [[207, "stats.hmm.MVGaussian"]], "mvloggaussiancox (class in stats.hmm)": [[207, "stats.hmm.MVLogGaussianCox"]], "mvloggaussiancox.mvpoissonapproximator (class in stats.hmm)": [[207, "stats.hmm.MVLogGaussianCox.MVPoissonApproximator"]], "ougaussian (class in stats.hmm)": [[207, "stats.hmm.OUGaussian"]], "poissonobservationapproximator (class in stats.hmm)": [[207, "stats.hmm.PoissonObservationApproximator"]], "poissonobservationmodel (class in stats.hmm)": [[207, "stats.hmm.PoissonObservationModel"]], "truncatedloggaussiancoxapproximator (class in stats.hmm)": [[207, "stats.hmm.TruncatedLogGaussianCoxApproximator"]], "truncatedloggaussiancoxmodel (class in stats.hmm)": [[207, "stats.hmm.TruncatedLogGaussianCoxModel"]], "truncatedpoissonobservationapproximator (class in stats.hmm)": [[207, "stats.hmm.TruncatedPoissonObservationApproximator"]], "truncatedpoissonobservationmodel (class in stats.hmm)": [[207, "stats.hmm.TruncatedPoissonObservationModel"]], "backward_abstract() (in module stats.hmm)": [[207, "stats.hmm.backward_abstract"]], "baum_welch() (in module stats.hmm)": [[207, "stats.hmm.baum_welch"]], "bwd() (stats.hmm.diffusiongaussian method)": [[207, "stats.hmm.DiffusionGaussian.bwd"]], "bwd() (stats.hmm.mvgouupdate method)": [[207, "stats.hmm.MVGOUUpdate.bwd"]], "bwd() (stats.hmm.mvgupdate method)": [[207, "stats.hmm.MVGUpdate.bwd"]], "bwd() (stats.hmm.ougaussian method)": [[207, "stats.hmm.OUGaussian.bwd"]], "forward_abstract() (in module stats.hmm)": [[207, "stats.hmm.forward_abstract"]], "forward_backward() (in module stats.hmm)": [[207, "stats.hmm.forward_backward"]], "forward_backward_abstract() (in module stats.hmm)": [[207, "stats.hmm.forward_backward_abstract"]], "fwd() (stats.hmm.diffusiongaussian method)": [[207, "stats.hmm.DiffusionGaussian.fwd"]], "fwd() (stats.hmm.mvgouupdate method)": [[207, "stats.hmm.MVGOUUpdate.fwd"]], "fwd() (stats.hmm.mvgupdate method)": [[207, "stats.hmm.MVGUpdate.fwd"]], "fwd() (stats.hmm.ougaussian method)": [[207, "stats.hmm.OUGaussian.fwd"]], "hasnan() (in module stats.hmm)": [[207, "stats.hmm.hasNaN"]], "jump() (in module stats.hmm)": [[207, "stats.hmm.jump"]], "lgcp_observation_minimizer() (in module stats.hmm)": [[207, "stats.hmm.lgcp_observation_minimizer"]], "log_likelihood() (in module stats.hmm)": [[207, "stats.hmm.log_likelihood"]], "poisson_baum_welch() (in module stats.hmm)": [[207, "stats.hmm.poisson_baum_welch"]], "poisson_parameter_guess() (in module stats.hmm)": [[207, "stats.hmm.poisson_parameter_guess"]], "poisson_viterbi_state_infer() (in module stats.hmm)": [[207, "stats.hmm.poisson_viterbi_state_infer"]], "sample() (in module stats.hmm)": [[207, "stats.hmm.sample"]], "stats.hmm": [[207, "module-stats.hmm"]], "viterbi() (in module stats.hmm)": [[207, "stats.hmm.viterbi"]], "viterbi_log() (in module stats.hmm)": [[207, "stats.hmm.viterbi_log"]], "dkl_discrete() (in module stats.information)": [[208, "stats.information.DKL_discrete"]], "stats.information": [[208, "module-stats.information"]], "complex2riemann() (in module stats.kent_reimann)": [[209, "stats.kent_reimann.complex2riemann"]], "kentpdf() (in module stats.kent_reimann)": [[209, "stats.kent_reimann.kentPDF"]], "kentpdfriemann() (in module stats.kent_reimann)": [[209, "stats.kent_reimann.kentPDFRiemann"]], "riemann2complex() (in module stats.kent_reimann)": [[209, "stats.kent_reimann.riemann2complex"]], "rotatex() (in module stats.kent_reimann)": [[209, "stats.kent_reimann.rotatex"]], "rotatey() (in module stats.kent_reimann)": [[209, "stats.kent_reimann.rotatey"]], "rotatez() (in module stats.kent_reimann)": [[209, "stats.kent_reimann.rotatez"]], "stats.kent_reimann": [[209, "module-stats.kent_reimann"]], "pgom (class in stats.lessons)": [[210, "stats.lessons.PGOM"]], "pgom.approximate (class in stats.lessons)": [[210, "stats.lessons.PGOM.Approximate"]], "add_spikes() (in module stats.lessons)": [[210, "stats.lessons.add_spikes"]], "infer_states_gaussian_adf() (in module stats.lessons)": [[210, "stats.lessons.infer_states_Gaussian_ADF"]], "precision1d() (in module stats.lessons)": [[210, "stats.lessons.precision1D"]], "sample_ou_process() (in module stats.lessons)": [[210, "stats.lessons.sample_ou_process"]], "sample_wiener_process() (in module stats.lessons)": [[210, "stats.lessons.sample_wiener_process"]], "showim() (in module stats.lessons)": [[210, "stats.lessons.showim"]], "stats.lessons": [[210, "module-stats.lessons"]], "monte_carlo_expectation() (in module stats.mcint)": [[212, "stats.mcint.monte_carlo_expectation"]], "monte_carlo_moments() (in module stats.mcint)": [[212, "stats.mcint.monte_carlo_moments"]], "stats.mcint": [[212, "module-stats.mcint"]], "current_milli_time() (in module stats.minimize)": [[213, "stats.minimize.current_milli_time"]], "minimize_retry() (in module stats.minimize)": [[213, "stats.minimize.minimize_retry"]], "stats.minimize": [[213, "module-stats.minimize"]], "v2str_long() (in module stats.minimize)": [[213, "stats.minimize.v2str_long"]], "stats.mixtures": [[214, "module-stats.mixtures"]], "two_class_poisson_mixture_model() (in module stats.mixtures)": [[214, "stats.mixtures.two_class_poisson_mixture_model"]], "logmode() (in module stats.modefind)": [[215, "stats.modefind.logmode"]], "logmodeplot() (in module stats.modefind)": [[215, "stats.modefind.logmodeplot"]], "modefind() (in module stats.modefind)": [[215, "stats.modefind.modefind"]], "peakfinder5() (in module stats.modefind)": [[215, "stats.modefind.peakfinder5"]], "stats.modefind": [[215, "module-stats.modefind"]], "mvg_dkl() (in module stats.mvg)": [[216, "stats.mvg.MVG_DKL"]], "mvg_dkl_cp() (in module stats.mvg)": [[216, "stats.mvg.MVG_DKL_CP"]], "mvg_pdf() (in module stats.mvg)": [[216, "stats.mvg.MVG_PDF"]], "mvg_check() (in module stats.mvg)": [[216, "stats.mvg.MVG_check"]], "mvg_conditional() (in module stats.mvg)": [[216, "stats.mvg.MVG_conditional"]], "mvg_divide() (in module stats.mvg)": [[216, "stats.mvg.MVG_divide"]], "mvg_entropy() (in module stats.mvg)": [[216, "stats.mvg.MVG_entropy"]], "mvg_kalman() (in module stats.mvg)": [[216, "stats.mvg.MVG_kalman"]], "mvg_kalman_p_inversea() (in module stats.mvg)": [[216, "stats.mvg.MVG_kalman_P_inverseA"]], "mvg_kalman_joint() (in module stats.mvg)": [[216, "stats.mvg.MVG_kalman_joint"]], "mvg_kalman_joint_p() (in module stats.mvg)": [[216, "stats.mvg.MVG_kalman_joint_P"]], "mvg_logpdf() (in module stats.mvg)": [[216, "stats.mvg.MVG_logPDF"]], "mvg_multiply() (in module stats.mvg)": [[216, "stats.mvg.MVG_multiply"]], "mvg_multiply_c() (in module stats.mvg)": [[216, "stats.mvg.MVG_multiply_C"]], "mvg_projection() (in module stats.mvg)": [[216, "stats.mvg.MVG_projection"]], "mvg_sample() (in module stats.mvg)": [[216, "stats.mvg.MVG_sample"]], "randn() (in module stats.mvg)": [[216, "stats.mvg.randn"]], "stats.mvg": [[216, "module-stats.mvg"]], "benjamini_hochberg_positive_correlations() (in module stats.pvalues)": [[217, "stats.pvalues.benjamini_hochberg_positive_correlations"]], "bootstrap_compare_mean() (in module stats.pvalues)": [[217, "stats.pvalues.bootstrap_compare_mean"]], "bootstrap_compare_median() (in module stats.pvalues)": [[217, "stats.pvalues.bootstrap_compare_median"]], "bootstrap_compare_statistic_two_sided() (in module stats.pvalues)": [[217, "stats.pvalues.bootstrap_compare_statistic_two_sided"]], "bootstrap_compare_statistic_two_sided_parallel() (in module stats.pvalues)": [[217, "stats.pvalues.bootstrap_compare_statistic_two_sided_parallel"]], "bootstrap_mean() (in module stats.pvalues)": [[217, "stats.pvalues.bootstrap_mean"]], "bootstrap_median() (in module stats.pvalues)": [[217, "stats.pvalues.bootstrap_median"]], "bootstrap_statistic_two_sided() (in module stats.pvalues)": [[217, "stats.pvalues.bootstrap_statistic_two_sided"]], "correct_pvalues() (in module stats.pvalues)": [[217, "stats.pvalues.correct_pvalues"]], "correct_pvalues_positive_dependent() (in module stats.pvalues)": [[217, "stats.pvalues.correct_pvalues_positive_dependent"]], "sample_parallel_helper() (in module stats.pvalues)": [[217, "stats.pvalues.sample_parallel_helper"]], "stats.pvalues": [[217, "module-stats.pvalues"]], "damped_cosine() (in module stats.regressions)": [[218, "stats.regressions.damped_cosine"]], "exponential_decay() (in module stats.regressions)": [[218, "stats.regressions.exponential_decay"]], "gaussian_function() (in module stats.regressions)": [[218, "stats.regressions.gaussian_function"]], "half_gaussian_function() (in module stats.regressions)": [[218, "stats.regressions.half_gaussian_function"]], "power_law() (in module stats.regressions)": [[218, "stats.regressions.power_law"]], "robust_line() (in module stats.regressions)": [[218, "stats.regressions.robust_line"]], "stats.regressions": [[218, "module-stats.regressions"]], "weighted_least_squares() (in module stats.regressions)": [[218, "stats.regressions.weighted_least_squares"]], "sample_ou_process() (in module stats.sde)": [[219, "stats.sde.sample_ou_process"]], "stats.sde": [[219, "module-stats.sde"]], "glmpenaltyl2_subsampled() (in module stats.spatiotemporal_glm_utils)": [[220, "stats.spatiotemporal_glm_utils.GLMPenaltyL2_subsampled"]], "gradientglmfit_subsampled() (in module stats.spatiotemporal_glm_utils)": [[220, "stats.spatiotemporal_glm_utils.gradientglmfit_subsampled"]], "isint() (in module stats.spatiotemporal_glm_utils)": [[220, "stats.spatiotemporal_glm_utils.isInt"]], "local_ch_map() (in module stats.spatiotemporal_glm_utils)": [[220, "stats.spatiotemporal_glm_utils.local_ch_map"]], "orthogonalize() (in module stats.spatiotemporal_glm_utils)": [[220, "stats.spatiotemporal_glm_utils.orthogonalize"]], "plot_histfilter() (in module stats.spatiotemporal_glm_utils)": [[220, "stats.spatiotemporal_glm_utils.plot_histfilter"]], "plot_spatiotemporal() (in module stats.spatiotemporal_glm_utils)": [[220, "stats.spatiotemporal_glm_utils.plot_spatiotemporal"]], "spatiotemporal_history() (in module stats.spatiotemporal_glm_utils)": [[220, "stats.spatiotemporal_glm_utils.spatiotemporal_history"]], "spatiotemporal_history_projection() (in module stats.spatiotemporal_glm_utils)": [[220, "stats.spatiotemporal_glm_utils.spatiotemporal_history_projection"]], "stats.spatiotemporal_glm_utils": [[220, "module-stats.spatiotemporal_glm_utils"]], "execfile() (in module system)": [[222, "system.execfile"]], "query_yes_no() (in module system)": [[222, "system.query_yes_no"]], "system": [[222, "module-system"]], "add() (tools.stuff method)": [[223, "tools.stuff.add"]], "amap() (in module tools)": [[223, "tools.amap"]], "arraymap() (in module tools)": [[223, "tools.arraymap"]], "asiterable() (in module tools)": [[223, "tools.asiterable"]], "c2p() (in module tools)": [[223, "tools.c2p"]], "camel2underscore() (in module tools)": [[223, "tools.camel2underscore"]], "clear() (in module tools)": [[223, "tools.clear"]], "current_milli_time() (in module tools)": [[223, "tools.current_milli_time"]], "debug() (in module tools)": [[223, "tools.debug"]], "dowarn() (in module tools)": [[223, "tools.dowarn"]], "emitter (class in tools)": [[223, "tools.emitter"]], "ensure_dir() (in module tools)": [[223, "tools.ensure_dir"]], "exists() (in module tools)": [[223, "tools.exists"]], "ezip() (in module tools)": [[223, "tools.ezip"]], "find() (in module tools)": [[223, "tools.find"]], "find_all_extension() (in module tools)": [[223, "tools.find_all_extension"]], "getvariable() (in module tools)": [[223, "tools.getVariable"]], "getdict() (in module tools)": [[223, "tools.getdict"]], "getsize() (in module tools)": [[223, "tools.getsize"]], "globalize() (in module tools)": [[223, "tools.globalize"]], "history() (in module tools)": [[223, "tools.history"]], "invert_permutation() (in module tools)": [[223, "tools.invert_permutation"]], "lmap() (in module tools)": [[223, "tools.lmap"]], "mapdict() (in module tools)": [[223, "tools.mapdict"]], "matlab() (in module tools)": [[223, "tools.matlab"]], "metaloadmat() (in module tools)": [[223, "tools.metaloadmat"]], "now() (in module tools)": [[223, "tools.now"]], "nowarn() (in module tools)": [[223, "tools.nowarn"]], "okwarn() (in module tools)": [[223, "tools.okwarn"]], "oneslike() (in module tools)": [[223, "tools.oneslike"]], "p2c() (in module tools)": [[223, "tools.p2c"]], "piper (class in tools)": [[223, "tools.piper"]], "restorecontext() (in module tools)": [[223, "tools.restoreContext"]], "savecontext() (in module tools)": [[223, "tools.saveContext"]], "setinrange() (in module tools)": [[223, "tools.setinrange"]], "stuff (class in tools)": [[223, "tools.stuff"]], "tic() (in module tools)": [[223, "tools.tic"]], "toc() (in module tools)": [[223, "tools.toc"]], "today() (in module tools)": [[223, "tools.today"]], "tools": [[223, "module-tools"]], "underscore2camel() (in module tools)": [[223, "tools.underscore2camel"]], "varexists() (in module tools)": [[223, "tools.varexists"]], "wait() (in module tools)": [[223, "tools.wait"]], "waitfor() (in module tools)": [[223, "tools.waitfor"]], "warn() (in module tools)": [[223, "tools.warn"]], "zeroslike() (in module tools)": [[223, "tools.zeroslike"]]}})