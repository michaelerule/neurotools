#!/usr/bin/python
# -*- coding: UTF-8 -*-
from __future__ import absolute_import
from __future__ import with_statement
from __future__ import division
from __future__ import nested_scopes
from __future__ import generators
from __future__ import unicode_literals
from __future__ import print_function

import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import matplotlib.colors as mcolors
import neurotools.graphics.color as ncl
from neurotools.system import *
import traceback

"""
Additional color maps for use with matplotlib.
"""

######################################################################
# Isoluminance hue wheel color map
# pip install husl
# http://www.mathworks.com/matlabcentral/mlc-downloads/downloads/submissions/28790/versions/5/screenshot.jpg
# https://pypi.python.org/pypi/husl
# https://mycarta.wordpress.com/2014/10/30/new-matlab-isoluminant-colormap-for-azimuth-data/
# radius = 38; % chroma
# theta = linspace(0, 2*pi, 256)'; % hue
# a = radius * np.cos(theta);
# b = radius * np.sin(theta);
# L = (ones(1, 256)*65)'; % lightness
# Lab = [L, a, b];
# RGB=colorspace('RGB<-Lab',Lab(end:-1:1,:));
# https://mycarta.wordpress.com/
isolum_data = np.float32([
[.8658,0.5133,0.6237],[.8638,0.5137,0.6301],[.8615,0.5141,0.6366],
[.8591,0.5147,0.6430],[.8566,0.5153,0.6494],[.8538,0.5160,0.6557],
[.8509,0.5168,0.6621],[.8479,0.5176,0.6684],[.8446,0.5185,0.6747],
[.8412,0.5195,0.6810],[.8376,0.5206,0.6872],[.8338,0.5218,0.6934],
[.8299,0.5230,0.6996],[.8258,0.5243,0.7057],[.8215,0.5257,0.7118],
[.8171,0.5271,0.7178],[.8125,0.5286,0.7237],[.8077,0.5302,0.7296],
[.8028,0.5318,0.7355],[.7977,0.5335,0.7412],[.7924,0.5352,0.7469],
[.7870,0.5370,0.7525],[.7814,0.5389,0.7581],[.7756,0.5408,0.7635],
[.7697,0.5427,0.7689],[.7636,0.5447,0.7742],[.7573,0.5467,0.7794],
[.7509,0.5488,0.7845],[.7443,0.5509,0.7895],[.7376,0.5530,0.7944],
[.7307,0.5552,0.7992],[.7237,0.5574,0.8039],[.7165,0.5596,0.8085],
[.7092,0.5618,0.8130],[.7017,0.5641,0.8173],[.6940,0.5664,0.8216],
[.6862,0.5687,0.8257],[.6783,0.5710,0.8297],[.6702,0.5733,0.8336],
[.6620,0.5757,0.8373],[.6536,0.5780,0.8409],[.6451,0.5804,0.8444],
[.6365,0.5828,0.8477],[.6277,0.5851,0.8509],[.6188,0.5875,0.8540],
[.6097,0.5898,0.8569],[.6005,0.5922,0.8597],[.5912,0.5946,0.8623],
[.5818,0.5969,0.8648],[.5722,0.5992,0.8672],[.5625,0.6016,0.8693],
[.5527,0.6039,0.8714],[.5427,0.6062,0.8733],[.5326,0.6085,0.8750],
[.5224,0.6107,0.8766],[.5121,0.6130,0.8780],[.5017,0.6152,0.8792],
[.4911,0.6174,0.8803],[.4804,0.6196,0.8813],[.4696,0.6218,0.8820],
[.4587,0.6239,0.8826],[.4476,0.6260,0.8831],[.4365,0.6281,0.8834],
[.4252,0.6302,0.8835],[.4138,0.6322,0.8835],[.4022,0.6342,0.8833],
[.3905,0.6362,0.8829],[.3787,0.6381,0.8824],[.3668,0.6400,0.8817],
[.3547,0.6419,0.8809],[.3425,0.6437,0.8799],[.3301,0.6455,0.8787],
[.3175,0.6473,0.8774],[.3048,0.6491,0.8759],[.2918,0.6508,0.8742],
[.2787,0.6524,0.8724],[.2653,0.6541,0.8705],[.2517,0.6557,0.8684],
[.2377,0.6572,0.8661],[.2235,0.6588,0.8637],[.2088,0.6602,0.8611],
[.1937,0.6617,0.8584],[.1781,0.6631,0.8556],[.1617,0.6645,0.8526],
[.1444,0.6658,0.8494],[.1260,0.6671,0.8461],[.1059,0.6684,0.8427],
[.0832,0.6696,0.8391],[.0560,0.6708,0.8354],[.0206,0.6720,0.8316],
[.0000,0.6739,0.8282],[.0000,0.6767,0.8255],[.0000,0.6794,0.8226],
[.0000,0.6819,0.8194],[.0000,0.6841,0.8161],[.0000,0.6862,0.8124],
[.0000,0.6880,0.8086],[.0000,0.6897,0.8045],[.0000,0.6912,0.8003],
[.0000,0.6925,0.7958],[.0000,0.6936,0.7911],[.0000,0.6946,0.7862],
[.0000,0.6953,0.7810],[.0000,0.6959,0.7757],[.0000,0.6964,0.7702],
[.0000,0.6966,0.7645],[.0000,0.6968,0.7586],[.0000,0.6967,0.7525],
[.0000,0.6965,0.7461],[.0000,0.6962,0.7396],[.0000,0.6957,0.7330],
[.0000,0.6950,0.7261],[.0000,0.6942,0.7190],[.0000,0.6933,0.7118],
[.0000,0.6922,0.7043],[.0000,0.6909,0.6967],[.0000,0.6896,0.6889],
[.0221,0.6893,0.6821],[.0525,0.6894,0.6757],[.0765,0.6895,0.6693],
[.0965,0.6895,0.6629],[.1140,0.6895,0.6564],[.1300,0.6895,0.6499],
[.1448,0.6894,0.6434],[.1588,0.6893,0.6369],[.1720,0.6892,0.6304],
[.1847,0.6890,0.6238],[.1968,0.6889,0.6173],[.2086,0.6886,0.6107],
[.2200,0.6884,0.6042],[.2311,0.6881,0.5976],[.2419,0.6878,0.5911],
[.2524,0.6874,0.5846],[.2627,0.6870,0.5780],[.2728,0.6866,0.5716],
[.2827,0.6862,0.5651],[.2925,0.6857,0.5587],[.3020,0.6852,0.5523],
[.3115,0.6846,0.5459],[.3207,0.6841,0.5396],[.3299,0.6835,0.5333],
[.3389,0.6828,0.5271],[.3478,0.6821,0.5209],[.3566,0.6814,0.5147],
[.3653,0.6807,0.5087],[.3739,0.6799,0.5026],[.3824,0.6791,0.4967],
[.3908,0.6783,0.4908],[.3992,0.6774,0.4850],[.4074,0.6765,0.4793],
[.4156,0.6756,0.4736],[.4237,0.6746,0.4680],[.4317,0.6736,0.4625],
[.4397,0.6726,0.4571],[.4476,0.6716,0.4518],[.4554,0.6705,0.4466],
[.4632,0.6693,0.4415],[.4709,0.6682,0.4365],[.4785,0.6670,0.4316],
[.4861,0.6658,0.4268],[.4937,0.6645,0.4221],[.5012,0.6633,0.4176],
[.5086,0.6619,0.4131],[.5160,0.6606,0.4088],[.5234,0.6592,0.4046],
[.5306,0.6578,0.4005],[.5379,0.6564,0.3966],[.5451,0.6549,0.3928],
[.5522,0.6534,0.3891],[.5593,0.6519,0.3856],[.5664,0.6503,0.3822],
[.5734,0.6487,0.3790],[.5803,0.6471,0.3759],[.5872,0.6454,0.3730],
[.5941,0.6437,0.3702],[.6009,0.6420,0.3676],[.6077,0.6403,0.3652],
[.6144,0.6385,0.3629],[.6211,0.6367,0.3607],[.6277,0.6349,0.3588],
[.6342,0.6331,0.3570],[.6407,0.6312,0.3553],[.6472,0.6293,0.3539],
[.6536,0.6273,0.3526],[.6600,0.6254,0.3515],[.6662,0.6234,0.3505],
[.6725,0.6214,0.3498],[.6787,0.6194,0.3492],[.6848,0.6174,0.3488],
[.6908,0.6153,0.3485],[.6968,0.6132,0.3485],[.7027,0.6111,0.3486],
[.7086,0.6090,0.3489],[.7144,0.6069,0.3493],[.7201,0.6047,0.3500],
[.7258,0.6026,0.3508],[.7314,0.6004,0.3518],[.7369,0.5982,0.3529],
[.7423,0.5960,0.3542],[.7477,0.5938,0.3557],[.7529,0.5916,0.3574],
[.7581,0.5893,0.3592],[.7633,0.5871,0.3612],[.7683,0.5849,0.3633],
[.7732,0.5827,0.3656],[.7781,0.5804,0.3680],[.7828,0.5782,0.3706],
[.7875,0.5760,0.3734],[.7921,0.5737,0.3763],[.7966,0.5715,0.3793],
[.8010,0.5693,0.3825],[.8052,0.5671,0.3858],[.8094,0.5649,0.3892],
[.8135,0.5628,0.3928],[.8175,0.5606,0.3965],[.8213,0.5585,0.4004],
[.8251,0.5564,0.4043],[.8287,0.5543,0.4084],[.8322,0.5522,0.4126],
[.8356,0.5502,0.4169],[.8389,0.5482,0.4214],[.8421,0.5462,0.4259],
[.8451,0.5443,0.4306],[.8481,0.5424,0.4353],[.8509,0.5405,0.4402],
[.8535,0.5387,0.4451],[.8561,0.5369,0.4502],[.8585,0.5352,0.4553],
[.8607,0.5335,0.4605],[.8629,0.5318,0.4658],[.8649,0.5303,0.4712],
[.8667,0.5287,0.4767],[.8685,0.5273,0.4822],[.8700,0.5259,0.4879],
[.8715,0.5245,0.4936],[.8728,0.5232,0.4993],[.8739,0.5220,0.5051],
[.8749,0.5209,0.5110],[.8757,0.5198,0.5170],[.8764,0.5188,0.5230],
[.8770,0.5178,0.5290],[.8773,0.5170,0.5351],[.8776,0.5162,0.5413],
[.8776,0.5155,0.5475],[.8775,0.5148,0.5537],[.8773,0.5143,0.5599],
[.8769,0.5138,0.5662],[.8763,0.5134,0.5725],[.8756,0.5131,0.5789],
[.8747,0.5129,0.5853],[.8736,0.5128,0.5916],[.8724,0.5127,0.5980],
[.8710,0.5127,0.6045],[.8695,0.5128,0.6109],[.8677,0.5130,0.6173],
[.8658,0.5133,0.6237]])

try:
    isolum = mcolors.ListedColormap(isolum_data,'isolum')
    plt.register_cmap(name='isolum', cmap=isolum)

    double_isolum_data = np.concatenate([isolum_data[::2],isolum_data[::2]])
    double_isolum = mcolors.ListedColormap(double_isolum_data,'isolum')
    plt.register_cmap(name='double_isolum', cmap=double_isolum)
except:
    traceback.print_exc()
    isolum = double_isolum = None
    pass #sphinx workaround

######################################################################
# Three isoluminance hue wheels at varying brightness
# Unfortunately the hue distribution is a bit off for these and they come
# out a little heavy in the red, gree, and blue. I don't reccommend using
# them
try:
    lighthue = mcolors.ListedColormap(ncl.lighthues(360),'lighthue')
    medhue   = mcolors.ListedColormap(ncl.medhues  (360),'medhue')
    darkhue  = mcolors.ListedColormap(ncl.darkhues (360),'darkhue')
    plt.register_cmap(name='lighthue', cmap=lighthue)
    plt.register_cmap(name='medhue'  , cmap=medhue)
    plt.register_cmap(name='darkhue' , cmap=darkhue)
except:
    traceback.print_exc()
    pass # Bypass this code in sphinx

##################################################################
# A colormap that combines aspects of HSV, HSL, and
# Matteo Niccoli's isoluminant hue wheel, with a little smoothing
#
try:
    x = np.array([ncl.hsv2rgb(h,1,1)   for h in np.linspace(0,1,256)*360])
    y = np.array([ncl.hcl2rgb(h,0.7,0.7) for h in np.linspace(0,1,256)*360])
    z = isolum_data[::-1]
    balance_data = ncl.circularly_smooth_colormap(x*0.2+y*0.4+z*0.4,30)
    balance = mcolors.ListedColormap(balance_data,'balance')
    hsv0    = mcolors.ListedColormap(x,'hsv0')
    hcl0    = mcolors.ListedColormap(y,'hcl0')
    plt.register_cmap(name='balance', cmap=balance)
    plt.register_cmap(name='hsv0'   , cmap=hsv0)
    plt.register_cmap(name='hcl0'   , cmap=hcl0)
except:
    traceback.print_exc()
    hsv0 = hcl0 = balance = None
    pass #sphinx bug workaround

######################################################################
# Parula color map
parula_data = np.float32([
[.2081, .1663, .5292],[.2091, .1721, .5411],[.2101, .1779, .5530],
[.2109, .1837, .5650],[.2116, .1895, .5771],[.2121, .1954, .5892],
[.2124, .2013, .6013],[.2125, .2072, .6135],[.2123, .2132, .6258],
[.2118, .2192, .6381],[.2111, .2253, .6505],[.2099, .2315, .6629],
[.2084, .2377, .6753],[.2063, .2440, .6878],[.2038, .2503, .7003],
[.2006, .2568, .7129],[.1968, .2632, .7255],[.1921, .2698, .7381],
[.1867, .2764, .7507],[.1802, .2832, .7634],[.1728, .2902, .7762],
[.1641, .2975, .7890],[.1541, .3052, .8017],[.1427, .3132, .8145],
[.1295, .3217, .8269],[.1147, .3306, .8387],[.0986, .3397, .8495],
[.0816, .3486, .8588],[.0646, .3572, .8664],[.0482, .3651, .8722],
[.0329, .3724, .8765],[.0213, .3792, .8796],[.0136, .3853, .8815],
[.0086, .3911, .8827],[.0060, .3965, .8833],[.0051, .4017, .8834],
[.0054, .4066, .8831],[.0067, .4113, .8825],[.0089, .4159, .8816],
[.0116, .4203, .8805],[.0148, .4246, .8793],[.0184, .4288, .8779],
[.0223, .4329, .8763],[.0264, .4370, .8747],[.0306, .4410, .8729],
[.0349, .4449, .8711],[.0394, .4488, .8692],[.0437, .4526, .8672],
[.0477, .4564, .8652],[.0514, .4602, .8632],[.0549, .4640, .8611],
[.0582, .4677, .8589],[.0612, .4714, .8568],[.0640, .4751, .8546],
[.0666, .4788, .8525],[.0689, .4825, .8503],[.0710, .4862, .8481],
[.0729, .4899, .8460],[.0746, .4937, .8439],[.0761, .4974, .8418],
[.0773, .5012, .8398],[.0782, .5051, .8378],[.0789, .5089, .8359],
[.0794, .5129, .8341],[.0795, .5169, .8324],[.0793, .5210, .8308],
[.0788, .5251, .8293],[.0778, .5295, .8280],[.0764, .5339, .8270],
[.0746, .5384, .8261],[.0724, .5431, .8253],[.0698, .5479, .8247],
[.0668, .5527, .8243],[.0636, .5577, .8239],[.0600, .5627, .8237],
[.0562, .5677, .8234],[.0523, .5727, .8231],[.0484, .5777, .8228],
[.0445, .5826, .8223],[.0408, .5874, .8217],[.0372, .5922, .8209],
[.0342, .5968, .8198],[.0317, .6012, .8186],[.0296, .6055, .8171],
[.0279, .6097, .8154],[.0265, .6137, .8135],[.0255, .6176, .8114],
[.0248, .6214, .8091],[.0243, .6250, .8066],[.0239, .6285, .8039],
[.0237, .6319, .8010],[.0235, .6352, .7980],[.0233, .6384, .7948],
[.0231, .6415, .7916],[.0230, .6445, .7881],[.0229, .6474, .7846],
[.0227, .6503, .7810],[.0227, .6531, .7773],[.0232, .6558, .7735],
[.0238, .6585, .7696],[.0246, .6611, .7656],[.0263, .6637, .7615],
[.0282, .6663, .7574],[.0306, .6688, .7532],[.0338, .6712, .7490],
[.0373, .6737, .7446],[.0418, .6761, .7402],[.0467, .6784, .7358],
[.0516, .6808, .7313],[.0574, .6831, .7267],[.0629, .6854, .7221],
[.0692, .6877, .7173],[.0755, .6899, .7126],[.0820, .6921, .7078],
[.0889, .6943, .7029],[.0956, .6965, .6979],[.1031, .6986, .6929],
[.1104, .7007, .6878],[.1180, .7028, .6827],[.1258, .7049, .6775],
[.1335, .7069, .6723],[.1418, .7089, .6669],[.1499, .7109, .6616],
[.1585, .7129, .6561],[.1671, .7148, .6507],[.1758, .7168, .6451],
[.1849, .7186, .6395],[.1938, .7205, .6338],[.2033, .7223, .6281],
[.2128, .7241, .6223],[.2224, .7259, .6165],[.2324, .7275, .6107],
[.2423, .7292, .6048],[.2527, .7308, .5988],[.2631, .7324, .5929],
[.2735, .7339, .5869],[.2845, .7354, .5809],[.2953, .7368, .5749],
[.3064, .7381, .5689],[.3177, .7394, .5630],[.3289, .7406, .5570],
[.3405, .7417, .5512],[.3520, .7428, .5453],[.3635, .7438, .5396],
[.3753, .7446, .5339],[.3869, .7454, .5283],[.3986, .7461, .5229],
[.4103, .7467, .5175],[.4218, .7473, .5123],[.4334, .7477, .5072],
[.4447, .7482, .5021],[.4561, .7485, .4972],[.4672, .7487, .4924],
[.4783, .7489, .4877],[.4892, .7491, .4831],[.5000, .7491, .4786],
[.5106, .7492, .4741],[.5212, .7492, .4698],[.5315, .7491, .4655],
[.5418, .7490, .4613],[.5519, .7489, .4571],[.5619, .7487, .4531],
[.5718, .7485, .4490],[.5816, .7482, .4451],[.5913, .7479, .4412],
[.6009, .7476, .4374],[.6103, .7473, .4335],[.6197, .7469, .4298],
[.6290, .7465, .4261],[.6382, .7460, .4224],[.6473, .7456, .4188],
[.6564, .7451, .4152],[.6653, .7446, .4116],[.6742, .7441, .4081],
[.6830, .7435, .4046],[.6918, .7430, .4011],[.7004, .7424, .3976],
[.7091, .7418, .3942],[.7176, .7412, .3908],[.7261, .7405, .3874],
[.7346, .7399, .3840],[.7430, .7392, .3806],[.7513, .7385, .3773],
[.7596, .7378, .3739],[.7679, .7372, .3706],[.7761, .7364, .3673],
[.7843, .7357, .3639],[.7924, .7350, .3606],[.8005, .7343, .3573],
[.8085, .7336, .3539],[.8166, .7329, .3506],[.8246, .7322, .3472],
[.8325, .7315, .3438],[.8405, .7308, .3404],[.8484, .7301, .3370],
[.8563, .7294, .3336],[.8642, .7288, .3300],[.8720, .7282, .3265],
[.8798, .7276, .3229],[.8877, .7271, .3193],[.8954, .7266, .3156],
[.9032, .7262, .3117],[.9110, .7259, .3078],[.9187, .7256, .3038],
[.9264, .7256, .2996],[.9341, .7256, .2953],[.9417, .7259, .2907],
[.9493, .7264, .2859],[.9567, .7273, .2808],[.9639, .7285, .2754],
[.9708, .7303, .2696],[.9773, .7326, .2634],[.9831, .7355, .2570],
[.9882, .7390, .2504],[.9922, .7431, .2437],[.9952, .7476, .2373],
[.9973, .7524, .2310],[.9986, .7573, .2251],[.9991, .7624, .2195],
[.9990, .7675, .2141],[.9985, .7726, .2090],[.9976, .7778, .2042],
[.9964, .7829, .1995],[.9950, .7880, .1949],[.9933, .7931, .1905],
[.9914, .7981, .1863],[.9894, .8032, .1821],[.9873, .8083, .1780],
[.9851, .8133, .1740],[.9828, .8184, .1700],[.9805, .8235, .1661],
[.9782, .8286, .1622],[.9759, .8337, .1583],[.9736, .8389, .1544],
[.9713, .8441, .1505],[.9692, .8494, .1465],[.9672, .8548, .1425],
[.9654, .8603, .1385],[.9638, .8659, .1343],[.9623, .8716, .1301],
[.9611, .8774, .1258],[.9600, .8834, .1215],[.9593, .8895, .1171],
[.9588, .8958, .1126],[.9586, .9022, .1082],[.9587, .9088, .1036],
[.9591, .9155, .0990],[.9599, .9225, .0944],[.9610, .9296, .0897],
[.9624, .9368, .0850],[.9641, .9443, .0802],[.9662, .9518, .0753],
[.9685, .9595, .0703],[.9710, .9673, .0651],[.9736, .9752, .0597],
[.9763, .9831, .0538]])

try:
    parula = mcolors.ListedColormap(parula_data,'parula')
    plt.register_cmap(name='parula', cmap=parula)
except:
    parula=None
    pass 

try:
    colors = [ncl.VIOLET,
              ncl.MAUVE,
              ncl.RUST,
              ncl.OCHRE,
              ncl.MOSS,
              ncl.TURQUOISE,
              ncl.AZURE,
              ncl.VIOLET]
    riley0 = matplotlib.colors.LinearSegmentedColormap.from_list(
        'riley0',colors)
    plt.register_cmap(name='riley0', cmap=riley0)
    colors = ncl.circularly_smooth_colormap(
        np.array(riley0(np.linspace(0,1,1000)))[:,:3],45)
    riley  = matplotlib.colors.LinearSegmentedColormap.from_list(
        'riley',colors)
    plt.register_cmap(name='riley', cmap=riley)
except Exception as e:
    traceback.print_exc()
    riley0 = riley = None
    pass

#############################################################################
# A parula-like color map, extended all the way to black at one end
extended_data = np.array([[0.10872628, 0.08688698, 0.27649182],
[0.11520794, 0.09321816, 0.29535991],[0.11884767, 0.09680064, 0.30601368],
[0.12270468, 0.10063386, 0.31738274],[0.12654663, 0.10450675, 0.32882495],
[0.13033691, 0.10839907, 0.34026724],[0.13406468, 0.11231589, 0.35171207],
[0.13771879, 0.11626224, 0.36316158],[0.14128733, 0.12024261, 0.3746163 ],
[0.14475804, 0.12426141, 0.38607652],[0.14811844, 0.12832304, 0.39754236],
[0.15135574, 0.13243181, 0.40901381],[0.15445693, 0.136592  , 0.42049062],
[0.15740877, 0.14080777, 0.43197231],[0.16019788, 0.14508317, 0.44345813],
[0.16281072, 0.14942211, 0.45494701],[0.16523377, 0.15382833, 0.46643752],
[0.16745352, 0.1583054 , 0.47792782],[0.16945661, 0.16285661, 0.48941563],
[0.17122995, 0.16748503, 0.50089814],[0.17276082, 0.17219341, 0.51237197],
[0.17403703, 0.17698418, 0.52383312],[0.17504702, 0.1818594 , 0.53527688],
[0.17578008, 0.18682072, 0.54669782],[0.17622646, 0.19186938, 0.55808968],
[0.17637754, 0.19700612, 0.56944538],[0.17622604, 0.20223121, 0.5807569 ],
[0.17576613, 0.20754438, 0.59201532],[0.17499366, 0.21294482, 0.60321076],
[0.17390628, 0.21843115, 0.61433236],[0.1725036 , 0.2240014 , 0.62536831],
[0.17078735, 0.22965303, 0.63630586],[0.16876148, 0.23538288, 0.64713135],
[0.16643227, 0.24118721, 0.65783026],[0.16380841, 0.24706168, 0.66838733],
[0.16090107, 0.2530014 , 0.67878658],[0.15772384, 0.25900091, 0.68901152],
[0.15429282, 0.26505426, 0.69904517],[0.15062646, 0.27115498, 0.70887031],
[0.14674554, 0.27729621, 0.71846958],[0.14267298, 0.28347066, 0.72782568],
[0.13843369, 0.28967075, 0.73692153],[0.13405431, 0.29588863, 0.74574049],
[0.12956303, 0.30211624, 0.75426654],[0.12498921, 0.30834542, 0.76248445],
[0.12036311, 0.31456797, 0.77038   ],[0.11571552, 0.32077572, 0.77794013],
[0.11107739, 0.32696062, 0.78515312],[0.10647947, 0.33311484, 0.79200873],
[0.10195187, 0.33923081, 0.79849834],[0.09752374, 0.34530134, 0.80461506],
[0.09322283, 0.35131966, 0.8103538 ],[0.08907517, 0.3572795 , 0.81571137],
[0.08510473, 0.36317516, 0.82068646],[0.08133309, 0.36900154, 0.8252797 ],
[0.0777792 , 0.37475422, 0.82949361],[0.07445917, 0.38042946, 0.83333258],
[0.07138604, 0.38602425, 0.83680278],[0.06856973, 0.3915363 , 0.83991209],
[0.06601692, 0.39696409, 0.84267   ],[0.06373106, 0.40230681, 0.84508743],
[0.06171238, 0.4075644 , 0.84717664],[0.05995801, 0.41273746, 0.84895107],
[0.05846209, 0.4178273 , 0.85042514],[0.05721596, 0.42283582, 0.85161411],
[0.05620837, 0.4277655 , 0.8525339 ],[0.05542577, 0.43261936, 0.85320092],
[0.05485252, 0.43740087, 0.85363188],[0.05447126, 0.44211388, 0.85384366],
[0.05426318, 0.44676259, 0.85385312],[0.05420838, 0.45135147, 0.85367695],
[0.05428615, 0.45588516, 0.85333154],[0.05447536, 0.46036843, 0.85283286],
[0.0547547 , 0.46480612, 0.85219634],[0.05510304, 0.46920304, 0.85143673],
[0.05549968, 0.47356394, 0.85056807],[0.05592464, 0.47789343, 0.84960354],
[0.05635887, 0.48219593, 0.84855546],[0.05678448, 0.48647562, 0.84743521],
[0.05718492, 0.4907364 , 0.84625316],[0.05754514, 0.49498181, 0.84501869],
[0.05785172, 0.49921506, 0.84374012],[0.05809297, 0.50343893, 0.84242475],
[0.05825901, 0.50765581, 0.84107882],[0.0583418 , 0.51186762, 0.83970754],
[0.0583352 , 0.51607585, 0.83831509],[0.05823491, 0.52028152, 0.83690468],
[0.05803852, 0.52448518, 0.83547855],[0.05774539, 0.52868694, 0.83403801],
[0.05735666, 0.53288647, 0.83258352],[0.05687514, 0.53708298, 0.8311147 ],
[0.0563052 , 0.54127531, 0.82963041],[0.05565272, 0.5454619 , 0.82812885],
[0.05492493, 0.54964084, 0.82660753],[0.05413032, 0.55380992, 0.82506344],
[0.05327853, 0.55796662, 0.82349307],[0.05238015, 0.56210822, 0.82189251],
[0.05144669, 0.56623178, 0.82025749],[0.05049037, 0.57033422, 0.8185835 ],
[0.04952404, 0.57441236, 0.81686583],[0.04856103, 0.57846294, 0.81509968],
[0.04761504, 0.58248271, 0.8132802 ],[0.04670001, 0.58646843, 0.81140256],
[0.04583003, 0.59041694, 0.80946205],[0.04501922, 0.59432516, 0.80745408],
[0.04428166, 0.5981902 , 0.80537429],[0.04363126, 0.6020093 , 0.80321858],
[0.04308173, 0.60577993, 0.80098312],[0.04264645, 0.60949978, 0.79866442],
[0.04233849, 0.61316677, 0.79625935],[0.04217045, 0.61677911, 0.79376517],
[0.0421545 , 0.62033525, 0.79117951],[0.04230228, 0.62383394, 0.7885004 ],
[0.04262489, 0.62727419, 0.78572627],[0.04313284, 0.63065529, 0.78285596],
[0.04383605, 0.63397679, 0.77988867],[0.04474379, 0.63723849, 0.77682398],
[0.0458647 , 0.64044045, 0.77366183],[0.04720673, 0.64358293, 0.77040245],
[0.04877715, 0.6466664 , 0.76704641],[0.05058256, 0.64969151, 0.76359455],
[0.05262884, 0.65265909, 0.76004793],[0.05492118, 0.65557007, 0.75640788],
[0.05746406, 0.65842552, 0.75267589],[0.06026124, 0.66122658, 0.74885362],
[0.0633158 , 0.66397447, 0.74494288],[0.06663011, 0.66667044, 0.74094562],
[0.07020585, 0.66931576, 0.73686386],[0.07404406, 0.67191168, 0.73269971],
[0.07814507, 0.67445947, 0.72845536],[0.08250862, 0.67696031, 0.72413305],
[0.08713381, 0.67941535, 0.71973505],[0.09201916, 0.68182567, 0.71526368],
[0.09716263, 0.68419226, 0.7107213 ],[0.10256163, 0.68651599, 0.70611028],
[0.1082131 , 0.68879767, 0.70143304],[0.11411349, 0.69103797, 0.69669202],
[0.12025883, 0.69323744, 0.69188972],[0.12664472, 0.69539651, 0.68702866],
[0.13326642, 0.69751551, 0.68211142],[0.14011884, 0.69959461, 0.67714065],
[0.14719659, 0.70163388, 0.67211906],[0.15449398, 0.70363327, 0.66704941],
[0.16200508, 0.70559261, 0.66193458],[0.16972371, 0.70751162, 0.6567775 ],
[0.1776435 , 0.7093899 , 0.65158123],[0.18575785, 0.71122698, 0.6463489 ],
[0.19406001, 0.71302227, 0.64108374],[0.20254303, 0.71477514, 0.63578911],
[0.21119981, 0.71648485, 0.63046844],[0.2200231 , 0.71815063, 0.62512526],
[0.22900549, 0.71977165, 0.61976321],[0.23813943, 0.72134705, 0.61438599],
[0.24741724, 0.72287594, 0.60899738],[0.25683109, 0.72435742, 0.60360125],
[0.26637304, 0.72579059, 0.59820148],[0.27603504, 0.72717458, 0.59280199],
[0.28580889, 0.72850853, 0.58740673],[0.29568635, 0.72979162, 0.58201964],
[0.30565904, 0.73102308, 0.57664463],[0.31571856, 0.7322022 , 0.57128555],
[0.32585642, 0.73332834, 0.56594621],[0.33606414, 0.73440095, 0.56063032],
[0.34633322, 0.73541954, 0.55534146],[0.35665519, 0.73638375, 0.5500831 ],
[0.36702162, 0.73729329, 0.54485856],[0.37742418, 0.738148  , 0.53967095],
[0.38785466, 0.73894782, 0.53452323],[0.398305  , 0.7396928 , 0.52941812],
[0.40876731, 0.74038312, 0.52435813],[0.41923393, 0.74101906, 0.51934554],
[0.42969743, 0.74160101, 0.51438237],[0.4401507 , 0.7421295 , 0.50947039],
[0.45058689, 0.74260515, 0.50461112],[0.46099952, 0.74302869, 0.49980578],
[0.47138246, 0.74340096, 0.49505536],[0.48172995, 0.7437229 , 0.49036057],
[0.49203665, 0.74399552, 0.48572185],[0.50229761, 0.74421996, 0.4811394 ],
[0.51250831, 0.74439742, 0.47661315],[0.52266465, 0.74452917, 0.47214279],
[0.53276295, 0.74461657, 0.46772777],[0.54279998, 0.74466105, 0.46336734],
[0.55277291, 0.7446641 , 0.45906051],[0.56267929, 0.74462728, 0.45480609],
[0.57251711, 0.74455219, 0.4506027 ],[0.5822847 , 0.74444052, 0.44644879],
[0.59198074, 0.74429399, 0.44234262],[0.60160426, 0.74411441, 0.43828231],
[0.61115456, 0.74390364, 0.43426582],[0.62063124, 0.74366361, 0.43029097],
[0.63003411, 0.74339633, 0.42635546],[0.63936319, 0.74310388, 0.42245686],
[0.64861869, 0.74278844, 0.41859261],[0.6578009 , 0.74245229, 0.41476006],
[0.66691026, 0.74209783, 0.41095645],[0.6759472 , 0.74172758, 0.40717892],
[0.68491221, 0.74134418, 0.4034245 ],[0.69380569, 0.74095045, 0.39969014],
[0.70262802, 0.74054938, 0.39597272],[0.7113794 , 0.74014411, 0.39226901],
[0.7200599 , 0.73973802, 0.38857571],[0.72866935, 0.73933467, 0.38488948],
[0.73720736, 0.73893788, 0.38120688],[0.74567319, 0.73855168, 0.37752443],
[0.75406579, 0.73818036, 0.37383863],[0.76238371, 0.73782849, 0.37014592],
[0.77062508, 0.73750087, 0.36644275],[0.77878756, 0.73720258, 0.36272557],
[0.78686832, 0.73693899, 0.35899087],[0.79486402, 0.73671569, 0.35523516],
[0.80277074, 0.73653854, 0.35145507],[0.81058403, 0.73641363, 0.3476473 ],
[0.81829884, 0.73634726, 0.34380871],[0.82590957, 0.73634591, 0.33993631],
[0.83341003, 0.73641622, 0.33602733],[0.84079348, 0.73656495, 0.33207922],
[0.84805266, 0.73679891, 0.32808973],[0.8551798 , 0.73712497, 0.32405687],
[0.86216673, 0.73754996, 0.31997904],[0.86900485, 0.73808061, 0.31585498],
[0.87568528, 0.73872354, 0.31168385],[0.8821989 , 0.73948518, 0.30746523],
[0.88853644, 0.74037167, 0.30319916],[0.89468862, 0.74138885, 0.29888613],
[0.9006462 , 0.74254219, 0.29452714],[0.90640014, 0.74383672, 0.2901237 ],
[0.91194172, 0.745277  , 0.28567778],[0.91726262, 0.74686703, 0.28119191],
[0.92235512, 0.74861026, 0.27666909],[0.92721214, 0.75050954, 0.27211285],
[0.93182742, 0.75256704, 0.26752722],[0.93619561, 0.75478433, 0.26291672],
[0.94031239, 0.75716226, 0.25828638],[0.94417455, 0.75970103, 0.25364171],
[0.94778008, 0.76240019, 0.24898873],[0.95112825, 0.76525858, 0.24433399],
[0.95421965, 0.76827444, 0.23968453],[0.95705622, 0.77144539, 0.235048  ],
[0.95964131, 0.77476843, 0.2304326 ],[0.9619796 , 0.77824005, 0.22584722],
[0.96407718, 0.78185619, 0.22130145],[0.96594143, 0.78561231, 0.21680567],
[0.96758098, 0.78950344, 0.21237116],[0.96900568, 0.79352418, 0.20801019],
[0.97022645, 0.79766878, 0.20373614],[0.9712552 , 0.80193112, 0.19956362],
[0.9721047 , 0.80630478, 0.19550861],[0.97278847, 0.81078305, 0.1915886 ],
[0.97332063, 0.81535892, 0.18782273],[0.97371573, 0.82002514, 0.18423188],
[0.97398863, 0.82477422, 0.18083884],[0.97415434, 0.82959838, 0.1776684 ],
[0.97422786, 0.83448965, 0.1747474 ],[0.97422404, 0.83943979, 0.17210479],
[0.97415744, 0.84444034, 0.16977169],[0.97404217, 0.84948258, 0.16778129],
[0.97389183, 0.8545576 , 0.16616881],[0.97371931, 0.85965623, 0.1649714 ],
[0.97353675, 0.86476914, 0.16422788],[0.97335543, 0.86988679, 0.16397859],
[0.97318572, 0.87499951, 0.16426502],[0.97303697, 0.88009752, 0.16512946],
[0.97291754, 0.88517099, 0.16661461],[0.97283472, 0.89021007, 0.16876304],
[0.97279476, 0.89520504, 0.17161672],[0.97280285, 0.90014628, 0.17521642],
[0.97286313, 0.90502448, 0.17960109],[0.97297878, 0.90983063, 0.18480725],
[0.973152  , 0.91455622, 0.1908683 ],[0.97338411, 0.91919327, 0.19781391],
[0.97367558, 0.92373449, 0.20566934],[0.97402613, 0.92817339, 0.21445482],
[0.97443483, 0.93250436, 0.22418499],[0.9749001 , 0.9367228 , 0.23486832],
[0.97541988, 0.94082522, 0.24650668],[0.97599166, 0.94480928, 0.2590949 ],
[0.97661259, 0.94867391, 0.27262047],[0.97727951, 0.95241935, 0.28706331],
[0.9779891 , 0.95604716, 0.30239566],[0.97873787, 0.9595603 , 0.318582  ],
[0.97952224, 0.96296305, 0.33557925],[0.98033862, 0.96626105, 0.35333683],
[0.9811834 , 0.96946122, 0.37179709],[0.98205304, 0.97257172, 0.39089559],
[0.98294403, 0.97560185, 0.41056197],[0.98385309, 0.97856233, 0.43072303],
[0.984777  , 0.98146484, 0.45130118],[0.98570638, 0.98430337, 0.4720736 ],
[0.98658455, 0.9869337 , 0.49175083],[0.98815   , 0.99155   , 0.5269    ]
])
try:
    extended = mcolors.ListedColormap(extended_data,'extended')
    plt.register_cmap(name='extended', cmap=extended)
except:
    extended = None
    pass #sphinx workaround

turbo_colormap_data = np.float32([
[0.18995,0.07176,0.23217],[0.19483,0.08339,0.26149],[0.19956,0.09498,0.29024],
[0.20415,0.10652,0.31844],[0.20860,0.11802,0.34607],[0.21291,0.12947,0.37314],
[0.21708,0.14087,0.39964],[0.22111,0.15223,0.42558],[0.22500,0.16354,0.45096],
[0.22875,0.17481,0.47578],[0.23236,0.18603,0.50004],[0.23582,0.19720,0.52373],
[0.23915,0.20833,0.54686],[0.24234,0.21941,0.56942],[0.24539,0.23044,0.59142],
[0.24830,0.24143,0.61286],[0.25107,0.25237,0.63374],[0.25369,0.26327,0.65406],
[0.25618,0.27412,0.67381],[0.25853,0.28492,0.69300],[0.26074,0.29568,0.71162],
[0.26280,0.30639,0.72968],[0.26473,0.31706,0.74718],[0.26652,0.32768,0.76412],
[0.26816,0.33825,0.78050],[0.26967,0.34878,0.79631],[0.27103,0.35926,0.81156],
[0.27226,0.36970,0.82624],[0.27334,0.38008,0.84037],[0.27429,0.39043,0.85393],
[0.27509,0.40072,0.86692],[0.27576,0.41097,0.87936],[0.27628,0.42118,0.89123],
[0.27667,0.43134,0.90254],[0.27691,0.44145,0.91328],[0.27701,0.45152,0.92347],
[0.27698,0.46153,0.93309],[0.27680,0.47151,0.94214],[0.27648,0.48144,0.95064],
[0.27603,0.49132,0.95857],[0.27543,0.50115,0.96594],[0.27469,0.51094,0.97275],
[0.27381,0.52069,0.97899],[0.27273,0.53040,0.98461],[0.27106,0.54015,0.98930],
[0.26878,0.54995,0.99303],[0.26592,0.55979,0.99583],[0.26252,0.56967,0.99773],
[0.25862,0.57958,0.99876],[0.25425,0.58950,0.99896],[0.24946,0.59943,0.99835],
[0.24427,0.60937,0.99697],[0.23874,0.61931,0.99485],[0.23288,0.62923,0.99202],
[0.22676,0.63913,0.98851],[0.22039,0.64901,0.98436],[0.21382,0.65886,0.97959],
[0.20708,0.66866,0.97423],[0.20021,0.67842,0.96833],[0.19326,0.68812,0.96190],
[0.18625,0.69775,0.95498],[0.17923,0.70732,0.94761],[0.17223,0.71680,0.93981],
[0.16529,0.72620,0.93161],[0.15844,0.73551,0.92305],[0.15173,0.74472,0.91416],
[0.14519,0.75381,0.90496],[0.13886,0.76279,0.89550],[0.13278,0.77165,0.88580],
[0.12698,0.78037,0.87590],[0.12151,0.78896,0.86581],[0.11639,0.79740,0.85559],
[0.11167,0.80569,0.84525],[0.10738,0.81381,0.83484],[0.10357,0.82177,0.82437],
[0.10026,0.82955,0.81389],[0.09750,0.83714,0.80342],[0.09532,0.84455,0.79299],
[0.09377,0.85175,0.78264],[0.09287,0.85875,0.77240],[0.09267,0.86554,0.76230],
[0.09320,0.87211,0.75237],[0.09451,0.87844,0.74265],[0.09662,0.88454,0.73316],
[0.09958,0.89040,0.72393],[0.10342,0.89600,0.71500],[0.10815,0.90142,0.70599],
[0.11374,0.90673,0.69651],[0.12014,0.91193,0.68660],[0.12733,0.91701,0.67627],
[0.13526,0.92197,0.66556],[0.14391,0.92680,0.65448],[0.15323,0.93151,0.64308],
[0.16319,0.93609,0.63137],[0.17377,0.94053,0.61938],[0.18491,0.94484,0.60713],
[0.19659,0.94901,0.59466],[0.20877,0.95304,0.58199],[0.22142,0.95692,0.56914],
[0.23449,0.96065,0.55614],[0.24797,0.96423,0.54303],[0.26180,0.96765,0.52981],
[0.27597,0.97092,0.51653],[0.29042,0.97403,0.50321],[0.30513,0.97697,0.48987],
[0.32006,0.97974,0.47654],[0.33517,0.98234,0.46325],[0.35043,0.98477,0.45002],
[0.36581,0.98702,0.43688],[0.38127,0.98909,0.42386],[0.39678,0.99098,0.41098],
[0.41229,0.99268,0.39826],[0.42778,0.99419,0.38575],[0.44321,0.99551,0.37345],
[0.45854,0.99663,0.36140],[0.47375,0.99755,0.34963],[0.48879,0.99828,0.33816],
[0.50362,0.99879,0.32701],[0.51822,0.99910,0.31622],[0.53255,0.99919,0.30581],
[0.54658,0.99907,0.29581],[0.56026,0.99873,0.28623],[0.57357,0.99817,0.27712],
[0.58646,0.99739,0.26849],[0.59891,0.99638,0.26038],[0.61088,0.99514,0.25280],
[0.62233,0.99366,0.24579],[0.63323,0.99195,0.23937],[0.64362,0.98999,0.23356],
[0.65394,0.98775,0.22835],[0.66428,0.98524,0.22370],[0.67462,0.98246,0.21960],
[0.68494,0.97941,0.21602],[0.69525,0.97610,0.21294],[0.70553,0.97255,0.21032],
[0.71577,0.96875,0.20815],[0.72596,0.96470,0.20640],[0.73610,0.96043,0.20504],
[0.74617,0.95593,0.20406],[0.75617,0.95121,0.20343],[0.76608,0.94627,0.20311],
[0.77591,0.94113,0.20310],[0.78563,0.93579,0.20336],[0.79524,0.93025,0.20386],
[0.80473,0.92452,0.20459],[0.81410,0.91861,0.20552],[0.82333,0.91253,0.20663],
[0.83241,0.90627,0.20788],[0.84133,0.89986,0.20926],[0.85010,0.89328,0.21074],
[0.85868,0.88655,0.21230],[0.86709,0.87968,0.21391],[0.87530,0.87267,0.21555],
[0.88331,0.86553,0.21719],[0.89112,0.85826,0.21880],[0.89870,0.85087,0.22038],
[0.90605,0.84337,0.22188],[0.91317,0.83576,0.22328],[0.92004,0.82806,0.22456],
[0.92666,0.82025,0.22570],[0.93301,0.81236,0.22667],[0.93909,0.80439,0.22744],
[0.94489,0.79634,0.22800],[0.95039,0.78823,0.22831],[0.95560,0.78005,0.22836],
[0.96049,0.77181,0.22811],[0.96507,0.76352,0.22754],[0.96931,0.75519,0.22663],
[0.97323,0.74682,0.22536],[0.97679,0.73842,0.22369],[0.98000,0.73000,0.22161],
[0.98289,0.72140,0.21918],[0.98549,0.71250,0.21650],[0.98781,0.70330,0.21358],
[0.98986,0.69382,0.21043],[0.99163,0.68408,0.20706],[0.99314,0.67408,0.20348],
[0.99438,0.66386,0.19971],[0.99535,0.65341,0.19577],[0.99607,0.64277,0.19165],
[0.99654,0.63193,0.18738],[0.99675,0.62093,0.18297],[0.99672,0.60977,0.17842],
[0.99644,0.59846,0.17376],[0.99593,0.58703,0.16899],[0.99517,0.57549,0.16412],
[0.99419,0.56386,0.15918],[0.99297,0.55214,0.15417],[0.99153,0.54036,0.14910],
[0.98987,0.52854,0.14398],[0.98799,0.51667,0.13883],[0.98590,0.50479,0.13367],
[0.98360,0.49291,0.12849],[0.98108,0.48104,0.12332],[0.97837,0.46920,0.11817],
[0.97545,0.45740,0.11305],[0.97234,0.44565,0.10797],[0.96904,0.43399,0.10294],
[0.96555,0.42241,0.09798],[0.96187,0.41093,0.09310],[0.95801,0.39958,0.08831],
[0.95398,0.38836,0.08362],[0.94977,0.37729,0.07905],[0.94538,0.36638,0.07461],
[0.94084,0.35566,0.07031],[0.93612,0.34513,0.06616],[0.93125,0.33482,0.06218],
[0.92623,0.32473,0.05837],[0.92105,0.31489,0.05475],[0.91572,0.30530,0.05134],
[0.91024,0.29599,0.04814],[0.90463,0.28696,0.04516],[0.89888,0.27824,0.04243],
[0.89298,0.26981,0.03993],[0.88691,0.26152,0.03753],[0.88066,0.25334,0.03521],
[0.87422,0.24526,0.03297],[0.86760,0.23730,0.03082],[0.86079,0.22945,0.02875],
[0.85380,0.22170,0.02677],[0.84662,0.21407,0.02487],[0.83926,0.20654,0.02305],
[0.83172,0.19912,0.02131],[0.82399,0.19182,0.01966],[0.81608,0.18462,0.01809],
[0.80799,0.17753,0.01660],[0.79971,0.17055,0.01520],[0.79125,0.16368,0.01387],
[0.78260,0.15693,0.01264],[0.77377,0.15028,0.01148],[0.76476,0.14374,0.01041],
[0.75556,0.13731,0.00942],[0.74617,0.13098,0.00851],[0.73661,0.12477,0.00769],
[0.72686,0.11867,0.00695],[0.71692,0.11268,0.00629],[0.70680,0.10680,0.00571],
[0.69650,0.10102,0.00522],[0.68602,0.09536,0.00481],[0.67535,0.08980,0.00449],
[0.66449,0.08436,0.00424],[0.65345,0.07902,0.00408],[0.64223,0.07380,0.00401],
[0.63082,0.06868,0.00401],[0.61923,0.06367,0.00410],[0.60746,0.05878,0.00427],
[0.59550,0.05399,0.00453],[0.58336,0.04931,0.00486],[0.57103,0.04474,0.00529],
[0.55852,0.04028,0.00579],[0.54583,0.03593,0.00638],[0.53295,0.03169,0.00705],
[0.51989,0.02756,0.00780],[0.50664,0.02354,0.00863],[0.49321,0.01963,0.00955],
[0.47960,0.01583,0.01055]])
try:
    turbo = mcolors.ListedColormap(turbo_colormap_data,'turbo')
    plt.register_cmap(name='turbo', cmap=turbo)
except:
    turbo = None
    pass #sphinx workaround

def test_colormaps():
    import neurotools.graphics.plot
    f = plt.figure(figsize=(4,6))
    plt.subplots_adjust(0,0,1,0.97,0,0.5)
    x = [np.linspace(0,1,1000)]
    colormaps = [
        'parula',
        'extended',
        'turbo',
        'riley',
        'isolum',
        'double_isolum',
        'hsv0',
        'hcl0',
        'balance',
        'lighthue',
        'medhue',
        'darkhue']
    for i,cm in enumerate(colormaps):
        ax = plt.subplot(len(colormaps),1,i+1)
        plt.imshow(x,cmap=cm,aspect='auto')
        neurotools.graphics.plot.noxyaxes()
        plt.title(cm,fontsize=8,pad=0)

if __name__ == "__main__":
    plt.close('all')
    test_colormaps()


